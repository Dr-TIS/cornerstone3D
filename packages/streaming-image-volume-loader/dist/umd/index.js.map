{"version":3,"file":"index.js","mappings":"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","sources":["webpack://cornerstoneStreamingImageVolumeLoader/webpack/universalModuleDefinition","webpack://cornerstoneStreamingImageVolumeLoader/external umd {\"root\":\"cornerstone3D\",\"commonjs\":\"@cornerstonejs/core\",\"commonjs2\":\"@cornerstonejs/core\",\"amd\":\"@cornerstonejs/core\"}","webpack://cornerstoneStreamingImageVolumeLoader/external umd {\"root\":\"window\",\"commonjs\":\"gl-matrix\",\"commonjs2\":\"gl-matrix\",\"amd\":\"gl-matrix\"}","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/typeof.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/regenerator/index.js","webpack://cornerstoneStreamingImageVolumeLoader/webpack/bootstrap","webpack://cornerstoneStreamingImageVolumeLoader/webpack/runtime/compat get default export","webpack://cornerstoneStreamingImageVolumeLoader/webpack/runtime/define property getters","webpack://cornerstoneStreamingImageVolumeLoader/webpack/runtime/hasOwnProperty shorthand","webpack://cornerstoneStreamingImageVolumeLoader/webpack/runtime/make namespace object","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://cornerstoneStreamingImageVolumeLoader/./src/helpers/makeVolumeMetadata.ts","webpack://cornerstoneStreamingImageVolumeLoader/./src/helpers/sortImageIdsAndGetSpacing.ts","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://cornerstoneStreamingImageVolumeLoader/./src/helpers/autoLoad.ts","webpack://cornerstoneStreamingImageVolumeLoader/./src/helpers/scaleArray.ts","webpack://cornerstoneStreamingImageVolumeLoader/./src/BaseStreamingImageVolume.ts","webpack://cornerstoneStreamingImageVolumeLoader/./src/StreamingImageVolume.ts","webpack://cornerstoneStreamingImageVolumeLoader/./src/cornerstoneStreamingImageVolumeLoader.ts","webpack://cornerstoneStreamingImageVolumeLoader/./src/helpers/splitImageIdsBy4DTags.ts","webpack://cornerstoneStreamingImageVolumeLoader/./src/helpers/getVolumeInfo.ts","webpack://cornerstoneStreamingImageVolumeLoader/./src/StreamingDynamicImageVolume.ts","webpack://cornerstoneStreamingImageVolumeLoader/./src/cornerstoneStreamingDynamicImageVolumeLoader.ts","webpack://cornerstoneStreamingImageVolumeLoader/./src/index.ts","webpack://cornerstoneStreamingImageVolumeLoader/./src/helpers/getDynamicVolumeInfo.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@cornerstonejs/core\"), require(\"gl-matrix\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@cornerstonejs/core\", \"gl-matrix\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstoneStreamingImageVolumeLoader\"] = factory(require(\"@cornerstonejs/core\"), require(\"gl-matrix\"));\n\telse\n\t\troot[\"cornerstoneStreamingImageVolumeLoader\"] = factory(root[\"cornerstone3D\"], root[\"window\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__953__, __WEBPACK_EXTERNAL_MODULE__976__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__953__;","module.exports = __WEBPACK_EXTERNAL_MODULE__976__;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import { metaData } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\n/**\n * It creates a metadata object for a volume given the imageIds that compose it.\n * It uses the first imageId to get the metadata.\n *\n * @param imageIds - array of imageIds\n * @returns The volume metadata\n */\nexport default function makeVolumeMetadata(\n  imageIds: Array<string>\n): Types.Metadata {\n  const imageId0 = imageIds[0];\n\n  const {\n    pixelRepresentation,\n    bitsAllocated,\n    bitsStored,\n    highBit,\n    photometricInterpretation,\n    samplesPerPixel,\n  } = metaData.get('imagePixelModule', imageId0);\n\n  // Add list of VOIs stored on the DICOM.\n  const voiLut = [];\n\n  const voiLutModule = metaData.get('voiLutModule', imageId0);\n\n  // voiLutModule is not always present\n  let voiLUTFunction;\n  if (voiLutModule) {\n    const { windowWidth, windowCenter } = voiLutModule;\n    voiLUTFunction = voiLutModule?.voiLUTFunction;\n\n    if (Array.isArray(windowWidth)) {\n      for (let i = 0; i < windowWidth.length; i++) {\n        voiLut.push({\n          windowWidth: windowWidth[i],\n          windowCenter: windowCenter[i],\n        });\n      }\n    } else {\n      voiLut.push({\n        windowWidth: windowWidth,\n        windowCenter: windowCenter,\n      });\n    }\n  } else {\n    voiLut.push({\n      windowWidth: undefined,\n      windowCenter: undefined,\n    });\n  }\n\n  const { modality, seriesInstanceUID } = metaData.get(\n    'generalSeriesModule',\n    imageId0\n  );\n\n  const {\n    imageOrientationPatient,\n    pixelSpacing,\n    frameOfReferenceUID,\n    columns,\n    rows,\n  } = metaData.get('imagePlaneModule', imageId0);\n\n  // Map to dcmjs-style keywords. This is becoming the standard and makes it\n  // Easier to swap out cornerstoneDICOMImageLoader at a later date.\n  return {\n    BitsAllocated: bitsAllocated,\n    BitsStored: bitsStored,\n    SamplesPerPixel: samplesPerPixel,\n    HighBit: highBit,\n    PhotometricInterpretation: photometricInterpretation,\n    PixelRepresentation: pixelRepresentation,\n    Modality: modality,\n    ImageOrientationPatient: imageOrientationPatient,\n    PixelSpacing: pixelSpacing,\n    FrameOfReferenceUID: frameOfReferenceUID,\n    Columns: columns,\n    Rows: rows,\n    // This is a reshaped object and not a dicom tag:\n    voiLut,\n    VOILUTFunction: voiLUTFunction,\n    SeriesInstanceUID: seriesInstanceUID,\n  };\n}\n","import { vec3 } from 'gl-matrix';\nimport { metaData, getConfiguration } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\ntype SortedImageIdsItem = {\n  zSpacing: number;\n  origin: Types.Point3;\n  sortedImageIds: Array<string>;\n};\n/**\n * Given an array of imageIds, sort them based on their imagePositionPatient, and\n * also returns the spacing between images and the origin of the reference image\n *\n * @param imageIds - array of imageIds\n * @param scanAxisNormal - [x, y, z] array or gl-matrix vec3\n *\n * @returns The sortedImageIds, zSpacing, and origin of the first image in the series.\n */\nexport default function sortImageIdsAndGetSpacing(\n  imageIds: Array<string>,\n  scanAxisNormal: vec3 // Get gl matrix types?\n): SortedImageIdsItem {\n  const { imagePositionPatient: referenceImagePositionPatient } = metaData.get(\n    'imagePlaneModule',\n    imageIds[0]\n  );\n\n  const refIppVec = vec3.create();\n\n  // Check if we are using wadouri scheme\n  const usingWadoUri = imageIds[0].split(':')[0] === 'wadouri';\n\n  vec3.set(\n    refIppVec,\n    referenceImagePositionPatient[0],\n    referenceImagePositionPatient[1],\n    referenceImagePositionPatient[2]\n  );\n\n  let sortedImageIds: string[];\n  let zSpacing: number;\n\n  function getDistance(imageId: string) {\n    const { imagePositionPatient } = metaData.get('imagePlaneModule', imageId);\n\n    const positionVector = vec3.create();\n\n    vec3.sub(\n      positionVector,\n      referenceImagePositionPatient,\n      imagePositionPatient\n    );\n\n    return vec3.dot(positionVector, scanAxisNormal);\n  }\n\n  /**\n   * If we are using wadors and so have all image metadata cached ahead of time,\n   * then sort by image position in 3D space, and calculate average slice\n   * spacing from the entire volume. If not, then use the sampled images (1st\n   * and middle) to calculate slice spacing, and use the provided imageId order.\n   * Correct sorting must be done ahead of time.\n   */\n  if (!usingWadoUri) {\n    const distanceImagePairs = imageIds.map((imageId) => {\n      const distance = getDistance(imageId);\n\n      return {\n        distance,\n        imageId,\n      };\n    });\n\n    distanceImagePairs.sort((a, b) => b.distance - a.distance);\n\n    sortedImageIds = distanceImagePairs.map((a) => a.imageId);\n    const numImages = distanceImagePairs.length;\n\n    // Calculated average spacing.\n    // We would need to resample if these are not similar.\n    // It should be up to the host app to do this if it needed to.\n    zSpacing =\n      Math.abs(\n        distanceImagePairs[numImages - 1].distance -\n          distanceImagePairs[0].distance\n      ) /\n      (numImages - 1);\n  } else {\n    // Using wadouri, so we have only prefetched the first, middle, and last\n    // images for metadata. Assume initial imageId array order is pre-sorted,\n    // but check orientation.\n    const prefetchedImageIds = [\n      imageIds[0],\n      imageIds[Math.floor(imageIds.length / 2)],\n    ];\n    sortedImageIds = imageIds;\n    const firstImageDistance = getDistance(prefetchedImageIds[0]);\n    const middleImageDistance = getDistance(prefetchedImageIds[1]);\n    if (firstImageDistance - middleImageDistance < 0) {\n      sortedImageIds.reverse();\n    }\n\n    // Calculate average spacing between the first and middle prefetched images,\n    // otherwise fall back to DICOM `spacingBetweenSlices`\n    const metadataForMiddleImage = metaData.get(\n      'imagePlaneModule',\n      prefetchedImageIds[1]\n    );\n    if (!metadataForMiddleImage) {\n      throw new Error('Incomplete metadata required for volume construction.');\n    }\n\n    const positionVector = vec3.create();\n\n    vec3.sub(\n      positionVector,\n      referenceImagePositionPatient,\n      metadataForMiddleImage.imagePositionPatient\n    );\n    const distanceBetweenFirstAndMiddleImages = vec3.dot(\n      positionVector,\n      scanAxisNormal\n    );\n    zSpacing =\n      Math.abs(distanceBetweenFirstAndMiddleImages) /\n      Math.floor(imageIds.length / 2);\n  }\n\n  const { imagePositionPatient: origin, sliceThickness } = metaData.get(\n    'imagePlaneModule',\n    sortedImageIds[0]\n  );\n\n  const { strictZSpacingForVolumeViewport } = getConfiguration().rendering;\n\n  // We implemented these lines for multiframe dicom files that does not have\n  // position for each frame, leading to incorrect calculation of zSpacing = 0\n  // If possible, we use the sliceThickness, but we warn about this dicom file\n  // weirdness. If sliceThickness is not available, we set to 1 just to render\n  if (zSpacing === 0 && !strictZSpacingForVolumeViewport) {\n    if (sliceThickness) {\n      console.log('Could not calculate zSpacing. Using sliceThickness');\n      zSpacing = sliceThickness;\n    } else {\n      console.log(\n        'Could not calculate zSpacing. The VolumeViewport visualization is compromised. Setting zSpacing to 1 to render'\n      );\n      zSpacing = 1;\n    }\n  }\n  const result: SortedImageIdsItem = {\n    zSpacing,\n    origin,\n    sortedImageIds,\n  };\n\n  return result;\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import { getRenderingEngines, utilities } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\n//import type { Types } from '@cornerstonejs/core'\n\ntype RenderingEngineAndViewportIds = {\n  renderingEngine: Types.IRenderingEngine | undefined; //Types.IRenderingEngine | undefined\n  viewportIds: Array<string>;\n};\n\n/**\n * Given a volumeId, it finds the viewports and renderingEngines that\n * include that volume, and triggers a render if renderingEngine is available.\n *\n * @param volumeId - The Id of the volume\n */\nconst autoLoad = (volumeId: string): void => {\n  const renderingEngineAndViewportIds =\n    getRenderingEngineAndViewportsContainingVolume(volumeId);\n\n  if (!renderingEngineAndViewportIds || !renderingEngineAndViewportIds.length) {\n    return;\n  }\n\n  renderingEngineAndViewportIds.forEach(({ renderingEngine, viewportIds }) => {\n    if (!renderingEngine.hasBeenDestroyed) {\n      renderingEngine.renderViewports(viewportIds);\n    }\n  });\n};\n\nfunction getRenderingEngineAndViewportsContainingVolume(\n  volumeId: string\n): Array<RenderingEngineAndViewportIds> {\n  const renderingEnginesArray = getRenderingEngines();\n\n  const renderingEngineAndViewportIds = [];\n\n  for (let i = 0; i < renderingEnginesArray.length; i++) {\n    const renderingEngine = renderingEnginesArray[i];\n    const viewports = utilities.getViewportsWithVolumeId(\n      volumeId,\n      renderingEngine.id\n    );\n\n    if (viewports.length) {\n      renderingEngineAndViewportIds.push({\n        renderingEngine,\n        viewportIds: viewports.map((viewport) => viewport.id),\n      });\n    }\n  }\n\n  return renderingEngineAndViewportIds;\n}\n\nexport default autoLoad;\n","import type { Types } from '@cornerstonejs/core';\n\n/**\n * Given a pixel array, rescale the pixel values using the rescale slope and\n * intercept and if modality is PT it uses the suv values to scale the array\n * @param array - The array to be scaled.\n * @param scalingParameters - The scaling parameters\n * @returns The array is being scaled\n */\nexport default function scaleArray(\n  array: Float32Array | Uint8Array | Uint16Array | Int16Array,\n  scalingParameters: Types.ScalingParameters\n): Float32Array | Uint8Array | Uint16Array | Int16Array {\n  const arrayLength = array.length;\n  const { rescaleSlope, rescaleIntercept, suvbw } = scalingParameters;\n\n  if (scalingParameters.modality === 'PT' && typeof suvbw === 'number') {\n    for (let i = 0; i < arrayLength; i++) {\n      array[i] = suvbw * (array[i] * rescaleSlope + rescaleIntercept);\n    }\n  } else {\n    for (let i = 0; i < arrayLength; i++) {\n      array[i] = array[i] * rescaleSlope + rescaleIntercept;\n    }\n  }\n\n  return array;\n}\n","import {\n  Enums,\n  eventTarget,\n  metaData,\n  imageLoadPoolManager,\n  triggerEvent,\n  ImageVolume,\n  cache,\n  imageLoader,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\n\nimport type { Types } from '@cornerstonejs/core';\nimport { scaleArray, autoLoad } from './helpers';\n\nconst requestType = Enums.RequestType.Prefetch;\nconst { getMinMax } = csUtils;\n\n/**\n * Streaming Image Volume Class that extends ImageVolume base class.\n * It implements load method to load the imageIds and insert them into the volume.\n *\n */\nexport default class BaseStreamingImageVolume extends ImageVolume {\n  private framesLoaded = 0;\n  private framesProcessed = 0;\n  protected numFrames: number;\n  protected cornerstoneImageMetaData = null;\n\n  loadStatus: {\n    loaded: boolean;\n    loading: boolean;\n    cancelled: boolean;\n    cachedFrames: Array<boolean>;\n    callbacks: Array<(...args: unknown[]) => void>;\n  };\n\n  constructor(\n    imageVolumeProperties: Types.IVolume,\n    streamingProperties: Types.IStreamingVolumeProperties\n  ) {\n    super(imageVolumeProperties);\n    this.imageIds = streamingProperties.imageIds;\n    this.loadStatus = streamingProperties.loadStatus;\n    this.numFrames = this._getNumFrames();\n\n    this._createCornerstoneImageMetaData();\n  }\n\n  /**\n   * Returns the number of frames stored in a scalarData object. The number of\n   * frames is equal to the number of images for 3D volumes or the number of\n   * frames per time poins for 4D volumes.\n   * @returns number of frames per volume\n   */\n  private _getNumFrames(): number {\n    const { imageIds, scalarData } = this;\n    const scalarDataCount = this.isDynamicVolume() ? scalarData.length : 1;\n\n    return imageIds.length / scalarDataCount;\n  }\n\n  private _getScalarDataLength(): number {\n    const { scalarData } = this;\n    return this.isDynamicVolume()\n      ? (<Types.VolumeScalarData[]>scalarData)[0].length\n      : (<Types.VolumeScalarData>scalarData).length;\n  }\n\n  /**\n   * Creates the metadata required for converting the volume to an cornerstoneImage\n   */\n  private _createCornerstoneImageMetaData() {\n    const { numFrames } = this;\n\n    if (numFrames === 0) {\n      return;\n    }\n\n    const bytesPerImage = this.sizeInBytes / numFrames;\n    const scalarDataLength = this._getScalarDataLength();\n    const numComponents = scalarDataLength / this.numVoxels;\n    const pixelsPerImage =\n      this.dimensions[0] * this.dimensions[1] * numComponents;\n\n    const { PhotometricInterpretation, voiLut, VOILUTFunction } = this.metadata;\n\n    let windowCenter = [];\n    let windowWidth = [];\n\n    if (voiLut && voiLut.length) {\n      windowCenter = voiLut.map((voi) => {\n        return voi.windowCenter;\n      });\n\n      windowWidth = voiLut.map((voi) => {\n        return voi.windowWidth;\n      });\n    }\n\n    const color = numComponents > 1 ? true : false; //todo: fix this\n\n    this.cornerstoneImageMetaData = {\n      bytesPerImage,\n      numComponents,\n      pixelsPerImage,\n      windowCenter,\n      windowWidth,\n      color,\n      // we use rgb (3 components) for the color volumes (and not rgba), and not rgba (which is used\n      // in some parts of the lib for stack viewing in CPU)\n      rgba: false,\n      spacing: this.spacing,\n      dimensions: this.dimensions,\n      photometricInterpretation: PhotometricInterpretation,\n      voiLUTFunction: VOILUTFunction,\n      invert: PhotometricInterpretation === 'MONOCHROME1',\n    };\n  }\n\n  /**\n   * Converts imageIdIndex into frameIndex which will be the same\n   * for 3D volumes but different for 4D volumes\n   */\n  private _imageIdIndexToFrameIndex(imageIdIndex: number): number {\n    return imageIdIndex % this.numFrames;\n  }\n\n  /**\n   * Return all scalar data objects (buffers) which will be only one for\n   * 3D volumes and one per time point for 4D volumes\n   * images of each 3D volume is stored\n   * @returns scalar data array\n   */\n  public getScalarDataArrays(): Types.VolumeScalarData[] {\n    return this.isDynamicVolume()\n      ? <Types.VolumeScalarData[]>this.scalarData\n      : [<Types.VolumeScalarData>this.scalarData];\n  }\n\n  private _getScalarDataByImageIdIndex(\n    imageIdIndex: number\n  ): Types.VolumeScalarData {\n    if (imageIdIndex < 0 || imageIdIndex >= this.imageIds.length) {\n      throw new Error('imageIdIndex out of range');\n    }\n\n    const scalarDataArrays = this.getScalarDataArrays();\n    const scalarDataIndex = Math.floor(imageIdIndex / this.numFrames);\n\n    return scalarDataArrays[scalarDataIndex];\n  }\n\n  protected invalidateVolume(immediate: boolean): void {\n    const { imageData, vtkOpenGLTexture } = this;\n    const { numFrames } = this;\n\n    for (let i = 0; i < numFrames; i++) {\n      vtkOpenGLTexture.setUpdatedFrame(i);\n    }\n\n    imageData.modified();\n\n    if (immediate) {\n      autoLoad(this.volumeId);\n    }\n  }\n\n  /**\n   * It cancels loading the images of the volume. It sets the loading status to false\n   * and filters any imageLoad request in the requestPoolManager that has the same\n   * volumeId\n   */\n  public cancelLoading = (): void => {\n    const { loadStatus } = this;\n\n    if (!loadStatus || !loadStatus.loading) {\n      return;\n    }\n\n    // Set to not loading.\n    loadStatus.loading = false;\n    loadStatus.cancelled = true;\n\n    // Remove all the callback listeners\n    this.clearLoadCallbacks();\n\n    // Create a filter function which only keeps requests\n    // which do not match this volume's Id\n    const filterFunction = ({ additionalDetails }) => {\n      return additionalDetails.volumeId !== this.volumeId;\n    };\n\n    // Instruct the request pool manager to filter queued\n    // requests to ensure requests we no longer need are\n    // no longer sent.\n    imageLoadPoolManager.filterRequests(filterFunction);\n  };\n\n  /**\n   * Clear the load callbacks\n   */\n  public clearLoadCallbacks(): void {\n    this.loadStatus.callbacks = [];\n  }\n\n  /**\n   * It triggers a prefetch for images in the volume.\n   * @param callback - A callback function to be called when the volume is fully loaded\n   * @param priority - The priority for loading the volume images, lower number is higher priority\n   * @returns\n   */\n  public load = (\n    callback: (...args: unknown[]) => void,\n    priority = 5\n  ): void => {\n    const { imageIds, loadStatus, numFrames } = this;\n\n    if (loadStatus.loading === true) {\n      console.log(\n        `loadVolume: Loading is already in progress for ${this.volumeId}`\n      );\n      return; // Already loading, will get callbacks from main load.\n    }\n\n    const { loaded } = this.loadStatus;\n    const totalNumFrames = imageIds.length;\n\n    if (loaded) {\n      if (callback) {\n        callback({\n          success: true,\n          framesLoaded: totalNumFrames,\n          framesProcessed: totalNumFrames,\n          numFrames,\n          totalNumFrames,\n        });\n      }\n      return;\n    }\n\n    if (callback) {\n      this.loadStatus.callbacks.push(callback);\n    }\n\n    this._prefetchImageIds(priority);\n  };\n\n  protected getImageIdsRequests = (\n    imageIds: string[],\n    scalarData: Types.VolumeScalarData,\n    priority: number\n  ) => {\n    const { loadStatus } = this;\n    const { cachedFrames } = loadStatus;\n\n    const { vtkOpenGLTexture, imageData, metadata, volumeId } = this;\n    const { FrameOfReferenceUID } = metadata;\n\n    // SharedArrayBuffer\n    const arrayBuffer = scalarData.buffer;\n    const numFrames = imageIds.length;\n\n    // Length of one frame in voxels\n    const length = scalarData.length / numFrames;\n    // Length of one frame in bytes\n    const lengthInBytes = arrayBuffer.byteLength / numFrames;\n\n    let type;\n\n    if (scalarData instanceof Uint8Array) {\n      type = 'Uint8Array';\n    } else if (scalarData instanceof Float32Array) {\n      type = 'Float32Array';\n    } else if (scalarData instanceof Uint16Array) {\n      type = 'Uint16Array';\n    } else if (scalarData instanceof Int16Array) {\n      type = 'Int16Array';\n    } else {\n      throw new Error('Unsupported array type');\n    }\n\n    const totalNumFrames = this.imageIds.length;\n    const autoRenderOnLoad = true;\n    const autoRenderPercentage = 2;\n\n    let reRenderFraction;\n    let reRenderTarget;\n\n    if (autoRenderOnLoad) {\n      reRenderFraction = totalNumFrames * (autoRenderPercentage / 100);\n      reRenderTarget = reRenderFraction;\n    }\n\n    function callLoadStatusCallback(evt) {\n      // TODO: probably don't want this here\n\n      if (autoRenderOnLoad) {\n        if (\n          evt.framesProcessed > reRenderTarget ||\n          evt.framesProcessed === evt.totalNumFrames\n        ) {\n          reRenderTarget += reRenderFraction;\n          autoLoad(volumeId);\n        }\n      }\n\n      if (evt.framesProcessed === evt.totalNumFrames) {\n        loadStatus.callbacks.forEach((callback) => callback(evt));\n\n        const eventDetail = {\n          FrameOfReferenceUID,\n          volumeId: volumeId,\n        };\n\n        triggerEvent(\n          eventTarget,\n          Enums.Events.IMAGE_VOLUME_LOADING_COMPLETED,\n          eventDetail\n        );\n      }\n    }\n\n    const updateTextureAndTriggerEvents = (\n      volume: BaseStreamingImageVolume,\n      imageIdIndex,\n      imageId\n    ) => {\n      const frameIndex = this._imageIdIndexToFrameIndex(imageIdIndex);\n\n      cachedFrames[imageIdIndex] = true;\n      this.framesLoaded++;\n      this.framesProcessed++;\n\n      vtkOpenGLTexture.setUpdatedFrame(frameIndex);\n      imageData.modified();\n\n      const eventDetail: Types.EventTypes.ImageVolumeModifiedEventDetail = {\n        FrameOfReferenceUID,\n        imageVolume: volume,\n      };\n\n      triggerEvent(\n        eventTarget,\n        Enums.Events.IMAGE_VOLUME_MODIFIED,\n        eventDetail\n      );\n\n      if (this.framesProcessed === totalNumFrames) {\n        loadStatus.loaded = true;\n        loadStatus.loading = false;\n\n        // TODO: Should we remove the callbacks in favour of just using events?\n        callLoadStatusCallback({\n          success: true,\n          imageIdIndex,\n          imageId,\n          framesLoaded: this.framesLoaded,\n          framesProcessed: this.framesProcessed,\n          numFrames,\n          totalNumFrames,\n        });\n        loadStatus.callbacks = [];\n      } else {\n        callLoadStatusCallback({\n          success: true,\n          imageIdIndex,\n          imageId,\n          framesLoaded: this.framesLoaded,\n          framesProcessed: this.framesProcessed,\n          numFrames,\n          totalNumFrames,\n        });\n      }\n    };\n\n    const successCallback = (\n      imageIdIndex: number,\n      imageId: string,\n      scalingParameters\n    ) => {\n      const frameIndex = this._imageIdIndexToFrameIndex(imageIdIndex);\n\n      // Check if there is a cached image for the same imageURI (different\n      // data loader scheme)\n      const cachedImage = cache.getCachedImageBasedOnImageURI(imageId);\n\n      // Check if the image was already loaded by another volume and we are here\n      // since we got the imageLoadObject from the cache from the other already loaded\n      // volume\n      const cachedVolume = cache.getVolumeContainingImageId(imageId);\n\n      // check if the load was cancelled while we were waiting for the image\n      // if so we don't want to do anything\n      if (loadStatus.cancelled) {\n        console.warn(\n          'volume load cancelled, returning for imageIdIndex: ',\n          imageIdIndex\n        );\n        return;\n      }\n\n      // if it is not a cached image or volume\n      if (\n        !cachedImage?.image &&\n        !(cachedVolume && cachedVolume.volume !== this)\n      ) {\n        return updateTextureAndTriggerEvents(this, imageIdIndex, imageId);\n      }\n\n      // it is either cachedImage or cachedVolume\n      const isFromImageCache = !!cachedImage;\n\n      const cachedImageOrVolume = cachedImage || cachedVolume.volume;\n\n      this.handleImageComingFromCache(\n        cachedImageOrVolume,\n        isFromImageCache,\n        scalingParameters,\n        scalarData,\n        frameIndex,\n        arrayBuffer,\n        updateTextureAndTriggerEvents,\n        imageIdIndex,\n        imageId,\n        errorCallback\n      );\n    };\n\n    function errorCallback(error, imageIdIndex, imageId) {\n      this.framesProcessed++;\n\n      if (this.framesProcessed === totalNumFrames) {\n        loadStatus.loaded = true;\n        loadStatus.loading = false;\n\n        callLoadStatusCallback({\n          success: false,\n          imageId,\n          imageIdIndex,\n          error,\n          framesLoaded: this.framesLoaded,\n          framesProcessed: this.framesProcessed,\n          numFrames,\n          totalNumFrames,\n        });\n\n        loadStatus.callbacks = [];\n      } else {\n        callLoadStatusCallback({\n          success: false,\n          imageId,\n          imageIdIndex,\n          error,\n          framesLoaded: this.framesLoaded,\n          framesProcessed: this.framesProcessed,\n          numFrames,\n          totalNumFrames,\n        });\n      }\n\n      const eventDetail = {\n        error,\n        imageIdIndex,\n        imageId,\n      };\n\n      triggerEvent(eventTarget, Enums.Events.IMAGE_LOAD_ERROR, eventDetail);\n    }\n\n    function handleArrayBufferLoad(scalarData, image, options) {\n      if (!(scalarData.buffer instanceof ArrayBuffer)) {\n        return;\n      }\n\n      const offset = options.targetBuffer.offset; // in bytes\n      const length = options.targetBuffer.length; // in frames\n      const pixelData = image.pixelData\n        ? image.pixelData\n        : image.getPixelData();\n\n      try {\n        if (scalarData instanceof Float32Array) {\n          const bytesInFloat = 4;\n          const floatView = new Float32Array(pixelData);\n          if (floatView.length !== length) {\n            throw 'Error pixelData length does not match frame length';\n          }\n          // since set is based on the underlying type,\n          // we need to divide the offset bytes by the byte type\n          scalarData.set(floatView, offset / bytesInFloat);\n        }\n        if (scalarData instanceof Int16Array) {\n          const bytesInInt16 = 2;\n          const intView = new Int16Array(pixelData);\n          if (intView.length !== length) {\n            throw 'Error pixelData length does not match frame length';\n          }\n          scalarData.set(intView, offset / bytesInInt16);\n        }\n        if (scalarData instanceof Uint16Array) {\n          const bytesInUint16 = 2;\n          const intView = new Uint16Array(pixelData);\n          if (intView.length !== length) {\n            throw 'Error pixelData length does not match frame length';\n          }\n          scalarData.set(intView, offset / bytesInUint16);\n        }\n        if (scalarData instanceof Uint8Array) {\n          const bytesInUint8 = 1;\n          const intView = new Uint8Array(pixelData);\n          if (intView.length !== length) {\n            throw 'Error pixelData length does not match frame length';\n          }\n          scalarData.set(intView, offset / bytesInUint8);\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    }\n\n    // 4D datasets load one time point at a time and the frameIndex is\n    // the position of the imageId in the current time point while the\n    // imageIdIndex is its absolute position in the array that contains\n    // all other imageIds. In a 4D dataset the frameIndex can also be\n    // calculated as `imageIdIndex % numFrames` where numFrames is the\n    // number of frames per time point. The frameIndex and imageIdIndex\n    // will be the same when working with 3D datasets.\n    const requests = imageIds.map((imageId, frameIndex) => {\n      const imageIdIndex = this.getImageIdIndex(imageId);\n\n      if (cachedFrames[imageIdIndex]) {\n        this.framesLoaded++;\n        this.framesProcessed++;\n        return;\n      }\n\n      const modalityLutModule =\n        metaData.get('modalityLutModule', imageId) || {};\n\n      const generalSeriesModule =\n        metaData.get('generalSeriesModule', imageId) || {};\n\n      const scalingParameters: Types.ScalingParameters = {\n        rescaleSlope: modalityLutModule.rescaleSlope,\n        rescaleIntercept: modalityLutModule.rescaleIntercept,\n        modality: generalSeriesModule.modality,\n      };\n\n      if (scalingParameters.modality === 'PT') {\n        const suvFactor = metaData.get('scalingModule', imageId);\n\n        if (suvFactor) {\n          this._addScalingToVolume(suvFactor);\n          scalingParameters.suvbw = suvFactor.suvbw;\n        }\n      }\n\n      const isSlopeAndInterceptNumbers =\n        typeof scalingParameters.rescaleSlope === 'number' &&\n        typeof scalingParameters.rescaleIntercept === 'number';\n\n      /**\n       * So this is has limitation right now, but we need to somehow indicate\n       * whether the volume has been scaled with the scaling parameters or not.\n       * However, each slice can have different scaling parameters but it is rare\n       * that rescale slope and intercept be unknown for one slice and known for\n       * another. So we can just check the first slice and assume that the rest\n       * of the slices have the same scaling parameters. Basically it is important\n       * that these two are numbers and that means the volume has been scaled (\n       * we do that automatically in the loader). For the suvbw, we need to\n       * somehow indicate whether the PT image has been corrected with suvbw or\n       * not, which we store it in the this.scaling.PT.suvbw.\n       */\n      this.isPreScaled = isSlopeAndInterceptNumbers;\n\n      const options = {\n        // WADO Image Loader\n        targetBuffer: {\n          // keeping this in the options means a large empty volume array buffer\n          // will be transferred to the worker. This is undesirable for streaming\n          // volume without shared array buffer because the target is now an empty\n          // 300-500MB volume array buffer. Instead the volume should be progressively\n          // set in the main thread.\n          arrayBuffer:\n            arrayBuffer instanceof ArrayBuffer ? undefined : arrayBuffer,\n          offset: frameIndex * lengthInBytes,\n          length,\n          type,\n        },\n        skipCreateImage: true,\n        preScale: {\n          enabled: true,\n          // we need to pass in the scalingParameters here, since the streaming\n          // volume loader doesn't go through the createImage phase in the loader,\n          // and therefore doesn't have the scalingParameters\n          scalingParameters,\n        },\n      };\n\n      // Use loadImage because we are skipping the Cornerstone Image cache\n      // when we load directly into the Volume cache\n      const callLoadImage = (imageId, imageIdIndex, options) => {\n        return imageLoader.loadImage(imageId, options).then(\n          (image) => {\n            // scalarData is the volume container we are progressively loading into\n            // image is the pixelData decoded from workers in cornerstoneDICOMImageLoader\n            handleArrayBufferLoad(scalarData, image, options);\n            successCallback(imageIdIndex, imageId, scalingParameters);\n          },\n          (error) => {\n            errorCallback.call(this, error, imageIdIndex, imageId);\n          }\n        );\n      };\n\n      return {\n        callLoadImage,\n        imageId,\n        imageIdIndex,\n        options,\n        priority,\n        requestType,\n        additionalDetails: {\n          volumeId: this.volumeId,\n        },\n      };\n    });\n\n    return requests;\n  };\n\n  private handleImageComingFromCache(\n    cachedImageOrVolume,\n    isFromImageCache: boolean,\n    scalingParameters: any,\n    scalarData: Types.VolumeScalarData,\n    frameIndex: number,\n    arrayBuffer: ArrayBufferLike,\n    updateTextureAndTriggerEvents: (\n      volume: BaseStreamingImageVolume,\n      imageIdIndex: any,\n      imageId: any\n    ) => void,\n    imageIdIndex: number,\n    imageId: string,\n    errorCallback: (error: any, imageIdIndex: any, imageId: any) => void\n  ) {\n    const imageLoadObject = isFromImageCache\n      ? cachedImageOrVolume.imageLoadObject\n      : cachedImageOrVolume.convertToCornerstoneImage(imageId, imageIdIndex);\n\n    imageLoadObject.promise\n      .then((cachedImage) => {\n        const imageScalarData = this._scaleIfNecessary(\n          cachedImage,\n          scalingParameters\n        );\n        // todo add scaling and slope\n        const { pixelsPerImage, bytesPerImage } = this.cornerstoneImageMetaData;\n        const TypedArray = scalarData.constructor;\n        let byteOffset = bytesPerImage * frameIndex;\n\n        // create a view on the volume arraybuffer\n        const bytePerPixel = bytesPerImage / pixelsPerImage;\n\n        if (scalarData.BYTES_PER_ELEMENT !== bytePerPixel) {\n          byteOffset *= scalarData.BYTES_PER_ELEMENT / bytePerPixel;\n        }\n\n        // @ts-ignore\n        const volumeBufferView = new TypedArray(\n          arrayBuffer,\n          byteOffset,\n          pixelsPerImage\n        );\n        volumeBufferView.set(imageScalarData);\n        updateTextureAndTriggerEvents(this, imageIdIndex, imageId);\n      })\n      .catch((err) => {\n        errorCallback.call(this, err, imageIdIndex, imageId);\n      });\n  }\n\n  /**\n   * It returns the imageLoad requests for the streaming image volume instance.\n   * It involves getting all the imageIds of the volume and creating a success callback\n   * which would update the texture (when the image has loaded) and the failure callback.\n   * Note that this method does not executes the requests but only returns the requests.\n   * It can be used for sorting requests outside of the volume loader itself\n   * e.g. loading a single slice of CT, followed by a single slice of PET (interleaved), before\n   * moving to the next slice.\n   *\n   * @returns Array of requests including imageId of the request, its imageIdIndex,\n   * options (targetBuffer and scaling parameters), and additionalDetails (volumeId)\n   */\n  public getImageLoadRequests(_priority: number): any[] {\n    throw new Error('Abstract method');\n  }\n\n  private _prefetchImageIds(priority: number): void {\n    // Note: here is the correct location to set the loading flag\n    // since getImageIdsRequest is just grabbing and building requests\n    // and not actually executing them\n    this.loadStatus.loading = true;\n\n    const requests = this.getImageLoadRequests(priority);\n\n    requests.reverse().forEach((request) => {\n      if (!request) {\n        // there is a cached image for the imageId and no requests will fire\n        return;\n      }\n\n      const {\n        callLoadImage,\n        imageId,\n        imageIdIndex,\n        options,\n        priority,\n        requestType,\n        additionalDetails,\n      } = request;\n\n      imageLoadPoolManager.addRequest(\n        callLoadImage.bind(this, imageId, imageIdIndex, options),\n        requestType,\n        additionalDetails,\n        priority\n      );\n    });\n  }\n\n  /**\n   * This function decides whether or not to scale the image based on the\n   * scalingParameters. If the image is already scaled, we should take that\n   * into account when scaling the image again, so if the rescaleSlope and/or\n   * rescaleIntercept are different from the ones that were used to scale the\n   * image, we should scale the image again according to the new parameters.\n   */\n  private _scaleIfNecessary(\n    image,\n    scalingParametersToUse: Types.ScalingParameters\n  ) {\n    const imageIsAlreadyScaled = image.preScale?.scaled;\n    const noScalingParametersToUse =\n      !scalingParametersToUse ||\n      !scalingParametersToUse.rescaleIntercept ||\n      !scalingParametersToUse.rescaleSlope;\n\n    if (!imageIsAlreadyScaled && noScalingParametersToUse) {\n      // no need to scale the image\n      return image.getPixelData().slice(0);\n    }\n\n    if (\n      !imageIsAlreadyScaled &&\n      scalingParametersToUse &&\n      scalingParametersToUse.rescaleIntercept !== undefined &&\n      scalingParametersToUse.rescaleSlope !== undefined\n    ) {\n      // if not already scaled, just scale the image.\n      // copy so that it doesn't get modified\n      const pixelDataCopy = image.getPixelData().slice(0);\n      const scaledArray = scaleArray(pixelDataCopy, scalingParametersToUse);\n      return scaledArray;\n    }\n\n    // if the image is already scaled,\n    const {\n      rescaleSlope: rescaleSlopeToUse,\n      rescaleIntercept: rescaleInterceptToUse,\n      suvbw: suvbwToUse,\n    } = scalingParametersToUse;\n\n    const {\n      rescaleSlope: rescaleSlopeUsed,\n      rescaleIntercept: rescaleInterceptUsed,\n      suvbw: suvbwUsed,\n    } = image.preScale.scalingParameters;\n\n    const rescaleSlopeIsSame = rescaleSlopeToUse === rescaleSlopeUsed;\n    const rescaleInterceptIsSame =\n      rescaleInterceptToUse === rescaleInterceptUsed;\n    const suvbwIsSame = suvbwToUse === suvbwUsed;\n\n    if (rescaleSlopeIsSame && rescaleInterceptIsSame && suvbwIsSame) {\n      // if the scaling parameters are the same, we don't need to scale the image again\n      return image.getPixelData();\n    }\n\n    const pixelDataCopy = image.getPixelData().slice(0);\n    // the general formula for scaling is  scaledPixelValue = suvbw * (pixelValue * rescaleSlope) + rescaleIntercept\n    const newSuvbw = suvbwToUse / suvbwUsed;\n    const newRescaleSlope = rescaleSlopeToUse / rescaleSlopeUsed;\n    const newRescaleIntercept =\n      rescaleInterceptToUse - rescaleInterceptUsed * newRescaleSlope;\n\n    const newScalingParameters = {\n      ...scalingParametersToUse,\n      rescaleSlope: newRescaleSlope,\n      rescaleIntercept: newRescaleIntercept,\n      suvbw: newSuvbw,\n    };\n\n    const scaledArray = scaleArray(pixelDataCopy, newScalingParameters);\n    return scaledArray;\n  }\n\n  private _addScalingToVolume(suvFactor) {\n    // Todo: handle case where suvFactors are not the same for all frames\n    if (this.scaling) {\n      return;\n    }\n\n    const { suvbw, suvlbm, suvbsa } = suvFactor;\n\n    const petScaling = <Types.PTScaling>{};\n\n    if (suvlbm) {\n      petScaling.suvbwToSuvlbm = suvlbm / suvbw;\n    }\n\n    if (suvbsa) {\n      petScaling.suvbwToSuvbsa = suvbsa / suvbw;\n    }\n\n    if (suvbw) {\n      petScaling.suvbw = suvbw;\n    }\n\n    this.scaling = { PT: petScaling };\n  }\n\n  private _removeFromCache() {\n    // TODO: not 100% sure this is the same Id as the volume loader's volumeId?\n    // so I have no idea if this will work\n    cache.removeVolumeLoadObject(this.volumeId);\n  }\n\n  /**\n   * Converts the requested imageId inside the volume to a cornerstoneImage\n   * object. It uses the typedArray set method to copy the pixelData from the\n   * correct offset in the scalarData to a new array for the image\n   *\n   * @param imageId - the imageId of the image to be converted\n   * @param imageIdIndex - the index of the imageId in the imageIds array\n   * @returns image object containing the pixel data, metadata, and other information\n   */\n  public getCornerstoneImage(\n    imageId: string,\n    imageIdIndex: number\n  ): Types.IImage {\n    const { imageIds } = this;\n    const frameIndex = this._imageIdIndexToFrameIndex(imageIdIndex);\n\n    const {\n      bytesPerImage,\n      pixelsPerImage,\n      windowCenter,\n      windowWidth,\n      numComponents,\n      color,\n      dimensions,\n      spacing,\n      invert,\n      voiLUTFunction,\n      photometricInterpretation,\n    } = this.cornerstoneImageMetaData;\n\n    // 1. Grab the buffer and it's type\n    const scalarData = this._getScalarDataByImageIdIndex(imageIdIndex);\n    const volumeBuffer = scalarData.buffer;\n    // (not sure if this actually works, TypeScript keeps complaining)\n    const TypedArray = scalarData.constructor;\n\n    // 2. Given the index of the image and frame length in bytes,\n    //    create a view on the volume arraybuffer\n    const bytePerPixel = bytesPerImage / pixelsPerImage;\n\n    let byteOffset = bytesPerImage * frameIndex;\n\n    // If there is a discrepancy between the volume typed array\n    // and the bitsAllocated for the image. The reason is that VTK uses Float32\n    // on the GPU and if the type is not Float32, it will convert it. So for not\n    // having a performance issue, we convert all types initially to Float32 even\n    // if they are not Float32.\n    if (scalarData.BYTES_PER_ELEMENT !== bytePerPixel) {\n      byteOffset *= scalarData.BYTES_PER_ELEMENT / bytePerPixel;\n    }\n\n    // 3. Create a new TypedArray of the same type for the new\n    //    Image that will be created\n    // @ts-ignore\n    const imageScalarData = new TypedArray(pixelsPerImage);\n    // @ts-ignore\n    const volumeBufferView = new TypedArray(\n      volumeBuffer,\n      byteOffset,\n      pixelsPerImage\n    );\n\n    // 4. Use e.g. TypedArray.set() to copy the data from the larger\n    //    buffer's view into the smaller one\n    imageScalarData.set(volumeBufferView);\n\n    // 5. Create an Image Object from imageScalarData and put it into the Image cache\n    const volumeImageId = imageIds[imageIdIndex];\n    const modalityLutModule =\n      metaData.get('modalityLutModule', volumeImageId) || {};\n    const minMax = getMinMax(imageScalarData);\n    const intercept = modalityLutModule.rescaleIntercept\n      ? modalityLutModule.rescaleIntercept\n      : 0;\n\n    return {\n      imageId,\n      intercept,\n      windowCenter,\n      windowWidth,\n      voiLUTFunction,\n      color,\n      rgba: false,\n      numComps: numComponents,\n      // Note the dimensions were defined as [Columns, Rows, Frames]\n      rows: dimensions[1],\n      columns: dimensions[0],\n      sizeInBytes: imageScalarData.byteLength,\n      getPixelData: () => imageScalarData,\n      minPixelValue: minMax.min,\n      maxPixelValue: minMax.max,\n      slope: modalityLutModule.rescaleSlope\n        ? modalityLutModule.rescaleSlope\n        : 1,\n      getCanvas: undefined, // todo: which canvas?\n      height: dimensions[0],\n      width: dimensions[1],\n      columnPixelSpacing: spacing[0],\n      rowPixelSpacing: spacing[1],\n      invert,\n      photometricInterpretation,\n    };\n  }\n\n  /**\n   * Converts the requested imageId inside the volume to a cornerstoneImage\n   * object. It uses the typedArray set method to copy the pixelData from the\n   * correct offset in the scalarData to a new array for the image\n   * Duplicate of getCornerstoneImageLoadObject for legacy reasons\n   *\n   * @param imageId - the imageId of the image to be converted\n   * @param imageIdIndex - the index of the imageId in the imageIds array\n   * @returns imageLoadObject containing the promise that resolves\n   * to the cornerstone image\n   */\n  public convertToCornerstoneImage(\n    imageId: string,\n    imageIdIndex: number\n  ): Types.IImageLoadObject {\n    return this.getCornerstoneImageLoadObject(imageId, imageIdIndex);\n  }\n\n  /**\n   * Converts the requested imageId inside the volume to a cornerstoneImage\n   * object. It uses the typedArray set method to copy the pixelData from the\n   * correct offset in the scalarData to a new array for the image\n   *\n   * @param imageId - the imageId of the image to be converted\n   * @param imageIdIndex - the index of the imageId in the imageIds array\n   * @returns imageLoadObject containing the promise that resolves\n   * to the cornerstone image\n   */\n  public getCornerstoneImageLoadObject(\n    imageId: string,\n    imageIdIndex: number\n  ): Types.IImageLoadObject {\n    const image = this.getCornerstoneImage(imageId, imageIdIndex);\n\n    const imageLoadObject = {\n      promise: Promise.resolve(image),\n    };\n\n    return imageLoadObject;\n  }\n\n  /**\n   * Returns an array of all the volume's images as Cornerstone images.\n   * It iterates over all the imageIds and converts them to Cornerstone images.\n   *\n   * @returns An array of Cornerstone images.\n   */\n  public getCornerstoneImages(): Types.IImage[] {\n    const { imageIds } = this;\n\n    return imageIds.map((imageId, imageIdIndex) => {\n      return this.getCornerstoneImage(imageId, imageIdIndex);\n    });\n  }\n\n  /**\n   * Converts all the volume images (imageIds) to cornerstoneImages and caches them.\n   * It iterates over all the imageIds and convert them until there is no\n   * enough space left inside the imageCache. Finally it will decache the Volume.\n   *\n   */\n  private _convertToImages() {\n    // 1. Try to decache images in the volatile Image Cache to provide\n    //    enough space to store another entire copy of the volume (as Images).\n    //    If we do not have enough, we will store as many images in the cache\n    //    as possible, and the rest of the volume will be decached.\n    const byteLength = this.sizeInBytes;\n    const numImages = this.imageIds.length;\n    const { bytesPerImage } = this.cornerstoneImageMetaData;\n\n    let bytesRemaining = cache.decacheIfNecessaryUntilBytesAvailable(\n      byteLength,\n      this.imageIds\n    );\n\n    for (let imageIdIndex = 0; imageIdIndex < numImages; imageIdIndex++) {\n      const imageId = this.imageIds[imageIdIndex];\n\n      bytesRemaining = bytesRemaining - bytesPerImage;\n\n      // 2. Convert each imageId to a cornerstone Image object which is\n      // resolved inside the promise of imageLoadObject\n      const imageLoadObject = this.convertToCornerstoneImage(\n        imageId,\n        imageIdIndex\n      );\n\n      // 3. Caching the image\n      if (!cache.getImageLoadObject(imageId)) {\n        cache.putImageLoadObject(imageId, imageLoadObject).catch((err) => {\n          console.error(err);\n        });\n      }\n\n      // 4. If we know we won't be able to add another Image to the cache\n      //    without breaching the limit, stop here.\n      if (bytesRemaining <= bytesPerImage) {\n        break;\n      }\n    }\n    // 5. When as much of the Volume is processed into Images as possible\n    //    without breaching the cache limit, remove the Volume\n    this._removeFromCache();\n  }\n\n  /**\n   * If completelyRemove is true, remove the volume completely from the cache. Otherwise,\n   * convert the volume to cornerstone images (stack images) and store it in the cache\n   * @param completelyRemove - If true, the image will be removed from the\n   * cache completely.\n   */\n  public decache(completelyRemove = false): void {\n    if (completelyRemove) {\n      this._removeFromCache();\n    } else {\n      this._convertToImages();\n    }\n  }\n}\n","import { Types } from '@cornerstonejs/core';\nimport BaseStreamingImageVolume from './BaseStreamingImageVolume';\n\n/**\n * Streaming Image Volume Class that extends ImageVolume base class.\n * It implements load method to load the imageIds and insert them into the volume.\n */\nexport default class StreamingImageVolume extends BaseStreamingImageVolume {\n  constructor(\n    imageVolumeProperties: Types.IVolume,\n    streamingProperties: Types.IStreamingVolumeProperties\n  ) {\n    super(imageVolumeProperties, streamingProperties);\n  }\n\n  /**\n   * Return the scalar data (buffer)\n   * @returns volume scalar data\n   */\n  public getScalarData(): Types.VolumeScalarData {\n    return <Types.VolumeScalarData>this.scalarData;\n  }\n\n  /**\n   * It returns the imageLoad requests for the streaming image volume instance.\n   * It involves getting all the imageIds of the volume and creating a success callback\n   * which would update the texture (when the image has loaded) and the failure callback.\n   * Note that this method does not executes the requests but only returns the requests.\n   * It can be used for sorting requests outside of the volume loader itself\n   * e.g. loading a single slice of CT, followed by a single slice of PET (interleaved), before\n   * moving to the next slice.\n   *\n   * @returns Array of requests including imageId of the request, its imageIdIndex,\n   * options (targetBuffer and scaling parameters), and additionalDetails (volumeId)\n   */\n  public getImageLoadRequests = (priority: number) => {\n    const { imageIds } = this;\n    const scalarData = <Types.VolumeScalarData>this.scalarData;\n\n    return this.getImageIdsRequests(imageIds, scalarData, priority);\n  };\n}\n","import {\n  cache,\n  utilities,\n  Enums,\n  imageLoader,\n  imageLoadPoolManager,\n  getShouldUseSharedArrayBuffer,\n  getConfiguration,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\nimport { makeVolumeMetadata, sortImageIdsAndGetSpacing } from './helpers';\nimport StreamingImageVolume from './StreamingImageVolume';\n\nconst {\n  createUint8SharedArray,\n  createFloat32SharedArray,\n  createUint16SharedArray,\n  createInt16SharedArray,\n} = utilities;\n\ninterface IVolumeLoader {\n  promise: Promise<StreamingImageVolume>;\n  cancel: () => void;\n  decache: () => void;\n}\n\n/**\n * It handles loading of a image by streaming in its imageIds. It will be the\n * volume loader if the schema for the volumeID is `cornerstoneStreamingImageVolume`.\n * This function returns a promise that resolves to the StreamingImageVolume instance.\n *\n * In order to use the cornerstoneStreamingImageVolumeLoader you should use\n * createAndCacheVolume helper from the cornerstone-core volumeLoader module.\n *\n * @param volumeId - The ID of the volume\n * @param options - options for loading, imageIds\n * @returns a promise that resolves to a StreamingImageVolume\n */\nfunction cornerstoneStreamingImageVolumeLoader(\n  volumeId: string,\n  options: {\n    imageIds: string[];\n  }\n): IVolumeLoader {\n  if (!options || !options.imageIds || !options.imageIds.length) {\n    throw new Error(\n      'ImageIds must be provided to create a streaming image volume'\n    );\n  }\n\n  const { useNorm16Texture, preferSizeOverAccuracy } =\n    getConfiguration().rendering;\n  const use16BitDataType = useNorm16Texture || preferSizeOverAccuracy;\n\n  async function getStreamingImageVolume() {\n    /**\n     * Check if we are using the `wadouri:` scheme, and if so, preload first,\n     * middle, and last image metadata as these are the images the current\n     * streaming image loader may explicitly request metadata from. The last image\n     * metadata would only be specifically requested if the imageId array order is\n     * reversed in the `sortImageIdsAndGetSpacing.ts` file.\n     */\n    if (options.imageIds[0].split(':')[0] === 'wadouri') {\n      const [middleImageIndex, lastImageIndex] = [\n        Math.floor(options.imageIds.length / 2),\n        options.imageIds.length - 1,\n      ];\n      const indexesToPrefetch = [0, middleImageIndex, lastImageIndex];\n      await Promise.all(\n        indexesToPrefetch.map((index) => {\n          return new Promise((resolve, reject) => {\n            const imageId = options.imageIds[index];\n            imageLoadPoolManager.addRequest(\n              async () => {\n                imageLoader\n                  .loadImage(imageId)\n                  .then(() => {\n                    console.log(`Prefetched imageId: ${imageId}`);\n                    resolve(true);\n                  })\n                  .catch((err) => {\n                    reject(err);\n                  });\n              },\n              Enums.RequestType.Prefetch,\n              { volumeId },\n              1 // priority\n            );\n          });\n        })\n      ).catch(console.error);\n    }\n\n    const { imageIds } = options;\n\n    const volumeMetadata = makeVolumeMetadata(imageIds);\n\n    // For a streaming volume, the data type cannot rely on cswil to load\n    // the proper array buffer type. This is because the target buffer container\n    // must be decided ahead of time.\n    // TODO: move this logic into CSWIL to avoid logic duplication.\n    // We check if scaling parameters are negative we choose Int16 instead of\n    // Uint16 for cases where BitsAllocated is 16.\n    const imageIdIndex = Math.floor(imageIds.length / 2);\n    const imageId = imageIds[imageIdIndex];\n    const scalingParameters = csUtils.getScalingParameters(imageId);\n    const hasNegativeRescale =\n      scalingParameters.rescaleIntercept < 0 ||\n      scalingParameters.rescaleSlope < 0;\n\n    const {\n      BitsAllocated,\n      PixelRepresentation,\n      PhotometricInterpretation,\n      ImageOrientationPatient,\n      PixelSpacing,\n      Columns,\n      Rows,\n    } = volumeMetadata;\n\n    const rowCosineVec = vec3.fromValues(\n      ImageOrientationPatient[0],\n      ImageOrientationPatient[1],\n      ImageOrientationPatient[2]\n    );\n    const colCosineVec = vec3.fromValues(\n      ImageOrientationPatient[3],\n      ImageOrientationPatient[4],\n      ImageOrientationPatient[5]\n    );\n\n    const scanAxisNormal = vec3.create();\n\n    vec3.cross(scanAxisNormal, rowCosineVec, colCosineVec);\n\n    const { zSpacing, origin, sortedImageIds } = sortImageIdsAndGetSpacing(\n      imageIds,\n      scanAxisNormal\n    );\n\n    const numFrames = imageIds.length;\n\n    // Spacing goes [1] then [0], as [1] is column spacing (x) and [0] is row spacing (y)\n    const spacing = <Types.Point3>[PixelSpacing[1], PixelSpacing[0], zSpacing];\n    const dimensions = <Types.Point3>[Columns, Rows, numFrames];\n    const direction = [\n      ...rowCosineVec,\n      ...colCosineVec,\n      ...scanAxisNormal,\n    ] as Types.Mat3;\n    const signed = PixelRepresentation === 1;\n    const numComponents = PhotometricInterpretation === 'RGB' ? 3 : 1;\n    const useSharedArrayBuffer = getShouldUseSharedArrayBuffer();\n    const length = dimensions[0] * dimensions[1] * dimensions[2];\n    const handleCache = (sizeInBytes) => {\n      if (!cache.isCacheable(sizeInBytes)) {\n        throw new Error(Enums.Events.CACHE_SIZE_EXCEEDED);\n      }\n      cache.decacheIfNecessaryUntilBytesAvailable(sizeInBytes);\n    };\n\n    let scalarData, sizeInBytes;\n    switch (BitsAllocated) {\n      case 8:\n        if (signed) {\n          throw new Error(\n            '8 Bit signed images are not yet supported by this plugin.'\n          );\n        }\n        sizeInBytes = length * numComponents;\n        handleCache(sizeInBytes);\n        scalarData = useSharedArrayBuffer\n          ? createUint8SharedArray(length * numComponents)\n          : new Uint8Array(length * numComponents);\n        break;\n\n      case 16:\n        // Temporary fix for 16 bit images to use Float32\n        // until the new dicom image loader handler the conversion\n        // correctly\n        if (!use16BitDataType) {\n          sizeInBytes = length * 4;\n          scalarData = useSharedArrayBuffer\n            ? createFloat32SharedArray(length)\n            : new Float32Array(length);\n\n          break;\n        }\n\n        sizeInBytes = length * 2;\n        if (signed || hasNegativeRescale) {\n          handleCache(sizeInBytes);\n          scalarData = useSharedArrayBuffer\n            ? createInt16SharedArray(length)\n            : new Int16Array(length);\n          break;\n        }\n\n        if (!signed && !hasNegativeRescale) {\n          handleCache(sizeInBytes);\n          scalarData = useSharedArrayBuffer\n            ? createUint16SharedArray(length)\n            : new Uint16Array(length);\n          break;\n        }\n\n        // Default to Float32 again\n        sizeInBytes = length * 4;\n        handleCache(sizeInBytes);\n        scalarData = useSharedArrayBuffer\n          ? createFloat32SharedArray(length)\n          : new Float32Array(length);\n        break;\n\n      case 24:\n        sizeInBytes = length * numComponents;\n        handleCache(sizeInBytes);\n\n        // hacky because we don't support alpha channel in dicom\n        scalarData = useSharedArrayBuffer\n          ? createUint8SharedArray(length * numComponents)\n          : new Uint8Array(length * numComponents);\n        break;\n    }\n\n    const streamingImageVolume = new StreamingImageVolume(\n      // ImageVolume properties\n      {\n        volumeId,\n        metadata: volumeMetadata,\n        dimensions,\n        spacing,\n        origin,\n        direction,\n        scalarData,\n        sizeInBytes,\n      },\n      // Streaming properties\n      {\n        imageIds: sortedImageIds,\n        loadStatus: {\n          // todo: loading and loaded should be on ImageVolume\n          loaded: false,\n          loading: false,\n          cancelled: false,\n          cachedFrames: [],\n          callbacks: [],\n        },\n      }\n    );\n\n    return streamingImageVolume;\n  }\n\n  const streamingImageVolumePromise = getStreamingImageVolume();\n\n  return {\n    promise: streamingImageVolumePromise,\n    decache: () => {\n      streamingImageVolumePromise.then((streamingImageVolume) => {\n        streamingImageVolume.destroy();\n        streamingImageVolume = null;\n      });\n    },\n    cancel: () => {\n      streamingImageVolumePromise.then((streamingImageVolume) => {\n        streamingImageVolume.cancelLoading();\n      });\n    },\n  };\n}\n\nexport default cornerstoneStreamingImageVolumeLoader;\n","import { metaData } from '@cornerstonejs/core';\n\n// TODO: add support for other 4D tags as listed below\n// Supported 4D Tags\n//   (0018,1060) Trigger Time                   [NOK]\n//   (0018,0081) Echo Time                      [NOK]\n//   (0018,0086) Echo Number                    [NOK]\n//   (0020,0100) Temporal Position Identifier   [NOK]\n//   (0054,1300) FrameReferenceTime             [OK]\n\ninterface MappedFrameReferenceTime {\n  imageId: string;\n  frameReferenceTime: number;\n}\n\nconst groupBy = (array, key) => {\n  return array.reduce((rv, x) => {\n    (rv[x[key]] = rv[x[key]] || []).push(x);\n    return rv;\n  }, {});\n};\n\nfunction splitFramesByFrameReferenceTime(imageIds: string[]): string[][] {\n  const framesMetadata: Array<MappedFrameReferenceTime> = imageIds.map(\n    (imageId: string): MappedFrameReferenceTime => {\n      const petImageModule = metaData.get('petImageModule', imageId);\n      const { frameReferenceTime = 0 } = petImageModule ?? {};\n      return { imageId, frameReferenceTime };\n    }\n  );\n\n  const framesGroups = groupBy(framesMetadata, 'frameReferenceTime');\n  const sortedFrameReferenceTimes = Object.keys(framesGroups)\n    .map(Number.parseFloat)\n    .sort((a, b) => a - b);\n\n  const imageIdsGroups = sortedFrameReferenceTimes.map((key) =>\n    framesGroups[key].map((item) => item.imageId)\n  );\n\n  return imageIdsGroups;\n}\n\n/**\n * Split the imageIds array by 4D tags into groups. Each group must have the\n * same number of imageIds or the same imageIds array passed in is returned.\n * @param imageIds - array of imageIds\n * @returns imageIds grouped by 4D tags\n */\nfunction splitImageIdsBy4DTags(imageIds: string[]): string[][] {\n  const fncList = [splitFramesByFrameReferenceTime];\n\n  for (let i = 0; i < fncList.length; i++) {\n    const framesGroups = fncList[i](imageIds);\n\n    if (!framesGroups || framesGroups.length <= 1) {\n      // imageIds could not be split into groups\n      continue;\n    }\n\n    const framesPerGroup = framesGroups[0].length;\n    const groupsHaveSameLength = framesGroups.every(\n      (g) => g.length === framesPerGroup\n    );\n\n    if (groupsHaveSameLength) {\n      return framesGroups;\n    }\n  }\n\n  // return the same imagesIds for non-4D volumes\n  return [imageIds];\n}\n\nexport default splitImageIdsBy4DTags;\n","import { cache, utilities, Enums } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\nimport makeVolumeMetadata from './makeVolumeMetadata';\nimport sortImageIdsAndGetSpacing from './sortImageIdsAndGetSpacing';\n\nconst { createUint8SharedArray, createFloat32SharedArray } = utilities;\n\nfunction getVolumeInfo(imageIds: string[]) {\n  const volumeMetadata = makeVolumeMetadata(imageIds);\n\n  const {\n    BitsAllocated,\n    PixelRepresentation,\n    PhotometricInterpretation,\n    ImageOrientationPatient,\n    PixelSpacing,\n    Columns,\n    Rows,\n  } = volumeMetadata;\n\n  const rowCosineVec = vec3.fromValues(\n    ImageOrientationPatient[0],\n    ImageOrientationPatient[1],\n    ImageOrientationPatient[2]\n  );\n\n  const colCosineVec = vec3.fromValues(\n    ImageOrientationPatient[3],\n    ImageOrientationPatient[4],\n    ImageOrientationPatient[5]\n  );\n\n  const scanAxisNormal = vec3.create();\n\n  vec3.cross(scanAxisNormal, rowCosineVec, colCosineVec);\n\n  const { zSpacing, origin, sortedImageIds } = sortImageIdsAndGetSpacing(\n    imageIds,\n    scanAxisNormal\n  );\n\n  const numFrames = imageIds.length;\n\n  // Spacing goes [1] then [0], as [1] is column spacing (x) and [0] is row spacing (y)\n  const spacing = <Types.Point3>[PixelSpacing[1], PixelSpacing[0], zSpacing];\n  const dimensions = <Types.Point3>[Columns, Rows, numFrames];\n  const direction = [\n    ...rowCosineVec,\n    ...colCosineVec,\n    ...scanAxisNormal,\n  ] as Types.Mat3;\n  const signed = PixelRepresentation === 1;\n\n  // Check if it fits in the cache before we allocate data\n  // TODO Improve this when we have support for more types\n  // NOTE: We use 4 bytes per voxel as we are using Float32.\n  const bytesPerVoxel = BitsAllocated === 16 ? 4 : 1;\n  const sizeInBytesPerComponent =\n    bytesPerVoxel * dimensions[0] * dimensions[1] * dimensions[2];\n\n  let numComponents = 1;\n  if (PhotometricInterpretation === 'RGB') {\n    numComponents = 3;\n  }\n\n  const sizeInBytes = sizeInBytesPerComponent * numComponents;\n\n  // check if there is enough space in unallocated + image Cache\n  const isCacheable = cache.isCacheable(sizeInBytes);\n  if (!isCacheable) {\n    throw new Error(Enums.Events.CACHE_SIZE_EXCEEDED);\n  }\n\n  cache.decacheIfNecessaryUntilBytesAvailable(sizeInBytes);\n\n  let scalarData;\n\n  switch (BitsAllocated) {\n    case 8:\n      if (signed) {\n        throw new Error(\n          '8 Bit signed images are not yet supported by this plugin.'\n        );\n      } else {\n        scalarData = createUint8SharedArray(\n          dimensions[0] * dimensions[1] * dimensions[2]\n        );\n      }\n\n      break;\n\n    case 16:\n      scalarData = createFloat32SharedArray(\n        dimensions[0] * dimensions[1] * dimensions[2]\n      );\n\n      break;\n\n    case 24:\n      // hacky because we don't support alpha channel in dicom\n      scalarData = createUint8SharedArray(\n        dimensions[0] * dimensions[1] * dimensions[2] * numComponents\n      );\n\n      break;\n  }\n\n  return {\n    metadata: volumeMetadata,\n    sortedImageIds,\n    dimensions,\n    spacing,\n    origin,\n    direction,\n    scalarData,\n    sizeInBytes,\n  };\n}\n\nexport { getVolumeInfo, getVolumeInfo as default };\n","import type { Types } from '@cornerstonejs/core';\nimport BaseStreamingImageVolume from './BaseStreamingImageVolume';\n\ntype TimePoint = {\n  /** imageIds of each timepoint  */\n  imageIds: Array<string>;\n  /** volume scalar data  */\n  scalarData: Float32Array | Uint8Array | Uint16Array | Int16Array;\n};\n\n/**\n * Streaming Image Volume Class that extends StreamingImageVolume base class.\n * It implements load method to load the imageIds and insert them into the volume.\n */\nexport default class StreamingDynamicImageVolume\n  extends BaseStreamingImageVolume\n  implements Types.IDynamicImageVolume\n{\n  private _numTimePoints: number;\n  private _timePoints: TimePoint[];\n  private _timePointIndex = 0;\n\n  constructor(\n    imageVolumeProperties: Types.IVolume,\n    streamingProperties: Types.IStreamingVolumeProperties\n  ) {\n    StreamingDynamicImageVolume._ensureValidData(\n      imageVolumeProperties,\n      streamingProperties\n    );\n\n    super(imageVolumeProperties, streamingProperties);\n    this._numTimePoints = (<Types.VolumeScalarData[]>this.scalarData).length;\n    this._timePoints = this._getTimePointsData();\n  }\n\n  private static _ensureValidData(\n    imageVolumeProperties: Types.IVolume,\n    streamingProperties: Types.IStreamingVolumeProperties\n  ): void {\n    const imageIds = streamingProperties.imageIds;\n    const scalarDataArrays = <Types.VolumeScalarData[]>(\n      imageVolumeProperties.scalarData\n    );\n\n    if (imageIds.length % scalarDataArrays.length !== 0) {\n      throw new Error(\n        `Number of imageIds is not a multiple of ${scalarDataArrays.length}`\n      );\n    }\n  }\n\n  /**\n   * Use the image ids and scalar data array to create TimePoint objects\n   * and make it a bit easier to work with when loading requests\n   */\n  private _getTimePointsData(): TimePoint[] {\n    const { imageIds } = this;\n    const scalarData = <Types.VolumeScalarData[]>this.scalarData;\n\n    const { numFrames } = this;\n    const numTimePoints = scalarData.length;\n    const timePoints: TimePoint[] = [];\n\n    for (let i = 0; i < numTimePoints; i++) {\n      const start = i * numFrames;\n      const end = start + numFrames;\n\n      timePoints.push({\n        imageIds: imageIds.slice(start, end),\n        scalarData: scalarData[i],\n      });\n    }\n\n    return timePoints;\n  }\n\n  private _getTimePointsToLoad() {\n    const timePoints = this._timePoints;\n    const initialTimePointIndex = this._timePointIndex;\n    const timePointsToLoad = [timePoints[initialTimePointIndex]];\n\n    let leftIndex = initialTimePointIndex - 1;\n    let rightIndex = initialTimePointIndex + 1;\n\n    while (leftIndex >= 0 || rightIndex < timePoints.length) {\n      if (leftIndex >= 0) {\n        timePointsToLoad.push(timePoints[leftIndex--]);\n      }\n\n      if (rightIndex < timePoints.length) {\n        timePointsToLoad.push(timePoints[rightIndex++]);\n      }\n    }\n\n    return timePointsToLoad;\n  }\n\n  private _getTimePointRequests = (timePoint, priority: number) => {\n    const { imageIds, scalarData } = timePoint;\n\n    return this.getImageIdsRequests(imageIds, scalarData, priority);\n  };\n\n  private _getTimePointsRequests = (priority: number) => {\n    const timePoints = this._getTimePointsToLoad();\n    let timePointsRequests = [];\n\n    timePoints.forEach((timePoint) => {\n      const timePointRequests = this._getTimePointRequests(timePoint, priority);\n      timePointsRequests = timePointsRequests.concat(timePointRequests);\n    });\n\n    return timePointsRequests;\n  };\n\n  /** return true if it is a 4D volume or false if it is 3D volume */\n  public isDynamicVolume(): boolean {\n    return true;\n  }\n\n  /**\n   * Returns the active time point index\n   * @returns active time point index\n   */\n  public get timePointIndex(): number {\n    return this._timePointIndex;\n  }\n\n  /**\n   * Set the active time point index which also updates the active scalar data\n   * @returns current time point index\n   */\n  public set timePointIndex(newTimePointIndex: number) {\n    if (newTimePointIndex < 0 || newTimePointIndex >= this.numTimePoints) {\n      throw new Error(`Invalid timePointIndex (${newTimePointIndex})`);\n    }\n\n    // Nothing to do when time point index does not change\n    if (this._timePointIndex === newTimePointIndex) {\n      return;\n    }\n\n    const { imageData } = this;\n\n    this._timePointIndex = newTimePointIndex;\n    imageData.getPointData().setActiveScalars(`timePoint-${newTimePointIndex}`);\n    this.invalidateVolume(true);\n  }\n\n  /**\n   * Returns the number of time points\n   * @returns number of time points\n   */\n  public get numTimePoints(): number {\n    return this._numTimePoints;\n  }\n\n  /**\n   * Return the active scalar data (buffer)\n   * @returns volume scalar data\n   */\n  public getScalarData(): Types.VolumeScalarData {\n    return (<Types.VolumeScalarData[]>this.scalarData)[this._timePointIndex];\n  }\n\n  /**\n   * It returns the imageLoad requests for the streaming image volume instance.\n   * It involves getting all the imageIds of the volume and creating a success callback\n   * which would update the texture (when the image has loaded) and the failure callback.\n   * Note that this method does not executes the requests but only returns the requests.\n   * It can be used for sorting requests outside of the volume loader itself\n   * e.g. loading a single slice of CT, followed by a single slice of PET (interleaved), before\n   * moving to the next slice.\n   *\n   * @returns Array of requests including imageId of the request, its imageIdIndex,\n   * options (targetBuffer and scaling parameters), and additionalDetails (volumeId)\n   */\n  public getImageLoadRequests = (priority: number) => {\n    // It returns all requests in reversed order because BaseStreamingImageVolume\n    // reverse all requests again otherwise it would load from last to first time point\n    return this._getTimePointsRequests(priority).reverse();\n  };\n}\n","import { getVolumeInfo, splitImageIdsBy4DTags } from './helpers';\nimport StreamingDynamicImageVolume from './StreamingDynamicImageVolume';\n\ninterface IVolumeLoader {\n  promise: Promise<StreamingDynamicImageVolume>;\n  cancel: () => void;\n  decache: () => void;\n}\n\nfunction get4DVolumeInfo(imageIds: string[]) {\n  const imageIdsGroups = splitImageIdsBy4DTags(imageIds);\n  return imageIdsGroups.map((imageIds) => getVolumeInfo(imageIds));\n}\n\n/**\n * It handles loading of a image by streaming in its imageIds. It will be the\n * volume loader if the schema for the volumeID is `cornerstoneStreamingImageVolume`.\n * This function returns a promise that resolves to the StreamingDynamicImageVolume instance.\n *\n * In order to use the cornerstoneStreamingDynamicImageVolumeLoader you should use\n * createAndCacheVolume helper from the cornerstone-core volumeLoader module.\n *\n * @param volumeId - The ID of the volume\n * @param options - options for loading, imageIds\n * @returns a promise that resolves to a StreamingDynamicImageVolume\n */\nfunction cornerstoneStreamingDynamicImageVolumeLoader(\n  volumeId: string,\n  options: {\n    imageIds: string[];\n  }\n): IVolumeLoader {\n  if (!options || !options.imageIds || !options.imageIds.length) {\n    throw new Error(\n      'ImageIds must be provided to create a 4D streaming image volume'\n    );\n  }\n\n  const { imageIds } = options;\n  const volumesInfo = get4DVolumeInfo(imageIds);\n\n  const {\n    metadata: volumeMetadata,\n    dimensions,\n    spacing,\n    origin,\n    direction,\n    sizeInBytes,\n  } = volumesInfo[0];\n\n  const sortedImageIdsArrays = [];\n  const scalarDataArrays = [];\n\n  volumesInfo.forEach((volumeInfo) => {\n    sortedImageIdsArrays.push(volumeInfo.sortedImageIds);\n    scalarDataArrays.push(volumeInfo.scalarData);\n  });\n\n  let streamingImageVolume = new StreamingDynamicImageVolume(\n    // ImageVolume properties\n    {\n      volumeId,\n      metadata: volumeMetadata,\n      dimensions,\n      spacing,\n      origin,\n      direction,\n      scalarData: scalarDataArrays,\n      sizeInBytes,\n    },\n    // Streaming properties\n    {\n      imageIds: sortedImageIdsArrays.flat(),\n      loadStatus: {\n        // todo: loading and loaded should be on ImageVolume\n        loaded: false,\n        loading: false,\n        cancelled: false,\n        cachedFrames: [],\n        callbacks: [],\n      },\n    }\n  );\n\n  return {\n    promise: Promise.resolve(streamingImageVolume),\n    decache: () => {\n      streamingImageVolume.destroy();\n      streamingImageVolume = null;\n    },\n    cancel: () => {\n      streamingImageVolume.cancelLoading();\n    },\n  };\n}\n\nexport default cornerstoneStreamingDynamicImageVolumeLoader;\n","import cornerstoneStreamingImageVolumeLoader from './cornerstoneStreamingImageVolumeLoader';\nimport cornerstoneStreamingDynamicImageVolumeLoader from './cornerstoneStreamingDynamicImageVolumeLoader';\nimport StreamingImageVolume from './StreamingImageVolume';\nimport StreamingDynamicImageVolume from './StreamingDynamicImageVolume';\nimport getDynamicVolumeInfo from './helpers/getDynamicVolumeInfo';\n\nconst helpers = {\n  getDynamicVolumeInfo,\n};\n\nexport {\n  cornerstoneStreamingImageVolumeLoader,\n  cornerstoneStreamingDynamicImageVolumeLoader,\n  StreamingImageVolume,\n  StreamingDynamicImageVolume,\n  helpers,\n};\n","import splitImageIdsBy4DTags from './splitImageIdsBy4DTags';\n\n/**\n * Get some info about 4D image sets. Time points (groups of imageIds) are\n * returned when the imageIds represents a 4D volume.\n * @param imageIds - Array of Cornerstone Image Object's imageIds\n * @returns 4D series infos\n */\nfunction getDynamicVolumeInfo(imageIds) {\n  const timePoints = splitImageIdsBy4DTags(imageIds);\n  const isDynamicVolume = timePoints.length > 1;\n\n  return { isDynamicVolume, timePoints };\n}\n\nexport default getDynamicVolumeInfo;\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__953__","__WEBPACK_EXTERNAL_MODULE__976__","_typeof","_regeneratorRuntime","__esModule","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","enumerable","configurable","writable","err","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","Function","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","d","a","definition","o","get","prop","r","_arrayLikeToArray","arr","len","arr2","Array","_toConsumableArray","isArray","from","minLen","toString","test","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","makeVolumeMetadata","imageIds","voiLUTFunction","imageId0","_metaData$get","metaData","pixelRepresentation","bitsAllocated","bitsStored","highBit","photometricInterpretation","samplesPerPixel","voiLut","voiLutModule","windowWidth","windowCenter","_metaData$get2","modality","seriesInstanceUID","_metaData$get3","BitsAllocated","BitsStored","SamplesPerPixel","HighBit","PhotometricInterpretation","PixelRepresentation","Modality","ImageOrientationPatient","imageOrientationPatient","PixelSpacing","pixelSpacing","FrameOfReferenceUID","frameOfReferenceUID","Columns","columns","Rows","rows","VOILUTFunction","SeriesInstanceUID","sortImageIdsAndGetSpacing","scanAxisNormal","sortedImageIds","zSpacing","referenceImagePositionPatient","imagePositionPatient","refIppVec","vec3","usingWadoUri","split","getDistance","imageId","positionVector","prefetchedImageIds","Math","floor","metadataForMiddleImage","distanceBetweenFirstAndMiddleImages","abs","distanceImagePairs","map","distance","sort","b","numImages","origin","sliceThickness","strictZSpacingForVolumeViewport","getConfiguration","rendering","console","log","_classCallCheck","instance","Constructor","_toPropertyKey","input","hint","prim","toPrimitive","res","String","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","_assertThisInitialized","ReferenceError","_setPrototypeOf","p","bind","_inherits","subClass","superClass","_possibleConstructorReturn","_getPrototypeOf","_defineProperty","volumeId","renderingEngineAndViewportIds","renderingEnginesArray","getRenderingEngines","renderingEngine","viewports","utilities","id","viewportIds","viewport","getRenderingEngineAndViewportsContainingVolume","_ref","hasBeenDestroyed","renderViewports","scaleArray","array","scalingParameters","arrayLength","rescaleSlope","rescaleIntercept","suvbw","requestType","Enums","getMinMax","csUtils","BaseStreamingImageVolume","_ImageVolume","_super","imageVolumeProperties","streamingProperties","_this","loadStatus","loading","cancelled","clearLoadCallbacks","imageLoadPoolManager","additionalDetails","callback","priority","_assertThisInitialize2","numFrames","loaded","totalNumFrames","success","framesLoaded","framesProcessed","callbacks","_prefetchImageIds","concat","scalarData","cachedFrames","_assertThisInitialize4","vtkOpenGLTexture","imageData","metadata","arrayBuffer","buffer","lengthInBytes","byteLength","Uint8Array","Float32Array","Uint16Array","Int16Array","reRenderFraction","reRenderTarget","autoRenderOnLoad","callLoadStatusCallback","evt","autoLoad","eventDetail","triggerEvent","eventTarget","updateTextureAndTriggerEvents","volume","imageIdIndex","frameIndex","_imageIdIndexToFrameIndex","setUpdatedFrame","modified","imageVolume","errorCallback","requests","getImageIdIndex","modalityLutModule","generalSeriesModule","suvFactor","_addScalingToVolume","isSlopeAndInterceptNumbers","isPreScaled","callLoadImage","options","imageLoader","image","ArrayBuffer","offset","targetBuffer","pixelData","getPixelData","floatView","set","intView","e","handleArrayBufferLoad","cachedImage","cache","cachedVolume","warn","isFromImageCache","cachedImageOrVolume","handleImageComingFromCache","successCallback","skipCreateImage","preScale","enabled","_getNumFrames","_createCornerstoneImageMetaData","scalarDataCount","isDynamicVolume","bytesPerImage","sizeInBytes","numComponents","_getScalarDataLength","numVoxels","pixelsPerImage","dimensions","_this$metadata","voi","color","cornerstoneImageMetaData","rgba","spacing","invert","getScalarDataArrays","immediate","_this2","imageLoadObject","convertToCornerstoneImage","promise","imageScalarData","_scaleIfNecessary","_this2$cornerstoneIma","TypedArray","byteOffset","bytePerPixel","BYTES_PER_ELEMENT","catch","_priority","_this3","getImageLoadRequests","request","scalingParametersToUse","_image$preScale","imageIsAlreadyScaled","scaled","noScalingParametersToUse","rescaleSlopeToUse","rescaleInterceptToUse","suvbwToUse","_image$preScale$scali","rescaleSlopeUsed","rescaleInterceptUsed","suvbwUsed","newSuvbw","newRescaleSlope","newRescaleIntercept","_objectSpread","scaling","suvlbm","suvbsa","petScaling","suvbwToSuvlbm","suvbwToSuvbsa","PT","_this$cornerstoneImag","_getScalarDataByImageIdIndex","volumeBuffer","volumeBufferView","volumeImageId","minMax","intercept","numComps","minPixelValue","min","maxPixelValue","max","slope","getCanvas","height","width","columnPixelSpacing","rowPixelSpacing","getCornerstoneImageLoadObject","getCornerstoneImage","_this4","bytesRemaining","_removeFromCache","_convertToImages","ImageVolume","StreamingImageVolume","_BaseStreamingImageVo","getImageIdsRequests","createUint8SharedArray","createFloat32SharedArray","createUint16SharedArray","createInt16SharedArray","_getConfiguration$ren","useNorm16Texture","preferSizeOverAccuracy","use16BitDataType","_getStreamingImageVolume","_callee2","indexesToPrefetch","volumeMetadata","hasNegativeRescale","rowCosineVec","colCosineVec","_sortImageIdsAndGetSp","direction","signed","useSharedArrayBuffer","handleCache","streamingImageVolume","_context2","all","index","_callee","_context","getShouldUseSharedArrayBuffer","t0","streamingImageVolumePromise","getStreamingImageVolume","decache","destroy","cancel","cancelLoading","splitFramesByFrameReferenceTime","framesMetadata","petImageModule","_ref$frameReferenceTi","frameReferenceTime","framesGroups","reduce","rv","x","Number","parseFloat","item","fncList","_loop","framesPerGroup","every","g","v","_ret","StreamingDynamicImageVolume","_ensureValidData","timePoint","timePoints","_getTimePointsToLoad","timePointsRequests","timePointRequests","_getTimePointRequests","_getTimePointsRequests","_numTimePoints","_timePoints","_getTimePointsData","numTimePoints","start","end","initialTimePointIndex","_timePointIndex","timePointsToLoad","leftIndex","rightIndex","newTimePointIndex","getPointData","setActiveScalars","invalidateVolume","scalarDataArrays","volumesInfo","splitImageIdsBy4DTags","getVolumeInfo","_volumesInfo$","sortedImageIdsArrays","volumeInfo","flat","helpers","getDynamicVolumeInfo"],"sourceRoot":""}