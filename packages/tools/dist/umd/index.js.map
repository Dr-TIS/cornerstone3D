{"version":3,"file":"index.js","mappings":"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AChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,GAAI,IAAK,GAAI,KACd,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,GAAI,KACf,CAAC,GAAI,IAAK,IAAK,KACf,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,IAAK,GAAI,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","sources":["webpack://cornerstoneTools3D/webpack/universalModuleDefinition","webpack://cornerstoneTools3D/../../node_modules/lodash.clonedeep/index.js","webpack://cornerstoneTools3D/../../node_modules/lodash.get/index.js","webpack://cornerstoneTools3D/external umd \"@kitware/vtk.js/Common/Core/CellArray\"","webpack://cornerstoneTools3D/external umd \"@kitware/vtk.js/Common/Core/DataArray\"","webpack://cornerstoneTools3D/external umd \"@kitware/vtk.js/Common/Core/Math\"","webpack://cornerstoneTools3D/external umd \"@kitware/vtk.js/Common/Core/MatrixBuilder\"","webpack://cornerstoneTools3D/external umd \"@kitware/vtk.js/Common/Core/Points\"","webpack://cornerstoneTools3D/external umd \"@kitware/vtk.js/Common/DataModel/PiecewiseFunction\"","webpack://cornerstoneTools3D/external umd \"@kitware/vtk.js/Common/DataModel/PolyData\"","webpack://cornerstoneTools3D/external umd \"@kitware/vtk.js/Filters/General/AppendPolyData\"","webpack://cornerstoneTools3D/external umd \"@kitware/vtk.js/Rendering/Core/Actor\"","webpack://cornerstoneTools3D/external umd \"@kitware/vtk.js/Rendering/Core/ColorTransferFunction\"","webpack://cornerstoneTools3D/external umd \"@kitware/vtk.js/Rendering/Core/Mapper\"","webpack://cornerstoneTools3D/external umd {\"root\":\"cornerstone3D\",\"commonjs\":\"@cornerstonejs/core\",\"commonjs2\":\"@cornerstonejs/core\",\"amd\":\"@cornerstonejs/core\"}","webpack://cornerstoneTools3D/external umd {\"root\":\"window\",\"commonjs\":\"gl-matrix\",\"commonjs2\":\"gl-matrix\",\"amd\":\"gl-matrix\"}","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/typeof.js","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/regenerator/index.js","webpack://cornerstoneTools3D/webpack/bootstrap","webpack://cornerstoneTools3D/webpack/runtime/compat get default export","webpack://cornerstoneTools3D/webpack/runtime/define property getters","webpack://cornerstoneTools3D/webpack/runtime/global","webpack://cornerstoneTools3D/webpack/runtime/hasOwnProperty shorthand","webpack://cornerstoneTools3D/webpack/runtime/make namespace object","webpack://cornerstoneTools3D/webpack/runtime/node module decorator","webpack://cornerstoneTools3D/./src/enums/Events.ts","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://cornerstoneTools3D/./src/stateManagement/annotation/annotationLocking.ts","webpack://cornerstoneTools3D/./src/stateManagement/annotation/annotationSelection.ts","webpack://cornerstoneTools3D/./src/stateManagement/annotation/annotationVisibility.ts","webpack://cornerstoneTools3D/./src/stateManagement/annotation/FrameOfReferenceSpecificAnnotationManager.ts","webpack://cornerstoneTools3D/./src/store/svgNodeCache.ts","webpack://cornerstoneTools3D/./src/store/state.ts","webpack://cornerstoneTools3D/./src/enums/ToolModes.ts","webpack://cornerstoneTools3D/./src/store/ToolGroupManager/getToolGroupsWithToolName.ts","webpack://cornerstoneTools3D/./src/stateManagement/annotation/annotationState.ts","webpack://cornerstoneTools3D/./src/stateManagement/annotation/helpers/state.ts","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://cornerstoneTools3D/./src/constants/COLOR_LUT.ts","webpack://cornerstoneTools3D/./src/enums/SegmentationRepresentations.ts","webpack://cornerstoneTools3D/./src/tools/displayTools/Contour/contourConfig.ts","webpack://cornerstoneTools3D/./src/tools/displayTools/Labelmap/labelmapConfig.ts","webpack://cornerstoneTools3D/./src/stateManagement/segmentation/SegmentationStateManager.ts","webpack://cornerstoneTools3D/./src/stateManagement/segmentation/triggerSegmentationEvents.ts","webpack://cornerstoneTools3D/./src/stateManagement/segmentation/helpers/normalizeSegmentationInput.ts","webpack://cornerstoneTools3D/./src/stateManagement/segmentation/segmentationState.ts","webpack://cornerstoneTools3D/./src/eventListeners/mouse/getMouseEventPoints.ts","webpack://cornerstoneTools3D/./src/eventListeners/mouse/mouseDoubleClickListener.ts","webpack://cornerstoneTools3D/./src/eventListeners/mouse/mouseMoveListener.ts","webpack://cornerstoneTools3D/./src/eventListeners/mouse/mouseDownListener.ts","webpack://cornerstoneTools3D/./src/eventListeners/mouse/index.ts","webpack://cornerstoneTools3D/./src/eventListeners/wheel/wheelListener.ts","webpack://cornerstoneTools3D/./src/eventListeners/wheel/normalizeWheel.ts","webpack://cornerstoneTools3D/./src/eventListeners/wheel/index.ts","webpack://cornerstoneTools3D/./src/eventListeners/touch/preventGhostClick.js","webpack://cornerstoneTools3D/./src/enums/Touch.ts","webpack://cornerstoneTools3D/./src/eventListeners/touch/getTouchEventPoints.ts","webpack://cornerstoneTools3D/./src/utilities/touch/index.ts","webpack://cornerstoneTools3D/./src/eventListeners/touch/touchStartListener.ts","webpack://cornerstoneTools3D/./src/eventListeners/touch/index.ts","webpack://cornerstoneTools3D/./src/eventListeners/keyboard/keyDownListener.ts","webpack://cornerstoneTools3D/./src/eventListeners/keyboard/index.ts","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://cornerstoneTools3D/./src/drawingSvg/getSvgDrawingHelper.ts","webpack://cornerstoneTools3D/./src/drawingSvg/draw.ts","webpack://cornerstoneTools3D/./src/store/ToolGroupManager/getToolGroupForViewport.ts","webpack://cornerstoneTools3D/./src/utilities/getToolsWithModesForElement.ts","webpack://cornerstoneTools3D/./src/utilities/triggerAnnotationRender.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/imageRenderedEventDispatcher.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/shared/getToolsWithModesForMouseEvent.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/cameraModifiedEventDispatcher.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/imageSpacingCalibratedEventDispatcher.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/shared/customCallbackHandler.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/mouseEventHandlers/mouseClick.ts","webpack://cornerstoneTools3D/./src/store/filterToolsWithMoveableHandles.ts","webpack://cornerstoneTools3D/./src/store/filterToolsWithAnnotationsForElement.ts","webpack://cornerstoneTools3D/./src/store/filterMoveableAnnotationTools.ts","webpack://cornerstoneTools3D/./src/enums/ToolBindings.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/shared/getMouseModifier.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/shared/getActiveToolForMouseEvent.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/mouseEventHandlers/mouseDown.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/mouseEventHandlers/mouseDownActivate.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/mouseEventHandlers/mouseDoubleClick.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/mouseEventHandlers/mouseDrag.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/mouseEventHandlers/mouseMove.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/mouseEventHandlers/mouseUp.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/mouseEventHandlers/mouseWheel.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/mouseToolEventDispatcher.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/shared/getActiveToolForKeyboardEvent.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/keyboardEventHandlers/keyDown.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/keyboardEventHandlers/keyUp.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/keyboardToolEventDispatcher.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/shared/getActiveToolForTouchEvent.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/shared/getToolsWithModesForTouchEvent.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/touchEventHandlers/touchStart.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/touchEventHandlers/touchStartActivate.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/touchEventHandlers/touchDrag.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/touchEventHandlers/touchEnd.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/touchEventHandlers/touchTap.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/touchEventHandlers/touchPress.ts","webpack://cornerstoneTools3D/./src/eventDispatchers/touchToolEventDispatcher.ts","webpack://cornerstoneTools3D/./src/store/addEnabledElement.ts","webpack://cornerstoneTools3D/./src/store/SynchronizerManager/getSynchronizersForViewport.ts","webpack://cornerstoneTools3D/./src/store/removeEnabledElement.ts","webpack://cornerstoneTools3D/./src/utilities/triggerAnnotationRenderForViewportIds.ts","webpack://cornerstoneTools3D/./src/eventListeners/annotations/annotationModifiedListener.ts","webpack://cornerstoneTools3D/./src/eventListeners/annotations/annotationSelectionListener.ts","webpack://cornerstoneTools3D/./src/eventListeners/segmentation/segmentationModifiedEventListener.ts","webpack://cornerstoneTools3D/./src/store/ToolGroupManager/getToolGroup.ts","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://cornerstoneTools3D/./src/stateManagement/segmentation/config/segmentationConfig.ts","webpack://cornerstoneTools3D/./src/stateManagement/segmentation/config/segmentationVisibility.ts","webpack://cornerstoneTools3D/./src/tools/base/BaseTool.ts","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://cornerstoneTools3D/./src/tools/displayTools/Contour/utils.ts","webpack://cornerstoneTools3D/./src/tools/displayTools/Contour/contourConfigCache.ts","webpack://cornerstoneTools3D/./src/tools/displayTools/Contour/addContourSetsToElement.ts","webpack://cornerstoneTools3D/./src/tools/displayTools/Contour/updateContourSets.ts","webpack://cornerstoneTools3D/./src/tools/displayTools/Contour/addOrUpdateContourSets.ts","webpack://cornerstoneTools3D/./src/tools/displayTools/Contour/removeContourFromElement.ts","webpack://cornerstoneTools3D/./src/tools/displayTools/Contour/contourDisplay.ts","webpack://cornerstoneTools3D/./src/tools/displayTools/Labelmap/addLabelmapToElement.ts","webpack://cornerstoneTools3D/./src/tools/displayTools/Labelmap/removeLabelmapFromElement.ts","webpack://cornerstoneTools3D/./src/tools/displayTools/Labelmap/labelmapDisplay.ts","webpack://cornerstoneTools3D/./src/tools/displayTools/SegmentationDisplayTool.ts","webpack://cornerstoneTools3D/./src/utilities/segmentation/triggerSegmentationRender.ts","webpack://cornerstoneTools3D/./src/eventListeners/segmentation/segmentationDataModifiedEventListener.ts","webpack://cornerstoneTools3D/./src/eventListeners/segmentation/segmentationRepresentationModifiedEventListener.ts","webpack://cornerstoneTools3D/./src/eventListeners/segmentation/segmentationRepresentationRemovedEventListener.ts","webpack://cornerstoneTools3D/./src/stateManagement/segmentation/removeSegmentationsFromToolGroup.ts","webpack://cornerstoneTools3D/./src/store/ToolGroupManager/destroyToolGroup.ts","webpack://cornerstoneTools3D/./src/store/ToolGroupManager/destroy.ts","webpack://cornerstoneTools3D/./src/init.ts","webpack://cornerstoneTools3D/./src/store/addTool.ts","webpack://cornerstoneTools3D/./src/store/cancelActiveManipulations.ts","webpack://cornerstoneTools3D/./src/store/SynchronizerManager/Synchronizer.ts","webpack://cornerstoneTools3D/./src/store/SynchronizerManager/createSynchronizer.ts","webpack://cornerstoneTools3D/./src/store/SynchronizerManager/destroy.ts","webpack://cornerstoneTools3D/./src/store/SynchronizerManager/getSynchronizer.ts","webpack://cornerstoneTools3D/./src/store/SynchronizerManager/getAllSynchronizers.ts","webpack://cornerstoneTools3D/./src/store/SynchronizerManager/destroySynchronizer.ts","webpack://cornerstoneTools3D/./src/cursors/MouseCursor.ts","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/get.js","webpack://cornerstoneTools3D/../../node_modules/@babel/runtime/helpers/esm/superPropBase.js","webpack://cornerstoneTools3D/./src/enums/AnnotationStyleStates.ts","webpack://cornerstoneTools3D/./src/cursors/ImageMouseCursor.ts","webpack://cornerstoneTools3D/./src/cursors/SVGCursorDescriptor.ts","webpack://cornerstoneTools3D/./src/stateManagement/annotation/config/ToolStyle.ts","webpack://cornerstoneTools3D/./src/stateManagement/annotation/config/helpers.ts","webpack://cornerstoneTools3D/./src/cursors/SVGMouseCursor.ts","webpack://cornerstoneTools3D/./src/cursors/elementCursor.ts","webpack://cornerstoneTools3D/./src/store/ToolGroupManager/ToolGroup.ts","webpack://cornerstoneTools3D/./src/store/ToolGroupManager/createToolGroup.ts","webpack://cornerstoneTools3D/./src/store/ToolGroupManager/getAllToolGroups.ts","webpack://cornerstoneTools3D/./src/synchronizers/callbacks/cameraSyncCallback.ts","webpack://cornerstoneTools3D/./src/synchronizers/synchronizers/createCameraPositionSynchronizer.ts","webpack://cornerstoneTools3D/./src/synchronizers/callbacks/voiSyncCallback.ts","webpack://cornerstoneTools3D/./src/synchronizers/synchronizers/createVOISynchronizer.ts","webpack://cornerstoneTools3D/./src/synchronizers/callbacks/zoomPanSyncCallback.ts","webpack://cornerstoneTools3D/./src/synchronizers/synchronizers/createZoomPanSynchronizer.ts","webpack://cornerstoneTools3D/./src/utilities/clip.js","webpack://cornerstoneTools3D/./src/utilities/scroll.ts","webpack://cornerstoneTools3D/./src/utilities/viewport/jumpToSlice.ts","webpack://cornerstoneTools3D/./src/synchronizers/callbacks/stackImageSyncCallback.ts","webpack://cornerstoneTools3D/./src/synchronizers/callbacks/areViewportsCoplanar .ts","webpack://cornerstoneTools3D/./src/synchronizers/synchronizers/createStackImageSynchronizer.ts","webpack://cornerstoneTools3D/./src/drawingSvg/_getHash.ts","webpack://cornerstoneTools3D/./src/drawingSvg/_setAttributesIfNecessary.ts","webpack://cornerstoneTools3D/./src/drawingSvg/_setNewAttributesIfValid.ts","webpack://cornerstoneTools3D/./src/drawingSvg/drawCircle.ts","webpack://cornerstoneTools3D/./src/drawingSvg/drawEllipse.ts","webpack://cornerstoneTools3D/./src/drawingSvg/drawHandles.ts","webpack://cornerstoneTools3D/./src/drawingSvg/drawLine.ts","webpack://cornerstoneTools3D/./src/drawingSvg/drawPolyline.ts","webpack://cornerstoneTools3D/./src/drawingSvg/drawTextBox.ts","webpack://cornerstoneTools3D/./src/utilities/math/vec2/findClosestPoint.ts","webpack://cornerstoneTools3D/./src/drawingSvg/drawLink.ts","webpack://cornerstoneTools3D/./src/drawingSvg/drawLinkedTextBox.ts","webpack://cornerstoneTools3D/./src/drawingSvg/drawRect.ts","webpack://cornerstoneTools3D/./src/drawingSvg/drawArrow.ts","webpack://cornerstoneTools3D/./src/utilities/getAnnotationNearPoint.ts","webpack://cornerstoneTools3D/./src/utilities/isObject.js","webpack://cornerstoneTools3D/./src/utilities/debounce.js","webpack://cornerstoneTools3D/./src/utilities/throttle.js","webpack://cornerstoneTools3D/./src/utilities/calibrateImageSpacing.ts","webpack://cornerstoneTools3D/./src/utilities/pointInShapeCallback.ts","webpack://cornerstoneTools3D/./src/utilities/boundingBox/getBoundingBoxAroundShape.ts","webpack://cornerstoneTools3D/./src/utilities/pointInSurroundingSphereCallback.ts","webpack://cornerstoneTools3D/./src/utilities/math/sphere/pointInSphere.ts","webpack://cornerstoneTools3D/./src/utilities/roundNumber.ts","webpack://cornerstoneTools3D/./src/tools/segmentation/strategies/fillSphere.ts","webpack://cornerstoneTools3D/./src/tools/segmentation/strategies/eraseSphere.ts","webpack://cornerstoneTools3D/./src/utilities/math/ellipse/getCanvasEllipseCorners.ts","webpack://cornerstoneTools3D/./src/utilities/math/ellipse/pointInEllipse.ts","webpack://cornerstoneTools3D/./src/tools/segmentation/strategies/fillCircle.ts","webpack://cornerstoneTools3D/./src/tools/segmentation/strategies/eraseCircle.ts","webpack://cornerstoneTools3D/./src/stateManagement/segmentation/activeSegmentation.ts","webpack://cornerstoneTools3D/./src/stateManagement/segmentation/segmentLocking.ts","webpack://cornerstoneTools3D/./src/stateManagement/segmentation/segmentIndex.ts","webpack://cornerstoneTools3D/./src/stateManagement/segmentation/config/segmentationColor.ts","webpack://cornerstoneTools3D/./src/tools/segmentation/BrushTool.ts","webpack://cornerstoneTools3D/./src/utilities/segmentation/utilities.ts","webpack://cornerstoneTools3D/./src/utilities/segmentation/thresholdVolumeByRange.ts","webpack://cornerstoneTools3D/./src/utilities/viewportFilters/filterViewportsWithFrameOfReferenceUID.ts","webpack://cornerstoneTools3D/./src/utilities/viewportFilters/filterViewportsWithToolEnabled.ts","webpack://cornerstoneTools3D/./src/utilities/viewportFilters/filterViewportsWithParallelNormals.ts","webpack://cornerstoneTools3D/./src/utilities/viewportFilters/getViewportIdsWithToolToRender.ts","webpack://cornerstoneTools3D/./src/utilities/planar/filterAnnotationsWithinSlice.ts","webpack://cornerstoneTools3D/./src/utilities/planar/filterAnnotationsForDisplay.ts","webpack://cornerstoneTools3D/./src/stateManagement/annotation/config/getState.ts","webpack://cornerstoneTools3D/./src/tools/base/AnnotationDisplayTool.ts","webpack://cornerstoneTools3D/./src/tools/base/AnnotationTool.ts","webpack://cornerstoneTools3D/./src/utilities/getCalibratedUnits.ts","webpack://cornerstoneTools3D/./src/utilities/math/line/distanceToPointSquared.ts","webpack://cornerstoneTools3D/./src/utilities/math/line/distanceToPoint.ts","webpack://cornerstoneTools3D/./src/utilities/math/rectangle/distanceToPoint.ts","webpack://cornerstoneTools3D/./src/utilities/drawing/getTextBoxCoordsCanvas.ts","webpack://cornerstoneTools3D/./src/utilities/planar/getWorldWidthAndHeightFromCorners.ts","webpack://cornerstoneTools3D/./src/utilities/getModalityUnit.ts","webpack://cornerstoneTools3D/./src/utilities/viewport/isViewportPreScaled.ts","webpack://cornerstoneTools3D/./src/tools/annotation/RectangleROITool.ts","webpack://cornerstoneTools3D/./src/tools/segmentation/RectangleROIThresholdTool.ts","webpack://cornerstoneTools3D/./src/tools/segmentation/RectangleROIStartEndThresholdTool.ts","webpack://cornerstoneTools3D/./src/utilities/boundingBox/extend2DBoundingBoxInViewAxis.ts","webpack://cornerstoneTools3D/./src/utilities/rectangleROITool/getBoundsIJKFromRectangleAnnotations.ts","webpack://cornerstoneTools3D/./src/utilities/segmentation/rectangleROIThresholdVolumeByRange.ts","webpack://cornerstoneTools3D/./src/utilities/segmentation/createMergedLabelmapForIndex.ts","webpack://cornerstoneTools3D/./src/utilities/segmentation/isValidRepresentationConfig.ts","webpack://cornerstoneTools3D/./src/utilities/segmentation/getDefaultRepresentationConfig.ts","webpack://cornerstoneTools3D/./src/utilities/segmentation/createLabelmapVolumeForViewport.ts","webpack://cornerstoneTools3D/./src/utilities/segmentation/floodFill.ts","webpack://cornerstoneTools3D/./src/utilities/segmentation/brushSizeForToolGroup.ts","webpack://cornerstoneTools3D/./src/utilities/segmentation/brushThresholdForToolGroup.ts","webpack://cornerstoneTools3D/./src/utilities/segmentation/thresholdSegmentationByRange.ts","webpack://cornerstoneTools3D/./src/utilities/math/vec2/liangBarksyClip.ts","webpack://cornerstoneTools3D/./src/utilities/math/line/intersectLine.ts","webpack://cornerstoneTools3D/./src/utilities/math/polyline/getIntersectionWithPolyline.ts","webpack://cornerstoneTools3D/./src/utilities/math/polyline/getSubPixelSpacingAndXYDirections.ts","webpack://cornerstoneTools3D/./src/utilities/math/polyline/pointsAreWithinCloseContourProximity.ts","webpack://cornerstoneTools3D/./src/utilities/math/polyline/addCanvasPointsToArray.ts","webpack://cornerstoneTools3D/./src/utilities/math/polyline/pointCanProjectOnLine.ts","webpack://cornerstoneTools3D/./src/utilities/math/polyline/calculateAreaOfPoints.ts","webpack://cornerstoneTools3D/./src/utilities/math/point/distanceToPoint.ts","webpack://cornerstoneTools3D/./src/utilities/planar/getPointInLineOfSightWithCriteria.ts","webpack://cornerstoneTools3D/./src/utilities/planar/index.ts","webpack://cornerstoneTools3D/./src/utilities/orientation/getOrientationStringLPS.ts","webpack://cornerstoneTools3D/./src/utilities/orientation/invertOrientationStringLPS.ts","webpack://cornerstoneTools3D/./src/utilities/cine/events.ts","webpack://cornerstoneTools3D/./src/utilities/cine/state.ts","webpack://cornerstoneTools3D/./src/utilities/cine/playClip.ts","webpack://cornerstoneTools3D/../../node_modules/d3-interpolate/src/basis.js","webpack://cornerstoneTools3D/../../node_modules/d3-interpolate/src/quantize.js","webpack://cornerstoneTools3D/../../node_modules/d3-array/src/transpose.js","webpack://cornerstoneTools3D/../../node_modules/d3-array/src/zip.js","webpack://cornerstoneTools3D/../../node_modules/d3-array/src/min.js","webpack://cornerstoneTools3D/./src/utilities/planarFreehandROITool/interpolation/interpolateSegmentPoints.ts","webpack://cornerstoneTools3D/./src/utilities/planarFreehandROITool/interpolation/algorithms/bspline.ts","webpack://cornerstoneTools3D/./src/utilities/planarFreehandROITool/interpolatePoints.ts","webpack://cornerstoneTools3D/./src/tools/annotation/planarFreehandROITool/findOpenUShapedContourVectorToPeak.ts","webpack://cornerstoneTools3D/./src/tools/annotation/planarFreehandROITool/drawLoop.ts","webpack://cornerstoneTools3D/./src/tools/annotation/planarFreehandROITool/editLoopCommon.ts","webpack://cornerstoneTools3D/./src/tools/annotation/planarFreehandROITool/closedContourEditLoop.ts","webpack://cornerstoneTools3D/./src/tools/annotation/planarFreehandROITool/openContourEditLoop.ts","webpack://cornerstoneTools3D/./src/tools/annotation/planarFreehandROITool/openContourEndEditLoop.ts","webpack://cornerstoneTools3D/./src/tools/annotation/planarFreehandROITool/renderMethods.ts","webpack://cornerstoneTools3D/./src/tools/annotation/PlanarFreehandROITool.ts","webpack://cornerstoneTools3D/./src/utilities/planarFreehandROITool/interpolateAnnotation.ts","webpack://cornerstoneTools3D/./src/utilities/planarFreehandROITool/index.ts","webpack://cornerstoneTools3D/./src/utilities/stackPrefetch/state.ts","webpack://cornerstoneTools3D/./src/utilities/stackPrefetch/stackPrefetch.ts","webpack://cornerstoneTools3D/./src/utilities/viewport/jumpToWorld.ts","webpack://cornerstoneTools3D/./src/utilities/dynamicVolume/getDataInTime.ts","webpack://cornerstoneTools3D/./src/utilities/dynamicVolume/generateImageFromTimeData.ts","webpack://cornerstoneTools3D/./src/cursors/setCursorForElement.ts","webpack://cornerstoneTools3D/./src/cursors/index.ts","webpack://cornerstoneTools3D/./src/stateManagement/annotation/config/getFont.ts","webpack://cornerstoneTools3D/./src/stateManagement/segmentation/helpers/validateSegmentationInput.ts","webpack://cornerstoneTools3D/./src/tools/displayTools/Labelmap/validateRepresentationData.ts","webpack://cornerstoneTools3D/./src/stateManagement/segmentation/addSegmentations.ts","webpack://cornerstoneTools3D/./src/stateManagement/segmentation/addSegmentationRepresentations.ts","webpack://cornerstoneTools3D/./src/tools/PanTool.ts","webpack://cornerstoneTools3D/./src/tools/TrackballRotateTool.ts","webpack://cornerstoneTools3D/./src/tools/annotation/ProbeTool.ts","webpack://cornerstoneTools3D/./src/tools/annotation/DragProbeTool.ts","webpack://cornerstoneTools3D/./src/tools/WindowLevelTool.ts","webpack://cornerstoneTools3D/./src/tools/ZoomTool.ts","webpack://cornerstoneTools3D/./src/tools/StackScrollTool.ts","webpack://cornerstoneTools3D/./src/utilities/math/angle/angleBetweenLines.ts","webpack://cornerstoneTools3D/./src/tools/PlanarRotateTool.ts","webpack://cornerstoneTools3D/./src/tools/StackScrollToolMouseWheelTool.ts","webpack://cornerstoneTools3D/./src/tools/VolumeRotateMouseWheelTool.ts","webpack://cornerstoneTools3D/./src/tools/MIPJumpToClickTool.ts","webpack://cornerstoneTools3D/./src/tools/annotation/LengthTool.ts","webpack://cornerstoneTools3D/./src/tools/CrosshairsTool.ts","webpack://cornerstoneTools3D/./src/tools/ReferenceLinesTool.ts","webpack://cornerstoneTools3D/./src/utilities/planar/getWorldWidthAndHeightFromTwoPoints.ts","webpack://cornerstoneTools3D/./src/tools/annotation/EllipticalROITool.ts","webpack://cornerstoneTools3D/./src/utilities/math/circle/getCanvasCircleRadius.ts","webpack://cornerstoneTools3D/./src/utilities/math/circle/getCanvasCircleCorners.ts","webpack://cornerstoneTools3D/./src/tools/annotation/CircleROITool.ts","webpack://cornerstoneTools3D/./src/tools/annotation/BidirectionalTool.ts","webpack://cornerstoneTools3D/./src/tools/annotation/ArrowAnnotateTool.ts","webpack://cornerstoneTools3D/./src/tools/annotation/AngleTool.ts","webpack://cornerstoneTools3D/./src/utilities/math/midPoint.ts","webpack://cornerstoneTools3D/./src/tools/annotation/CobbAngleTool.ts","webpack://cornerstoneTools3D/./src/tools/MagnifyTool.ts","webpack://cornerstoneTools3D/./src/tools/ReferenceCursors.ts","webpack://cornerstoneTools3D/./src/tools/ScaleOverlayTool.ts","webpack://cornerstoneTools3D/./src/tools/segmentation/strategies/fillRectangle.ts","webpack://cornerstoneTools3D/./src/tools/segmentation/strategies/eraseRectangle.ts","webpack://cornerstoneTools3D/./src/tools/segmentation/RectangleScissorsTool.ts","webpack://cornerstoneTools3D/./src/tools/segmentation/CircleScissorsTool.ts","webpack://cornerstoneTools3D/./src/tools/segmentation/SphereScissorsTool.ts","webpack://cornerstoneTools3D/./src/tools/segmentation/PaintFillTool.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@cornerstonejs/core\"), require(\"@kitware/vtk.js/Common/DataModel/PiecewiseFunction\"), require(\"@kitware/vtk.js/Rendering/Core/ColorTransferFunction\"), require(\"@kitware/vtk.js/Common/Core/CellArray\"), require(\"@kitware/vtk.js/Common/Core/Points\"), require(\"@kitware/vtk.js/Common/DataModel/PolyData\"), require(\"@kitware/vtk.js/Common/Core/DataArray\"), require(\"@kitware/vtk.js/Filters/General/AppendPolyData\"), require(\"@kitware/vtk.js/Rendering/Core/Actor\"), require(\"@kitware/vtk.js/Rendering/Core/Mapper\"), require(\"gl-matrix\"), require(\"@kitware/vtk.js/Common/Core/Math\"), require(\"@kitware/vtk.js/Common/Core/MatrixBuilder\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@cornerstonejs/core\", \"@kitware/vtk.js/Common/DataModel/PiecewiseFunction\", \"@kitware/vtk.js/Rendering/Core/ColorTransferFunction\", \"@kitware/vtk.js/Common/Core/CellArray\", \"@kitware/vtk.js/Common/Core/Points\", \"@kitware/vtk.js/Common/DataModel/PolyData\", \"@kitware/vtk.js/Common/Core/DataArray\", \"@kitware/vtk.js/Filters/General/AppendPolyData\", \"@kitware/vtk.js/Rendering/Core/Actor\", \"@kitware/vtk.js/Rendering/Core/Mapper\", \"gl-matrix\", \"@kitware/vtk.js/Common/Core/Math\", \"@kitware/vtk.js/Common/Core/MatrixBuilder\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstoneTools3D\"] = factory(require(\"@cornerstonejs/core\"), require(\"@kitware/vtk.js/Common/DataModel/PiecewiseFunction\"), require(\"@kitware/vtk.js/Rendering/Core/ColorTransferFunction\"), require(\"@kitware/vtk.js/Common/Core/CellArray\"), require(\"@kitware/vtk.js/Common/Core/Points\"), require(\"@kitware/vtk.js/Common/DataModel/PolyData\"), require(\"@kitware/vtk.js/Common/Core/DataArray\"), require(\"@kitware/vtk.js/Filters/General/AppendPolyData\"), require(\"@kitware/vtk.js/Rendering/Core/Actor\"), require(\"@kitware/vtk.js/Rendering/Core/Mapper\"), require(\"gl-matrix\"), require(\"@kitware/vtk.js/Common/Core/Math\"), require(\"@kitware/vtk.js/Common/Core/MatrixBuilder\"));\n\telse\n\t\troot[\"cornerstoneTools3D\"] = factory(root[\"cornerstone3D\"], root[\"@kitware/vtk.js/Common/DataModel/PiecewiseFunction\"], root[\"@kitware/vtk.js/Rendering/Core/ColorTransferFunction\"], root[\"@kitware/vtk.js/Common/Core/CellArray\"], root[\"@kitware/vtk.js/Common/Core/Points\"], root[\"@kitware/vtk.js/Common/DataModel/PolyData\"], root[\"@kitware/vtk.js/Common/Core/DataArray\"], root[\"@kitware/vtk.js/Filters/General/AppendPolyData\"], root[\"@kitware/vtk.js/Rendering/Core/Actor\"], root[\"@kitware/vtk.js/Rendering/Core/Mapper\"], root[\"window\"], root[\"@kitware/vtk.js/Common/Core/Math\"], root[\"@kitware/vtk.js/Common/Core/MatrixBuilder\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__953__, __WEBPACK_EXTERNAL_MODULE__441__, __WEBPACK_EXTERNAL_MODULE__795__, __WEBPACK_EXTERNAL_MODULE__396__, __WEBPACK_EXTERNAL_MODULE__348__, __WEBPACK_EXTERNAL_MODULE__70__, __WEBPACK_EXTERNAL_MODULE__785__, __WEBPACK_EXTERNAL_MODULE__127__, __WEBPACK_EXTERNAL_MODULE__474__, __WEBPACK_EXTERNAL_MODULE__610__, __WEBPACK_EXTERNAL_MODULE__976__, __WEBPACK_EXTERNAL_MODULE__807__, __WEBPACK_EXTERNAL_MODULE__847__) {\nreturn ","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, true, true);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeep;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__396__;","module.exports = __WEBPACK_EXTERNAL_MODULE__785__;","module.exports = __WEBPACK_EXTERNAL_MODULE__807__;","module.exports = __WEBPACK_EXTERNAL_MODULE__847__;","module.exports = __WEBPACK_EXTERNAL_MODULE__348__;","module.exports = __WEBPACK_EXTERNAL_MODULE__441__;","module.exports = __WEBPACK_EXTERNAL_MODULE__70__;","module.exports = __WEBPACK_EXTERNAL_MODULE__127__;","module.exports = __WEBPACK_EXTERNAL_MODULE__474__;","module.exports = __WEBPACK_EXTERNAL_MODULE__795__;","module.exports = __WEBPACK_EXTERNAL_MODULE__610__;","module.exports = __WEBPACK_EXTERNAL_MODULE__953__;","module.exports = __WEBPACK_EXTERNAL_MODULE__976__;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","/**\n *  The events for cornerstoneTools3D Tools. Native Mouse and Keyboard events are\n *  captured, normalized, and re-triggered with a `CORNERSTONE_TOOLS` prefix. This\n *  allows us to handle events consistently across different browsers.\n *\n */\nenum Events {\n  ///////////////////////////////////////\n  //            Tools\n  ///////////////////////////////////////\n\n  /**\n   * Triggers on the eventTarget when a new tools is activated.\n   *\n   * Make use of {@link EventTypes.ToolActivatedEventType | Tool Activated Event Type  }\n   * for typing your event listeners for this tool activated event, and see what event\n   * detail is included in {@link EventTypes.ToolActivatedEventDetail | Tool Activated Event Detail}.\n   */\n  TOOL_ACTIVATED = 'CORNERSTONE_TOOLS_TOOL_ACTIVATED',\n\n  ///////////////////////////////////////\n  //            Annotations\n  ///////////////////////////////////////\n\n  /**\n   * Triggers on the eventTarget when a new annotation is added to the state.\n   *\n   * Make use of {@link EventTypes.AnnotationAddedEventType | Annotation Added Event Type  }\n   * for typing your event listeners for this annotation added event, and see what event\n   * detail is included in {@link EventTypes.AnnotationAddedEventDetail | Annotation Added Event Detail}.\n   */\n  ANNOTATION_ADDED = 'CORNERSTONE_TOOLS_ANNOTATION_ADDED',\n\n  /**\n   * Triggers on the eventTarget when a new annotation is completed its drawing\n   * Make use of {@link EventTypes.AnnotationCompletedEventType | Annotation Completed Event Type }\n   * for typing your event listeners for this annotation completed event, and see what event\n   * detail is included in {@link EventTypes.AnnotationCompletedEventDetail | Annotation Completed Event Detail}.\n   */\n  ANNOTATION_COMPLETED = 'CORNERSTONE_TOOLS_ANNOTATION_COMPLETED',\n\n  /**\n   * Triggers on the eventTarget when an annotation is modified (e.g. a handle is modified).\n   * Make use of {@link EventTypes.AnnotationModifiedEventType | Annotation Modified Event Type}\n   * for typing your event listeners for this annotation modified event, and see what\n   * event detail is included in {@link EventTypes.AnnotationModifiedEventDetail | Annotation Modified Event Detail}.\n   */\n  ANNOTATION_MODIFIED = 'CORNERSTONE_TOOLS_ANNOTATION_MODIFIED',\n\n  /**\n   * Triggers on the eventTarget when an annotation is removed from the annotations manager.\n   * Make use of {@link EventTypes.AnnotationRemovedEventType | Annotation Removed Event Type}\n   * for typing your event listeners for this annotation removed event, and see what\n   * event detail is included in {@link EventTypes.AnnotationRemovedEventDetail | Annotation Removed Event Detail}.\n   */\n  ANNOTATION_REMOVED = 'CORNERSTONE_TOOLS_ANNOTATION_REMOVED',\n\n  /**\n   * Triggers on the eventTarget when an annotation selection status is changed.\n   * Make use of {@link EventTypes.AnnotationSelectionChangeEventType | Annotation Selection Change Event Type}\n   * for typing your event listeners for this annotation selection change event, and see what\n   * event detail is included in {@link EventTypes.AnnotationSelectionChangeEventDetail | Annotation Selection Change Event Detail}.\n   */\n  ANNOTATION_SELECTION_CHANGE = 'CORNERSTONE_TOOLS_ANNOTATION_SELECTION_CHANGE',\n\n  /**\n   * Triggers on the eventTarget when an annotation locked status is changed.\n   * Make use of {@link EventTypes.AnnotationLockChangeEventType | Annotation Lock Change Event Type}\n   * for typing your event listeners for this annotation lock change event, and see what\n   * event detail is included in {@link EventTypes.AnnotationLockChangeEventDetail | Annotation Lock Change Event Detail}.\n   */\n  ANNOTATION_LOCK_CHANGE = 'CORNERSTONE_TOOLS_ANNOTATION_LOCK_CHANGE',\n\n  /**\n   * Triggers on the eventTarget when an annotation visible status is changed.\n   * Make use of {@link EventTypes.AnnotationVisibilityChangeEventType | Annotation Visible Change Event Type}\n   * for typing your event listeners for this annotation Hide change event, and see what\n   * event detail is included in {@link EventTypes.AnnotationVisibilityChangeEventDetail | Annotation Visible Change Event Detail}.\n   */\n  ANNOTATION_VISIBILITY_CHANGE = 'CORNERSTONE_TOOLS_ANNOTATION_VISIBILITY_CHANGE',\n\n  /**\n   * Triggers on the eventTarget when an annotation is rendered.\n   * Make use of {@link EventTypes.AnnotationRenderedEventType | Annotation Rendered Event Type}\n   * for typing your event listeners for this annotation rendered event, and see what\n   * event detail is included in {@link EventTypes.AnnotationRenderedEventDetail | Annotation Rendered Event Detail}.\n   */\n  ANNOTATION_RENDERED = 'CORNERSTONE_TOOLS_ANNOTATION_RENDERED',\n\n  ///////////////////////////////////////\n  //        Segmentations Events\n  ///////////////////////////////////////\n\n  /**\n   * Triggers on the eventTarget when a Segmentation is updated in the state manager.\n   * Make use of {@link EventTypes.SegmentationModifiedEventType | Segmentation Modified Event Type}\n   * for typing your event listeners for this segmentation modified event, and see what\n   * event detail is included in {@link EventTypes.SegmentationModifiedEventDetail | Segmentation Modified Event Detail}.\n   */\n  SEGMENTATION_MODIFIED = 'CORNERSTONE_TOOLS_SEGMENTATION_MODIFIED',\n\n  /**\n   * Triggers on the eventTarget when a Segmentation is rendered by the Segmentation Rendering Engine.\n   * Make use of {@link EventTypes.SegmentationRenderedEventType | Segmentation Rendered Event Type}\n   * for typing your event listeners for this segmentation rendered event, and see what\n   * event detail is included in {@link EventTypes.SegmentationRenderedEventDetail | Segmentation Rendered Event Detail}.\n   */\n  SEGMENTATION_RENDERED = 'CORNERSTONE_TOOLS_SEGMENTATION_RENDERED',\n\n  /**\n   * Triggers on the eventTarget when a Segmentation representation of a toolGroup is modified in the state manager.\n   * Make use of {@link EventTypes.SegmentationRepresentationModifiedEventType | Segmentation Representation Modified Event Type}\n   * for typing your event listeners for this segmentation representation modified event, and see what\n   * event detail is included in {@link EventTypes.SegmentationRepresentationModifiedEventDetail | Segmentation Representation Modified Event Detail}.\n   */\n  SEGMENTATION_REPRESENTATION_MODIFIED = 'CORNERSTONE_TOOLS_SEGMENTATION_REPRESENTATION_MODIFIED',\n\n  /**\n   * Triggers on the eventTarget when a Segmentation is removed from the state manager.\n   * Make use of {@link EventTypes.SegmentationRemovedEventType | Segmentation Removed Event Type}\n   * for typing your event listeners for this segmentation removed event, and see what\n   * event detail is included in {@link EventTypes.SegmentationRemovedEventDetail | Segmentation Removed Event Detail}.\n   */\n  SEGMENTATION_REMOVED = 'CORNERSTONE_TOOLS_SEGMENTATION_REMOVED',\n\n  /**\n   * Triggers on the eventTarget when a Segmentation representation of a toolGroup is removed in the state manager.\n   * Make use of {@link EventTypes.SegmentationRepresentationRemovedEventType | Segmentation Representation Removed Event Type}\n   * for typing your event listeners for this segmentation representation removed event, and see what\n   * event detail is included in {@link EventTypes.SegmentationRepresentationRemovedEventDetail | Segmentation Representation Removed Event Detail}.\n   */\n  SEGMENTATION_REPRESENTATION_REMOVED = 'CORNERSTONE_TOOLS_SEGMENTATION_REPRESENTATION_REMOVED',\n\n  /**\n   * Triggers on the eventTarget when a Segmentation data is modified (e.g., by brush tool).\n   * Make use of {@link EventTypes.SegmentationDataModifiedEventType | Segmentation Data Modified Event Type}\n   * for typing your event listeners for this segmentation data modified event, and see what\n   * event detail is included in {@link EventTypes.SegmentationDataModifiedEventDetail | Segmentation Data Modified Event Detail}.\n   */\n  SEGMENTATION_DATA_MODIFIED = 'CORNERSTONE_TOOLS_SEGMENTATION_DATA_MODIFIED',\n\n  ///////////////////////////////////////\n  //         Keyboard Events\n  ///////////////////////////////////////\n\n  /**\n   * Triggers on the eventTarget when a key on the keyboard is pressed.\n   * Make use of {@link EventTypes.KeyDownEventType | Key Down Event Type}\n   * for typing your event listeners for this key down event, and see what\n   * event detail is included in {@link EventTypes.KeyDownEventDetail | Key Down Event Detail}.\n   */\n  KEY_DOWN = 'CORNERSTONE_TOOLS_KEY_DOWN',\n\n  /**\n   * Triggers on the eventTarget when a key on the keyboard is released.\n   * Make use of {@link EventTypes.KeyUpEventType | Key Up Event Type}\n   * for typing your event listeners for this key up event, and see what\n   * event detail is included in {@link EventTypes.KeyUpEventDetail | Key Up Event Detail}.\n   */\n  KEY_UP = 'CORNERSTONE_TOOLS_KEY_UP',\n\n  ///////////////////////////////////////\n  //      Mouse Events\n  ///////////////////////////////////////\n\n  /**\n   * Triggers on the eventTarget when the mouse is pressed down, it is CornerstoneTools normalized event.\n   * Make use of {@link EventTypes.MouseDownEventType | Mouse Down Event Type}\n   * for typing your event listeners for this mouse down event, and see what\n   * event detail is included in {@link EventTypes.MouseDownEventDetail | Mouse Down Event Detail}.\n   */\n  MOUSE_DOWN = 'CORNERSTONE_TOOLS_MOUSE_DOWN',\n\n  /**\n   * Triggers on the eventTarget when the mouse is released, it is CornerstoneTools normalized event.\n   * Make use of {@link EventTypes.MouseUpEventType | Mouse Up Event Type}\n   * for typing your event listeners for this mouse up event, and see what\n   * event detail is included in {@link EventTypes.MouseUpEventDetail | Mouse Up Event Detail}.\n   */\n  MOUSE_UP = 'CORNERSTONE_TOOLS_MOUSE_UP',\n\n  /**\n   * Triggers on the eventTarget when a handled `MOUSE_DOWN` event does not `stopPropagation`. The hook\n   * we use to create new annotation for mouse events.\n   * Make use of {@link EventTypes.MouseDownActivateEventType | Mouse Down Activate Event Type}\n   * for typing your event listeners for this mouse down activate event, and see what\n   * event detail is included in {@link EventTypes.MouseDownActivateEventDetail | Mouse Down Activate Event Detail}.\n   */\n  MOUSE_DOWN_ACTIVATE = 'CORNERSTONE_TOOLS_MOUSE_DOWN_ACTIVATE',\n\n  /**\n   * Triggers on the event target when mouse is dragging an annotation or textBox.\n   * Make use of {@link EventTypes.MouseDragEventType | Mouse Drag Event Type}\n   * for typing your event listeners for this mouse drag event, and see what\n   * event detail is included in {@link EventTypes.MouseDragEventDetail | Mouse Drag Event Detail}.\n   */\n  MOUSE_DRAG = 'CORNERSTONE_TOOLS_MOUSE_DRAG',\n\n  /**\n   * Triggers on the eventTarget, when the mouse is moved, it is CornerstoneTools normalized event.\n   * It can be just a mouse move or when double click is performed and annotation\n   * drawing can be performed with just mouse move.\n   * Make use of {@link EventTypes.MouseMoveEventType | Mouse Move Event Type}\n   * for typing your event listeners for this mouse move event, and see what\n   * event detail is included in {@link EventTypes.MouseMoveEventDetail | Mouse Move Event Detail}.\n   */\n  MOUSE_MOVE = 'CORNERSTONE_TOOLS_MOUSE_MOVE',\n\n  /**\n   * Triggers on the eventTarget when a mouse click is detected. It is CornerstoneTools normalized event.\n   * Make use of {@link EventTypes.MouseClickEventType | Mouse Click Event Type}\n   * for typing your event listeners for this mouse click event, and see what\n   * event detail is included in {@link EventTypes.MouseClickEventDetail | Mouse Click Event Detail}.\n   */\n  MOUSE_CLICK = 'CORNERSTONE_TOOLS_MOUSE_CLICK',\n\n  /**\n   * Triggers on the eventTarget when a mouse double click is detected. It is CornerstoneTools normalized event.\n   * Make use of {@link EventTypes.MouseDoubleClickEventType | Mouse Double Click Event Type}\n   * for typing your event listeners for this mouse double click event, and see what\n   * event detail is included in {@link EventTypes.MouseDoubleClickEventDetail | Mouse Double Click Event Detail}.\n   */\n  MOUSE_DOUBLE_CLICK = 'CORNERSTONE_TOOLS_MOUSE_DOUBLE_CLICK',\n\n  /**\n   * Triggers on the eventTarget when a mouse wheel event is detected. It is CornerstoneTools normalized event.\n   * Make use of {@link EventTypes.MouseWheelEventType | Mouse Wheel Event Type}\n   * for typing your event listeners for this mouse wheel event, and see what\n   * event detail is included in {@link EventTypes.MouseWheelEventDetail | Mouse Wheel Event Detail}.\n   */\n  MOUSE_WHEEL = 'CORNERSTONE_TOOLS_MOUSE_WHEEL',\n\n  // Todo: not being fired as of now\n  // ANNOTATION_COMPLETED = 'CORNERSTONE_TOOLS_ANNOTATION_COMPLETED',\n  // Todo: not implemented yet\n  // KEY_PRESS = 'CORNERSTONE_TOOLS_KEY_PRESS',\n\n  //////////////////////\n  //   Touch Events   //\n  //////////////////////\n  // The event flow looks like the following\n  // Touch Start -> (optional) Touch Press -> Touch Drag -> (optional) Touch Swipe -> Touch End\n  // Touch Tap\n  // mousedown\n  // mousedown, Touch Start, and Tap are mutually exclusive events\n  TOUCH_START = 'CORNERSTONE_TOOLS_TOUCH_START',\n  TOUCH_START_ACTIVATE = 'CORNERSTONE_TOOLS_TOUCH_START_ACTIVATE',\n  TOUCH_PRESS = 'CORNERSTONE_TOOLS_TOUCH_PRESS',\n  TOUCH_DRAG = 'CORNERSTONE_TOOLS_TOUCH_DRAG',\n  TOUCH_END = 'CORNERSTONE_TOOLS_TOUCH_END',\n  TOUCH_TAP = 'CORNERSTONE_TOOLS_TAP',\n  TOUCH_SWIPE = 'CORNERSTONE_TOOLS_SWIPE',\n}\n\nexport default Events;\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import { eventTarget, triggerEvent } from '@cornerstonejs/core';\nimport { Events } from '../../enums';\nimport { Annotation } from '../../types';\nimport { AnnotationLockChangeEventDetail } from '../../types/EventTypes';\n\n/*\n * Constants\n */\nconst globalLockedAnnotationsSet: Set<Annotation> = new Set();\n\n/*\n * Interface (Public API)\n */\n\n/**\n * Set the \"Locked\" state of a given annotation instance.\n *\n * @triggers ANNOTATION_LOCK_CHANGE\n *\n * @param annotation - The annotation instance which will have\n * its locked state changed. An event will only be triggered if the locked state\n * of the given annotation instance changed.\n * @param locked - A boolean value indicating if the instance should\n * be locked (true) or not (false)\n */\nfunction setAnnotationLocked(annotation: Annotation, locked = true): void {\n  const detail = makeEventDetail();\n  if (annotation) {\n    if (locked) {\n      lock(annotation, globalLockedAnnotationsSet, detail);\n    } else {\n      unlock(annotation, globalLockedAnnotationsSet, detail);\n    }\n  }\n  publish(detail, globalLockedAnnotationsSet);\n}\n\n/**\n * Clears all the locked annotation\n *\n */\nfunction unlockAllAnnotations(): void {\n  const detail = makeEventDetail();\n  clearLockedAnnotationsSet(globalLockedAnnotationsSet, detail);\n  publish(detail, globalLockedAnnotationsSet);\n}\n\n/**\n * Returns an array of all the annotation that is currently locked\n * @returns An array of tool specific annotation objects.\n *\n */\nfunction getAnnotationsLocked(): Array<Annotation> {\n  return Array.from(globalLockedAnnotationsSet);\n}\n\n/**\n * Given a Annotation object, return true if it is locked.\n * @param annotation - Annotation\n * @returns A boolean value.\n */\nfunction isAnnotationLocked(annotation: Annotation): boolean {\n  return globalLockedAnnotationsSet.has(annotation);\n}\n\n/**\n * Get the number of locked annotation objects in the global set of locked annotation\n * objects.\n * @returns The number of locked annotation objects.\n *\n */\nfunction getAnnotationsLockedCount(): number {\n  return globalLockedAnnotationsSet.size;\n}\n\n/**\n * Properly initialize the isLocked on annotation, and set it as locked if\n * isLocked is true.\n * @param annotation - The annotation object to be checked.\n */\nfunction checkAndDefineIsLockedProperty(annotation: Annotation): void {\n  if (annotation) {\n    const isLocked = !!annotation.isLocked;\n    if (shouldDefineIsLockedProperty(annotation)) {\n      Object.defineProperty(annotation, 'isLocked', {\n        configurable: false,\n        enumerable: true,\n        set: setIsLocked,\n        get: getIsLocked,\n      });\n    }\n    setAnnotationLocked(annotation, isLocked);\n  }\n}\n\n/*\n * Private Helpers\n */\n\nfunction makeEventDetail(): AnnotationLockChangeEventDetail {\n  return Object.freeze({\n    added: [],\n    removed: [],\n    locked: [],\n  });\n}\n\nfunction lock(\n  annotation: Annotation,\n  lockedAnnotationsSet: Set<Annotation>,\n  detail: AnnotationLockChangeEventDetail\n): void {\n  if (!lockedAnnotationsSet.has(annotation)) {\n    lockedAnnotationsSet.add(annotation);\n    detail.added.push(annotation);\n  }\n}\n\nfunction unlock(\n  annotation: Annotation,\n  lockedAnnotationsSet: Set<Annotation>,\n  detail: AnnotationLockChangeEventDetail\n): void {\n  if (lockedAnnotationsSet.delete(annotation)) {\n    detail.removed.push(annotation);\n  }\n}\n\nfunction clearLockedAnnotationsSet(\n  lockedAnnotationsSet: Set<Annotation>,\n  detail: AnnotationLockChangeEventDetail\n): void {\n  lockedAnnotationsSet.forEach((annotation) => {\n    unlock(annotation, lockedAnnotationsSet, detail);\n  });\n}\n\nfunction publish(\n  detail: AnnotationLockChangeEventDetail,\n  lockedAnnotationsSet: Set<Annotation>\n) {\n  if (detail.added.length > 0 || detail.removed.length > 0) {\n    lockedAnnotationsSet.forEach((item) => void detail.locked.push(item));\n    triggerEvent(eventTarget, Events.ANNOTATION_LOCK_CHANGE, detail);\n  }\n}\n\nfunction shouldDefineIsLockedProperty(annotation: Annotation): boolean {\n  const descriptor = Object.getOwnPropertyDescriptor(annotation, 'isLocked');\n  if (descriptor) {\n    return (\n      descriptor.configurable &&\n      (descriptor.set !== setIsLocked || descriptor.get !== getIsLocked)\n    );\n  }\n  return Object.isExtensible(annotation);\n}\n\nfunction setIsLocked(locked: boolean) {\n  setAnnotationLocked(this as Annotation, locked);\n}\n\nfunction getIsLocked() {\n  return isAnnotationLocked(this as Annotation);\n}\n\n/*\n * Exports\n */\n\nexport {\n  setAnnotationLocked,\n  getAnnotationsLocked,\n  getAnnotationsLockedCount,\n  unlockAllAnnotations,\n  isAnnotationLocked,\n  checkAndDefineIsLockedProperty,\n};\n","import { eventTarget, triggerEvent } from '@cornerstonejs/core';\nimport { Events } from '../../enums';\nimport { AnnotationSelectionChangeEventDetail } from '../../types/EventTypes';\nimport { getAnnotation } from './annotationState';\n\n/*\n * Constants\n */\n\nconst selectedAnnotationUIDs: Set<string> = new Set();\n\n/*\n * Interface (Public API)\n */\n\n/**\n * Set a given annotationUID as selected or deselected based on the provided\n * selected value.\n *\n * @param annotationUID - The annotation UID to be selected\n * @param selected - When true, the annotation is selected. When false, the annotation is deselected.\n * @param preserveSelected - When true, preserves existing\n *  selections (i.e., the given annotation is appended to the selection set).\n *  When false (the default behavior) the currently selected items are discarded\n *  (i.e., the given annotation instance replaces the currently selected ones).\n */\nfunction setAnnotationSelected(\n  annotationUID: string,\n  selected = true,\n  preserveSelected = false\n): void {\n  if (selected) {\n    selectAnnotation(annotationUID, preserveSelected);\n  } else {\n    deselectAnnotation(annotationUID);\n  }\n}\n\n/**\n * Set a given annotation as selected.\n *\n * @param annotationUID - The annotation UID to be selected\n * @param preserveSelected - When true, preserves existing\n *  selections (i.e., the given annotation is appended to the selection set).\n *  When false (the default behavior) the currently selected items are discarded\n *  (i.e., the given annotation instance replaces the currently selected ones).\n */\nfunction selectAnnotation(\n  annotationUID: string,\n  preserveSelected = false\n): void {\n  const detail = makeEventDetail();\n  if (!preserveSelected) {\n    clearSelectionSet(selectedAnnotationUIDs, detail);\n  }\n  if (annotationUID && !selectedAnnotationUIDs.has(annotationUID)) {\n    selectedAnnotationUIDs.add(annotationUID);\n    detail.added.push(annotationUID);\n  }\n  publish(detail, selectedAnnotationUIDs);\n}\n\n/**\n * Deselect one or all annotations.\n *\n * @param annotationUID - If an annotation is provided that instance will be removed from\n * the internal selection set. If none is given, ALL selections will be cleared.\n */\nfunction deselectAnnotation(annotationUID?: string): void {\n  const detail = makeEventDetail();\n  if (annotationUID) {\n    if (selectedAnnotationUIDs.delete(annotationUID)) {\n      detail.removed.push(annotationUID);\n    }\n  } else {\n    clearSelectionSet(selectedAnnotationUIDs, detail);\n  }\n  publish(detail, selectedAnnotationUIDs);\n}\n\n/**\n * Return an array of ALL the selected annotationUIDs\n * @returns An array of Annotation UIDs\n */\nfunction getAnnotationsSelected(): Array<string> {\n  return Array.from(selectedAnnotationUIDs);\n}\n\n/**\n * Given a tool name, return ALL the annotationUIDs for that tool that are selected\n * @param toolName - The name of the tool you want to get the selected annotation for\n * @returns An array of annotationUIDs\n */\nfunction getAnnotationsSelectedByToolName(toolName: string): Array<string> {\n  return getAnnotationsSelected().filter((annotationUID) => {\n    const annotation = getAnnotation(annotationUID);\n    return annotation.metadata.toolName === toolName;\n  });\n}\n\n/**\n * Given an annotationUID, return true if it is selected, false\n * otherwise.\n * @param annotationUID - Annotation UID\n * @returns A boolean value.\n */\nfunction isAnnotationSelected(annotationUID: string): boolean {\n  return selectedAnnotationUIDs.has(annotationUID);\n}\n\n/**\n * Return the number of the selected annotation\n * @returns The size of the selected annotation set\n */\nfunction getAnnotationsSelectedCount(): number {\n  return selectedAnnotationUIDs.size;\n}\n\n/*\n * Private Helpers\n */\n\nfunction makeEventDetail(): AnnotationSelectionChangeEventDetail {\n  return Object.freeze({\n    added: [],\n    removed: [],\n    selection: [],\n  });\n}\n\nfunction clearSelectionSet(\n  selectionSet: Set<string>,\n  detail: AnnotationSelectionChangeEventDetail\n): void {\n  selectionSet.forEach((value) => {\n    if (selectionSet.delete(value)) {\n      detail.removed.push(value);\n    }\n  });\n}\n\nfunction publish(\n  detail: AnnotationSelectionChangeEventDetail,\n  selectionSet: Set<string>\n) {\n  if (detail.added.length > 0 || detail.removed.length > 0) {\n    selectionSet.forEach((item) => void detail.selection.push(item));\n    triggerEvent(eventTarget, Events.ANNOTATION_SELECTION_CHANGE, detail);\n  }\n}\n\n/*\n * Exports\n */\n\nexport {\n  setAnnotationSelected,\n  getAnnotationsSelected,\n  getAnnotationsSelectedByToolName,\n  getAnnotationsSelectedCount,\n  deselectAnnotation,\n  isAnnotationSelected,\n};\n","import { eventTarget, triggerEvent } from '@cornerstonejs/core';\nimport { getAnnotation } from './annotationState';\nimport { Events } from '../../enums';\nimport { Annotation } from '../../types';\nimport { AnnotationVisibilityChangeEventDetail } from '../../types/EventTypes';\nimport {\n  isAnnotationSelected,\n  deselectAnnotation,\n} from './annotationSelection';\n\n/*\n * It stores all hidden annotation uids.\n */\nconst globalHiddenAnnotationUIDsSet: Set<string> = new Set();\n\n/*\n * Interface (Public API)\n */\n\n/**\n * Set the \"visible\" state of a given annotation instance.\n *\n * @event ANNOTATION_VISIBILITY_CHANGE\n *\n * @param annotationUID - The annotation uid which will have\n * its visible state changed. An event will only be triggered if the visible state\n * of the given annotation instance changed.\n * @param visible - A boolean value indicating if the instance should\n * be visible (true) or not (false)\n */\nfunction setAnnotationVisibility(annotationUID: string, visible = true): void {\n  const detail = makeEventDetail();\n  if (annotationUID) {\n    if (visible) {\n      show(annotationUID, globalHiddenAnnotationUIDsSet, detail);\n    } else {\n      hide(annotationUID, globalHiddenAnnotationUIDsSet, detail);\n    }\n  }\n  publish(detail);\n}\n\n/**\n * Clears all the hidden annotations.\n *\n */\nfunction showAllAnnotations(): void {\n  const detail = makeEventDetail();\n  globalHiddenAnnotationUIDsSet.forEach((annotationUID) => {\n    show(annotationUID, globalHiddenAnnotationUIDsSet, detail);\n  });\n  publish(detail);\n}\n\n/**\n * Given an annotation UID, return true if it is visible, false if hidden and undefined if does not exist.\n * @param annotationUID - The annotation uid to tell if is visible or not.\n * @returns A boolean value or value if does not exist.\n */\nfunction isAnnotationVisible(annotationUID: string): boolean | undefined {\n  const annotation = getAnnotation(annotationUID);\n\n  if (annotation) {\n    return !globalHiddenAnnotationUIDsSet.has(annotationUID);\n  }\n}\n/**\n * It decorates given annotation with isVisible property.\n * It properly initializes the isVisible on annotation(the property will be create if does not exist yet)\n *\n * @param annotation - The annotation object to be checked.\n */\nfunction checkAndDefineIsVisibleProperty(annotation: Annotation): void {\n  if (annotation) {\n    const isVisible = annotation.isVisible ?? true;\n    if (shouldDefineIsVisibleProperty(annotation)) {\n      Object.defineProperty(annotation, 'isVisible', {\n        configurable: false,\n        enumerable: true,\n        set: setIsVisible,\n        get: getIsVisible,\n      });\n    }\n    setAnnotationVisibility(annotation.annotationUID, isVisible);\n  }\n}\n\n/*\n * Private Helpers\n */\nfunction makeEventDetail(): AnnotationVisibilityChangeEventDetail {\n  return Object.freeze({\n    lastVisible: [],\n    lastHidden: [],\n    hidden: [],\n  });\n}\n\nfunction show(\n  annotationUID: string,\n  annotationUIDsSet: Set<string>,\n  detail: AnnotationVisibilityChangeEventDetail\n): void {\n  if (annotationUIDsSet.delete(annotationUID)) {\n    detail.lastVisible.push(annotationUID);\n  }\n}\n\nfunction hide(\n  annotationUID: string,\n  annotationUIDsSet: Set<string>,\n  detail: AnnotationVisibilityChangeEventDetail\n): void {\n  if (!annotationUIDsSet.has(annotationUID)) {\n    annotationUIDsSet.add(annotationUID);\n    if (isAnnotationSelected(annotationUID)) {\n      deselectAnnotation(annotationUID);\n    }\n    detail.lastHidden.push(annotationUID);\n  }\n}\n\nfunction publish(detail: AnnotationVisibilityChangeEventDetail) {\n  if (detail.lastHidden.length > 0 || detail.lastVisible.length > 0) {\n    globalHiddenAnnotationUIDsSet.forEach(\n      (item) => void detail.hidden.push(item)\n    );\n    triggerEvent(eventTarget, Events.ANNOTATION_VISIBILITY_CHANGE, detail);\n  }\n}\n\nfunction shouldDefineIsVisibleProperty(annotation: Annotation): boolean {\n  const descriptor = Object.getOwnPropertyDescriptor(annotation, 'isVisible');\n  if (descriptor) {\n    return (\n      descriptor.configurable &&\n      (descriptor.set !== setIsVisible || descriptor.get !== getIsVisible)\n    );\n  }\n  return Object.isExtensible(annotation);\n}\n\nfunction setIsVisible(hidden: boolean) {\n  setAnnotationVisibility((this as Annotation).annotationUID, hidden);\n}\n\nfunction getIsVisible() {\n  return isAnnotationVisible((this as Annotation).annotationUID);\n}\n\nexport {\n  setAnnotationVisibility,\n  showAllAnnotations,\n  isAnnotationVisible,\n  checkAndDefineIsVisibleProperty,\n};\n","import cloneDeep from 'lodash.clonedeep';\nimport {\n  Annotation,\n  Annotations,\n  AnnotationState,\n  GroupSpecificAnnotations,\n} from '../../types/AnnotationTypes';\n\nimport { AnnotationGroupSelector, IAnnotationManager } from '../../types';\n\nimport {\n  Enums,\n  eventTarget,\n  getEnabledElement,\n  Types,\n  utilities,\n} from '@cornerstonejs/core';\n\nimport { checkAndDefineIsLockedProperty } from './annotationLocking';\nimport { checkAndDefineIsVisibleProperty } from './annotationVisibility';\n\n/**\n * This is the default annotation manager. It stores annotations by default\n * based on the FrameOfReferenceUID. However, it is possible to override the\n * getAnnotationStateKey function to store annotations based on any other\n * property of the element. When you write your custom annotation manager, you\n * can use the setAnnotationManager function to set your custom annotation.\n *\n * Note that this class is a singleton and should not be instantiated directly.\n * To get the stored annotations information you can use ToolState helpers.\n */\nclass FrameOfReferenceSpecificAnnotationManager implements IAnnotationManager {\n  private annotations: AnnotationState;\n  public readonly uid: string;\n\n  /**\n   * @param uid - The uid of the state manager. If omitted it is autogenerated.\n   */\n  constructor(uid?: string) {\n    if (!uid) {\n      uid = utilities.uuidv4();\n    }\n    this.annotations = {};\n    this.uid = uid;\n\n    // Listen to the IMAGE_VOLUME_MODIFIED event to invalidate data.\n    eventTarget.addEventListener(\n      Enums.Events.IMAGE_VOLUME_MODIFIED,\n      this._imageVolumeModifiedHandler\n    );\n  }\n\n  /**\n   * Default annotation manager works with FrameOfReferenceUID as the key. The\n   * manager adds them under the FrameOfReferenceUID for the element being\n   * annotated.\n   *\n   * @param annotationGroupSelector - element or a string that is provided\n   * to the annotation manager to get the key.\n   * @returns - The annotation state key for the element.\n   */\n  getGroupKey = (annotationGroupSelector: AnnotationGroupSelector): string => {\n    if (typeof annotationGroupSelector === 'string') {\n      return annotationGroupSelector;\n    }\n\n    const element = annotationGroupSelector;\n    const enabledElement = getEnabledElement(element);\n\n    if (!enabledElement) {\n      throw new Error(\n        'Element not enabled, you must have an enabled element if you are not providing a FrameOfReferenceUID'\n      );\n    }\n\n    return enabledElement.FrameOfReferenceUID;\n  };\n\n  /**\n   * When a volume is modified we invalidate all of the `annotations` on the\n   * volume's `FrameOfReferenceUID`. This is mainly to update statistics calculations\n   * when an annotation is drawn whilst data is still loading.\n   *\n   * @param evt - The IMAGE_VOLUME_MODIFIED rendering event.\n   */\n  _imageVolumeModifiedHandler = (\n    evt: Types.EventTypes.ImageVolumeModifiedEvent\n  ) => {\n    const eventDetail = evt.detail;\n    const { FrameOfReferenceUID } = eventDetail;\n\n    const annotations = this.annotations;\n    const frameOfReferenceSpecificAnnotations =\n      annotations[FrameOfReferenceUID];\n\n    if (!frameOfReferenceSpecificAnnotations) {\n      return;\n    }\n\n    Object.keys(frameOfReferenceSpecificAnnotations).forEach((toolName) => {\n      const toolSpecificAnnotations =\n        frameOfReferenceSpecificAnnotations[toolName];\n\n      toolSpecificAnnotations.forEach((annotation) => {\n        const invalidated = annotation.invalidated;\n\n        if (invalidated !== undefined) {\n          annotation.invalidated = true;\n        }\n      });\n    });\n  };\n\n  /**\n   * Returns all the available frameOfReferences inside the state manager\n   * @returns - All the added frames of references inside the manager\n   */\n  getFramesOfReference = (): Array<string> => {\n    return Object.keys(this.annotations);\n  };\n\n  /**\n   * Returns the annotations associated with the specified frameOfReference and tool, or\n   * all annotations for the group if the tool name is not provided.\n   *\n   * @param groupKey - The annotation group key to retrieve annotations for (in default manager it is FrameOfReferenceUID).\n   * @param toolName - Optional. The name of the tool to retrieve annotations for.\n   * @returns The annotations associated with the specified group (default FrameOfReferenceUID) and tool,\n   * or all annotations for the group (FrameOfReferenceUID) if the tool name is not provided.\n   */\n  getAnnotations = (\n    groupKey: string,\n    toolName?: string\n  ): GroupSpecificAnnotations | Annotations => {\n    const annotations = this.annotations;\n\n    if (!annotations[groupKey]) {\n      return [];\n    }\n\n    if (toolName) {\n      return annotations[groupKey][toolName];\n    }\n\n    return annotations[groupKey];\n  };\n\n  /**\n   * Given the unique identified for the some `annotation`, returns the `annotation`\n   * from the `annotations`. Each `annotation` has a unique identifier.\n   *\n   * @param annotationUID - The unique identifier of the `annotation`.\n   * @returns The retrieved `annotation`.\n   */\n  getAnnotation = (annotationUID: string): Annotation | undefined => {\n    const annotations = this.annotations;\n\n    for (const frameOfReferenceUID in annotations) {\n      const frameOfReferenceAnnotations = annotations[frameOfReferenceUID];\n\n      for (const toolName in frameOfReferenceAnnotations) {\n        const toolSpecificAnnotations = frameOfReferenceAnnotations[toolName];\n\n        for (const annotation of toolSpecificAnnotations) {\n          if (annotationUID === annotation.annotationUID) {\n            return annotation;\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   * A function that returns the number of annotations for a given tool in the\n   * specific group (default FrameOfReferenceUID) IF no groupKey (FrameOfReferenceUID) is provided,\n   * it will return the number of annotations for the tool in all groups (FrameOfReferenceUIDs)\n   *\n   * @param groupKey - The annotation group key to retrieve annotations for (in default manager it is FrameOfReferenceUID).\n   * @param toolName - The name of the tool to retrieve data for.\n   *\n   * @returns The number of annotations for a given tool in the state\n   */\n  getNumberOfAnnotations = (groupKey: string, toolName?: string): number => {\n    const annotations = this.getAnnotations(groupKey, toolName);\n\n    if (!annotations.length) {\n      return 0;\n    }\n\n    if (toolName) {\n      return (annotations as Annotations).length;\n    }\n\n    let total = 0;\n\n    for (const toolName in annotations) {\n      total += annotations[toolName].length;\n    }\n\n    return total;\n  };\n\n  /**\n   * Adds an instance of `Annotation` to the `annotations`.\n   *\n   * @param annotation - The annotation to add.\n   * @param groupKey - The annotation group key to add the annotation to (in default manager it is FrameOfReferenceUID).\n   */\n  addAnnotation = (annotation: Annotation, groupKey?: string): void => {\n    const { metadata } = annotation;\n    const { FrameOfReferenceUID, toolName } = metadata;\n\n    groupKey = groupKey || FrameOfReferenceUID;\n\n    const annotations = this.annotations;\n\n    let frameOfReferenceSpecificAnnotations = annotations[groupKey];\n\n    if (!frameOfReferenceSpecificAnnotations) {\n      annotations[groupKey] = {};\n\n      frameOfReferenceSpecificAnnotations = annotations[groupKey];\n    }\n\n    let toolSpecificAnnotations = frameOfReferenceSpecificAnnotations[toolName];\n\n    if (!toolSpecificAnnotations) {\n      frameOfReferenceSpecificAnnotations[toolName] = [];\n\n      toolSpecificAnnotations = frameOfReferenceSpecificAnnotations[toolName];\n    }\n\n    toolSpecificAnnotations.push(annotation);\n    checkAndDefineIsLockedProperty(annotation);\n    checkAndDefineIsVisibleProperty(annotation);\n  };\n\n  /**\n   * Given the unique identified for the some `annotation`, removes the `annotation`\n   * from the `annotations`.\n   *\n   * @param annotationUID - The unique identifier of the `annotation` to remove.\n   */\n  removeAnnotation = (annotationUID: string): void => {\n    const { annotations } = this;\n\n    for (const groupKey in annotations) {\n      const groupAnnotations = annotations[groupKey];\n\n      for (const toolName in groupAnnotations) {\n        const toolAnnotations = groupAnnotations[toolName];\n\n        const index = toolAnnotations.findIndex(\n          (annotation) => annotation.annotationUID === annotationUID\n        );\n\n        if (index !== -1) {\n          toolAnnotations.splice(index, 1);\n\n          if (toolAnnotations.length === 0) {\n            delete groupAnnotations[toolName];\n          }\n        }\n      }\n\n      if (Object.keys(groupAnnotations).length === 0) {\n        delete annotations[groupKey];\n      }\n    }\n  };\n\n  /**\n   * Removes all annotations associated with the specified group (FrameOfReferenceUID) and tool, or\n   * all annotations for the group (FrameOfReferenceUID) if the tool name is not provided.\n   *\n   * @param groupKey - The group key to remove annotations for (in default manager it is FrameOfReferenceUID).\n   * @param toolName - Optional. The name of the tool to remove annotations for.\n   */\n  removeAnnotations = (groupKey: string, toolName?: string): void => {\n    const annotations = this.annotations;\n    if (annotations[groupKey]) {\n      if (toolName) {\n        delete annotations[groupKey][toolName];\n      } else {\n        delete annotations[groupKey];\n      }\n    }\n  };\n\n  /**\n   * Returns a section of the annotations. Useful for serialization.\n   * If both groupKey (default manager is FrameOfReferenceUID) and toolName are provided, returns the corresponding Annotations instance\n   * for that groupKey (FrameOfReferenceUID) and toolName.\n   * If only groupKey is provided, returns the corresponding FrameOfReferenceSpecificAnnotations instance\n   * for that groupKey.\n   * If neither groupKey nor toolName is provided, returns the entire AnnotationState object.\n   * @param groupKey - Optional. The group key (e.g. FrameOfReferenceUID) to retrieve annotations for.\n   * @param toolName - Optional. The name of the tool to retrieve annotations for.\n   * @returns A section of the annotations.\n   */\n  saveAnnotations = (\n    groupKey?: string,\n    toolName?: string\n  ): AnnotationState | GroupSpecificAnnotations | Annotations => {\n    const annotations = this.annotations;\n\n    if (groupKey && toolName) {\n      const frameOfReferenceSpecificAnnotations = annotations[groupKey];\n\n      if (!frameOfReferenceSpecificAnnotations) {\n        return;\n      }\n\n      const toolSpecificAnnotations =\n        frameOfReferenceSpecificAnnotations[toolName];\n\n      return cloneDeep(toolSpecificAnnotations);\n    } else if (groupKey) {\n      const frameOfReferenceSpecificAnnotations = annotations[groupKey];\n\n      return cloneDeep(frameOfReferenceSpecificAnnotations);\n    }\n\n    return cloneDeep(annotations);\n  };\n\n  /**\n   * Restores a section of the `annotations`. Useful for loading in serialized data.\n   *\n   * - If no arguments are given, the entire `AnnotationState` instance is restored.\n   * - If the `FrameOfReferenceUID` is given, the corresponding\n   * `FrameOfReferenceSpecificAnnotations` instance is restored.\n   * - If both the `FrameOfReferenceUID` and the `toolName` are are given, the\n   * corresponding `Annotations` instance is restored.\n   *\n   * @param groupKey - A filter string for restoring only the `annotations` of a specific frame of reference.\n   * @param toolName - A filter string for restoring `annotation` for a specific tool on a specific frame of reference.\n   */\n  restoreAnnotations = (\n    state: AnnotationState | GroupSpecificAnnotations | Annotations,\n    groupKey?: string,\n    toolName?: string\n  ): void => {\n    const annotations = this.annotations;\n\n    if (groupKey && toolName) {\n      // Set Annotations for FrameOfReferenceUID and toolName.\n\n      let frameOfReferenceSpecificAnnotations = annotations[groupKey];\n\n      if (!frameOfReferenceSpecificAnnotations) {\n        annotations[groupKey] = {};\n\n        frameOfReferenceSpecificAnnotations = annotations[groupKey];\n      }\n\n      frameOfReferenceSpecificAnnotations[toolName] = <Annotations>state;\n    } else if (groupKey) {\n      // Set FrameOfReferenceSpecificAnnotations for FrameOfReferenceUID.\n\n      annotations[groupKey] = <GroupSpecificAnnotations>state;\n    } else {\n      // Set entire annotations\n      this.annotations = <AnnotationState>cloneDeep(state);\n    }\n  };\n\n  /**\n   * A function that returns the number of all annotations in the annotation state\n   *\n   * @returns The number of all annotations in the state\n   */\n  getNumberOfAllAnnotations = (): number => {\n    let count = 0;\n    const annotations = this.annotations;\n    for (const groupKey in annotations) {\n      const frameOfReferenceSpecificAnnotations = annotations[groupKey];\n      for (const toolName in frameOfReferenceSpecificAnnotations) {\n        const toolSpecificAnnotations =\n          frameOfReferenceSpecificAnnotations[toolName];\n        count += toolSpecificAnnotations.length;\n      }\n    }\n    return count;\n  };\n\n  /**\n   * Removes all annotations in the annotation state.\n   */\n  removeAllAnnotations = (): void => {\n    this.annotations = {};\n  };\n}\n\nconst defaultFrameOfReferenceSpecificAnnotationManager =\n  new FrameOfReferenceSpecificAnnotationManager('DEFAULT');\n\nexport { defaultFrameOfReferenceSpecificAnnotationManager };\nexport default FrameOfReferenceSpecificAnnotationManager;\n","let svgNodeCache = {};\n\nexport function resetSvgNodeCache(): void {\n  svgNodeCache = {};\n}\n\nexport default svgNodeCache;\n","import _cloneDeep from 'lodash.clonedeep';\n\nimport { IToolGroup, IToolClassReference } from '../types';\nimport Synchronizer from './SynchronizerManager/Synchronizer';\nimport svgNodeCache, { resetSvgNodeCache } from './svgNodeCache';\n\ninterface ICornerstoneTools3dState {\n  isInteractingWithTool: boolean;\n  isMultiPartToolActive: boolean;\n  tools: Record<\n    string,\n    {\n      toolClass: IToolClassReference;\n    }\n  >;\n  toolGroups: Array<IToolGroup>;\n  synchronizers: Array<Synchronizer>;\n  svgNodeCache: Record<string, unknown>;\n  enabledElements: Array<unknown>;\n  handleRadius: number;\n}\n\nconst defaultState: ICornerstoneTools3dState = {\n  isInteractingWithTool: false,\n  isMultiPartToolActive: false,\n  tools: {},\n  toolGroups: [],\n  synchronizers: [],\n  svgNodeCache: svgNodeCache,\n  // Should this be named... canvases?\n  enabledElements: [], // switch to Uids?\n  handleRadius: 6,\n};\n\nlet state: ICornerstoneTools3dState = {\n  isInteractingWithTool: false,\n  isMultiPartToolActive: false,\n  tools: {},\n  toolGroups: [],\n  synchronizers: [],\n  svgNodeCache: svgNodeCache,\n  // Should this be named... canvases?\n  enabledElements: [], // switch to Uids?\n  handleRadius: 6,\n};\n\nfunction resetCornerstoneToolsState(): void {\n  resetSvgNodeCache();\n  state = _cloneDeep(defaultState);\n}\n\nexport {\n  ICornerstoneTools3dState,\n  resetCornerstoneToolsState,\n  state,\n  state as default,\n};\n","/**\n * ToolModes - This enum defines the 4 tool states which are available.\n */\nenum ToolModes {\n  /**\n   * Active:\n   * - Can be actively used by mouse/touch events mapped to its `ToolBinding`s.\n   * - Can add data if an annotation tool.\n   * - Can be passively interacted by grabbing a tool or its handles.\n   * - Renders data if the tool has a `renderAnnotation` method.\n   */\n  Active = 'Active',\n  /**\n   * Passive:\n   * - Can be passively interacted by grabbing a tool or its handles.\n   * - Renders data if the tool has a `renderAnnotation` method.\n   */\n  Passive = 'Passive',\n  /**\n   * Enabled:\n   * - Renders data if the tool has a `renderAnnotation` method.\n   */\n  Enabled = 'Enabled',\n  /**\n   * Disabled:\n   * - Annotation does not render.\n   */\n  Disabled = 'Disabled',\n}\n\nexport default ToolModes;\n","import { state } from '../index';\nimport { IToolGroup } from '../../types';\nimport { ToolModes } from '../../enums';\n\nconst MODES = [ToolModes.Active, ToolModes.Passive, ToolModes.Enabled];\n\n/**\n * Returns the toolGroups that has the given toolName as active, passive\n * or enabled.\n * @param toolName - The name of the tool\n * @returns An array of tool groups.\n */\nfunction getToolGroupsWithToolName(toolName: string): IToolGroup[] | [] {\n  return state.toolGroups.filter(({ toolOptions }) => {\n    const toolGroupToolNames = Object.keys(toolOptions);\n\n    for (let i = 0; i < toolGroupToolNames.length; i++) {\n      if (toolName !== toolGroupToolNames[i]) continue;\n\n      /* filter out tools that don't have options */\n      if (!toolOptions[toolName]) {\n        continue;\n      }\n\n      if (MODES.includes(toolOptions[toolName].mode)) {\n        return true;\n      }\n    }\n    return false;\n  });\n}\n\nexport default getToolGroupsWithToolName;\n","import {\n  triggerEvent,\n  eventTarget,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport { Events } from '../../enums';\nimport { defaultFrameOfReferenceSpecificAnnotationManager } from './FrameOfReferenceSpecificAnnotationManager';\nimport { Annotations, Annotation } from '../../types/AnnotationTypes';\nimport { AnnotationRemovedEventDetail } from '../../types/EventTypes';\nimport { AnnotationGroupSelector } from '../../types';\nimport {\n  triggerAnnotationAddedForElement,\n  triggerAnnotationAddedForFOR,\n} from './helpers/state';\n\n// our default annotation manager\nlet defaultManager = defaultFrameOfReferenceSpecificAnnotationManager;\n\n/**\n * It returns the default annotations manager.\n * @returns the singleton default annotations manager.\n */\nfunction getAnnotationManager() {\n  return defaultManager;\n}\n\n/**\n * Set the annotation manager to be used for rendering, adding, removing, etc.\n * @param annotationManager - The annotation manager to be used\n */\nfunction setAnnotationManager(annotationManager) {\n  defaultManager = annotationManager;\n}\n\n// set back to default frameOfReferenceSpecificAnnotationManager\nfunction resetAnnotationManager() {\n  defaultManager = defaultFrameOfReferenceSpecificAnnotationManager;\n}\n\n/**\n * Returns the annotations for a given tool with the provided options that is\n * used to filter annotations based on the annotation manager.\n *\n * In our default implementation, the options are the element and/or the FrameOfReferenceUID.\n * Hence, the getAnnotations function will return the annotations for the given tool\n * that are associated with the FrameOfReferenceUID.\n *\n * @param toolName - The name of the tool.\n * @param annotationGroupSelector - element or FrameOfReferenceUID that is used\n * to group annotations in the annotation manager.\n * @returns The annotations corresponding to the Frame of Reference and the toolName.\n */\nfunction getAnnotations(\n  toolName: string,\n  annotationGroupSelector: AnnotationGroupSelector\n): Annotations {\n  const manager = getAnnotationManager();\n  const groupKey = manager.getGroupKey(annotationGroupSelector);\n  return manager.getAnnotations(groupKey, toolName) as Annotations;\n}\n\n/**\n * Add the annotation to the annotation manager along with the options that is\n * used to filter the annotation manager and the annotation group that\n * the annotation belongs to.\n *\n * As a result, our default implementation will add the annotation to the\n * default manager using the FrameOfReferenceUID as the group key.\n *\n * @param annotation - The annotation that is being added to the annotations manager.\n * @param annotationGroupSelector - element or FrameOfReferenceUID that is used\n * to group annotations in the annotation manager.\n */\nfunction addAnnotation(\n  annotation: Annotation,\n  annotationGroupSelector: AnnotationGroupSelector\n): string {\n  if (annotation.annotationUID === undefined) {\n    annotation.annotationUID = csUtils.uuidv4() as string;\n  }\n\n  const manager = getAnnotationManager();\n  const groupKey = manager.getGroupKey(annotationGroupSelector);\n\n  manager.addAnnotation(annotation, groupKey);\n\n  // if the annotation manager selector is an element, trigger the\n  // annotation added event for that element.\n  if (annotationGroupSelector instanceof HTMLDivElement) {\n    triggerAnnotationAddedForElement(annotation, annotationGroupSelector);\n  } else {\n    // if no element is provided, render all viewports that have the\n    // same frame of reference.\n    // Todo: we should do something else here for other types of annotation managers.\n    triggerAnnotationAddedForFOR(annotation);\n  }\n\n  return annotation.annotationUID;\n}\n\n/**\n * Get the number of annotations for a given tool with the provided options that is\n * used to filter annotations based on the annotation manager.\n *\n * In our default implementation, the options are the element and/or the FrameOfReferenceUID.\n * Hence, the getNumberOfAnnotations function will return the number of annotations for the given tool\n * that are associated with the FrameOfReferenceUID.\n *\n * @param toolName - The name of the tool\n * @param annotationGroupSelector - element or FrameOfReferenceUID that is used\n * to group annotations in the annotation manager.\n *\n */\nfunction getNumberOfAnnotations(\n  toolName: string,\n  annotationGroupSelector: AnnotationGroupSelector\n): number {\n  const manager = getAnnotationManager();\n  const groupKey = manager.getGroupKey(annotationGroupSelector);\n\n  return manager.getNumberOfAnnotations(groupKey, toolName);\n}\n\n/**\n * Remove the annotation by UID of the annotation.\n * @param annotationUID - The unique identifier for the annotation.\n */\nfunction removeAnnotation(annotationUID: string): void {\n  const manager = getAnnotationManager();\n  const annotation = manager.getAnnotation(annotationUID);\n\n  // no need to continue in case there is no annotation.\n  if (!annotation) {\n    return;\n  }\n\n  manager.removeAnnotation(annotationUID);\n\n  // trigger annotation removed\n  const eventType = Events.ANNOTATION_REMOVED;\n\n  const eventDetail: AnnotationRemovedEventDetail = {\n    annotation,\n    annotationManagerUID: manager.uid,\n  };\n\n  triggerEvent(eventTarget, eventType, eventDetail);\n}\n\n/**\n * Get the Annotation object by its UID\n * @param annotationUID - The unique identifier of the annotation.\n */\nfunction getAnnotation(annotationUID: string): Annotation {\n  const manager = getAnnotationManager();\n  const annotation = manager.getAnnotation(annotationUID);\n\n  return annotation;\n}\n\n/**\n * It removes all annotations from the default annotation manager\n */\nfunction removeAllAnnotations(): void {\n  const manager = getAnnotationManager();\n  manager.removeAllAnnotations();\n}\n\nexport {\n  getAnnotations,\n  getNumberOfAnnotations,\n  addAnnotation,\n  getAnnotation,\n  removeAnnotation,\n  removeAllAnnotations,\n  // annotation manager\n  setAnnotationManager,\n  getAnnotationManager,\n  resetAnnotationManager,\n};\n","import {\n  getEnabledElement,\n  triggerEvent,\n  eventTarget,\n  getEnabledElementByIds,\n} from '@cornerstonejs/core';\nimport { Events } from '../../../enums';\nimport { Annotation } from '../../../types/AnnotationTypes';\nimport { getToolGroupsWithToolName } from '../../../store/ToolGroupManager';\nimport { AnnotationAddedEventDetail } from '../../../types/EventTypes';\n\n/**\n * It triggers an event for the element when an annotation is added\n * @param annotation - Annotation - The annotation that was added.\n * @param element - The element that the annotation was added to.\n */\nfunction triggerAnnotationAddedForElement(\n  annotation: Annotation,\n  element: HTMLDivElement\n) {\n  const enabledElement = getEnabledElement(element);\n  const { renderingEngine, viewportId } = enabledElement;\n\n  const eventType = Events.ANNOTATION_ADDED;\n\n  const eventDetail: AnnotationAddedEventDetail = {\n    annotation,\n    viewportId,\n    renderingEngineId: renderingEngine.id,\n  };\n\n  triggerEvent(eventTarget, eventType, eventDetail);\n}\n\n/**\n * If the annotation has a FrameOfReferenceUID, it triggers the ANNOTATION_ADDED\n * event for all the viewports that has the same FrameOfReferenceUID.\n * @param annotation -  Annotation - The annotation that was added\n */\nfunction triggerAnnotationAddedForFOR(annotation: Annotation) {\n  const { toolName } = annotation.metadata;\n\n  const toolGroups = getToolGroupsWithToolName(toolName);\n\n  if (!toolGroups.length) {\n    return;\n  }\n\n  // Find the viewports in the toolGroups who has the same FrameOfReferenceUID\n  const viewportsToRender = [];\n\n  toolGroups.forEach((toolGroup) => {\n    toolGroup.viewportsInfo.forEach((viewportInfo) => {\n      const { renderingEngineId, viewportId } = viewportInfo;\n      const { FrameOfReferenceUID } = getEnabledElementByIds(\n        viewportId,\n        renderingEngineId\n      );\n\n      if (annotation.metadata.FrameOfReferenceUID === FrameOfReferenceUID) {\n        viewportsToRender.push(viewportInfo);\n      }\n    });\n  });\n\n  if (!viewportsToRender.length) {\n    return;\n  }\n\n  const eventType = Events.ANNOTATION_ADDED;\n\n  viewportsToRender.forEach(({ renderingEngineId, viewportId }) => {\n    const eventDetail: AnnotationAddedEventDetail = {\n      annotation,\n      viewportId,\n      renderingEngineId,\n    };\n\n    triggerEvent(eventTarget, eventType, eventDetail);\n  });\n}\n\nexport { triggerAnnotationAddedForElement, triggerAnnotationAddedForFOR };\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Cornerstone Color LUT used for Segmentations\n */\nconst CORNERSTONE_COLOR_LUT = [\n  [0, 0, 0, 0],\n  [221, 84, 84, 255],\n  [77, 228, 121, 255],\n  [166, 70, 235, 255],\n  [189, 180, 116, 255],\n  [109, 182, 196, 255],\n  [204, 101, 157, 255],\n  [123, 211, 94, 255],\n  [93, 87, 218, 255],\n  [225, 128, 80, 255],\n  [73, 232, 172, 255],\n  [181, 119, 186, 255],\n  [176, 193, 112, 255],\n  [105, 153, 200, 255],\n  [208, 97, 120, 255],\n  [90, 215, 101, 255],\n  [135, 83, 222, 255],\n  [229, 178, 76, 255],\n  [122, 183, 181, 255],\n  [190, 115, 171, 255],\n  [149, 197, 108, 255],\n  [100, 118, 205, 255],\n  [212, 108, 93, 255],\n  [86, 219, 141, 255],\n  [183, 79, 226, 255],\n  [233, 233, 72, 255],\n  [118, 167, 187, 255],\n  [194, 111, 146, 255],\n  [116, 201, 104, 255],\n  [115, 96, 209, 255],\n  [216, 147, 89, 255],\n  [82, 223, 188, 255],\n  [230, 75, 224, 255],\n  [163, 184, 121, 255],\n  [114, 143, 191, 255],\n  [198, 107, 114, 255],\n  [99, 206, 122, 255],\n  [153, 92, 213, 255],\n  [220, 192, 85, 255],\n  [78, 215, 227, 255],\n  [234, 71, 173, 255],\n  [141, 188, 117, 255],\n  [110, 113, 195, 255],\n  [202, 128, 103, 255],\n  [95, 210, 157, 255],\n  [195, 88, 217, 255],\n  [206, 224, 81, 255],\n  [74, 166, 231, 255],\n  [185, 120, 139, 255],\n  [113, 192, 113, 255],\n  [133, 106, 199, 255],\n  [207, 162, 98, 255],\n  [91, 214, 198, 255],\n  [221, 84, 198, 255],\n  [159, 228, 77, 255],\n  [70, 111, 235, 255],\n  [189, 119, 116, 255],\n  [109, 196, 138, 255],\n  [165, 101, 204, 255],\n  [211, 201, 94, 255],\n  [87, 191, 218, 255],\n  [225, 80, 153, 255],\n  [106, 232, 73, 255],\n  [124, 119, 186, 255],\n  [193, 142, 112, 255],\n  [105, 200, 168, 255],\n  [203, 97, 208, 255],\n  [184, 215, 90, 255],\n  [83, 147, 222, 255],\n  [229, 76, 101, 255],\n  [122, 183, 130, 255],\n  [146, 115, 190, 255],\n  [197, 171, 108, 255],\n  [100, 205, 205, 255],\n  [212, 93, 177, 255],\n  [141, 219, 86, 255],\n  [79, 97, 226, 255],\n  [233, 99, 72, 255],\n  [118, 187, 150, 255],\n  [173, 111, 194, 255],\n  [197, 201, 104, 255],\n  [96, 171, 209, 255],\n  [216, 89, 137, 255],\n  [94, 223, 82, 255],\n  [107, 75, 230, 255],\n  [184, 153, 121, 255],\n  [114, 191, 175, 255],\n  [198, 107, 191, 255],\n  [166, 206, 99, 255],\n  [92, 132, 213, 255],\n  [220, 85, 91, 255],\n  [78, 227, 115, 255],\n  [159, 71, 234, 255],\n  [188, 176, 117, 255],\n  [110, 185, 195, 255],\n  [202, 103, 161, 255],\n  [129, 210, 95, 255],\n  [88, 88, 217, 255],\n  [224, 123, 81, 255],\n  [74, 231, 166, 255],\n  [177, 120, 185, 255],\n  [179, 192, 113, 255],\n  [106, 156, 199, 255],\n  [207, 98, 125, 255],\n  [91, 214, 96, 255],\n  [130, 84, 221, 255],\n  [228, 171, 77, 255],\n  [70, 235, 221, 255],\n  [189, 116, 174, 255],\n  [153, 196, 109, 255],\n  [101, 123, 204, 255],\n  [211, 104, 94, 255],\n  [87, 218, 136, 255],\n  [177, 80, 225, 255],\n  [232, 225, 73, 255],\n  [119, 169, 186, 255],\n  [193, 112, 149, 255],\n  [121, 200, 105, 255],\n  [111, 97, 208, 255],\n  [215, 142, 90, 255],\n  [83, 222, 181, 255],\n  [229, 76, 229, 255],\n  [165, 183, 122, 255],\n  [115, 146, 190, 255],\n  [197, 108, 119, 255],\n  [100, 205, 118, 255],\n  [148, 93, 212, 255],\n  [219, 186, 86, 255],\n  [79, 220, 226, 255],\n  [233, 72, 179, 255],\n  [144, 187, 118, 255],\n  [111, 118, 194, 255],\n  [201, 124, 104, 255],\n  [96, 209, 153, 255],\n  [189, 89, 216, 255],\n  [211, 223, 82, 255],\n  [75, 172, 230, 255],\n  [184, 121, 142, 255],\n  [117, 191, 114, 255],\n  [130, 107, 198, 255],\n  [206, 157, 99, 255],\n  [92, 213, 193, 255],\n  [220, 85, 203, 255],\n  [165, 227, 78, 255],\n  [71, 118, 234, 255],\n  [188, 117, 117, 255],\n  [110, 195, 135, 255],\n  [161, 103, 202, 255],\n  [210, 195, 95, 255],\n  [88, 195, 217, 255],\n  [224, 81, 158, 255],\n  [113, 231, 74, 255],\n  [123, 120, 185, 255],\n  [192, 139, 113, 255],\n  [106, 199, 164, 255],\n  [198, 98, 207, 255],\n  [188, 214, 91, 255],\n  [84, 153, 221, 255],\n  [228, 77, 108, 255],\n  [70, 235, 84, 255],\n  [143, 116, 189, 255],\n  [196, 167, 109, 255],\n  [101, 204, 199, 255],\n  [211, 94, 182, 255],\n  [147, 218, 87, 255],\n  [80, 104, 225, 255],\n  [232, 93, 73, 255],\n  [119, 186, 147, 255],\n  [170, 112, 193, 255],\n  [200, 200, 105, 255],\n  [97, 175, 208, 255],\n  [215, 90, 142, 255],\n  [100, 222, 83, 255],\n  [101, 76, 229, 255],\n  [183, 150, 122, 255],\n  [115, 190, 171, 255],\n  [197, 108, 194, 255],\n  [170, 205, 100, 255],\n  [93, 138, 212, 255],\n  [219, 86, 97, 255],\n  [79, 226, 110, 255],\n  [153, 72, 233, 255],\n  [187, 173, 118, 255],\n  [111, 187, 194, 255],\n  [201, 104, 165, 255],\n  [134, 209, 96, 255],\n  [89, 95, 216, 255],\n  [223, 117, 82, 255],\n  [75, 230, 159, 255],\n  [174, 121, 184, 255],\n  [182, 191, 114, 255],\n  [107, 160, 198, 255],\n  [206, 99, 130, 255],\n  [92, 213, 92, 255],\n  [124, 85, 220, 255],\n  [227, 165, 78, 255],\n  [71, 234, 214, 255],\n  [188, 117, 176, 255],\n  [156, 195, 110, 255],\n  [103, 128, 202, 255],\n  [210, 100, 95, 255],\n  [88, 217, 131, 255],\n  [170, 81, 224, 255],\n  [231, 218, 74, 255],\n  [120, 172, 185, 255],\n  [192, 113, 153, 255],\n  [125, 199, 106, 255],\n  [107, 98, 207, 255],\n  [214, 137, 91, 255],\n  [84, 221, 175, 255],\n  [222, 77, 228, 255],\n  [194, 235, 70, 255],\n  [116, 149, 189, 255],\n  [196, 109, 123, 255],\n  [101, 204, 114, 255],\n  [143, 94, 211, 255],\n  [218, 180, 87, 255],\n  [80, 225, 225, 255],\n  [232, 73, 186, 255],\n  [147, 186, 119, 255],\n  [112, 122, 193, 255],\n  [200, 121, 105, 255],\n  [97, 208, 148, 255],\n  [184, 90, 215, 255],\n  [216, 222, 83, 255],\n  [76, 178, 229, 255],\n  [183, 122, 145, 255],\n  [121, 190, 115, 255],\n  [126, 108, 197, 255],\n  [205, 153, 100, 255],\n  [93, 212, 187, 255],\n  [219, 86, 208, 255],\n  [171, 226, 79, 255],\n  [72, 126, 233, 255],\n  [187, 118, 121, 255],\n  [111, 194, 132, 255],\n  [157, 104, 201, 255],\n  [209, 190, 96, 255],\n  [89, 200, 216, 255],\n  [223, 82, 164, 255],\n  [120, 230, 75, 255],\n  [121, 121, 184, 255],\n  [191, 136, 114, 255],\n  [107, 198, 160, 255],\n  [192, 99, 206, 255],\n  [193, 213, 92, 255],\n  [85, 158, 220, 255],\n  [227, 78, 115, 255],\n  [71, 234, 78, 255],\n  [141, 117, 188, 255],\n  [195, 163, 110, 255],\n  [103, 202, 194, 255],\n  [210, 95, 186, 255],\n  [153, 217, 88, 255],\n  [81, 111, 224, 255],\n];\n\nexport default CORNERSTONE_COLOR_LUT;\n","/**\n * Segmentations on viewports can be visualized in different ways. This enum\n * defines the different ways of visualizing segmentations. Currently, only\n * labelmap is supported.\n */\nenum SegmentationRepresentations {\n  Labelmap = 'LABELMAP',\n  Contour = 'CONTOUR',\n  // Todo: add more representations\n}\n\nexport default SegmentationRepresentations;\n","import { ContourConfig } from '../../../types/ContourTypes';\n\nconst defaultContourConfig: ContourConfig = {\n  renderOutline: true,\n  outlineWidthActive: 2,\n  outlineWidthInactive: 2,\n  outlineOpacity: 1,\n  outlineOpacityInactive: 0.85,\n  renderFill: true,\n  fillAlpha: 1,\n  fillAlphaInactive: 0,\n};\n\nfunction getDefaultContourConfig(): ContourConfig {\n  return defaultContourConfig;\n}\n\nexport default getDefaultContourConfig;\n","import { LabelmapConfig } from '../../../types/LabelmapTypes';\n\nconst defaultLabelmapConfig: LabelmapConfig = {\n  renderOutline: true,\n  outlineWidthActive: 3,\n  outlineWidthInactive: 2,\n  renderFill: true,\n  renderFillInactive: true,\n  fillAlpha: 0.7,\n  fillAlphaInactive: 0.65,\n  outlineOpacity: 1,\n  outlineOpacityInactive: 0.85,\n};\n\nfunction getDefaultLabelmapConfig(): LabelmapConfig {\n  return defaultLabelmapConfig;\n}\n\n// Checks if the labelmap config is valid, which means\n// if all the required fields are present and have the correct type\nfunction isValidLabelmapConfig(config): boolean {\n  return (\n    config &&\n    typeof config.renderOutline === 'boolean' &&\n    typeof config.outlineWidthActive === 'number' &&\n    typeof config.outlineWidthInactive === 'number' &&\n    typeof config.renderFill === 'boolean' &&\n    typeof config.renderFillInactive === 'boolean' &&\n    typeof config.fillAlpha === 'number' &&\n    typeof config.fillAlphaInactive === 'number' &&\n    typeof config.outlineOpacity === 'number' &&\n    typeof config.outlineOpacityInactive === 'number'\n  );\n}\n\nexport default getDefaultLabelmapConfig;\nexport { isValidLabelmapConfig };\n","import { utilities as csUtils } from '@cornerstonejs/core';\nimport cloneDeep from 'lodash.clonedeep';\n\nimport CORNERSTONE_COLOR_LUT from '../../constants/COLOR_LUT';\n\nimport { SegmentationRepresentations } from '../../enums';\nimport getDefaultContourConfig from '../../tools/displayTools/Contour/contourConfig';\nimport getDefaultLabelmapConfig from '../../tools/displayTools/Labelmap/labelmapConfig';\nimport type {\n  ColorLUT,\n  RepresentationConfig,\n  Segmentation,\n  SegmentationRepresentationConfig,\n  SegmentationState,\n  SegmentSpecificRepresentationConfig,\n  ToolGroupSpecificRepresentation,\n  ToolGroupSpecificRepresentations,\n} from '../../types/SegmentationStateTypes';\n\n// Initialize the default configuration\n// Note: when we get other representations, we should set their default representations too.\nconst defaultLabelmapConfig = getDefaultLabelmapConfig();\nconst defaultContourConfig = getDefaultContourConfig();\n\nconst newGlobalConfig: SegmentationRepresentationConfig = {\n  renderInactiveSegmentations: true,\n  representations: {\n    [SegmentationRepresentations.Labelmap]: defaultLabelmapConfig,\n    [SegmentationRepresentations.Contour]: defaultContourConfig,\n  },\n};\n\n/* A default initial state for the segmentation manager. */\nconst initialDefaultState: SegmentationState = {\n  colorLUT: [],\n  segmentations: [],\n  globalConfig: newGlobalConfig,\n  toolGroups: {},\n};\n\n/**\n * The SegmentationStateManager Class is responsible for managing the state of the\n * segmentations. It stores the segmentations and toolGroup specific representations\n * of the segmentation. It also stores a global config and a toolGroup specific\n * config. Note that this is a singleton state manager.\n */\nexport default class SegmentationStateManager {\n  private state: SegmentationState;\n  public readonly uid: string;\n\n  constructor(uid?: string) {\n    if (!uid) {\n      uid = csUtils.uuidv4();\n    }\n    this.state = cloneDeep(initialDefaultState);\n    this.uid = uid;\n  }\n\n  /**\n   * It returns a copy of the current state of the segmentation\n   * @returns A deep copy of the state.\n   */\n  getState(): SegmentationState {\n    return this.state;\n  }\n\n  /**\n   * It returns an array of toolGroupIds currently in the segmentation state.\n   * @returns An array of strings.\n   */\n  getToolGroups(): string[] {\n    return Object.keys(this.state.toolGroups);\n  }\n\n  /**\n   * It returns the colorLUT at the specified index.\n   * @param lutIndex - The index of the color LUT to retrieve.\n   * @returns A ColorLUT object.\n   */\n  getColorLUT(lutIndex: number): ColorLUT | undefined {\n    return this.state.colorLUT[lutIndex];\n  }\n\n  /**\n   * Reset the state to the default state\n   */\n  resetState(): void {\n    this.state = cloneDeep(initialDefaultState);\n  }\n\n  /**\n   * Given a segmentation Id, return the segmentation state\n   * @param segmentationId - The id of the segmentation to get the data for.\n   * @returns - The segmentation data\n   */\n  getSegmentation(segmentationId: string): Segmentation | undefined {\n    return this.state.segmentations.find(\n      (segmentation) => segmentation.segmentationId === segmentationId\n    );\n  }\n\n  /**\n   * It adds a segmentation to the segmentations array.\n   * @param segmentation - Segmentation\n   */\n  addSegmentation(segmentation: Segmentation): void {\n    this._initDefaultColorLUTIfNecessary();\n\n    // Check if the segmentation already exists with the segmentationId\n    if (this.getSegmentation(segmentation.segmentationId)) {\n      throw new Error(\n        `Segmentation with id ${segmentation.segmentationId} already exists`\n      );\n    }\n\n    this.state.segmentations.push(segmentation);\n  }\n\n  /**\n   * Get the segmentation representations for a tool group\n   * @param toolGroupId - string\n   * @returns A list of segmentation representations.\n   */\n  getSegmentationRepresentations(\n    toolGroupId: string\n  ): ToolGroupSpecificRepresentations | undefined {\n    const toolGroupSegRepresentationsWithConfig =\n      this.state.toolGroups[toolGroupId];\n\n    if (!toolGroupSegRepresentationsWithConfig) {\n      return;\n    }\n\n    return toolGroupSegRepresentationsWithConfig.segmentationRepresentations;\n  }\n\n  /**\n   * Returns an array of all segmentation representations for all tool groups.\n   * @returns An array of ToolGroupSpecificRepresentations.\n   */\n  getAllSegmentationRepresentations(): Record<\n    string,\n    ToolGroupSpecificRepresentation[]\n  > {\n    const toolGroupSegReps: Record<string, ToolGroupSpecificRepresentation[]> =\n      {};\n    Object.entries(this.state.toolGroups).forEach(\n      ([toolGroupId, toolGroupSegRepresentationsWithConfig]) => {\n        toolGroupSegReps[toolGroupId] =\n          toolGroupSegRepresentationsWithConfig.segmentationRepresentations;\n      }\n    );\n    return toolGroupSegReps;\n  }\n\n  /**\n   * Add a new segmentation representation to the toolGroup's segmentation representations.\n   * @param toolGroupId - The Id of the tool group .\n   * @param segmentationRepresentation - The segmentation representation to add.\n   */\n  addSegmentationRepresentation(\n    toolGroupId: string,\n    segmentationRepresentation: ToolGroupSpecificRepresentation\n  ): void {\n    // Initialize the default toolGroup state if not created yet\n    if (!this.state.toolGroups[toolGroupId]) {\n      this.state.toolGroups[toolGroupId] = {\n        segmentationRepresentations: [],\n        config: {} as SegmentationRepresentationConfig,\n      };\n    }\n\n    // local toolGroupSpecificSegmentationState\n    this.state.toolGroups[toolGroupId].segmentationRepresentations.push(\n      segmentationRepresentation\n    );\n\n    this._handleActiveSegmentation(toolGroupId, segmentationRepresentation);\n  }\n\n  /**\n   * Get the global config containing both representation config\n   * and render inactive segmentations config\n   * @returns The global config object.\n   */\n  getGlobalConfig(): SegmentationRepresentationConfig {\n    return this.state.globalConfig;\n  }\n\n  /**\n   * It sets the global segmentation config including both representation config\n   * and render inactive segmentations config\n   * @param config - The global configuration for the segmentations.\n   */\n  setGlobalConfig(config: SegmentationRepresentationConfig): void {\n    this.state.globalConfig = config;\n  }\n\n  /**\n   * Given a toolGroupId and a segmentationRepresentationUID, return the segmentation\n   * representation for that tool group.\n   * @param toolGroupId - The Id of the tool group\n   * @param segmentationRepresentationUID - string\n   * @returns The segmentation representation.\n   */\n  getSegmentationRepresentationByUID(\n    toolGroupId: string,\n    segmentationRepresentationUID: string\n  ): ToolGroupSpecificRepresentation | undefined {\n    const toolGroupSegRepresentations =\n      this.getSegmentationRepresentations(toolGroupId);\n\n    const segmentationData = toolGroupSegRepresentations.find(\n      (representation) =>\n        representation.segmentationRepresentationUID ===\n        segmentationRepresentationUID\n    );\n\n    return segmentationData;\n  }\n\n  /**\n   * It removes the segmentation from the segmentation state.\n   * @param segmentationId - The id of the segmentation to remove.\n   */\n  removeSegmentation(segmentationId: string): void {\n    this.state.segmentations = this.state.segmentations.filter(\n      (segmentation) => segmentation.segmentationId !== segmentationId\n    );\n  }\n\n  /**\n   * Remove a segmentation representation from the toolGroup\n   * @param toolGroupId - The Id of the tool group\n   * @param segmentationRepresentationUID - the uid of the segmentation representation to remove\n   * @param immediate - If true, the viewport will be updated immediately.\n   */\n  removeSegmentationRepresentation(\n    toolGroupId: string,\n    segmentationRepresentationUID: string\n  ): void {\n    const toolGroupSegmentationRepresentations =\n      this.getSegmentationRepresentations(toolGroupId);\n\n    if (\n      !toolGroupSegmentationRepresentations ||\n      !toolGroupSegmentationRepresentations.length\n    ) {\n      throw new Error(\n        `No viewport specific segmentation state found for viewport ${toolGroupId}`\n      );\n    }\n\n    const state =\n      toolGroupSegmentationRepresentations as ToolGroupSpecificRepresentations;\n    const index = state.findIndex(\n      (segData) =>\n        segData.segmentationRepresentationUID === segmentationRepresentationUID\n    );\n\n    if (index === -1) {\n      console.warn(\n        `No viewport specific segmentation state data found for viewport ${toolGroupId} and segmentation data UID ${segmentationRepresentationUID}`\n      );\n    }\n\n    const removedSegmentationRepresentation =\n      toolGroupSegmentationRepresentations[index];\n\n    toolGroupSegmentationRepresentations.splice(index, 1);\n\n    this._handleActiveSegmentation(\n      toolGroupId,\n      removedSegmentationRepresentation\n    );\n  }\n\n  /**\n   * Set the active segmentation data for a tool group\n   * @param toolGroupId - The Id of the tool group that owns the\n   * segmentation data.\n   * @param segmentationRepresentationUID - string\n   */\n  setActiveSegmentationRepresentation(\n    toolGroupId: string,\n    segmentationRepresentationUID: string\n  ): void {\n    const toolGroupSegmentations =\n      this.getSegmentationRepresentations(toolGroupId);\n\n    if (!toolGroupSegmentations || !toolGroupSegmentations.length) {\n      throw new Error(\n        `No segmentation data found for toolGroupId: ${toolGroupId}`\n      );\n    }\n\n    const segmentationData = toolGroupSegmentations.find(\n      (segmentationData) =>\n        segmentationData.segmentationRepresentationUID ===\n        segmentationRepresentationUID\n    );\n\n    if (!segmentationData) {\n      throw new Error(\n        `No segmentation data found for segmentation data UID ${segmentationRepresentationUID}`\n      );\n    }\n\n    segmentationData.active = true;\n    this._handleActiveSegmentation(toolGroupId, segmentationData);\n  }\n\n  /**\n   * Given a tool group Id it returns the tool group specific representation config\n   *\n   * @param toolGroupId - The Id of the tool group\n   * @returns A SegmentationConfig object.\n   */\n  getToolGroupSpecificConfig(\n    toolGroupId: string\n  ): SegmentationRepresentationConfig | undefined {\n    const toolGroupStateWithConfig = this.state.toolGroups[toolGroupId];\n\n    if (!toolGroupStateWithConfig) {\n      return;\n    }\n\n    return toolGroupStateWithConfig.config;\n  }\n\n  getSegmentationRepresentationSpecificConfig(\n    toolGroupId: string,\n    segmentationRepresentationUID: string\n  ): RepresentationConfig {\n    const segmentationRepresentation = this.getSegmentationRepresentationByUID(\n      toolGroupId,\n      segmentationRepresentationUID\n    );\n\n    if (!segmentationRepresentation) {\n      return;\n    }\n\n    return segmentationRepresentation.segmentationRepresentationSpecificConfig;\n  }\n\n  setSegmentationRepresentationSpecificConfig(\n    toolGroupId: string,\n    segmentationRepresentationUID: string,\n    config: RepresentationConfig\n  ): void {\n    const segmentationRepresentation = this.getSegmentationRepresentationByUID(\n      toolGroupId,\n      segmentationRepresentationUID\n    );\n\n    if (!segmentationRepresentation) {\n      return;\n    }\n\n    segmentationRepresentation.segmentationRepresentationSpecificConfig =\n      config;\n  }\n\n  getSegmentSpecificConfig(\n    toolGroupId: string,\n    segmentationRepresentationUID: string,\n    segmentIndex: number\n  ): RepresentationConfig {\n    const segmentationRepresentation = this.getSegmentationRepresentationByUID(\n      toolGroupId,\n      segmentationRepresentationUID\n    );\n\n    if (!segmentationRepresentation) {\n      return;\n    }\n\n    return segmentationRepresentation.segmentSpecificConfig[segmentIndex];\n  }\n\n  setSegmentSpecificConfig(\n    toolGroupId: string,\n    segmentationRepresentationUID: string,\n    config: SegmentSpecificRepresentationConfig\n  ): void {\n    const segmentationRepresentation = this.getSegmentationRepresentationByUID(\n      toolGroupId,\n      segmentationRepresentationUID\n    );\n\n    if (!segmentationRepresentation) {\n      return;\n    }\n\n    segmentationRepresentation.segmentSpecificConfig = config;\n  }\n\n  /**\n   * Set the segmentation representations config for a given tool group. It will create a new\n   * tool group specific config if one does not exist.\n   *\n   * @param toolGroupId - The Id of the tool group that the segmentation\n   * belongs to.\n   * @param config - SegmentationConfig\n   */\n  setSegmentationRepresentationConfig(\n    toolGroupId: string,\n    config: SegmentationRepresentationConfig\n  ): void {\n    let toolGroupStateWithConfig = this.state.toolGroups[toolGroupId];\n\n    if (!toolGroupStateWithConfig) {\n      this.state.toolGroups[toolGroupId] = {\n        segmentationRepresentations: [],\n        config: {\n          renderInactiveSegmentations: true,\n          representations: {},\n        },\n      };\n\n      toolGroupStateWithConfig = this.state.toolGroups[toolGroupId];\n    }\n\n    toolGroupStateWithConfig.config = {\n      ...toolGroupStateWithConfig.config,\n      ...config,\n    };\n  }\n\n  /**\n   * It adds a color LUT to the state.\n   * @param colorLUT - ColorLUT\n   * @param lutIndex - The index of the color LUT table to add.\n   */\n  addColorLUT(colorLUT: ColorLUT, lutIndex: number): void {\n    if (this.state.colorLUT[lutIndex]) {\n      console.log('Color LUT table already exists, overwriting');\n    }\n\n    this.state.colorLUT[lutIndex] = colorLUT;\n  }\n\n  /**\n   * Removes a color LUT to the state.\n   * @param colorLUTIndex - The index of the color LUT table to remove.\n   */\n  removeColorLUT(colorLUTIndex: number): void {\n    delete this.state.colorLUT[colorLUTIndex];\n  }\n\n  /**\n   * It handles the active segmentation representation based on the active status of the\n   * segmentation representation that was added or removed.\n   *\n   * @param toolGroupId - The Id of the tool group that the segmentation representation belongs to.\n   * @param recentlyAddedOrRemovedSegmentationRepresentation - ToolGroupSpecificSegmentationData\n   */\n  _handleActiveSegmentation(\n    toolGroupId: string,\n    recentlyAddedOrRemovedSegmentationRepresentation: ToolGroupSpecificRepresentation\n  ): void {\n    const segmentationRepresentations =\n      this.getSegmentationRepresentations(toolGroupId);\n\n    // 1. If there is no segmentation representations, return early\n    if (segmentationRepresentations.length === 0) {\n      return;\n    }\n\n    // 2. If there is only one segmentation representation, make that one active\n    if (segmentationRepresentations.length === 1) {\n      segmentationRepresentations[0].active = true;\n      return;\n    }\n\n    // 3. If removed Segmentation representation was active, make the first one active\n    const activeSegmentationRepresentations =\n      segmentationRepresentations.filter(\n        (representation) => representation.active\n      );\n\n    if (activeSegmentationRepresentations.length === 0) {\n      segmentationRepresentations[0].active = true;\n      return;\n    }\n\n    // 4. If the added segmentation representation is active, make other segmentation\n    // representations inactive\n    if (recentlyAddedOrRemovedSegmentationRepresentation.active) {\n      segmentationRepresentations.forEach((representation) => {\n        if (\n          representation.segmentationRepresentationUID !==\n          recentlyAddedOrRemovedSegmentationRepresentation.segmentationRepresentationUID\n        ) {\n          representation.active = false;\n        }\n      });\n    }\n\n    // 5. if added/removed segmentation is is inactive, do nothing\n  }\n\n  _initDefaultColorLUTIfNecessary() {\n    // if colorLUTTable is not specified or the default one is not found\n    if (this.state.colorLUT.length === 0 || !this.state.colorLUT[0]) {\n      this.addColorLUT(CORNERSTONE_COLOR_LUT as ColorLUT, 0);\n    }\n  }\n}\n\nconst defaultSegmentationStateManager = new SegmentationStateManager('DEFAULT');\nexport { defaultSegmentationStateManager };\n","import { triggerEvent, eventTarget } from '@cornerstonejs/core';\n\nimport { Events } from '../../enums';\nimport {\n  getSegmentationRepresentations,\n  getSegmentations,\n} from '../../stateManagement/segmentation/segmentationState';\nimport {\n  SegmentationRepresentationModifiedEventDetail,\n  SegmentationDataModifiedEventDetail,\n  SegmentationModifiedEventDetail,\n  SegmentationRepresentationRemovedEventDetail,\n  SegmentationRemovedEventDetail,\n} from '../../types/EventTypes';\n\n/**\n * Trigger an event that a segmentation is removed\n * @param segmentationId - The Id of segmentation\n */\nfunction triggerSegmentationRemoved(segmentationId: string): void {\n  const eventDetail: SegmentationRemovedEventDetail = {\n    segmentationId,\n  };\n\n  triggerEvent(eventTarget, Events.SEGMENTATION_REMOVED, eventDetail);\n}\n\n/**\n * Trigger an event that a segmentation representation was removed\n * @param toolGroupId - The id of the tool group that the segmentation\n * representation was removed from.\n * @param segmentationRepresentationUID - The UID of the segmentation\n * representation that was removed.\n */\nfunction triggerSegmentationRepresentationRemoved(\n  toolGroupId: string,\n  segmentationRepresentationUID: string\n): void {\n  const eventDetail: SegmentationRepresentationRemovedEventDetail = {\n    toolGroupId,\n    segmentationRepresentationUID,\n  };\n\n  triggerEvent(\n    eventTarget,\n    Events.SEGMENTATION_REPRESENTATION_REMOVED,\n    eventDetail\n  );\n}\n\n/**\n * Trigger an event on the eventTarget that the segmentation representation for\n * toolGroupId has been updated\n * @param toolGroupId - The Id of the toolGroup\n */\nfunction triggerSegmentationRepresentationModified(\n  toolGroupId: string,\n  segmentationRepresentationUID?: string\n): void {\n  const eventDetail: SegmentationRepresentationModifiedEventDetail = {\n    toolGroupId,\n    segmentationRepresentationUID,\n  };\n\n  if (segmentationRepresentationUID) {\n    triggerEvent(\n      eventTarget,\n      Events.SEGMENTATION_REPRESENTATION_MODIFIED,\n      eventDetail\n    );\n    return;\n  }\n\n  // If no segmentationRepresentationUID is provided, then we need to trigger\n  // the event for all segmentation representations in the toolGroup\n\n  // Get all segmentation representations in the toolGroup\n  const segmentationRepresentations =\n    getSegmentationRepresentations(toolGroupId) || [];\n\n  segmentationRepresentations.forEach((segmentationRepresentation) => {\n    const { segmentationRepresentationUID } = segmentationRepresentation;\n    const eventDetail: SegmentationRepresentationModifiedEventDetail = {\n      toolGroupId,\n      segmentationRepresentationUID,\n    };\n\n    triggerEvent(\n      eventTarget,\n      Events.SEGMENTATION_REPRESENTATION_MODIFIED,\n      eventDetail\n    );\n  });\n}\n\n/**\n * Triggers segmentation global state updated event, notifying all toolGroups\n * that the global state has been updated, If a segmentationId is provided\n * the event will only be triggered for that segmentation, otherwise it will\n * be triggered for all segmentations.\n *\n * @param segmentationId - The id of the segmentation that has been updated\n */\nfunction triggerSegmentationModified(segmentationId?: string): void {\n  let segmentationIds;\n\n  if (segmentationId) {\n    segmentationIds = [segmentationId];\n  } else {\n    // get all toolGroups\n    segmentationIds = getSegmentations().map(\n      ({ segmentationId }) => segmentationId\n    );\n  }\n\n  // 1. Trigger an event notifying all listeners about the segmentationId\n  // that has been updated.\n  segmentationIds.forEach((segmentationId) => {\n    const eventDetail: SegmentationModifiedEventDetail = {\n      segmentationId,\n    };\n    triggerEvent(eventTarget, Events.SEGMENTATION_MODIFIED, eventDetail);\n  });\n\n  // Todo: I don't think we need the following lines of code\n  // // 2. Notify all viewports that render the segmentationId in order to update the\n  // // rendering based on the new global state.\n  // toolGroupIds.forEach((toolGroupId) => {\n  //   triggerSegmentationRepresentationModified(toolGroupId)\n  // })\n}\n\n/**\n * Trigger an event that a segmentation data has been modified\n * @param segmentationId - The Id of segmentation\n */\nfunction triggerSegmentationDataModified(\n  segmentationId: string,\n  modifiedSlicesToUse?: number[]\n): void {\n  const eventDetail: SegmentationDataModifiedEventDetail = {\n    segmentationId,\n    modifiedSlicesToUse,\n  };\n\n  triggerEvent(eventTarget, Events.SEGMENTATION_DATA_MODIFIED, eventDetail);\n}\n\nexport {\n  // ToolGroup Specific\n  triggerSegmentationRepresentationModified,\n  triggerSegmentationRepresentationRemoved,\n  // Global\n  triggerSegmentationDataModified,\n  triggerSegmentationModified,\n  triggerSegmentationRemoved,\n};\n","import {\n  SegmentationPublicInput,\n  Segmentation,\n} from '../../../types/SegmentationStateTypes';\n\n/**\n * It takes in a segmentation input and returns a segmentation with default values\n * @param segmentationInput - The input to the segmentation.\n * @returns A Segmentation object.\n * @internal\n */\nfunction normalizeSegmentationInput(\n  segmentationInput: SegmentationPublicInput\n): Segmentation {\n  const { segmentationId, representation } = segmentationInput;\n\n  // Todo: we should be able to let the user pass in non-default values for\n  // cachedStats, label, activeSegmentIndex, etc.\n  return {\n    segmentationId,\n    cachedStats: {},\n    segmentLabels: {},\n    label: null,\n    segmentsLocked: new Set(),\n    type: representation.type,\n    activeSegmentIndex: 1,\n    representationData: {\n      [representation.type]: {\n        ...representation.data,\n      },\n    },\n  };\n}\n\nexport default normalizeSegmentationInput;\n","import type {\n  ColorLUT,\n  RepresentationConfig,\n  Segmentation,\n  SegmentationPublicInput,\n  SegmentationRepresentationConfig,\n  SegmentSpecificRepresentationConfig,\n  ToolGroupSpecificRepresentation,\n  ToolGroupSpecificRepresentations,\n} from '../../types/SegmentationStateTypes';\nimport { defaultSegmentationStateManager } from './SegmentationStateManager';\nimport {\n  triggerSegmentationModified,\n  triggerSegmentationRemoved,\n  triggerSegmentationRepresentationModified,\n  triggerSegmentationRepresentationRemoved,\n} from './triggerSegmentationEvents';\n\nimport normalizeSegmentationInput from './helpers/normalizeSegmentationInput';\n\n/**\n * It returns the defaultSegmentationStateManager.\n */\nfunction getDefaultSegmentationStateManager() {\n  return defaultSegmentationStateManager;\n}\n\n/*************************\n *\n * Segmentation State\n *\n **************************/\n\n/**\n * Get the segmentation for the given segmentationId\n * @param segmentationId - The Id of the segmentation\n * @returns A GlobalSegmentationData object\n */\nfunction getSegmentation(segmentationId: string): Segmentation | undefined {\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n  return segmentationStateManager.getSegmentation(segmentationId);\n}\n\n/**\n * Get the segmentations inside the state\n * @returns Segmentation array\n */\nfunction getSegmentations(): Segmentation[] | [] {\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n  const state = segmentationStateManager.getState();\n\n  return state.segmentations;\n}\n\n/**\n * It takes a segmentation input and adds it to the segmentation state manager\n * @param segmentationInput - The segmentation to add.\n * @param suppressEvents - If true, the event will not be triggered.\n */\nfunction addSegmentation(\n  segmentationInput: SegmentationPublicInput,\n  suppressEvents?: boolean\n): void {\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n\n  const segmentation = normalizeSegmentationInput(segmentationInput);\n\n  segmentationStateManager.addSegmentation(segmentation);\n\n  if (!suppressEvents) {\n    triggerSegmentationModified(segmentation.segmentationId);\n  }\n}\n\n/**\n * Get the segmentation state for a tool group. It will return an array of\n * segmentation representation objects.\n * @param toolGroupId - The unique identifier of the tool group.\n * @returns An array of segmentation representation objects.\n */\nfunction getSegmentationRepresentations(\n  toolGroupId: string\n): ToolGroupSpecificRepresentations | [] {\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n  return segmentationStateManager.getSegmentationRepresentations(toolGroupId);\n}\n\n/**\n * Get all segmentation representations in the state\n * @returns An array of segmentation representation objects.\n */\nfunction getAllSegmentationRepresentations(): Record<\n  string,\n  ToolGroupSpecificRepresentation[]\n> {\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n  return segmentationStateManager.getAllSegmentationRepresentations();\n}\n\n/**\n * Get the tool group IDs that have a segmentation representation with the given\n * segmentationId\n * @param segmentationId - The id of the segmentation\n * @returns An array of tool group IDs.\n */\nfunction getToolGroupIdsWithSegmentation(segmentationId: string): string[] {\n  if (!segmentationId) {\n    throw new Error('getToolGroupIdsWithSegmentation: segmentationId is empty');\n  }\n\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n  const state = segmentationStateManager.getState();\n  const toolGroupIds = Object.keys(state.toolGroups);\n\n  const foundToolGroupIds = [];\n  toolGroupIds.forEach((toolGroupId) => {\n    const toolGroupSegmentationRepresentations =\n      segmentationStateManager.getSegmentationRepresentations(toolGroupId);\n\n    toolGroupSegmentationRepresentations.forEach((representation) => {\n      if (representation.segmentationId === segmentationId) {\n        foundToolGroupIds.push(toolGroupId);\n      }\n    });\n  });\n\n  return foundToolGroupIds;\n}\n\n/**\n * Get the segmentation representations config for a given tool group\n * @param toolGroupId - The Id of the tool group that the segmentation\n * config belongs to.\n * @returns A SegmentationConfig object.\n */\nfunction getToolGroupSpecificConfig(\n  toolGroupId: string\n): SegmentationRepresentationConfig {\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n  return segmentationStateManager.getToolGroupSpecificConfig(toolGroupId);\n}\n\n/**\n * Set the segmentation representation config for the provided toolGroup. ToolGroup specific\n * configuration overwrites the global configuration for each representation.\n * It fires SEGMENTATION_REPRESENTATION_MODIFIED event if not suppressed.\n *\n * @triggers SEGMENTATION_REPRESENTATION_MODIFIED\n * @param toolGroupId - The Id of the tool group that the segmentation\n * config is being set for.\n * @param config - The new configuration for the tool group.\n * @param suppressEvents - If true, the event will not be triggered.\n */\nfunction setToolGroupSpecificConfig(\n  toolGroupId: string,\n  config: SegmentationRepresentationConfig,\n  suppressEvents?: boolean\n): void {\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n  segmentationStateManager.setSegmentationRepresentationConfig(\n    toolGroupId,\n    config\n  );\n\n  if (!suppressEvents) {\n    triggerSegmentationRepresentationModified(toolGroupId);\n  }\n}\n\n/**\n * It sets the segmentation representation specific config for all the segments\n * inside the segmentation.\n * @param segmentationRepresentationUID - The unique identifier of the segmentation representation.\n * @param config  - The new configuration for the segmentation representation it is an object with keys of\n * different representation types, and values of the configuration for each representation type.\n */\nfunction setSegmentationRepresentationSpecificConfig(\n  toolGroupId: string,\n  segmentationRepresentationUID: string,\n  config: RepresentationConfig,\n  suppressEvents = false\n): void {\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n  segmentationStateManager.setSegmentationRepresentationSpecificConfig(\n    toolGroupId,\n    segmentationRepresentationUID,\n    config\n  );\n\n  if (!suppressEvents) {\n    triggerSegmentationRepresentationModified(\n      toolGroupId,\n      segmentationRepresentationUID\n    );\n  }\n}\n\n/**\n * It returns the segmentation representation specific config which is the same for all the segments\n * @param segmentationRepresentationUID - The unique identifier of the segmentation representation.\n * @returns - The segmentation representation specific config.\n */\nfunction getSegmentationRepresentationSpecificConfig(\n  toolGroupId: string,\n  segmentationRepresentationUID: string\n): RepresentationConfig {\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n  return segmentationStateManager.getSegmentationRepresentationSpecificConfig(\n    toolGroupId,\n    segmentationRepresentationUID\n  );\n}\n\nfunction getSegmentSpecificRepresentationConfig(\n  toolGroupId: string,\n  segmentationRepresentationUID: string,\n  segmentIndex: number\n): RepresentationConfig {\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n  return segmentationStateManager.getSegmentSpecificConfig(\n    toolGroupId,\n    segmentationRepresentationUID,\n    segmentIndex\n  );\n}\n\nfunction setSegmentSpecificRepresentationConfig(\n  toolGroupId: string,\n  segmentationRepresentationUID: string,\n  config: SegmentSpecificRepresentationConfig,\n  suppressEvents = false\n): void {\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n  segmentationStateManager.setSegmentSpecificConfig(\n    toolGroupId,\n    segmentationRepresentationUID,\n    config\n  );\n\n  // Todo: this can be even more performant if we create a new event for\n  // triggering a specific segment config change.\n  if (!suppressEvents) {\n    triggerSegmentationRepresentationModified(\n      toolGroupId,\n      segmentationRepresentationUID\n    );\n  }\n}\n\n/**\n * Add the given segmentation representation data to the given tool group state. It fires\n * SEGMENTATION_REPRESENTATION_MODIFIED event if not suppressed.\n *\n * @triggers SEGMENTATION_REPRESENTATION_MODIFIED\n *\n * @param toolGroupId - The Id of the tool group that the segmentation representation is for.\n * @param segmentationData - The data to add to the segmentation state.\n * @param suppressEvents - boolean\n */\nfunction addSegmentationRepresentation(\n  toolGroupId: string,\n  segmentationRepresentation: ToolGroupSpecificRepresentation,\n  suppressEvents?: boolean\n): void {\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n  segmentationStateManager.addSegmentationRepresentation(\n    toolGroupId,\n    segmentationRepresentation\n  );\n\n  if (!suppressEvents) {\n    triggerSegmentationRepresentationModified(\n      toolGroupId,\n      segmentationRepresentation.segmentationRepresentationUID\n    );\n  }\n}\n\n/**\n * It returns the global segmentation config. Note that the toolGroup-specific\n * configuration has higher priority than the global configuration and overwrites\n * the global configuration for each representation.\n * @returns The global segmentation configuration for all segmentations.\n */\nfunction getGlobalConfig(): SegmentationRepresentationConfig {\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n  return segmentationStateManager.getGlobalConfig();\n}\n\n/**\n * Set the global segmentation configuration. It fires SEGMENTATION_MODIFIED\n * event if not suppressed.\n *\n * @triggers SEGMENTATION_MODIFIED\n * @param config - The new global segmentation config.\n * @param suppressEvents - If true, the `segmentationGlobalStateModified` event will not be triggered.\n */\nfunction setGlobalConfig(\n  config: SegmentationRepresentationConfig,\n  suppressEvents?: boolean\n): void {\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n  segmentationStateManager.setGlobalConfig(config);\n\n  if (!suppressEvents) {\n    triggerSegmentationModified();\n  }\n}\n\n/**\n * Get the segmentation data object for a given tool group and\n * segmentation data UID. It searches all the toolGroup specific segmentation\n * data objects and returns the first one that matches the UID.\n * @param toolGroupId - The Id of the tool group that the segmentation\n * data belongs to.\n * @param segmentationRepresentationUID - The uid of the segmentation representation\n * @returns Segmentation Data object.\n */\nfunction getSegmentationRepresentationByUID(\n  toolGroupId: string,\n  segmentationRepresentationUID: string\n): ToolGroupSpecificRepresentation | undefined {\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n  return segmentationStateManager.getSegmentationRepresentationByUID(\n    toolGroupId,\n    segmentationRepresentationUID\n  );\n}\n\n/**\n * It removes the segmentation from the segmentation state manager\n *\n * @triggers SEGMENTATION_REMOVED\n *\n * @param segmentationId - The id of the segmentation\n */\nfunction removeSegmentation(segmentationId: string): void {\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n  segmentationStateManager.removeSegmentation(segmentationId);\n  triggerSegmentationRemoved(segmentationId);\n}\n\n/**\n * Remove a segmentation representation from the segmentation state manager for a toolGroup.\n * It fires SEGMENTATION_REPRESENTATION_MODIFIED event.\n *\n * @triggers SEGMENTATION_REPRESENTATION_REMOVED\n *\n * @param toolGroupId - The Id of the tool group that the segmentation\n * data belongs to.\n * @param segmentationRepresentationUID - The uid of the segmentation representation to remove.\n * remove.\n * @param - immediate - If true, the viewports will be updated immediately.\n */\nfunction removeSegmentationRepresentation(\n  toolGroupId: string,\n  segmentationRepresentationUID: string\n): void {\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n  segmentationStateManager.removeSegmentationRepresentation(\n    toolGroupId,\n    segmentationRepresentationUID\n  );\n\n  triggerSegmentationRepresentationRemoved(\n    toolGroupId,\n    segmentationRepresentationUID\n  );\n}\n\n/**\n * Add a color LUT to the segmentation state manager\n * @param colorLUT - The color LUT array to add.\n * @param index - The index of the color LUT to add.\n */\nfunction removeColorLUT(colorLUTIndex: number): void {\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n  segmentationStateManager.removeColorLUT(colorLUTIndex);\n}\n\n/**\n * Get the color lut for a given index\n * @param index - The index of the color lut to retrieve.\n * @returns A ColorLUT array.\n */\nfunction getColorLUT(index: number): ColorLUT | undefined {\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n  return segmentationStateManager.getColorLUT(index);\n}\n\n/**\n * Add a color LUT to the segmentation state manager\n * @param colorLUT - The color LUT array to add.\n * @param index - The index of the color LUT to add.\n */\nfunction addColorLUT(colorLUT: ColorLUT, index: number): void {\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n  segmentationStateManager.addColorLUT(colorLUT, index);\n  // Todo: trigger event color LUT added\n}\n\nexport {\n  getDefaultSegmentationStateManager,\n  // Segmentation\n  getSegmentation,\n  getSegmentations,\n  addSegmentation,\n  removeSegmentation,\n  // ToolGroup specific Segmentation Representation\n  getSegmentationRepresentations,\n  addSegmentationRepresentation,\n  removeSegmentationRepresentation,\n  // config\n  getToolGroupSpecificConfig,\n  setToolGroupSpecificConfig,\n  getGlobalConfig,\n  setGlobalConfig,\n  getSegmentationRepresentationSpecificConfig,\n  setSegmentationRepresentationSpecificConfig,\n  getSegmentSpecificRepresentationConfig,\n  setSegmentSpecificRepresentationConfig,\n  // helpers s\n  getToolGroupIdsWithSegmentation,\n  getAllSegmentationRepresentations,\n  getSegmentationRepresentationByUID,\n  // color\n  addColorLUT,\n  getColorLUT,\n  removeColorLUT,\n};\n","import { getEnabledElement } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { IPoints } from '../../types';\n\n/**\n * Given a native mouse event, get the associated cornerstone3D enabled element\n * and derive a set of coordinates useful for tools.\n * @param evt - The Mouse event.\n * @param element - The DOM HTMLDivElement that the event was triggered on.\n * @returns The points related to the event in the form of a `IPoints` object containing\n * the following properties: `page`, `client`, `canvas`, and `world` details of the event.\n */\nexport default function getMouseEventPoints(\n  evt: MouseEvent,\n  element?: HTMLDivElement\n): IPoints {\n  const elementToUse = element || (evt.currentTarget as HTMLDivElement);\n  const { viewport } = getEnabledElement(elementToUse);\n  const clientPoint = _clientToPoint(evt);\n  const pagePoint = _pageToPoint(evt);\n  const canvasPoint = _pagePointsToCanvasPoints(elementToUse, pagePoint);\n  const worldPoint = viewport.canvasToWorld(canvasPoint);\n\n  return {\n    page: pagePoint,\n    client: clientPoint,\n    canvas: canvasPoint,\n    world: worldPoint,\n  };\n}\n\n/**\n * Converts point from page coordinates to canvas coordinates.\n * @param element - HTMLDivElement\n * @param pagePoint - Point in page coordinates pageX and pageY\n *\n * @returns The canvas coordinate points\n */\nfunction _pagePointsToCanvasPoints(\n  element: HTMLDivElement,\n  pagePoint: Types.Point2\n): Types.Point2 {\n  const rect = element.getBoundingClientRect();\n  return [\n    pagePoint[0] - rect.left - window.pageXOffset,\n    pagePoint[1] - rect.top - window.pageYOffset,\n  ];\n}\n\n/**\n * Converts the event's `pageX` and `pageY` properties to Types.Point2 format\n *\n * @param evt - The Mouse `Event`\n */\nfunction _pageToPoint(evt: MouseEvent): Types.Point2 {\n  return [evt.pageX, evt.pageY];\n}\n\n/**\n * Converts the event's `clientX` and `clientY` properties to Types.Point2 format\n * @param evt - The Mouse `Event`\n */\nfunction _clientToPoint(evt: MouseEvent): Types.Point2 {\n  return [evt.clientX, evt.clientY];\n}\n","import { getEnabledElement, triggerEvent } from '@cornerstonejs/core';\nimport Events from '../../enums/Events';\nimport getMouseEventPoints from './getMouseEventPoints';\nimport { EventTypes, IPoints } from '../../types';\n\n/**\n * Captures and normalizes the double click event. Emits as a cornerstoneTools3D\n * double click event.\n *\n * @param evt - The mouse event.\n */\nfunction mouseDoubleClickListener(evt: MouseEvent): void {\n  const element = <HTMLDivElement>evt.currentTarget;\n\n  const { viewportId, renderingEngineId } = getEnabledElement(element);\n\n  const startPoints = getMouseEventPoints(evt, element);\n  const deltaPoints: IPoints = {\n    page: [0, 0],\n    client: [0, 0],\n    canvas: [0, 0],\n    world: [0, 0, 0],\n  };\n\n  const eventDetail: EventTypes.MouseDoubleClickEventDetail = {\n    event: evt,\n    eventName: Events.MOUSE_DOUBLE_CLICK,\n    viewportId,\n    renderingEngineId,\n    camera: {},\n    element,\n    startPoints,\n    lastPoints: startPoints,\n    currentPoints: startPoints,\n    deltaPoints,\n  };\n\n  const consumed = !triggerEvent(\n    element,\n    Events.MOUSE_DOUBLE_CLICK,\n    eventDetail\n  );\n\n  if (consumed) {\n    // The Events.MOUSE_DOUBLE_CLICK was consumed, thus no other listener should handle this 'dblclick' event.\n\n    // Use stopImmediatePropagation to lessen the possibility that a third party 'dblclick'\n    // listener receives this event. However, there still is no guarantee\n    // that any third party listener has not already handled the event.\n    evt.stopImmediatePropagation();\n    evt.preventDefault();\n  }\n}\n\nexport default mouseDoubleClickListener;\n","import { getEnabledElement, triggerEvent } from '@cornerstonejs/core';\nimport Events from '../../enums/Events';\nimport getMouseEventPoints from './getMouseEventPoints';\nimport { MouseMoveEventDetail } from '../../types/EventTypes';\n\nconst eventName = Events.MOUSE_MOVE;\n\n/**\n * Captures and normalizes the mouse move event. Emits as a cornerstoneTools3D\n * mouse move event.\n *\n * @param evt - The mouse event.\n */\nfunction mouseMoveListener(evt: MouseEvent) {\n  const element = <HTMLDivElement>evt.currentTarget;\n  const enabledElement = getEnabledElement(element);\n  const { renderingEngineId, viewportId } = enabledElement;\n\n  const currentPoints = getMouseEventPoints(evt);\n  const eventDetail: MouseMoveEventDetail = {\n    renderingEngineId,\n    viewportId,\n    camera: {},\n    element,\n    currentPoints,\n    eventName,\n    event: evt,\n  };\n\n  triggerEvent(element, eventName, eventDetail);\n}\n\nexport default mouseMoveListener;\n","import { getEnabledElement, triggerEvent } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport Events from '../../enums/Events';\nimport mouseMoveListener from './mouseMoveListener';\nimport { EventTypes, IPoints } from '../../types';\nimport getMouseEventPoints from './getMouseEventPoints';\n\nconst { MOUSE_DOWN, MOUSE_DOWN_ACTIVATE, MOUSE_CLICK, MOUSE_UP, MOUSE_DRAG } =\n  Events;\n\n// The amount of time in milliseconds within which a browser 'dblclick' event has to occur.\n// Any mouse down, up, down and up sequence taking longer than this time is considered to\n// NOT be a double click and any browser 'dblclick' event that subsequently occurs as a result\n// of such a sequence will be ignored. It is best to set this to a value that is less\n// than the system value for detecting a double click. Setting something too large\n// might detect a double click that does not constitute a browser 'dblclick' and thus\n// no mouse events for the sequence will get fired at all.\n//\n// TODO This module should detect and fire 'dblclick' events at its discretion and\n// ignore all those generated by the browser.\n//\nconst DOUBLE_CLICK_TOLERANCE_MS = 400;\n\n// This tolerance is how long to accept a secondary button down\nconst MULTI_BUTTON_TOLERANCE_MS = 150;\n\n// A drag (projected distance) during the double click timeout that is greater than this\n// value will cancel the timeout and suppress any double click that might occur.\n// This tolerance is particularly important on touch devices where some movement\n// might occur between the two clicks.\n//\n// TODO revisit this value for touch devices\n//\nconst DOUBLE_CLICK_DRAG_TOLERANCE = 3;\n\ninterface IMouseDownListenerState {\n  mouseButton: number;\n  element: HTMLDivElement;\n  renderingEngineId: string;\n  viewportId: string;\n  isClickEvent: boolean;\n  clickDelay: number;\n  preventClickTimeout: ReturnType<typeof setTimeout>;\n  startPoints: IPoints;\n  lastPoints: IPoints;\n}\n\ninterface IDoubleClickState {\n  doubleClickTimeout: ReturnType<typeof setTimeout>;\n  mouseDownEvent: MouseEvent;\n  mouseUpEvent: MouseEvent;\n  ignoreDoubleClick: boolean;\n}\n\n// STATE\nconst defaultState: IMouseDownListenerState = {\n  mouseButton: undefined,\n  //\n  element: null,\n  renderingEngineId: undefined,\n  viewportId: undefined,\n  //\n  isClickEvent: true,\n  clickDelay: 200,\n  preventClickTimeout: null,\n  startPoints: {\n    page: [0, 0],\n    client: [0, 0],\n    canvas: [0, 0],\n    world: [0, 0, 0],\n  },\n  lastPoints: {\n    page: [0, 0],\n    client: [0, 0],\n    canvas: [0, 0],\n    world: [0, 0, 0],\n  },\n};\n\nlet state: IMouseDownListenerState = {\n  mouseButton: undefined,\n  //\n  renderingEngineId: undefined,\n  viewportId: undefined,\n  //\n  isClickEvent: true,\n  clickDelay: 200,\n  element: null,\n  preventClickTimeout: null,\n  startPoints: {\n    page: [0, 0],\n    client: [0, 0],\n    canvas: [0, 0],\n    world: [0, 0, 0],\n  },\n  lastPoints: {\n    page: [0, 0],\n    client: [0, 0],\n    canvas: [0, 0],\n    world: [0, 0, 0],\n  },\n};\n\nconst doubleClickState: IDoubleClickState = {\n  doubleClickTimeout: null,\n  mouseDownEvent: null,\n  mouseUpEvent: null,\n  ignoreDoubleClick: false,\n};\n\n/**\n * Listens to mouse down events from the DOM and depending on interaction and further\n * interaction can emit the following mouse events:\n *\n * - MOUSE_DOWN\n * - MOUSE_DOWN_ACTIVATE\n * - MOUSE_DRAG (move while down)\n * - MOUSE_UP\n * - MOUSE_CLICK\n *\n * The mouse down is NOT handled immediately. Instead, a timeout is started to\n * determine if this mouse down is the first in a sequence that constitutes a\n * double click.\n *\n * @param evt - The Mouse event.\n * @private\n */\nfunction mouseDownListener(evt: MouseEvent) {\n  if (doubleClickState.doubleClickTimeout) {\n    // A second identical click will be a double click event, so ignore it\n    if (evt.buttons === doubleClickState.mouseDownEvent.buttons) return;\n\n    // Record the second button or the changed button event as the initial\n    // button down state so that the multi-button event can be detected\n    doubleClickState.mouseDownEvent = evt;\n\n    // If second button is added, then ensure double click timeout is terminated\n    // and do not handle three or more button gestures.\n    _doStateMouseDownAndUp();\n    return;\n  }\n\n  // Handle multi-button clicks by adding a delay before handling them.\n  // Double clicks (left button only) physically take the user longer, so\n  // use a longer timeout, and for multi-button at the same time, the clicks\n  // are done at the same time by the user, just the system perceives them\n  // separately, so have a short timeout to allow catching both buttons.\n  doubleClickState.doubleClickTimeout = setTimeout(\n    _doStateMouseDownAndUp,\n    evt.buttons === 1 ? DOUBLE_CLICK_TOLERANCE_MS : MULTI_BUTTON_TOLERANCE_MS\n  );\n\n  // First mouse down of a potential double click. So save it and start\n  // a timeout to determine a double click.\n  doubleClickState.mouseDownEvent = evt;\n  doubleClickState.ignoreDoubleClick = false;\n\n  state.element = <HTMLDivElement>evt.currentTarget;\n\n  state.mouseButton = evt.buttons;\n\n  const enabledElement = getEnabledElement(state.element);\n  const { renderingEngineId, viewportId } = enabledElement;\n\n  state.renderingEngineId = renderingEngineId;\n  state.viewportId = viewportId;\n\n  state.preventClickTimeout = setTimeout(\n    _preventClickHandler,\n    state.clickDelay\n  );\n\n  // Prevent CornerstoneToolsMouseMove while mouse is down\n  state.element.removeEventListener('mousemove', mouseMoveListener);\n\n  const startPoints = getMouseEventPoints(evt, state.element);\n  state.startPoints = _copyPoints(startPoints);\n  state.lastPoints = _copyPoints(startPoints);\n\n  document.addEventListener('mouseup', _onMouseUp);\n  document.addEventListener('mousemove', _onMouseDrag);\n}\n\n/**\n * Does the actual mouse down logic if the double click timer has expired or\n * a mouse drag has started.\n * @param evt the mouse down event\n * @private\n */\nfunction _doMouseDown(evt: MouseEvent) {\n  const deltaPoints = _getDeltaPoints(state.startPoints, state.startPoints);\n\n  const eventDetail: EventTypes.MouseDownEventDetail = {\n    event: evt,\n    eventName: MOUSE_DOWN,\n    element: state.element,\n    mouseButton: state.mouseButton,\n    renderingEngineId: state.renderingEngineId,\n    viewportId: state.viewportId,\n    camera: {},\n    startPoints: state.startPoints,\n    lastPoints: state.startPoints,\n    currentPoints: state.startPoints,\n    deltaPoints,\n  };\n\n  state.lastPoints = _copyPoints(eventDetail.lastPoints);\n\n  // by triggering MOUSE_DOWN it checks if this is toolSelection, handle modification etc.\n  // of already existing tools\n  const notConsumed = triggerEvent(\n    eventDetail.element,\n    MOUSE_DOWN,\n    eventDetail\n  );\n\n  // if no tools responded to this event and prevented its default behavior,\n  // create a new tool\n  if (notConsumed) {\n    triggerEvent(eventDetail.element, MOUSE_DOWN_ACTIVATE, eventDetail);\n  }\n}\n\n/**\n *_onMouseDrag - Handle emission of drag events whilst the mouse is depressed.\n *\n * @private\n * @param evt - The mouse event.\n */\nfunction _onMouseDrag(evt: MouseEvent) {\n  const currentPoints = getMouseEventPoints(evt, state.element);\n  const lastPoints = _updateMouseEventsLastPoints(\n    state.element,\n    state.lastPoints\n  );\n\n  const deltaPoints = _getDeltaPoints(currentPoints, lastPoints);\n\n  if (doubleClickState.doubleClickTimeout) {\n    if (_isDragPastDoubleClickTolerance(deltaPoints.canvas)) {\n      // Dragging past the tolerance means no double click should occur.\n      _doStateMouseDownAndUp();\n    } else {\n      return;\n    }\n  }\n\n  const eventDetail: EventTypes.MouseDragEventDetail = {\n    event: evt,\n    eventName: MOUSE_DRAG,\n    mouseButton: state.mouseButton,\n    renderingEngineId: state.renderingEngineId,\n    viewportId: state.viewportId,\n    camera: {},\n    element: state.element,\n    startPoints: _copyPoints(state.startPoints),\n    lastPoints: _copyPoints(lastPoints),\n    currentPoints,\n    deltaPoints,\n  };\n\n  triggerEvent(state.element, MOUSE_DRAG, eventDetail);\n\n  // Update the last points\n  state.lastPoints = _copyPoints(currentPoints);\n}\n\n/**\n *_onMouseUp - Handle emission of mouse up events, and re-enabling mouse move events.\n *\n * If the mouse up event occurs during a double click timeout, it is either the first or\n * second mouse up of a potential double click sequence. If the first, then it\n * is saved in case the double click timeout expires and a simple mouse down and\n * up have to get executed. If the second, then the latest mouse down, up, down and\n * up constitute a double click and the mouseDoubleClickListener needs to execute.\n *\n * If the mouse up event comes after the double click timeout, then it is simply\n * handled as the up of a mouse down and up sequence.\n *\n * @private\n * @param evt - The mouse event.\n */\nfunction _onMouseUp(evt: MouseEvent): void {\n  // Cancel the timeout preventing the click event from triggering\n  clearTimeout(state.preventClickTimeout);\n\n  if (doubleClickState.doubleClickTimeout) {\n    // received a mouse up while waiting for a double click (via a timeout)\n\n    if (!doubleClickState.mouseUpEvent) {\n      // this is the first mouse up during the double click timeout; we'll need it later if the timeout expires\n      doubleClickState.mouseUpEvent = evt;\n\n      state.element.addEventListener('mousemove', _onMouseMove);\n    } else {\n      // this is the second mouse up of a double click!\n      _cleanUp();\n    }\n  } else {\n    // Handle the actual mouse up. Note that it may have occurred during the double click timeout or\n    // after it expired. In either case this block is being executed after the time out has expired\n    // or after a drag started.\n\n    const eventName = state.isClickEvent ? MOUSE_CLICK : MOUSE_UP;\n\n    const currentPoints = getMouseEventPoints(evt, state.element);\n    const deltaPoints = _getDeltaPoints(currentPoints, state.lastPoints);\n    const eventDetail:\n      | EventTypes.MouseUpEventDetail\n      | EventTypes.MouseClickEventType = {\n      event: evt,\n      eventName,\n      mouseButton: state.mouseButton,\n      element: state.element,\n      renderingEngineId: state.renderingEngineId,\n      viewportId: state.viewportId,\n      camera: {},\n      startPoints: _copyPoints(state.startPoints),\n      lastPoints: _copyPoints(state.lastPoints),\n      currentPoints,\n      deltaPoints,\n    };\n\n    triggerEvent(eventDetail.element, eventName, eventDetail);\n\n    _cleanUp();\n  }\n\n  // Remove the drag as soon as we get the mouse up because either we have executed\n  // the mouse up logic, or we have not even handled the mouse down logic yet\n  // - either way no drag should/can occur.\n  document.removeEventListener('mousemove', _onMouseDrag);\n}\n\n/**\n * Handles a mouse move on the state element after a mouse down AND up AND\n * while the double click timeout is still running.\n * @private\n * @param evt - The mouse event.\n */\nfunction _onMouseMove(evt: MouseEvent) {\n  const currentPoints = getMouseEventPoints(evt, state.element);\n  const lastPoints = _updateMouseEventsLastPoints(\n    state.element,\n    state.lastPoints\n  );\n\n  const deltaPoints = _getDeltaPoints(currentPoints, lastPoints);\n\n  if (!_isDragPastDoubleClickTolerance(deltaPoints.canvas)) {\n    return;\n  }\n\n  _doStateMouseDownAndUp();\n\n  // Do the move again because during the timeout the global mouse move listener was removed.\n  // Now it is back.\n  mouseMoveListener(evt);\n}\n\n/**\n * Determines if the given delta is past the double click, (projected) drag distance\n * tolerance.\n * @param delta the delta\n * @returns true iff the delta is past the tolerance\n */\nfunction _isDragPastDoubleClickTolerance(delta: Types.Point2): boolean {\n  return Math.abs(delta[0]) + Math.abs(delta[1]) > DOUBLE_CLICK_DRAG_TOLERANCE;\n}\n\nfunction _preventClickHandler() {\n  state.isClickEvent = false;\n}\n\n/**\n * Do a mouse down and potential mouse up using each of the events in the double click state.\n * The events were stored in the state during the timeout to determine a double click.\n *\n * This function should be invoked whenever it is determined that the latest\n * sequence of mouse down(s) and up(s) is NOT a double click. Examples of this include\n * - the expiration of the double click timeout\n * - a mouse drag/move beyond the DOUBLE_CLICK_DRAG_TOLERANCE\n *\n * This function sets the doubleClickState.ignoreDoubleClick flag in case our timeout value\n * or mouse move/drag tolerance is inaccurate and we do indeed get a double click event from\n * the browser later. The flag will be cleared in the mouseDoubleClickIgnoreListener should a\n * double click event get fired. If there is no eventual double click for the latest sequence,\n * the flag spills into the next sequence where it will get cleared at the beginning of that next\n * sequence in mouseDownListener. It is perfectly safe for the flag to be\n * left true when no double click actually occurs because any future double click must start with\n * a mouse down that is handled in this module.\n *\n * @private\n */\nfunction _doStateMouseDownAndUp() {\n  doubleClickState.ignoreDoubleClick = true;\n\n  const mouseDownEvent = doubleClickState.mouseDownEvent;\n  const mouseUpEvent = doubleClickState.mouseUpEvent;\n\n  _clearDoubleClickTimeoutAndEvents();\n\n  _doMouseDown(mouseDownEvent);\n\n  if (mouseUpEvent) {\n    _onMouseUp(mouseUpEvent);\n  }\n}\n\n/**\n * Clears the mouse events and double click timeout id in the double click state object.\n * The timeout itself is also cleared so that no callback is invoked.\n */\nfunction _clearDoubleClickTimeoutAndEvents() {\n  if (doubleClickState.doubleClickTimeout) {\n    clearTimeout(doubleClickState.doubleClickTimeout);\n    doubleClickState.doubleClickTimeout = null;\n  }\n\n  doubleClickState.mouseDownEvent = null;\n  doubleClickState.mouseUpEvent = null;\n}\n\nfunction _cleanUp() {\n  document.removeEventListener('mouseup', _onMouseUp);\n  state.element?.removeEventListener('mousemove', _onMouseMove);\n\n  // Restore our global mousemove listener\n  state.element?.addEventListener('mousemove', mouseMoveListener);\n\n  _clearDoubleClickTimeoutAndEvents();\n\n  state = JSON.parse(JSON.stringify(defaultState));\n}\n\n/**\n * Copies a set of points.\n * @param points - The `IPoints` instance to copy.\n *\n * @returns A copy of the points.\n */\nfunction _copyPoints(points: IPoints): IPoints {\n  return JSON.parse(JSON.stringify(points));\n}\n\n/**\n * Recalculates the last world coordinate, as the linear transform from client\n * to world could be different if the camera was updated.\n * @param element - The HTML element\n * @param lastPoints - The last points\n */\nfunction _updateMouseEventsLastPoints(\n  element: HTMLDivElement,\n  lastPoints: IPoints\n): IPoints {\n  const { viewport } = getEnabledElement(element);\n  // Need to update the world point to be calculated from the current reference frame,\n  // Which might have changed since the last interaction.\n  const world = viewport.canvasToWorld(lastPoints.canvas);\n\n  return {\n    page: lastPoints.page,\n    client: lastPoints.client,\n    canvas: lastPoints.canvas,\n    world,\n  };\n}\n\n/**\n * Returns the difference between two `IPoints` instances.\n * @param currentPoints - The current points.\n * @param lastPoints -- The last points, to be subtracted from the `currentPoints`.\n *\n * @returns The difference in IPoints format\n */\nfunction _getDeltaPoints(currentPoints: IPoints, lastPoints: IPoints): IPoints {\n  return {\n    page: _subtractPoints2D(currentPoints.page, lastPoints.page),\n    client: _subtractPoints2D(currentPoints.client, lastPoints.client),\n    canvas: _subtractPoints2D(currentPoints.canvas, lastPoints.canvas),\n    world: _subtractPoints3D(currentPoints.world, lastPoints.world),\n  };\n}\n\n/**\n * _subtractPoints - Subtracts `point1` from `point0`.\n * @param point0 - The first point.\n * @param point1 - The second point to subtract from the first.\n *\n * @returns The difference.\n */\nfunction _subtractPoints2D(\n  point0: Types.Point2,\n  point1: Types.Point2\n): Types.Point2 {\n  return [point0[0] - point1[0], point0[1] - point1[1]];\n}\n\nfunction _subtractPoints3D(\n  point0: Types.Point3,\n  point1: Types.Point3\n): Types.Point3 {\n  return [point0[0] - point1[0], point0[1] - point1[1], point0[2] - point1[2]];\n}\n\nexport function getMouseButton(): number {\n  return state.mouseButton;\n}\n\n/**\n * Handles a dblclick event to determine if it should be ignored based on the\n * double click state's ignoreDoubleClick flag. stopImmediatePropagation and\n * preventDefault are used to ignore the event.\n * @param evt browser dblclick event\n */\nexport function mouseDoubleClickIgnoreListener(evt: MouseEvent) {\n  if (doubleClickState.ignoreDoubleClick) {\n    doubleClickState.ignoreDoubleClick = false;\n\n    // Use stopImmediatePropagation to lessen the possibility that a third party 'dblclick'\n    // listener receives this event. However, there still is no guarantee\n    // that any third party listener has not already handled the event.\n    evt.stopImmediatePropagation();\n    evt.preventDefault();\n  } else {\n    // If the embedding application blocked the first mouse down and up\n    // of a double click sequence from reaching this module, then this module\n    // has handled the second mouse down and up and thus needs to clean them up.\n    // Doing a clean up here for the typical double click case is harmless.\n    _cleanUp();\n  }\n}\n\nexport default mouseDownListener;\n","import mouseDoubleClickListener from './mouseDoubleClickListener';\nimport mouseDownListener, {\n  mouseDoubleClickIgnoreListener,\n} from './mouseDownListener';\nimport mouseMoveListener from './mouseMoveListener';\n\n/**\n * Removes mouse event listeners for native mouse event. Enables\n * vtk.js tools flavored events that build on top of existing events to\n * provide more helpful information.\n *\n * @private\n * @param element - The DOM element to remove event listeners from.\n */\nfunction disable(element: HTMLDivElement): void {\n  element.removeEventListener('dblclick', mouseDoubleClickListener);\n  element.removeEventListener('mousedown', mouseDownListener);\n  element.removeEventListener('mousemove', mouseMoveListener);\n  // The mouseDoubleClickIgnoreListener prevents those browser 'dblclick'\n  // events that cornerstone has determined are single clicks from propagating\n  // to other (3rd party) listeners. A capture phase listener is used so that\n  // the 'dblclick' event can be ignored and not propagated ASAP.\n  element.removeEventListener('dblclick', mouseDoubleClickIgnoreListener, {\n    capture: true,\n  });\n}\n\n/**\n * Registers mouse event listeners for native mouse event. Enables\n * vtk.js tools flavored events that build on top of existing events to\n * provide more helpful information.\n *\n * @private\n * @param element - The DOM element to register event listeners on.\n */\nfunction enable(element: HTMLDivElement): void {\n  // Prevent handlers from being attached multiple times\n  disable(element);\n\n  element.addEventListener('dblclick', mouseDoubleClickListener);\n  element.addEventListener('mousedown', mouseDownListener);\n  element.addEventListener('mousemove', mouseMoveListener);\n  // The mouseDoubleClickIgnoreListener prevents those browser 'dblclick'\n  // events that cornerstone has determined are single clicks from propagating\n  // to other (3rd party) listeners. A capture phase listener is used so that\n  // the 'dblclick' event can be ignored and not propagated ASAP.\n  element.addEventListener('dblclick', mouseDoubleClickIgnoreListener, {\n    capture: true,\n  });\n}\n\nexport default {\n  enable,\n  disable,\n};\n","import { getEnabledElement, triggerEvent } from '@cornerstonejs/core';\nimport normalizeWheel from './normalizeWheel';\nimport Events from '../../enums/Events';\n// ~~ VIEWPORT LIBRARY\nimport getMouseEventPoints from '../mouse/getMouseEventPoints';\nimport { MouseWheelEventDetail } from '../../types/EventTypes';\n\n/**\n * wheelListener - Captures and normalizes mouse wheel events. Emits as a\n * cornerstoneTools3D mouse wheel event.\n * @param evt - The mouse wheel event.\n */\nfunction wheelListener(evt: WheelEvent) {\n  const element = <HTMLDivElement>evt.currentTarget;\n  const enabledElement = getEnabledElement(element);\n  const { renderingEngineId, viewportId } = enabledElement;\n\n  // Prevent triggering MouseWheel events that are not real scroll events:\n  // E.g. when clicking the MiddleMouseWheelButton, a deltaY of 0 is emitted.\n  // See https://github.com/cornerstonejs/cornerstoneTools/issues/935\n  if (evt.deltaY > -1 && evt.deltaY < 1) {\n    return;\n  }\n\n  evt.preventDefault();\n\n  const { spinX, spinY, pixelX, pixelY } = normalizeWheel(evt);\n  const direction = spinY < 0 ? -1 : 1;\n\n  const eventDetail: MouseWheelEventDetail = {\n    event: evt,\n    eventName: Events.MOUSE_WHEEL,\n    renderingEngineId,\n    viewportId,\n    element,\n    camera: {},\n    detail: evt,\n    wheel: {\n      spinX,\n      spinY,\n      pixelX,\n      pixelY,\n      direction,\n    },\n    points: getMouseEventPoints(evt),\n  };\n\n  triggerEvent(element, Events.MOUSE_WHEEL, eventDetail);\n}\n\nexport default wheelListener;\n","// Reasonable defaults\nconst PIXEL_STEP = 10;\nconst LINE_HEIGHT = 40;\nconst PAGE_HEIGHT = 800;\n\n/**\n * Normalizes wheel events and provides properties that are more\n * consistent and helpful across different browsers\n *\n * @param event - the original mouse event\n * @returns a normalized eventDetail\n */\nexport default function normalizeWheel(event) {\n  let spinX = 0,\n    spinY = 0,\n    pixelX = 0,\n    pixelY = 0;\n\n  // Legacy\n  if ('detail' in event) {\n    spinY = event.detail;\n  }\n  if ('wheelDelta' in event) {\n    spinY = -event.wheelDelta / 120;\n  }\n  if ('wheelDeltaY' in event) {\n    spinY = -event.wheelDeltaY / 120;\n  }\n  if ('wheelDeltaX' in event) {\n    spinX = -event.wheelDeltaX / 120;\n  }\n\n  pixelX = spinX * PIXEL_STEP;\n  pixelY = spinY * PIXEL_STEP;\n\n  if ('deltaY' in event) {\n    pixelY = event.deltaY;\n  }\n  if ('deltaX' in event) {\n    pixelX = event.deltaX;\n  }\n\n  if ((pixelX || pixelY) && event.deltaMode) {\n    if (event.deltaMode === 1) {\n      // Delta in LINE units\n      pixelX *= LINE_HEIGHT;\n      pixelY *= LINE_HEIGHT;\n    } else {\n      // Delta in PAGE units\n      pixelX *= PAGE_HEIGHT;\n      pixelY *= PAGE_HEIGHT;\n    }\n  }\n\n  // Fall-back if spin cannot be determined\n  if (pixelX && !spinX) {\n    spinX = pixelX < 1 ? -1 : 1;\n  }\n  if (pixelY && !spinY) {\n    spinY = pixelY < 1 ? -1 : 1;\n  }\n\n  return {\n    spinX,\n    spinY,\n    pixelX,\n    pixelY,\n  };\n}\n","import wheelListener from './wheelListener';\n\n/**\n * Listens for the wheel event, and handles it. Handled event\n * will be \"normalized\" and re-emitted as `Events.MOUSE_WHEEL`\n *\n * @param element - The HTML element\n */\nfunction enable(element: HTMLDivElement) {\n  disable(element);\n  element.addEventListener('wheel', wheelListener, { passive: false });\n}\n\n/**\n * Removes listener and handler for wheel event. `Events.MOUSE_WHEEL`\n * will no longer be emitted.\n *\n * @param element - THe HTML element\n */\nfunction disable(element: HTMLDivElement) {\n  element.removeEventListener('wheel', wheelListener);\n}\n\nexport default {\n  enable,\n  disable,\n};\n","// Functions to prevent ghost clicks following a touch\n// Since the event lifecycle is touchstart, mousedown, touchend, mouseup\n// we want to prevent mousedown and mouseup events after touch events\n// All credit to @kosich\n// https://gist.github.com/kosich/23188dd86633b6c2efb7\n\nconst antiGhostDelay = 2000,\n  pointerType = {\n    mouse: 0,\n    touch: 1,\n  };\n\nlet lastInteractionType, lastInteractionTime;\n\nfunction handleTap(type, e) {\n  const now = Date.now();\n\n  if (type !== lastInteractionType) {\n    if (now - lastInteractionTime <= antiGhostDelay) {\n      e.preventDefault();\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n\n      return false;\n    }\n\n    lastInteractionType = type;\n  }\n\n  lastInteractionTime = now;\n}\n\n// Cacheing the function references\n// Necessary because a new function reference is created after .bind() is called\n// http://stackoverflow.com/questions/11565471/removing-event-listener-which-was-added-with-bind\nconst handleTapMouse = handleTap.bind(null, pointerType.mouse);\nconst handleTapTouch = handleTap.bind(null, pointerType.touch);\n\nfunction attachEvents(element, eventList, interactionType) {\n  const tapHandler = interactionType ? handleTapMouse : handleTapTouch;\n\n  eventList.forEach(function (eventName) {\n    element.addEventListener(eventName, tapHandler, { passive: false });\n  });\n}\n\nfunction removeEvents(element, eventList, interactionType) {\n  const tapHandler = interactionType ? handleTapMouse : handleTapTouch;\n\n  eventList.forEach(function (eventName) {\n    element.removeEventListener(eventName, tapHandler);\n  });\n}\n\nconst mouseEvents = ['mousedown', 'mouseup', 'mousemove'];\nconst touchEvents = ['touchstart', 'touchend'];\n\nfunction disable(element) {\n  removeEvents(element, mouseEvents, pointerType.mouse);\n  removeEvents(element, touchEvents, pointerType.touch);\n}\n\nfunction enable(element) {\n  disable(element);\n  attachEvents(element, mouseEvents, pointerType.mouse);\n  attachEvents(element, touchEvents, pointerType.touch);\n}\n\nexport default {\n  enable,\n  disable,\n};\n","enum Swipe {\n  UP = 'UP',\n  DOWN = 'DOWN',\n  LEFT = 'LEFT',\n  RIGHT = 'RIGHT',\n}\n\nexport { Swipe };\n","import { getEnabledElement } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { ITouchPoints } from '../../types';\n\n/**\n * Given a native touch event, get the associated cornerstone3D enabled element\n * and derive a set of coordinates useful for tools.\n * @param evt - The Touch event.\n * @param element - The DOM HTMLDivElement that the event was triggered on.\n * @returns The points related to the event in the form of a `IPoints` object containing\n * the following properties: `page`, `client`, `canvas`, and `world` details of the event.\n */\nexport default function getTouchEventPoints(\n  evt: TouchEvent,\n  element?: HTMLDivElement\n): ITouchPoints[] {\n  const elementToUse = element || (evt.currentTarget as HTMLDivElement);\n  const touches = evt.type === 'touchend' ? evt.changedTouches : evt.touches;\n  return Object.keys(touches).map((i) => {\n    const clientPoint = _clientToPoint(touches[i]);\n    const pagePoint = _pageToPoint(touches[i]);\n    const canvasPoint = _pagePointsToCanvasPoints(elementToUse, pagePoint);\n    const { viewport } = getEnabledElement(elementToUse);\n    const worldPoint = viewport.canvasToWorld(canvasPoint);\n    return {\n      page: pagePoint,\n      client: clientPoint,\n      canvas: canvasPoint,\n      world: worldPoint,\n      touch: {\n        identifier: i,\n        radiusX: touches[i].radiusX,\n        radiusY: touches[i].radiusY,\n        force: touches[i].force,\n        rotationAngle: touches[i].rotationAngle,\n      },\n    };\n  });\n}\n\n/**\n * Converts point from page coordinates to canvas coordinates.\n * @param element - HTMLDivElement\n * @param pagePoint - Point in page coordinates pageX and pageY\n *\n * @returns The canvas coordinate points\n */\nfunction _pagePointsToCanvasPoints(\n  element: HTMLDivElement,\n  pagePoint: Types.Point2\n): Types.Point2 {\n  const rect = element.getBoundingClientRect();\n  return [\n    pagePoint[0] - rect.left - window.pageXOffset,\n    pagePoint[1] - rect.top - window.pageYOffset,\n  ];\n}\n\n/**\n * Converts the event's `pageX` and `pageY` properties to Types.Point2 format\n *\n * @param touch - The Touch\n */\nfunction _pageToPoint(touch: Touch): Types.Point2 {\n  return [touch.pageX, touch.pageY];\n}\n\n/**\n * Converts the event's `clientX` and `clientY` properties to Types.Point2 format\n * @param evt - The Touch `Event`\n */\nfunction _clientToPoint(touch: Touch): Types.Point2 {\n  return [touch.clientX, touch.clientY];\n}\n","import { IDistance, IPoints, ITouchPoints } from '../../types';\nimport { Types } from '@cornerstonejs/core';\n\n/**\n * Returns the difference between multiple `IPoints` instances.\n * @param currentPoints - The current points.\n * @param lastPoints - The last points, to be subtracted from the `currentPoints`.\n *\n * @returns The difference in IPoints format\n */\nfunction getDeltaPoints(\n  currentPoints: IPoints[],\n  lastPoints: IPoints[]\n): IPoints {\n  const curr = getMeanPoints(currentPoints);\n  const last = getMeanPoints(lastPoints);\n  return {\n    page: _subtractPoints2D(curr.page, last.page),\n    client: _subtractPoints2D(curr.client, last.client),\n    canvas: _subtractPoints2D(curr.canvas, last.canvas),\n    world: _subtractPoints3D(curr.world, last.world),\n  };\n}\n\n/**\n * Returns the distance between multiple `IPoints` instances.\n * @param currentPoints - The current points.\n * @param lastPoints - The last points, to be subtracted from the `currentPoints`.\n *\n * @returns The distance difference in IDistance format\n */\nfunction getDeltaDistance(\n  currentPoints: IPoints[],\n  lastPoints: IPoints[]\n): IDistance {\n  const curr = getMeanPoints(currentPoints);\n  const last = getMeanPoints(lastPoints);\n  return {\n    page: _getDistance2D(curr.page, last.page),\n    client: _getDistance2D(curr.client, last.client),\n    canvas: _getDistance2D(curr.canvas, last.canvas),\n    world: _getDistance3D(curr.world, last.world),\n  };\n}\n\nfunction getDeltaRotation(\n  currentPoints: ITouchPoints[],\n  lastPoints: ITouchPoints[]\n) {\n  // TODO\n}\n\n/**\n * Returns the distance difference between multiple `IPoints` instances.\n * @param currentPoints - The current points.\n * @param lastPoints -- The last points.\n *\n * @returns The difference in IPoints format\n */\nfunction getDeltaDistanceBetweenIPoints(\n  currentPoints: IPoints[],\n  lastPoints: IPoints[]\n): IDistance {\n  const currentDistance = _getMeanDistanceBetweenAllIPoints(currentPoints);\n  const lastDistance = _getMeanDistanceBetweenAllIPoints(lastPoints);\n  const deltaDistance = {\n    page: currentDistance.page - lastDistance.page,\n    client: currentDistance.client - lastDistance.client,\n    canvas: currentDistance.canvas - lastDistance.canvas,\n    world: currentDistance.world - lastDistance.world,\n  };\n  return deltaDistance;\n}\n\n/**\n * Copies a set of points.\n * @param points - The `IPoints` instance to copy.\n *\n * @returns A copy of the points.\n */\nfunction copyPointsList(points: ITouchPoints[]): ITouchPoints[] {\n  return JSON.parse(JSON.stringify(points));\n}\n\nfunction copyPoints(points: ITouchPoints): ITouchPoints {\n  return JSON.parse(JSON.stringify(points));\n}\n\nfunction getMeanPoints(points: IPoints[]): IPoints {\n  return points.reduce(\n    (prev, curr) => {\n      return {\n        page: [\n          prev.page[0] + curr.page[0] / points.length,\n          prev.page[1] + curr.page[1] / points.length,\n        ],\n        client: [\n          prev.client[0] + curr.client[0] / points.length,\n          prev.client[1] + curr.client[1] / points.length,\n        ],\n        canvas: [\n          prev.canvas[0] + curr.canvas[0] / points.length,\n          prev.canvas[1] + curr.canvas[1] / points.length,\n        ],\n        world: [\n          prev.world[0] + curr.world[0] / points.length,\n          prev.world[1] + curr.world[1] / points.length,\n          prev.world[2] + curr.world[2] / points.length,\n        ],\n      };\n    },\n    {\n      page: [0, 0],\n      client: [0, 0],\n      canvas: [0, 0],\n      world: [0, 0, 0],\n    }\n  );\n}\n\nfunction getMeanTouchPoints(points: ITouchPoints[]): ITouchPoints {\n  return points.reduce(\n    (prev, curr) => {\n      return {\n        page: [\n          prev.page[0] + curr.page[0] / points.length,\n          prev.page[1] + curr.page[1] / points.length,\n        ],\n        client: [\n          prev.client[0] + curr.client[0] / points.length,\n          prev.client[1] + curr.client[1] / points.length,\n        ],\n        canvas: [\n          prev.canvas[0] + curr.canvas[0] / points.length,\n          prev.canvas[1] + curr.canvas[1] / points.length,\n        ],\n        world: [\n          prev.world[0] + curr.world[0] / points.length,\n          prev.world[1] + curr.world[1] / points.length,\n          prev.world[2] + curr.world[2] / points.length,\n        ],\n        touch: {\n          identifier: null,\n          radiusX: prev.touch.radiusX + curr.touch.radiusX / points.length,\n          radiusY: prev.touch.radiusY + curr.touch.radiusY / points.length,\n          force: prev.touch.force + curr.touch.force / points.length,\n          rotationAngle:\n            prev.touch.rotationAngle + curr.touch.rotationAngle / points.length,\n        },\n      };\n    },\n    {\n      page: [0, 0],\n      client: [0, 0],\n      canvas: [0, 0],\n      world: [0, 0, 0],\n      touch: {\n        identifier: null,\n        radiusX: 0,\n        radiusY: 0,\n        force: 0,\n        rotationAngle: 0,\n      },\n    }\n  );\n}\n/**\n * _subtractPoints - Subtracts `point1` from `point0`.\n * @param point0 - The first point.\n * @param point1 - The second point to subtract from the first.\n *\n * @returns The difference.\n */\nfunction _subtractPoints2D(\n  point0: Types.Point2,\n  point1: Types.Point2\n): Types.Point2 {\n  return [point0[0] - point1[0], point0[1] - point1[1]];\n}\n\nfunction _subtractPoints3D(\n  point0: Types.Point3,\n  point1: Types.Point3\n): Types.Point3 {\n  return [point0[0] - point1[0], point0[1] - point1[1], point0[2] - point1[2]];\n}\n\nfunction _getMeanDistanceBetweenAllIPoints(points: IPoints[]): IDistance {\n  // get mean distance between all unordered pairs of points\n  const pairedDistance: IDistance[] = [];\n  for (let i = 0; i < points.length; i++) {\n    for (let j = 0; j < points.length; j++) {\n      if (i < j) {\n        pairedDistance.push({\n          page: _getDistance2D(points[i].page, points[j].page),\n          client: _getDistance2D(points[i].client, points[j].client),\n          canvas: _getDistance2D(points[i].canvas, points[j].canvas),\n          world: _getDistance3D(points[i].world, points[j].world),\n        });\n      }\n    }\n  }\n\n  // take the average distance\n  return pairedDistance.reduce(\n    (prev, curr) => {\n      return {\n        page: prev.page + curr.page / pairedDistance.length,\n        client: prev.client + curr.client / pairedDistance.length,\n        canvas: prev.canvas + curr.canvas / pairedDistance.length,\n        world: prev.world + curr.world / pairedDistance.length,\n      };\n    },\n    {\n      page: 0,\n      client: 0,\n      canvas: 0,\n      world: 0,\n    }\n  );\n}\n\nfunction _getDistance2D(point0: Types.Point2, point1: Types.Point2): number {\n  return Math.sqrt(\n    Math.pow(point0[0] - point1[0], 2) + Math.pow(point0[1] - point1[1], 2)\n  );\n}\n\nfunction _getDistance3D(point0: Types.Point3, point1: Types.Point3): number {\n  return Math.sqrt(\n    Math.pow(point0[0] - point1[0], 2) +\n      Math.pow(point0[1] - point1[1], 2) +\n      Math.pow(point0[2] - point1[2], 2)\n  );\n}\n\nexport {\n  getMeanPoints,\n  getMeanTouchPoints,\n  copyPoints,\n  copyPointsList,\n  getDeltaDistanceBetweenIPoints,\n  getDeltaPoints,\n  getDeltaDistance,\n  getDeltaRotation,\n};\n","import { getEnabledElement, triggerEvent } from '@cornerstonejs/core';\nimport Events from '../../enums/Events';\nimport { Swipe } from '../../enums/Touch';\n\nimport { EventTypes, ITouchPoints, IPoints, IDistance } from '../../types';\n\nimport getTouchEventPoints from './getTouchEventPoints';\nimport {\n  copyPoints,\n  copyPointsList,\n  getDeltaDistanceBetweenIPoints,\n  getDeltaDistance,\n  getDeltaPoints,\n  getMeanTouchPoints,\n  // getRotation\n} from '../../utilities/touch';\nimport { Settings } from '@cornerstonejs/core';\n\nconst runtimeSettings = Settings.getRuntimeSettings();\n\nconst {\n  TOUCH_START,\n  TOUCH_START_ACTIVATE,\n  TOUCH_PRESS,\n  TOUCH_DRAG,\n  TOUCH_END,\n  TOUCH_TAP,\n  TOUCH_SWIPE,\n} = Events;\n\ninterface ITouchTapListnenerState {\n  element: HTMLDivElement;\n  renderingEngineId: string;\n  viewportId: string;\n  startPointsList: ITouchPoints[];\n  tapMaxDistance: number;\n  tapTimeout: ReturnType<typeof setTimeout>;\n  taps: number;\n  tapToleranceMs: number;\n}\n\ninterface ITouchStartListenerState {\n  element: HTMLDivElement;\n  renderingEngineId: string;\n  viewportId: string;\n  startPointsList: ITouchPoints[];\n  lastPointsList: ITouchPoints[];\n\n  // only trigger one touch event in the case the user puts down multiple fingers\n  isTouchStart: boolean;\n  startTime: Date;\n\n  // handle long press\n  pressTimeout: ReturnType<typeof setTimeout>;\n  pressDelay: number;\n  pressMaxDistance: number;\n  accumulatedDistance: IDistance;\n\n  // handle swipes\n  swipeDistanceThreshold: number;\n  swiped: boolean;\n  swipeToleranceMs: number;\n}\n\nconst zeroIPoint: IPoints = {\n  page: [0, 0],\n  client: [0, 0],\n  canvas: [0, 0],\n  world: [0, 0, 0],\n};\n\nconst zeroIDistance: IDistance = {\n  page: 0,\n  client: 0,\n  canvas: 0,\n  world: 0,\n};\n\n// STATE\nconst defaultState: ITouchStartListenerState = {\n  renderingEngineId: undefined,\n  viewportId: undefined,\n  element: null,\n  startPointsList: [\n    {\n      ...zeroIPoint,\n      touch: null,\n    },\n  ],\n  lastPointsList: [\n    {\n      ...zeroIPoint,\n      touch: null,\n    },\n  ],\n  isTouchStart: false,\n  startTime: null,\n\n  pressTimeout: null,\n  pressDelay: 700,\n  pressMaxDistance: 5,\n  accumulatedDistance: zeroIDistance,\n\n  swipeDistanceThreshold: 48,\n  swiped: false,\n  swipeToleranceMs: 300, // user has 300ms to swipe after touch start or no swipe will trigger\n};\n\n// TODO: these values should be configurable to handle different use cases such\n// as pen, left/right handed, index finger vs thumb, etc. These current values\n// assume thumb usage for single finger and index/middle finger for two finger\n// gestures in an attempt to cover the 90% use case.\nconst defaultTapState: ITouchTapListnenerState = {\n  renderingEngineId: undefined,\n  viewportId: undefined,\n  element: null,\n  startPointsList: [\n    {\n      ...zeroIPoint,\n      touch: null,\n    },\n  ],\n  taps: 0,\n  tapTimeout: null,\n  tapMaxDistance: 24,\n  tapToleranceMs: 300,\n};\n\nlet state: ITouchStartListenerState = JSON.parse(JSON.stringify(defaultState));\nlet tapState: ITouchTapListnenerState = JSON.parse(\n  JSON.stringify(defaultTapState)\n);\n\nfunction triggerEventCallback(ele, name, eventDetail) {\n  if (runtimeSettings.get('debug')) {\n    if (name === 'CORNERSTONE_TOOLS_TOUCH_DRAG') {\n      console.debug(name);\n    } else {\n      console.debug(name, eventDetail);\n    }\n  }\n  return triggerEvent(ele, name, eventDetail);\n}\n\n/**\n * Listens to touch events from the DOM (touchstart, touchmove, touchend)\n * and depending on interaction and further interaction can emit the\n * following touch events:\n *\n * - TOUCH_START\n * - TOUCH_START_ACTIVATE\n * - TOUCH_PRESS\n * - TOUCH_DRAG (move while down)\n * - TOUCH_SWIPE\n * - TOUCH_END (also an end for multi touch)\n *\n * - TOUCH_TAP\n *\n * @param evt - The Touch event (touchstart).\n * @private\n */\nfunction touchStartListener(evt: TouchEvent) {\n  // if a user adds an extra finger when a touch/multi touch has already started\n  // don't trigger another touch.\n  state.element = <HTMLDivElement>evt.currentTarget;\n  const enabledElement = getEnabledElement(state.element);\n  const { renderingEngineId, viewportId } = enabledElement;\n  state.renderingEngineId = renderingEngineId;\n  state.viewportId = viewportId;\n  // this prevents multiple start firing\n  if (state.isTouchStart) return;\n  // this will clear on touchstart and touchend\n  clearTimeout(state.pressTimeout);\n  state.pressTimeout = setTimeout(() => _onTouchPress(evt), state.pressDelay);\n\n  _onTouchStart(evt);\n  document.addEventListener('touchmove', _onTouchDrag); // also checks for swipe\n  document.addEventListener('touchend', _onTouchEnd); // also checks for tap\n}\n\n/**\n * _onTouchPress - Handle emission of touchstart events which are held down for a longer\n * period of time\n *\n * @private\n * @param evt - The touch event (touchstart)\n */\nfunction _onTouchPress(evt: TouchEvent) {\n  const totalDistance = state.accumulatedDistance.canvas;\n  if (totalDistance > state.pressMaxDistance) return;\n  const eventDetail: EventTypes.TouchPressEventDetail = {\n    event: evt, // touchstart native event\n    eventName: TOUCH_PRESS,\n    renderingEngineId: state.renderingEngineId,\n    viewportId: state.viewportId,\n    camera: {},\n    element: state.element,\n    startPointsList: copyPointsList(state.startPointsList),\n    lastPointsList: copyPointsList(state.lastPointsList),\n    startPoints: copyPoints(getMeanTouchPoints(state.startPointsList)),\n    lastPoints: copyPoints(getMeanTouchPoints(state.lastPointsList)),\n  };\n  triggerEventCallback(eventDetail.element, TOUCH_PRESS, eventDetail);\n}\n\n/**\n * _onTouchStart - Handle emission of touchstart events.\n *\n * @private\n * @param evt - The touch event (touchstart)\n */\nfunction _onTouchStart(evt: TouchEvent) {\n  state.isTouchStart = true;\n  state.startTime = new Date();\n  const startPointsList = getTouchEventPoints(evt, state.element);\n  const startPoints = getMeanTouchPoints(startPointsList);\n  const deltaPoints = zeroIPoint;\n  const deltaDistance = zeroIDistance;\n  // deltaRotation same as deltaDistance but values are theta\n  const eventDetail: EventTypes.TouchStartEventDetail = {\n    event: evt,\n    eventName: TOUCH_START,\n    element: state.element,\n    renderingEngineId: state.renderingEngineId,\n    viewportId: state.viewportId,\n    camera: {},\n    startPointsList: startPointsList,\n    lastPointsList: startPointsList,\n    currentPointsList: startPointsList,\n    startPoints: startPoints,\n    lastPoints: startPoints,\n    currentPoints: startPoints,\n    deltaPoints,\n    deltaDistance,\n    // deltaRotation\n  };\n\n  state.startPointsList = copyPointsList(eventDetail.startPointsList);\n  state.lastPointsList = copyPointsList(eventDetail.lastPointsList);\n  // by triggering TOUCH_START it checks if this is toolSelection, handle modification etc.\n  // of already existing tools\n  const eventDidPropagate = triggerEventCallback(\n    eventDetail.element,\n    TOUCH_START,\n    eventDetail\n  );\n\n  // if no tools responded to this event and prevented its default propagation behavior,\n  // create a new tool\n  if (eventDidPropagate) {\n    triggerEventCallback(\n      eventDetail.element,\n      TOUCH_START_ACTIVATE,\n      eventDetail\n    );\n  }\n}\n\n/**\n * _onTouchDrag - Handle emission of drag events whilst the touch is depressed.\n *\n * @private\n * @param evt - The touch event (touchmove)\n */\nfunction _onTouchDrag(evt: TouchEvent) {\n  const currentPointsList = getTouchEventPoints(evt, state.element);\n  const lastPointsList = _updateTouchEventsLastPoints(\n    state.element,\n    state.lastPointsList\n  );\n\n  const deltaPoints =\n    currentPointsList.length === lastPointsList.length\n      ? getDeltaPoints(currentPointsList, lastPointsList)\n      : zeroIPoint;\n\n  const deltaDistance =\n    currentPointsList.length === lastPointsList.length\n      ? getDeltaDistanceBetweenIPoints(currentPointsList, lastPointsList)\n      : zeroIDistance;\n\n  const totalDistance =\n    currentPointsList.length === lastPointsList.length\n      ? getDeltaDistance(currentPointsList, state.lastPointsList)\n      : zeroIDistance;\n\n  state.accumulatedDistance = {\n    page: state.accumulatedDistance.page + totalDistance.page,\n    client: state.accumulatedDistance.client + totalDistance.client,\n    canvas: state.accumulatedDistance.canvas + totalDistance.canvas,\n    world: state.accumulatedDistance.world + totalDistance.world,\n  };\n\n  /**\n   * this is can be uncommented to make dragging smoother. In the future, these values\n   * should be in a configuration file. There may also need to be different\n   * profiles for left handed and right handed thumb use. These values\n   * are currently optimized for left handed use.\n   *\n   * const clamp = (num) => Math.min(Math.max(num, -15), 10);\n   * const deltaDistanceClamped = \\{\n   *     page: clamp(deltaDistance.page),\n   *     client: clamp(deltaDistance.client),\n   *     canvas: clamp(deltaDistance.canvas),\n   *     world: clamp(deltaDistance.world),\n   * \\};\n   */\n\n  const eventDetail: EventTypes.TouchDragEventDetail = {\n    event: evt,\n    eventName: TOUCH_DRAG,\n    renderingEngineId: state.renderingEngineId,\n    viewportId: state.viewportId,\n    camera: {},\n    element: state.element,\n    startPoints: getMeanTouchPoints(state.startPointsList),\n    lastPoints: getMeanTouchPoints(lastPointsList),\n    currentPoints: getMeanTouchPoints(currentPointsList),\n    startPointsList: copyPointsList(state.startPointsList),\n    lastPointsList: copyPointsList(lastPointsList),\n    currentPointsList,\n    deltaPoints: deltaPoints,\n    deltaDistance: deltaDistance,\n  };\n\n  triggerEventCallback(state.element, TOUCH_DRAG, eventDetail);\n\n  // check for swipe events\n  _checkTouchSwipe(evt, deltaPoints);\n\n  // Update the last points\n  state.lastPointsList = copyPointsList(currentPointsList);\n}\n\n/**\n * _onTouchEnd - Handle emission of touch end events\n *\n * @private\n * @param evt - The touch event.\n */\nfunction _onTouchEnd(evt: TouchEvent): void {\n  // in case it was a tap event we don't want to fire the cornerstone normalized\n  // touch end event if the touch start never happend\n  clearTimeout(state.pressTimeout);\n  const currentPointsList = getTouchEventPoints(evt, state.element);\n  const lastPointsList = _updateTouchEventsLastPoints(\n    state.element,\n    state.lastPointsList\n  );\n  const deltaPoints =\n    currentPointsList.length === lastPointsList.length\n      ? getDeltaPoints(currentPointsList, lastPointsList)\n      : getDeltaPoints(currentPointsList, currentPointsList);\n  const deltaDistance =\n    currentPointsList.length === lastPointsList.length\n      ? getDeltaDistanceBetweenIPoints(currentPointsList, lastPointsList)\n      : getDeltaDistanceBetweenIPoints(currentPointsList, currentPointsList);\n  const eventDetail: EventTypes.TouchEndEventDetail = {\n    event: evt,\n    eventName: TOUCH_END,\n    element: state.element,\n    renderingEngineId: state.renderingEngineId,\n    viewportId: state.viewportId,\n    camera: {},\n    startPointsList: copyPointsList(state.startPointsList),\n    lastPointsList: copyPointsList(lastPointsList),\n    currentPointsList,\n    startPoints: getMeanTouchPoints(state.startPointsList),\n    lastPoints: getMeanTouchPoints(lastPointsList),\n    currentPoints: getMeanTouchPoints(currentPointsList),\n    deltaPoints,\n    deltaDistance,\n  };\n\n  triggerEventCallback(eventDetail.element, TOUCH_END, eventDetail);\n  _checkTouchTap(evt);\n\n  // reset to default state\n  state = JSON.parse(JSON.stringify(defaultState));\n  document.removeEventListener('touchmove', _onTouchDrag);\n  document.removeEventListener('touchend', _onTouchEnd);\n}\n\nfunction _checkTouchTap(evt: TouchEvent): void {\n  const currentTime = new Date().getTime();\n  const startTime = state.startTime.getTime();\n  if (currentTime - startTime > tapState.tapToleranceMs) return;\n\n  // first tap, initialize the state\n  if (tapState.taps === 0) {\n    tapState.element = state.element;\n    tapState.renderingEngineId = state.renderingEngineId;\n    tapState.viewportId = state.viewportId;\n    tapState.startPointsList = state.startPointsList;\n  }\n\n  // subsequent tap is on a different element\n  if (\n    tapState.taps > 0 &&\n    !(\n      tapState.element == state.element &&\n      tapState.renderingEngineId == state.renderingEngineId &&\n      tapState.viewportId == state.viewportId\n    )\n  ) {\n    return;\n  }\n\n  const currentPointsList = getTouchEventPoints(evt, tapState.element);\n  const distanceFromStart = getDeltaDistance(\n    currentPointsList,\n    tapState.startPointsList\n  ).canvas;\n\n  // if the tap is too far from starting tap, we can ignore it.\n  // TODO: in the case the user means to tap in two separate areas within the\n  // tapTolerance (300ms), the second tap will not trigger. This is because it\n  // is ignored below for simplicity to track multiple taps (double, triple etc)\n  // in order to support two separate single taps that occur < 300ms on the\n  // screen. One can create the concept of \"TapChains\". Our current implementation\n  // only supports a single tap chain on the screen. You can think of it as a\n  // region where the user has the option to perform unlimited multitaps as long\n  // as they are < the tapToleranceMs value. So a tap somewhere else on the screen\n  // that is > the tapMaxDistance will start a separate and new \"TapChain\".\n  if (distanceFromStart > tapState.tapMaxDistance) return;\n\n  clearTimeout(tapState.tapTimeout);\n  tapState.taps += 1;\n\n  tapState.tapTimeout = setTimeout(() => {\n    const eventDetail: EventTypes.TouchTapEventDetail = {\n      event: evt,\n      eventName: TOUCH_TAP,\n      element: tapState.element,\n      renderingEngineId: tapState.renderingEngineId,\n      viewportId: tapState.viewportId,\n      camera: {},\n      currentPointsList,\n      currentPoints: getMeanTouchPoints(currentPointsList),\n      taps: tapState.taps,\n    };\n    triggerEventCallback(eventDetail.element, TOUCH_TAP, eventDetail);\n    tapState = JSON.parse(JSON.stringify(defaultTapState));\n  }, tapState.tapToleranceMs);\n}\n\nfunction _checkTouchSwipe(evt: TouchEvent, deltaPoints: IPoints) {\n  const currentTime = new Date().getTime();\n  const startTime = state.startTime.getTime();\n  if (state.swiped || currentTime - startTime > state.swipeToleranceMs) return;\n  const [x, y] = deltaPoints.canvas;\n  const eventDetail: EventTypes.TouchSwipeEventDetail = {\n    event: evt,\n    eventName: TOUCH_SWIPE,\n    renderingEngineId: state.renderingEngineId,\n    viewportId: state.viewportId,\n    camera: {},\n    element: state.element,\n    swipe: null,\n  };\n  if (Math.abs(x) > state.swipeDistanceThreshold) {\n    eventDetail.swipe = x > 0 ? Swipe.RIGHT : Swipe.LEFT;\n    triggerEventCallback(eventDetail.element, TOUCH_SWIPE, eventDetail);\n    state.swiped = true;\n  }\n\n  if (Math.abs(y) > state.swipeDistanceThreshold) {\n    eventDetail.swipe = y > 0 ? Swipe.DOWN : Swipe.UP;\n    triggerEventCallback(eventDetail.element, TOUCH_SWIPE, eventDetail);\n    state.swiped = true;\n  }\n}\n\n/**\n * Recalculates the last world coordinate, as the linear transform from client\n * to world could be different if the camera was updated.\n * @param element - The HTML element\n * @param lastPoints - The last points\n */\nfunction _updateTouchEventsLastPoints(\n  element: HTMLDivElement,\n  lastPoints: ITouchPoints[]\n): ITouchPoints[] {\n  const { viewport } = getEnabledElement(element);\n  // Need to update the world point to be calculated from the current reference frame,\n  // Which might have changed since the last interaction.\n  return lastPoints.map((lp) => {\n    const world = viewport.canvasToWorld(lp.canvas);\n    return {\n      page: lp.page,\n      client: lp.client,\n      canvas: lp.canvas,\n      world,\n      touch: lp.touch,\n    };\n  });\n}\n\nexport default touchStartListener;\n","import preventGhostClick from './preventGhostClick';\nimport touchStartListener from './touchStartListener';\n\n/**\n * Removes touch event listeners for native touch event. Enables\n * vtk.js tools flavored events that build on top of existing events to\n * provide more helpful information.\n *\n * @private\n * @param element - The DOM element to remove event listeners from.\n */\nfunction disable(element: HTMLDivElement): void {\n  preventGhostClick.disable(element);\n  element.removeEventListener('touchstart', touchStartListener);\n}\n\n/**\n * Registers touch event listeners for native touch event. Enables\n * vtk.js tools flavored events that build on top of existing events to\n * provide more helpful information.\n *\n * @private\n * @param element - The DOM element to register event listeners on.\n */\nfunction enable(element: HTMLDivElement): void {\n  // Prevent handlers from being attached multiple times\n  disable(element);\n  preventGhostClick.enable(element);\n  element.addEventListener('touchstart', touchStartListener, {\n    passive: false,\n  });\n}\n\nexport default {\n  enable,\n  disable,\n};\n","import _cloneDeep from 'lodash.clonedeep';\nimport { getEnabledElement, triggerEvent } from '@cornerstonejs/core';\nimport Events from '../../enums/Events';\nimport { KeyDownEventDetail, KeyUpEventDetail } from '../../types/EventTypes';\n\ninterface IKeyDownListenerState {\n  renderingEngineId: string;\n  viewportId: string;\n  key: string | null;\n  keyCode: number | null;\n  element: HTMLDivElement;\n}\n\nconst defaultState: IKeyDownListenerState = {\n  //\n  renderingEngineId: undefined,\n  viewportId: undefined,\n  //\n  key: undefined,\n  keyCode: undefined,\n  element: null,\n};\n\nlet state: IKeyDownListenerState = {\n  //\n  renderingEngineId: undefined,\n  viewportId: undefined,\n  //\n  key: undefined,\n  keyCode: undefined,\n  element: null,\n};\n\n/**\n * Normalizes the keyboard event and triggers KEY_DOWN event from CornerstoneTools3D events\n * @param evt - DOM Keyboard event\n */\nfunction keyListener(evt: KeyboardEvent): void {\n  state.element = <HTMLDivElement>evt.currentTarget;\n\n  const enabledElement = getEnabledElement(state.element);\n  const { renderingEngineId, viewportId } = enabledElement;\n\n  state.renderingEngineId = renderingEngineId;\n  state.viewportId = viewportId;\n  state.key = evt.key;\n  state.keyCode = evt.keyCode;\n\n  evt.preventDefault();\n  const eventDetail: KeyDownEventDetail = {\n    renderingEngineId: state.renderingEngineId,\n    viewportId: state.viewportId,\n    element: state.element,\n    key: state.key,\n    keyCode: state.keyCode,\n\n    // detail: evt,\n    // Todo: mouse event points can be used later for placing tools with a key\n    // e.g., putting an arrow/probe/etc. on the mouse position. Another use case\n    // hovering and deleting the tool\n    // points: getMouseEventPoints(evt),\n  };\n\n  triggerEvent(eventDetail.element, Events.KEY_DOWN, eventDetail);\n\n  document.addEventListener('keyup', _onKeyUp);\n\n  // Todo: handle combination of keys\n  state.element.removeEventListener('keydown', keyListener);\n}\n\nfunction _onKeyUp(evt: KeyboardEvent): void {\n  const eventDetail: KeyUpEventDetail = {\n    renderingEngineId: state.renderingEngineId,\n    viewportId: state.viewportId,\n    element: state.element,\n    key: state.key,\n    keyCode: state.keyCode,\n    // detail: evt,\n  };\n\n  // Remove our temporary handlers\n  document.removeEventListener('keyup', _onKeyUp);\n  state.element.addEventListener('keydown', keyListener);\n\n  // Restore `state` to `defaultState`\n  state = _cloneDeep(defaultState);\n  triggerEvent(eventDetail.element, Events.KEY_UP, eventDetail);\n}\n\nexport function getModifierKey(): number | undefined {\n  return state.keyCode;\n}\n\nexport function resetModifierKey(): void {\n  state.keyCode = undefined;\n}\n\nexport default keyListener;\n","import keyDownListener, { getModifierKey } from './keyDownListener';\n\nfunction enable(element: HTMLDivElement): void {\n  disable(element);\n  element.addEventListener('keydown', keyDownListener);\n}\n\nfunction disable(element: HTMLDivElement): void {\n  element.removeEventListener('keydown', keyDownListener);\n}\n\nexport default {\n  enable,\n  disable,\n  getModifierKey,\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { state } from '../store';\nimport { getEnabledElement } from '@cornerstonejs/core';\nimport { SVGDrawingHelper } from '../types';\n\nconst VIEWPORT_ELEMENT = 'viewport-element';\n\n/**\n * Returns the SVG drawing helper for the given HTML element.\n * @param element - The HTML element to get the SVG drawing helper for.\n * @private\n */\nfunction getSvgDrawingHelper(element: HTMLDivElement): SVGDrawingHelper {\n  const enabledElement = getEnabledElement(element);\n  const { viewportId, renderingEngineId } = enabledElement;\n  const canvasHash = `${viewportId}:${renderingEngineId}`;\n  const svgLayerElement = _getSvgLayer(element);\n\n  // Reset touched\n  Object.keys(state.svgNodeCache[canvasHash]).forEach((cacheKey) => {\n    state.svgNodeCache[canvasHash][cacheKey].touched = false;\n  });\n\n  return {\n    svgLayerElement: svgLayerElement,\n    svgNodeCacheForCanvas: state.svgNodeCache,\n    getSvgNode: getSvgNode.bind(this, canvasHash),\n    appendNode: appendNode.bind(this, svgLayerElement, canvasHash),\n    setNodeTouched: setNodeTouched.bind(this, canvasHash),\n    clearUntouched: clearUntouched.bind(this, svgLayerElement, canvasHash),\n  };\n}\n\n/**\n *\n * @param element\n * @private\n */\nfunction _getSvgLayer(element) {\n  const viewportElement = `.${VIEWPORT_ELEMENT}`;\n  const internalDivElement = element.querySelector(viewportElement);\n  const svgLayer = internalDivElement.querySelector('.svg-layer');\n\n  return svgLayer;\n}\n\nfunction getSvgNode(canvasHash, cacheKey) {\n  // If state has been reset\n  if (!state.svgNodeCache[canvasHash]) {\n    return;\n  }\n\n  if (state.svgNodeCache[canvasHash][cacheKey]) {\n    return state.svgNodeCache[canvasHash][cacheKey].domRef;\n  }\n}\n\nfunction appendNode(svgLayerElement, canvasHash, svgNode, cacheKey) {\n  // If state has been reset\n  if (!state.svgNodeCache[canvasHash]) {\n    return null;\n  }\n\n  state.svgNodeCache[canvasHash][cacheKey] = {\n    touched: true,\n    domRef: svgNode,\n  };\n\n  svgLayerElement.appendChild(svgNode);\n}\n\nfunction setNodeTouched(canvasHash, cacheKey) {\n  // If state has been reset\n  if (!state.svgNodeCache[canvasHash]) {\n    return;\n  }\n\n  if (state.svgNodeCache[canvasHash][cacheKey]) {\n    state.svgNodeCache[canvasHash][cacheKey].touched = true;\n  }\n}\n\nfunction clearUntouched(svgLayerElement, canvasHash) {\n  // If state has been reset\n  if (!state.svgNodeCache[canvasHash]) {\n    return;\n  }\n\n  Object.keys(state.svgNodeCache[canvasHash]).forEach((cacheKey) => {\n    const cacheEntry = state.svgNodeCache[canvasHash][cacheKey];\n\n    if (!cacheEntry.touched && cacheEntry.domRef) {\n      svgLayerElement.removeChild(cacheEntry.domRef);\n      delete state.svgNodeCache[canvasHash][cacheKey];\n    }\n  });\n}\n\nexport default getSvgDrawingHelper;\n","import getSvgDrawingHelper from './getSvgDrawingHelper';\n\nfunction draw(\n  element: HTMLDivElement,\n  fn: (svgDrawingElement: any) => any\n): void {\n  const svgDrawingHelper = getSvgDrawingHelper(element);\n\n  // Save...\n  fn(svgDrawingHelper);\n  // Restore...\n\n  svgDrawingHelper.clearUntouched();\n}\n\nexport default draw;\n","import { state } from '../index';\nimport { IToolGroup } from '../../types';\n\n/**\n * Given a rendering engine Id and a viewport Id, return the tool group that\n * contains that rendering engine and viewport. Note: A viewport can only be\n * associated with a single tool group. You cannot have a viewport that belongs\n * to multiple tool groups. To achieve so, create a new viewport and a new toolGroup\n * for it. This will not impact memory usage much as the volume textures are\n * shared across all viewports rendering the same image.\n *\n * @param viewportId - The Id of the viewport that the tool is being\n * added to.\n * @param renderingEngineId - The Id of the rendering engine that the\n * tool group is associated with.\n * @returns A tool group.\n */\nfunction getToolGroupForViewport(\n  viewportId: string,\n  renderingEngineId: string\n): IToolGroup | undefined {\n  const toolGroupFilteredByIds = state.toolGroups.filter((tg) =>\n    tg.viewportsInfo.some(\n      (vp) =>\n        vp.renderingEngineId === renderingEngineId &&\n        (!vp.viewportId || vp.viewportId === viewportId)\n    )\n  );\n\n  if (!toolGroupFilteredByIds.length) {\n    return;\n  }\n\n  if (toolGroupFilteredByIds.length > 1) {\n    throw new Error(\n      `Multiple tool groups found for renderingEngineId: ${renderingEngineId} and viewportId: ${viewportId}. You should only\n      have one tool group per viewport in a renderingEngine.`\n    );\n  }\n\n  return toolGroupFilteredByIds[0];\n}\n\nexport default getToolGroupForViewport;\n","import { ToolGroupManager } from '../store';\nimport { ToolModes } from '../enums';\nimport { getEnabledElement } from '@cornerstonejs/core';\n\ntype ModesFilter = Array<ToolModes>;\n\n/**\n * Finds the enabled element, and iterates over the tools inside its\n * toolGroup. Returns the list of tool instances that are valid based\n * on the provided tool mode.\n *\n * @param element Canvas element\n * @param modesFilter tool modes: active, passive, enabled, disabled\n * @returns enabled tool instances\n */\nexport default function getToolsWithModesForElement(\n  element: HTMLDivElement,\n  modesFilter: ModesFilter\n) {\n  const enabledElement = getEnabledElement(element);\n  const { renderingEngineId, viewportId } = enabledElement;\n\n  const toolGroup = ToolGroupManager.getToolGroupForViewport(\n    viewportId,\n    renderingEngineId\n  );\n\n  if (!toolGroup) {\n    return [];\n  }\n\n  const enabledTools = [];\n\n  const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n\n  for (let j = 0; j < toolGroupToolNames.length; j++) {\n    const toolName = toolGroupToolNames[j];\n    const toolOptions = toolGroup.toolOptions[toolName];\n\n    /* filter out tools that don't have options */\n    if (!toolOptions) {\n      continue;\n    }\n\n    if (modesFilter.includes(toolOptions.mode)) {\n      const toolInstance = toolGroup.getToolInstance(toolName);\n      enabledTools.push(toolInstance);\n    }\n  }\n\n  return enabledTools;\n}\n","import {\n  getEnabledElement,\n  triggerEvent,\n  getRenderingEngine,\n} from '@cornerstonejs/core';\nimport { Events, ToolModes } from '../enums';\nimport { draw as drawSvg } from '../drawingSvg';\nimport getToolsWithModesForElement from './getToolsWithModesForElement';\nimport { AnnotationRenderedEventDetail } from '../types/EventTypes';\nconst { Active, Passive, Enabled } = ToolModes;\n\n/**\n * AnnotationRenderingEngine is a class that is responsible for rendering\n * annotations defined in the renderAnnotation method of annotation tools on the page.\n * It mimics the RenderingEngine in the Cornerstone Core. Here it uses requestAnimationFrame\n * is used to render annotations by calling renderAnnotations() on each enabled tool. Note: This\n * is a Singleton class and should not be instantiated directly. To trigger\n * an annotation render for an HTML element containing a viewport you can use\n *\n * ```\n * triggerAnnotationRender(element)\n * ```\n */\nclass AnnotationRenderingEngine {\n  public hasBeenDestroyed: boolean;\n  private _needsRender: Set<HTMLDivElement> = new Set();\n  private _animationFrameSet = false;\n  private _animationFrameHandle: number | null = null;\n  private _viewportElements: Map<string, HTMLDivElement>;\n\n  constructor() {\n    this._viewportElements = new Map();\n  }\n\n  /**\n   * Add the viewport's HTMLDivElement to the viewports for rendering. This method\n   * just informs the annotationRenderingEngine about the viewport and\n   * does not initiate a render.\n   * @param viewportId - Viewport Unique identifier\n   * @param element - HTMLDivElement\n   */\n  public addViewportElement(viewportId: string, element: HTMLDivElement) {\n    this._viewportElements.set(viewportId, element);\n  }\n\n  /**\n   * Remove the viewport's HTMLDivElement from subsequent annotation renders\n   * @param viewportId - Viewport Unique identifier\n   */\n  public removeViewportElement(viewportId: string, element: HTMLDivElement) {\n    this._viewportElements.delete(viewportId);\n\n    // delete element from needsRender if element exist\n    this._needsRender.delete(element);\n\n    // I don' think there is any disadvantage to canceling the animation frame\n    // and resetting the flags on viewport's element removal, since the removeVIewportElement\n    // might be as a result of reEnabling the element (in re-enable we disable first), hence the need to render the\n    // new one while removing the old one\n    this._reset();\n  }\n\n  /**\n   * It tells the AnnotationRenderingEngine to render the viewport element the next\n   * time it renders.\n   *\n   * @param element - The element to render.\n   */\n  public renderViewport(element: HTMLDivElement): void {\n    this._setViewportsToBeRenderedNextFrame([element]);\n  }\n\n  /**\n   * _throwIfDestroyed Throws an error if trying to interact with the `RenderingEngine`\n   * instance after its `destroy` method has been called.\n   */\n  private _throwIfDestroyed() {\n    if (this.hasBeenDestroyed) {\n      throw new Error(\n        'this.destroy() has been manually called to free up memory, can not longer use this instance. Instead make a new one.'\n      );\n    }\n  }\n\n  private _renderFlaggedViewports = () => {\n    this._throwIfDestroyed();\n\n    const elements = Array.from(this._viewportElements.values());\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (this._needsRender.has(element)) {\n        this._triggerRender(element);\n\n        // This viewport has been rendered, we can remove it from the set\n        this._needsRender.delete(element);\n\n        // If there is nothing left that is flagged for rendering, stop here\n        // and allow RAF to be called again\n        if (this._needsRender.size === 0) {\n          this._animationFrameSet = false;\n          this._animationFrameHandle = null;\n          return;\n        }\n      }\n    }\n  };\n\n  private _setAllViewportsToBeRenderedNextFrame() {\n    const elements = [...this._viewportElements.values()];\n\n    elements.forEach((element) => {\n      this._needsRender.add(element);\n    });\n\n    this._renderFlaggedViewports();\n  }\n\n  private _setViewportsToBeRenderedNextFrame(elements: HTMLDivElement[]) {\n    const elementsEnabled = [...this._viewportElements.values()];\n\n    // Add the viewports to the set of flagged viewports\n    elements.forEach((element) => {\n      // only enabledElement need to render\n      if (elementsEnabled.indexOf(element) !== -1) {\n        this._needsRender.add(element);\n      }\n    });\n\n    // Render any flagged viewports\n    this._render();\n  }\n\n  /**\n   * _render Sets up animation frame if necessary\n   */\n  private _render() {\n    // If we have viewports that need rendering and we have not already\n    // set the RAF callback to run on the next frame.\n    if (this._needsRender.size > 0 && this._animationFrameSet === false) {\n      this._animationFrameHandle = window.requestAnimationFrame(\n        this._renderFlaggedViewports\n      );\n\n      // Set the flag that we have already set up the next RAF call.\n      this._animationFrameSet = true;\n    }\n  }\n\n  _triggerRender(element) {\n    const enabledElement = getEnabledElement(element);\n\n    if (!enabledElement) {\n      console.warn('Element has been disabled');\n      return;\n    }\n\n    const renderingEngine = getRenderingEngine(\n      enabledElement.renderingEngineId\n    );\n    if (!renderingEngine) {\n      console.warn('rendering Engine has been destroyed');\n      return;\n    }\n\n    const enabledTools = getToolsWithModesForElement(element, [\n      Active,\n      Passive,\n      Enabled,\n    ]);\n\n    const { renderingEngineId, viewportId } = enabledElement;\n    const eventDetail: AnnotationRenderedEventDetail = {\n      element,\n      renderingEngineId,\n      viewportId,\n    };\n\n    // const enabledToolsWithAnnotations = enabledTools.filter((tool) => {\n    //   const annotations = getAnnotations(tool.getToolName(), {FrameOfReferenceUID});\n    //   return annotations && annotations.length;\n    // });\n\n    drawSvg(element, (svgDrawingHelper) => {\n      let anyRendered = false;\n      const handleDrawSvg = (tool) => {\n        if (tool.renderAnnotation) {\n          const rendered = tool.renderAnnotation(\n            enabledElement,\n            svgDrawingHelper\n          );\n          anyRendered = anyRendered || rendered;\n        }\n      };\n\n      /**\n       * We should be able to filter tools that don't have annotations, but\n       * currently some of tools have renderAnnotation method BUT\n       * don't keep annotation in the state, so if we do so, the tool will not be\n       * rendered.\n       */\n      enabledTools.forEach(handleDrawSvg);\n\n      if (anyRendered) {\n        triggerEvent(element, Events.ANNOTATION_RENDERED, { ...eventDetail });\n      }\n    });\n  }\n\n  /**\n   * _reset Resets the `RenderingEngine`\n   */\n  private _reset() {\n    window.cancelAnimationFrame(this._animationFrameHandle);\n\n    this._needsRender.clear();\n    this._animationFrameSet = false;\n    this._animationFrameHandle = null;\n\n    this._setAllViewportsToBeRenderedNextFrame();\n  }\n}\n\nconst annotationRenderingEngine = new AnnotationRenderingEngine();\n\n/**\n * It triggers the rendering of the annotations for the given HTML element using\n * the `AnnotationRenderingEngine`\n * @param element - The element to render the annotation on.\n */\nfunction triggerAnnotationRender(element: HTMLDivElement): void {\n  annotationRenderingEngine.renderViewport(element);\n}\n\nexport { annotationRenderingEngine, triggerAnnotationRender };\n\nexport default triggerAnnotationRender;\n","import { Enums, Types } from '@cornerstonejs/core';\nimport triggerAnnotationRender from '../utilities/triggerAnnotationRender';\n\n/**\n *  When the image is rendered, check what tools can be rendered for this element.\n *\n * - First we get all tools which are active, passive or enabled on the element.\n * - If any of these tools have a `renderAnnotation` method, then we render them.\n * - Note that these tools don't necessarily have to be instances of  `AnnotationTool`,\n *   Any tool may register a `renderAnnotation` method (e.g. a tool that displays an overlay).\n *\n * @param evt - The normalized IMAGE_RENDERED event.\n */\nconst onImageRendered = function (evt: Types.EventTypes.ImageRenderedEvent) {\n  // TODO: should we do this on camera modified instead of image rendered?\n  // e.g. no need to re-render annotations if only the VOI has changed\n  triggerAnnotationRender(evt.detail.element);\n};\n\nconst enable = function (element: HTMLDivElement): void {\n  element.addEventListener(\n    Enums.Events.IMAGE_RENDERED,\n    onImageRendered as EventListener\n  );\n};\n\nconst disable = function (element: HTMLDivElement): void {\n  element.removeEventListener(\n    Enums.Events.IMAGE_RENDERED,\n    onImageRendered as EventListener\n  );\n};\n\nexport default {\n  enable,\n  disable,\n};\n","import { ToolGroupManager } from '../../store';\nimport { ToolModes } from '../../enums';\nimport { EventTypes } from '../../types';\n\ntype ModesFilter = Array<ToolModes>;\n\n/**\n * Given the normalized mouse event and a filter of modes,\n * find all the tools on the element that are in one of the specified modes.\n * If the evtButton is specified, only tools with a matching binding will be returned.\n * @param evt - The normalized mouseDown event.\n * @param modesFilter - An array of entries from the `ToolModes` enum.\n */\nexport default function getToolsWithModesForMouseEvent(\n  evt: EventTypes.MouseMoveEventType,\n  modesFilter: ModesFilter,\n  evtButton?: any\n) {\n  const { renderingEngineId, viewportId } = evt.detail;\n  const toolGroup = ToolGroupManager.getToolGroupForViewport(\n    viewportId,\n    renderingEngineId\n  );\n\n  if (!toolGroup) {\n    return [];\n  }\n\n  const enabledTools = [];\n\n  const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n\n  for (let j = 0; j < toolGroupToolNames.length; j++) {\n    const toolName = toolGroupToolNames[j];\n    const tool = toolGroup.toolOptions[toolName];\n\n    // tool has binding that matches the mouse button - we match those with\n    // any modifier keys too since they can be passively interacted with\n    const correctBinding =\n      evtButton != null && // not null or undefined\n      tool.bindings.length &&\n      tool.bindings.some((binding) => binding.mouseButton === evtButton);\n\n    if (\n      modesFilter.includes(tool.mode) &&\n      // Should not filter by event's button\n      // or should, and the tool binding includes the event's button\n      (!evtButton || correctBinding)\n    ) {\n      const toolInstance = toolGroup.getToolInstance(toolName);\n      enabledTools.push(toolInstance);\n    }\n  }\n\n  return enabledTools;\n}\n","import { Enums, Types } from '@cornerstonejs/core';\nimport { ToolModes } from '../enums';\nimport getToolsWithModesForMouseEvent from './shared/getToolsWithModesForMouseEvent';\n\nconst { Active, Passive, Enabled } = ToolModes;\n\n/**\n * When the camera is modified, check what tools need to react to this.\n *\n * - First we get all tools which are active, passive or enabled on the element.\n * - If any of these tools have a `onCameraModified` method, we call it.\n *\n * @param evt - The normalized camera modified event.\n */\nconst onCameraModified = function (evt: Types.EventTypes.CameraModifiedEvent) {\n  // @ts-ignore\n  const enabledTools = getToolsWithModesForMouseEvent(evt, [\n    Active,\n    Passive,\n    Enabled,\n  ]);\n\n  enabledTools.forEach((tool) => {\n    if (tool.onCameraModified) {\n      tool.onCameraModified(evt);\n    }\n  });\n};\n\nconst enable = function (element) {\n  element.addEventListener(Enums.Events.CAMERA_MODIFIED, onCameraModified);\n};\n\nconst disable = function (element) {\n  element.removeEventListener(Enums.Events.CAMERA_MODIFIED, onCameraModified);\n};\n\nexport default {\n  enable,\n  disable,\n};\n","import { Enums, Types } from '@cornerstonejs/core';\nimport { ToolModes } from '../enums';\nimport getToolsWithModesForMouseEvent from './shared/getToolsWithModesForMouseEvent';\n\nconst { Active, Passive, Enabled } = ToolModes;\n\n/**\n * When image spacing is calibrated modify the annotations for all of its tools\n * to consider the new calibration info.\n *\n * - First we get all tools which are active, passive or enabled on the element.\n * - If any of these tools have a `onImageSpacingCalibrated` method, we call it.\n *\n * @param evt - The normalized image calibration event.\n */\nconst onImageSpacingCalibrated = function (\n  evt: Types.EventTypes.ImageSpacingCalibratedEvent\n) {\n  // @ts-ignore\n  const enabledTools = getToolsWithModesForMouseEvent(evt, [\n    Active,\n    Passive,\n    Enabled,\n  ]);\n\n  enabledTools.forEach((tool) => {\n    if (tool.onImageSpacingCalibrated) {\n      tool.onImageSpacingCalibrated(evt);\n    }\n  });\n};\n\nconst enable = function (element: HTMLDivElement) {\n  element.addEventListener(\n    Enums.Events.IMAGE_SPACING_CALIBRATED,\n    onImageSpacingCalibrated as EventListener\n  );\n};\n\nconst disable = function (element: HTMLDivElement) {\n  element.removeEventListener(\n    Enums.Events.IMAGE_SPACING_CALIBRATED,\n    onImageSpacingCalibrated as EventListener\n  );\n};\n\nexport default {\n  enable,\n  disable,\n};\n","import { state, ToolGroupManager } from '../../store';\nimport ToolModes from '../../enums/ToolModes';\n\nconst { Active } = ToolModes;\n\n/**\n * @function customCallbackHandler This is used as a generic event handler for tool events\n * on viewports. It:\n *\n * - Finds an \"active\" tool with:\n *    - A matching `handlerType`\n *    - A matching `customFunction` on its tool instance\n *\n * Then calls that custom function with raised event.\n *\n * @param handlerType - 'Mouse' | 'Touch' | 'MouseWheel'\n * @param customFunction - Function name that's expected to live on implementing\n *   (and event handling) active tool ex. 'doubleClickCallback'\n * @param evt\n */\nexport default function customCallbackHandler(\n  handlerType: string,\n  customFunction: string,\n  evt\n) {\n  if (state.isInteractingWithTool) {\n    return false;\n  }\n\n  const { renderingEngineId, viewportId } = evt.detail;\n  const toolGroup = ToolGroupManager.getToolGroupForViewport(\n    viewportId,\n    renderingEngineId\n  );\n\n  if (!toolGroup) {\n    return false;\n  }\n\n  // TODO: Filter tools by interaction type?\n  /**\n   * Iterate tool group tools until we find a tool that is:\n   * - active\n   * - has the custom callback function\n   *\n   */\n  let activeTool;\n  const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n\n  for (let j = 0; j < toolGroupToolNames.length; j++) {\n    const toolName = toolGroupToolNames[j];\n    const tool = toolGroup.toolOptions[toolName];\n    // TODO: Should be getter\n    const toolInstance = toolGroup.getToolInstance(toolName);\n\n    if (\n      // TODO: Should be enum?\n      tool.mode === Active &&\n      // TODO: Should be implements interface?\n      // Weird that we need concrete instance. Other options to filter / get callback?\n      typeof toolInstance[customFunction] === 'function'\n    ) {\n      activeTool = toolGroup.getToolInstance(toolName);\n      break;\n    }\n  }\n\n  if (!activeTool) {\n    return;\n  }\n\n  activeTool[customFunction](evt);\n}\n","import customCallbackHandler from '../shared/customCallbackHandler';\n\n/**\n * mouseClick - Event handler for mouse click events. Uses `customCallbackHandler` to fire\n * the `mouseClickCallback` function on active tools.\n */\nconst mouseClick = customCallbackHandler.bind(\n  null,\n  'Mouse',\n  'mouseClickCallback'\n);\n\nexport default mouseClick;\n","import type { Types } from '@cornerstonejs/core';\n\nimport {\n  ToolAnnotationsPair,\n  ToolsWithMoveableHandles,\n} from '../types/InternalToolTypes';\n\n/**\n * Filters an array of tools, returning only tools with moveable handles at the mouse location that are not locked\n *\n * @param element - The element\n * @param ToolAndAnnotations - The input tool array.\n * @param canvasCoords - The coordinates of the mouse position.\n * @param interactionType - The type of interaction (e.g. 'mouse' or 'touch')\n * @returns The filtered array.\n */\nexport default function filterToolsWithMoveableHandles(\n  element: HTMLDivElement,\n  ToolAndAnnotations: ToolAnnotationsPair[],\n  canvasCoords: Types.Point2,\n  interactionType = 'mouse'\n): ToolsWithMoveableHandles[] {\n  const proximity = interactionType === 'touch' ? 36 : 6;\n  const toolsWithMoveableHandles = [];\n\n  ToolAndAnnotations.forEach(({ tool, annotations }) => {\n    for (const annotation of annotations) {\n      if (annotation.isLocked || !annotation.isVisible) {\n        continue;\n      }\n\n      const handle = tool.getHandleNearImagePoint(\n        element,\n        annotation,\n        canvasCoords,\n        proximity\n      );\n\n      if (handle) {\n        toolsWithMoveableHandles.push({\n          tool,\n          annotation,\n          handle,\n        });\n        break;\n      }\n    }\n  });\n\n  return toolsWithMoveableHandles;\n}\n","import { getAnnotations } from '../stateManagement/annotation/annotationState';\nimport { ToolAnnotationsPair } from '../types/InternalToolTypes';\nimport type AnnotationTool from '../tools/base/AnnotationTool';\nimport BaseTool from '../tools/base/BaseTool';\nimport { getEnabledElement } from '@cornerstonejs/core';\n\n/**\n * Filters an array of tools, returning only tools which have annotation.\n *\n * @param element - The cornerstone3D enabled element.\n * @param tools - The array of tools to check.\n *\n * @returns The array of tools with their found annotations.\n */\nexport default function filterToolsWithAnnotationsForElement(\n  element: HTMLDivElement,\n  tools: AnnotationTool[]\n): ToolAnnotationsPair[] {\n  const result = [];\n  for (let i = 0; i < tools.length; i++) {\n    const tool = tools[i];\n\n    if (!tool) {\n      console.warn('undefined tool in filterToolsWithAnnotationsForElement');\n      continue;\n    }\n\n    let annotations = getAnnotations(\n      (tool.constructor as typeof BaseTool).toolName,\n      element\n    );\n\n    if (!annotations?.length) {\n      continue;\n    }\n\n    if (typeof tool.filterInteractableAnnotationsForElement === 'function') {\n      // If the tool has a annotations filter (e.g. with in-plane-annotations-only filtering), use it.\n      annotations = tool.filterInteractableAnnotationsForElement(\n        element,\n        annotations\n      );\n    }\n\n    if (annotations.length > 0) {\n      result.push({ tool, annotations });\n    }\n  }\n\n  return result;\n}\n","import type { Types } from '@cornerstonejs/core';\n\nimport {\n  ToolAnnotationPair,\n  ToolAnnotationsPair,\n} from '../types/InternalToolTypes';\n\n/**\n * Filters an array of tools with annotations, returning the first annotation\n * for each tool that is moveable and at the mouse location. It results in\n * one annotation per tool.\n *\n *\n * @param element - The HTML element\n * @param ToolAndAnnotations - The input tool array.\n * @param canvasCoords - The coordinates of the mouse position.\n * @param interactionType - The type of interaction that is taking place.\n * @returns The filtered array containing ToolAndAnnotation\n */\nexport default function filterMoveableAnnotationTools(\n  element: HTMLDivElement,\n  ToolAndAnnotations: ToolAnnotationsPair[],\n  canvasCoords: Types.Point2,\n  interactionType = 'mouse'\n): ToolAnnotationPair[] {\n  const proximity = interactionType === 'touch' ? 36 : 6;\n\n  // TODO - This could get pretty expensive pretty quickly. We don't want to fetch the camera\n  // And do world to canvas on each coord.\n\n  // We want to produce a matrix from canvas to world for the viewport and just do a matrix operation on each handle.\n  // This could still be expensive for ROIs, but we probably shouldn't have \"handles\" for them anyway.\n\n  const moveableAnnotationTools = [];\n\n  ToolAndAnnotations.forEach(({ tool, annotations }) => {\n    for (const annotation of annotations) {\n      if (annotation.isLocked || !annotation.isVisible) {\n        continue;\n      }\n\n      const near = tool.isPointNearTool(\n        element,\n        annotation,\n        canvasCoords,\n        proximity,\n        interactionType\n      );\n\n      if (near) {\n        moveableAnnotationTools.push({\n          tool,\n          annotation,\n        });\n        break;\n      }\n    }\n  });\n\n  return moveableAnnotationTools;\n}\n","/**\n * Mouse This enum enumerates the different buttons returned by `.buttons` on the mouse event.\n * These values are used when setting a tool active in a tool group.\n *\n * See also: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\n */\nenum MouseBindings {\n  /** usually the left button */\n  Primary = 1,\n  /** usually the right button */\n  Secondary = 2,\n  Primary_And_Secondary = 3,\n  /** usually mouse wheel button */\n  Auxiliary = 4,\n  Primary_And_Auxiliary = 5,\n  Secondary_And_Auxiliary = 6,\n  Primary_And_Secondary_And_Auxiliary = 7,\n  /** usually \"Browser Back\" button */\n  Fourth_Button = 8,\n  /** usually \"Browser Forward\" button */\n  Fifth_Button = 16,\n}\n\nenum KeyboardBindings {\n  Shift = 16,\n  Ctrl = 17,\n  Alt = 18,\n  Meta = 91,\n  ShiftCtrl = 1617,\n  ShiftAlt = 1618,\n  ShiftMeta = 1691,\n  CtrlAlt = 1718,\n  CtrlMeta = 1791,\n  AltMeta = 1891,\n}\n\nexport { MouseBindings, KeyboardBindings };\n","import { KeyboardBindings as kb } from '../../enums';\n\n/**\n * Gets the mouse modifier key from a mouse event.\n * Supports Shift, Ctrl, Alt, in singly and in combinations of 2\n * Supports Meta singly.\n */\nconst getMouseModifierKey = (evt) => {\n  // The logic is a hard coded key mapping\n  if (evt.shiftKey) {\n    if (evt.ctrlKey) return kb.ShiftCtrl;\n    if (evt.altKey) return kb.ShiftAlt;\n    if (evt.metaKey) return kb.ShiftMeta;\n    return kb.Shift;\n  }\n  if (evt.ctrlKey) {\n    if (evt.altKey) return kb.CtrlAlt;\n    if (evt.metaKey) return kb.CtrlMeta;\n    return kb.Ctrl;\n  }\n  if (evt.altKey) {\n    return (evt.metaKey && kb.AltMeta) || kb.Alt;\n  }\n  if (evt.metaKey) {\n    return kb.Meta;\n  }\n  return undefined;\n};\n\nexport default getMouseModifierKey;\n","import { ToolGroupManager } from '../../store';\nimport { MouseBindings, ToolModes } from '../../enums';\nimport { keyEventListener } from '../../eventListeners';\nimport { EventTypes } from '../../types';\nimport getMouseModifier from './getMouseModifier';\n\nconst { Active } = ToolModes;\n\n/**\n * Iterate tool group tools until we find a tool that has a \"ToolBinding\"\n * that matches our MouseEvent's `buttons`. It's possible there will be no match\n * (no active tool for that mouse button combination).\n *\n * @param evt - The event dispatcher mouse event.\n *\n * @returns tool\n */\nexport default function getActiveToolForMouseEvent(\n  evt: EventTypes.NormalizedMouseEventType\n) {\n  // Todo: we should refactor this to use getToolsWithModesForMouseEvent instead\n  const { renderingEngineId, viewportId } = evt.detail;\n  const mouseEvent = evt.detail.event;\n\n  // If any keyboard modifier key is also pressed - get the mouse version\n  // first since it handles combinations, while the key event handles non-modifier\n  // keys.\n  const modifierKey =\n    getMouseModifier(mouseEvent) || keyEventListener.getModifierKey();\n\n  const toolGroup = ToolGroupManager.getToolGroupForViewport(\n    viewportId,\n    renderingEngineId\n  );\n\n  if (!toolGroup) {\n    return null;\n  }\n\n  const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n  const defaultMousePrimary = toolGroup.getDefaultMousePrimary();\n\n  for (let j = 0; j < toolGroupToolNames.length; j++) {\n    const toolName = toolGroupToolNames[j];\n    const toolOptions = toolGroup.toolOptions[toolName];\n\n    // tool has binding that matches the mouse button, if mouseEvent is undefined\n    // it uses the primary button\n    const correctBinding =\n      toolOptions.bindings.length &&\n      toolOptions.bindings.some((binding) => {\n        return (\n          binding.mouseButton ===\n            (mouseEvent ? mouseEvent.buttons : defaultMousePrimary) &&\n          binding.modifierKey === modifierKey\n        );\n      });\n\n    if (toolOptions.mode === Active && correctBinding) {\n      return toolGroup.getToolInstance(toolName);\n    }\n  }\n}\n","import { state } from '../../store';\nimport { ToolModes } from '../../enums';\nimport { EventTypes } from '../../types';\nimport {\n  ToolAnnotationPair,\n  ToolsWithMoveableHandles,\n} from '../../types/InternalToolTypes';\n\nimport {\n  setAnnotationSelected,\n  isAnnotationSelected,\n} from '../../stateManagement/annotation/annotationSelection';\n\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\n\n// Util\nimport filterToolsWithMoveableHandles from '../../store/filterToolsWithMoveableHandles';\nimport filterToolsWithAnnotationsForElement from '../../store/filterToolsWithAnnotationsForElement';\nimport filterMoveableAnnotationTools from '../../store/filterMoveableAnnotationTools';\nimport getActiveToolForMouseEvent from '../shared/getActiveToolForMouseEvent';\nimport getToolsWithModesForMouseEvent from '../shared/getToolsWithModesForMouseEvent';\n\nconst { Active, Passive } = ToolModes;\n\n/**\n * When the mouse is depressed we check which entities can process these events in the following manner:\n *\n * - First we get the `activeTool` for the mouse button pressed.\n * - If the `activeTool` has a `preMouseDownCallback`, this is called. If the callback returns `true`,\n *   the event does not propagate further.\n * - Next we get all tools which are active or passive (`activeAndPassiveTools`), as annotation. for these tools could\n *   possibly catch and handle these events. We then filter the `activeAndPassiveTools` using `filterToolsWithAnnotationsForElement`, which filters tools with annotations\n *   for this frame of reference. Optionally a tool can employ a further filtering (via a\n *   `filterInteractableAnnotationsForElement` callback) for tools interactable within the current camera view\n *   (e.g. tools that only render when viewed from a certain direction).\n * - Next we check if any handles are interactable for each tool (`filterToolsWithMoveableHandles`). If interactable\n *   handles are found, the first tool/handle found consumes the event and the event does not propagate further.\n * - Next we check any tools are interactable (e.g. moving an entire length annotation rather than one of its handles:\n *   `filterMoveableAnnotationTools`). If interactable tools are found, the first tool found consumes the event and the\n *   event does not propagate further.\n * - Finally, if the `activeTool` has `postMouseDownCallback`, this is called.  If the callback returns `true`,\n *   the event does not propagate further.\n *\n * If the event is not consumed the event will bubble to the `mouseDownActivate` handler.\n *\n * @param evt - The normalized mouseDown event.\n */\nexport default function mouseDown(evt: EventTypes.MouseDownEventType) {\n  // If a tool has locked the current state it is dealing with an interaction within its own eventLoop.\n  if (state.isInteractingWithTool) {\n    return;\n  }\n\n  const activeTool = getActiveToolForMouseEvent(evt);\n\n  // Check for preMouseDownCallbacks,\n  // If the tool claims it consumed the event, prevent further checks.\n  if (activeTool && typeof activeTool.preMouseDownCallback === 'function') {\n    const consumedEvent = activeTool.preMouseDownCallback(evt);\n\n    if (consumedEvent) {\n      return;\n    }\n  }\n\n  // Find all tools that might respond to this mouse down\n  const isPrimaryClick = evt.detail.event.buttons === 1;\n  const activeToolsWithEventBinding = getToolsWithModesForMouseEvent(\n    evt,\n    [Active],\n    evt.detail.event.buttons\n  );\n  const passiveToolsIfEventWasPrimaryMouseButton = isPrimaryClick\n    ? getToolsWithModesForMouseEvent(evt, [Passive])\n    : undefined;\n  const applicableTools = [\n    ...(activeToolsWithEventBinding || []),\n    ...(passiveToolsIfEventWasPrimaryMouseButton || []),\n  ];\n\n  const eventDetail = evt.detail;\n  const { element } = eventDetail;\n\n  // Filter tools with annotations for this element\n  const annotationToolsWithAnnotations = filterToolsWithAnnotationsForElement(\n    element,\n    applicableTools\n  );\n\n  const canvasCoords = eventDetail.currentPoints.canvas;\n\n  // For the canvas coordinates, find all tools that might respond to this mouse down\n  // on their handles. This filter will call getHandleNearImagePoint for each tool\n  // instance (each annotation)\n  const annotationToolsWithMoveableHandles = filterToolsWithMoveableHandles(\n    element,\n    annotationToolsWithAnnotations,\n    canvasCoords,\n    'mouse'\n  );\n\n  // Preserve existing selections when shift key is pressed\n  const isMultiSelect = !!evt.detail.event.shiftKey;\n\n  // If there are annotation tools whose handle is near the mouse, select the first one\n  // that isn't locked. If there's only one annotation tool, select it.\n  if (annotationToolsWithMoveableHandles.length > 0) {\n    const { tool, annotation, handle } = getAnnotationForSelection(\n      annotationToolsWithMoveableHandles\n    ) as ToolsWithMoveableHandles;\n\n    toggleAnnotationSelection(annotation.annotationUID, isMultiSelect);\n    tool.handleSelectedCallback(evt, annotation, handle, 'Mouse');\n\n    return;\n  }\n\n  // If there were no annotation tools whose handle was near the mouse, try to check\n  // if any of the annotation tools are interactable (e.g. moving an entire length annotation)\n  const moveableAnnotationTools = filterMoveableAnnotationTools(\n    element,\n    annotationToolsWithAnnotations,\n    canvasCoords,\n    'mouse'\n  );\n\n  // If there are annotation tools that are interactable, select the first one\n  // that isn't locked. If there's only one annotation tool, select it.\n  if (moveableAnnotationTools.length > 0) {\n    const { tool, annotation } = getAnnotationForSelection(\n      moveableAnnotationTools\n    );\n\n    toggleAnnotationSelection(annotation.annotationUID, isMultiSelect);\n    tool.toolSelectedCallback(evt, annotation, 'Mouse');\n\n    return;\n  }\n\n  // Run the postMouseDownCallback for the active tool if it exists\n  if (activeTool && typeof activeTool.postMouseDownCallback === 'function') {\n    const consumedEvent = activeTool.postMouseDownCallback(evt);\n\n    if (consumedEvent) {\n      // If the tool claims it consumed the event, prevent further checks.\n      return;\n    }\n  }\n\n  // Don't stop propagation so that mouseDownActivate can handle the event\n}\n\n/**\n * If there are multiple annotation tools, return the first one that isn't locked neither hidden.\n * If there's only one annotation tool, return it\n * @param annotationTools - An array of tools and annotation.\n * @returns The candidate for selection\n */\nfunction getAnnotationForSelection(\n  toolsWithMovableHandles: ToolAnnotationPair[]\n): ToolAnnotationPair {\n  return (\n    (toolsWithMovableHandles.length > 1 &&\n      toolsWithMovableHandles.find(\n        (item) =>\n          !isAnnotationLocked(item.annotation) &&\n          isAnnotationVisible(item.annotation.annotationUID)\n      )) ||\n    toolsWithMovableHandles[0]\n  );\n}\n\n/**\n * If the annotation is selected, deselect it. If it's not selected, select it\n * @param annotationUID - The AnnotationUID that we\n * want to toggle the selection of.\n * @param isMultiSelect - If true, the annotation. will be deselected if it is\n * already selected, or deselected if it is selected.\n */\nfunction toggleAnnotationSelection(\n  annotationUID: string,\n  isMultiSelect = false\n): void {\n  if (isMultiSelect) {\n    if (isAnnotationSelected(annotationUID)) {\n      setAnnotationSelected(annotationUID, false);\n    } else {\n      const preserveSelected = true;\n      setAnnotationSelected(annotationUID, true, preserveSelected);\n    }\n  } else {\n    const preserveSelected = false;\n    setAnnotationSelected(annotationUID, true, preserveSelected);\n  }\n}\n","import { state } from '../../store';\nimport getActiveToolForMouseEvent from '../shared/getActiveToolForMouseEvent';\nimport { setAnnotationSelected } from '../../stateManagement/annotation/annotationSelection';\nimport { EventTypes } from '../../types';\n\n/**\n * If the `mouseDown` handler does not consume an event,\n * activate the creation loop of the active tool, if one is found for the\n * mouse button pressed.\n *\n * @param evt - The normalized mouseDown event.\n */\nexport default function mouseDownActivate(\n  evt: EventTypes.MouseDownActivateEventType\n) {\n  // If a tool has locked the current state it is dealing with an interaction within its own eventLoop.\n  if (state.isInteractingWithTool) {\n    return;\n  }\n\n  const activeTool = getActiveToolForMouseEvent(evt);\n\n  if (!activeTool) {\n    return;\n  }\n\n  if (state.isMultiPartToolActive) {\n    return;\n  }\n\n  if (activeTool.addNewAnnotation) {\n    const annotation = activeTool.addNewAnnotation(evt, 'mouse');\n    setAnnotationSelected(annotation.annotationUID);\n  }\n}\n","import customCallbackHandler from '../shared/customCallbackHandler';\n\n/**\n * @function mouseDoubleClick - Event handler for mouse double click events. Uses `customCallbackHandler` to fire\n * the `doubleClickCallback` function on active tools.\n */\nconst mouseDoubleClick = customCallbackHandler.bind(\n  null,\n  'Mouse',\n  'doubleClickCallback'\n);\n\nexport default mouseDoubleClick;\n","import getActiveToolForMouseEvent from '../shared/getActiveToolForMouseEvent';\nimport { state } from '../../store';\nimport { MouseDragEventType } from '../../types/EventTypes';\n\n/**\n * mouseDrag - Event handler for mouse drag events. Fires the `mouseDragCallback`\n * function on active tools.\n *\n * @param evt - The normalized mouseDown event.\n */\nexport default function mouseDrag(evt: MouseDragEventType) {\n  if (state.isInteractingWithTool) {\n    return;\n  }\n\n  const activeTool = getActiveToolForMouseEvent(evt);\n\n  const noFoundToolOrDoesNotHaveMouseDragCallback =\n    !activeTool || typeof activeTool.mouseDragCallback !== 'function';\n  if (noFoundToolOrDoesNotHaveMouseDragCallback) {\n    return;\n  }\n\n  activeTool.mouseDragCallback(evt);\n}\n","// // State\nimport { state } from '../../store';\nimport { ToolModes } from '../../enums';\n\n// // Util\nimport filterToolsWithAnnotationsForElement from '../../store/filterToolsWithAnnotationsForElement';\nimport getToolsWithModesForMouseEvent from '../shared/getToolsWithModesForMouseEvent';\nimport triggerAnnotationRender from '../../utilities/triggerAnnotationRender';\nimport { MouseMoveEventType } from '../../types/EventTypes';\n\nconst { Active, Passive } = ToolModes;\n\n/**\n * mouseMove - On mouse move when not dragging, fire tools `mouseMoveCallback`s.\n * This is mostly used to update the [un]hover state\n * of a tool.\n *\n * @param evt - The normalized mouseDown event.\n */\nexport default function mouseMove(evt: MouseMoveEventType) {\n  // Tool interactions when mouse moved are handled inside each tool.\n  // This function is mostly used to update the [un]hover state\n  if (state.isInteractingWithTool || state.isMultiPartToolActive) {\n    return;\n  }\n\n  const activeAndPassiveTools = getToolsWithModesForMouseEvent(evt, [\n    Active,\n    Passive,\n  ]);\n\n  const eventDetail = evt.detail;\n  const { element } = eventDetail;\n\n  // Annotation tool specific\n  const toolsWithAnnotations = filterToolsWithAnnotationsForElement(\n    element,\n    activeAndPassiveTools\n  );\n\n  const toolsWithoutAnnotations = activeAndPassiveTools.filter((tool) => {\n    const doesNotHaveAnnotations = !toolsWithAnnotations.some(\n      (toolAndAnnotation) =>\n        toolAndAnnotation.tool.getToolName() === tool.getToolName()\n    );\n\n    return doesNotHaveAnnotations;\n  });\n\n  let annotationsNeedToBeRedrawn = false;\n\n  for (const { tool, annotations } of toolsWithAnnotations) {\n    if (typeof tool.mouseMoveCallback === 'function') {\n      annotationsNeedToBeRedrawn =\n        tool.mouseMoveCallback(evt, annotations) || annotationsNeedToBeRedrawn;\n    }\n  }\n\n  // Run mouse move handlers for non-annotation tools\n  toolsWithoutAnnotations.forEach((tool) => {\n    if (typeof tool.mouseMoveCallback === 'function') {\n      tool.mouseMoveCallback(evt);\n    }\n  });\n\n  // Annotation activation status changed, redraw the annotations\n  if (annotationsNeedToBeRedrawn === true) {\n    triggerAnnotationRender(element);\n  }\n}\n","import customCallbackHandler from '../shared/customCallbackHandler';\n\n/**\n * mouseClick - Event handler for mouse up events. Uses `customCallbackHandler` to fire\n * the `mouseUpCallback` function on active tools.\n */\nconst mouseUp = customCallbackHandler.bind(null, 'Mouse', 'mouseUpCallback');\n\nexport default mouseUp;\n","import customCallbackHandler from '../shared/customCallbackHandler';\n\n/**\n * Event handler for mouse wheel events. Uses `customCallbackHandler` to fire\n * the `mouseWheelCallback` function on active tools.\n */\nconst mouseWheel = customCallbackHandler.bind(\n  null,\n  'MouseWheel',\n  'mouseWheelCallback'\n);\n\nexport default mouseWheel;\n","import Events from '../enums/Events';\n\nimport {\n  mouseClick,\n  mouseDown,\n  mouseDownActivate,\n  mouseDoubleClick,\n  mouseDrag,\n  mouseMove,\n  mouseUp,\n  mouseWheel,\n} from './mouseEventHandlers';\n\n/**\n * Enable these listeners are emitted in order, and can be cancelled/prevented from bubbling\n * by any previous event.\n *\n * @param element - The element to add the event listeners to.\n */\nconst enable = function (element: HTMLDivElement): void {\n  element.addEventListener(Events.MOUSE_CLICK, mouseClick as EventListener);\n  element.addEventListener(Events.MOUSE_DOWN, mouseDown as EventListener);\n  element.addEventListener(\n    Events.MOUSE_DOWN_ACTIVATE,\n    mouseDownActivate as EventListener\n  );\n  element.addEventListener(\n    Events.MOUSE_DOUBLE_CLICK,\n    mouseDoubleClick as EventListener\n  );\n  element.addEventListener(Events.MOUSE_DRAG, mouseDrag as EventListener);\n  element.addEventListener(Events.MOUSE_MOVE, mouseMove as EventListener);\n  element.addEventListener(Events.MOUSE_UP, mouseUp as EventListener);\n  element.addEventListener(Events.MOUSE_WHEEL, mouseWheel as EventListener);\n};\n\n/**\n * Disable and Remove the MouseToolEventDispatcher handlers from the element.\n *\n * @param element - HTMLDivElement\n */\nconst disable = function (element: HTMLDivElement) {\n  element.removeEventListener(Events.MOUSE_CLICK, mouseClick as EventListener);\n  element.removeEventListener(Events.MOUSE_DOWN, mouseDown as EventListener);\n  element.removeEventListener(\n    Events.MOUSE_DOWN_ACTIVATE,\n    mouseDownActivate as EventListener\n  );\n  element.removeEventListener(\n    Events.MOUSE_DOUBLE_CLICK,\n    mouseDoubleClick as EventListener\n  );\n  element.removeEventListener(Events.MOUSE_DRAG, mouseDrag as EventListener);\n  element.removeEventListener(Events.MOUSE_MOVE, mouseMove as EventListener);\n  element.removeEventListener(Events.MOUSE_UP, mouseUp as EventListener);\n  element.removeEventListener(Events.MOUSE_WHEEL, mouseWheel as EventListener);\n};\n\nconst mouseToolEventDispatcher = {\n  enable,\n  disable,\n};\n\nexport default mouseToolEventDispatcher;\n","import { ToolGroupManager } from '../../store';\nimport { ToolModes, MouseBindings } from '../../enums';\nimport { keyEventListener } from '../../eventListeners';\nimport { EventTypes } from '../../types';\nimport { getMouseButton } from '../../eventListeners/mouse/mouseDownListener';\n\nconst { Active } = ToolModes;\n\n/**\n * Iterate tool group tools until we find a tool that has a \"ToolBinding\"\n * that matches our Keyboard pressed keys. It's possible there will be no match\n * (no active tool for that mouse button combination).\n *\n * @param evt - The normalized keyboard event.\n *\n * @returns tool\n */\nexport default function getActiveToolForKeyboardEvent(\n  evt: EventTypes.KeyDownEventType\n) {\n  const { renderingEngineId, viewportId } = evt.detail;\n\n  // Get the current mouse button clicked\n  const mouseButton = getMouseButton();\n\n  // If any keyboard modifier key is also pressed\n  const modifierKey = keyEventListener.getModifierKey();\n\n  const toolGroup = ToolGroupManager.getToolGroupForViewport(\n    viewportId,\n    renderingEngineId\n  );\n\n  if (!toolGroup) {\n    return null;\n  }\n\n  const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n  const defaultMousePrimary = toolGroup.getDefaultMousePrimary();\n\n  for (let j = 0; j < toolGroupToolNames.length; j++) {\n    const toolName = toolGroupToolNames[j];\n    const toolOptions = toolGroup.toolOptions[toolName];\n\n    // tool has binding that matches the mouse button, if mouseEvent is undefined\n    // it uses the primary button\n    const correctBinding =\n      toolOptions.bindings.length &&\n      toolOptions.bindings.some(\n        (binding) =>\n          binding.mouseButton === (mouseButton ?? defaultMousePrimary) &&\n          binding.modifierKey === modifierKey\n      );\n\n    if (toolOptions.mode === Active && correctBinding) {\n      return toolGroup.getToolInstance(toolName);\n    }\n  }\n}\n","import { ToolGroupManager } from '../../store';\nimport getActiveToolForKeyboardEvent from '../shared/getActiveToolForKeyboardEvent';\nimport { KeyDownEventType } from '../../types/EventTypes';\n\n/**\n * KeyDown event listener to handle viewport cursor icon changes\n *\n * @param evt - The KeyboardEvent\n */\nexport default function keyDown(evt: KeyDownEventType): void {\n  // get the active tool given the key and mouse button\n  const activeTool = getActiveToolForKeyboardEvent(evt);\n\n  if (!activeTool) {\n    return;\n  }\n\n  const { renderingEngineId, viewportId } = evt.detail;\n\n  const toolGroup = ToolGroupManager.getToolGroupForViewport(\n    viewportId,\n    renderingEngineId\n  );\n\n  const toolName = activeTool.getToolName();\n  if (Object.keys(toolGroup.toolOptions).includes(toolName)) {\n    toolGroup.setViewportsCursorByToolName(toolName);\n  }\n}\n","import { resetModifierKey } from '../../eventListeners/keyboard/keyDownListener';\nimport { ToolGroupManager } from '../../store';\nimport getActiveToolForKeyboardEvent from '../shared/getActiveToolForKeyboardEvent';\nimport { KeyDownEventType } from '../../types/EventTypes';\n\n/**\n * KeyDown event listener to handle viewport cursor icon changes\n *\n * @param evt - The KeyboardEvent\n */\nexport default function keyUp(evt: KeyDownEventType): void {\n  // get the active tool for the primary mouse button\n  const activeTool = getActiveToolForKeyboardEvent(evt);\n\n  if (!activeTool) {\n    return;\n  }\n\n  const { renderingEngineId, viewportId } = evt.detail;\n\n  const toolGroup = ToolGroupManager.getToolGroupForViewport(\n    viewportId,\n    renderingEngineId\n  );\n\n  // Reset the modifier key\n  resetModifierKey();\n\n  const toolName = activeTool.getToolName();\n  if (Object.keys(toolGroup.toolOptions).includes(toolName)) {\n    toolGroup.setViewportsCursorByToolName(toolName);\n  }\n}\n","import Events from '../enums/Events';\nimport { keyDown, keyUp } from './keyboardEventHandlers';\n\n/**\n * Enable Key down and key up listeners\n *\n * @param element - The HTML element to attach the event listeners to.\n */\nconst enable = function (element: HTMLDivElement) {\n  element.addEventListener(Events.KEY_DOWN, keyDown as EventListener);\n  element.addEventListener(Events.KEY_UP, keyUp as EventListener);\n};\n\n/**\n * Disable Key down and key up listeners\n * @param element - The HTML element to attach the event listeners to.\n */\nconst disable = function (element: HTMLDivElement) {\n  element.removeEventListener(Events.KEY_DOWN, keyDown as EventListener);\n  element.removeEventListener(Events.KEY_UP, keyUp as EventListener);\n};\n\nconst keyboardToolEventDispatcher = {\n  enable,\n  disable,\n};\n\nexport default keyboardToolEventDispatcher;\n","import { ToolGroupManager } from '../../store';\nimport { MouseBindings, ToolModes } from '../../enums';\nimport { EventTypes } from '../../types';\nimport getMouseModifier from './getMouseModifier';\nimport { keyEventListener } from '../../eventListeners';\n\nconst { Active } = ToolModes;\n\n/**\n * Iterate tool group tools until we find a tool that has a \"ToolBinding\"\n * that matches our TouchEvent's `buttons`. It's possible there will be no match\n * (no active tool for that touch button combination).\n *\n * @param evt - The event dispatcher touch event.\n *\n * @returns tool\n */\nexport default function getActiveToolForTouchEvent(\n  evt: EventTypes.NormalizedTouchEventType\n) {\n  // Todo: we should refactor this to use getToolsWithModesForTouchEvent instead\n  const { renderingEngineId, viewportId } = evt.detail;\n  const touchEvent = evt.detail.event;\n\n  const toolGroup = ToolGroupManager.getToolGroupForViewport(\n    viewportId,\n    renderingEngineId\n  );\n\n  if (!toolGroup) {\n    return null;\n  }\n\n  const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n\n  const numTouchPoints = Object.keys(touchEvent.touches).length;\n\n  // If any keyboard modifier key is also pressed\n  const modifierKey =\n    getMouseModifier(touchEvent) || keyEventListener.getModifierKey();\n  const defaultMousePrimary = toolGroup.getDefaultMousePrimary();\n\n  for (let j = 0; j < toolGroupToolNames.length; j++) {\n    const toolName = toolGroupToolNames[j];\n    const toolOptions = toolGroup.toolOptions[toolName];\n\n    const correctBinding =\n      toolOptions.bindings.length &&\n      /**\n       * TODO: setActiveTool treats MouseBindings.Primary in a special way\n       * which is analgous to numTouchPoints === 1 as the primary interaction\n       * for touch based applications. The ToolGroup set active and get active\n       * logic should be updated to account for numTouchPoints === 1\n       */\n      toolOptions.bindings.some(\n        (binding) =>\n          (binding.numTouchPoints === numTouchPoints ||\n            (numTouchPoints === 1 &&\n              binding.mouseButton === defaultMousePrimary)) &&\n          binding.modifierKey === modifierKey\n      );\n\n    if (toolOptions.mode === Active && correctBinding) {\n      return toolGroup.getToolInstance(toolName);\n    }\n  }\n}\n","import { ToolGroupManager } from '../../store';\nimport { ToolModes } from '../../enums';\nimport { EventTypes } from '../../types';\n\ntype ModesFilter = Array<ToolModes>;\n\n/**\n * Given the normalized touch event and a filter of modes,\n * find all the tools on the element that are in one of the specified modes.\n * If the evtButton is specified, only tools with a matching binding will be returned.\n * @param evt - The normalized touchStart event.\n * @param modesFilter - An array of entries from the `ToolModes` enum.\n */\nexport default function getToolsWithModesForTouchEvent(\n  evt: EventTypes.NormalizedTouchEventType,\n  modesFilter: ModesFilter,\n  numTouchPoints?: number\n) {\n  const { renderingEngineId, viewportId } = evt.detail;\n  const toolGroup = ToolGroupManager.getToolGroupForViewport(\n    viewportId,\n    renderingEngineId\n  );\n\n  if (!toolGroup) {\n    return [];\n  }\n\n  const enabledTools = [];\n\n  const toolGroupToolNames = Object.keys(toolGroup.toolOptions);\n\n  for (let j = 0; j < toolGroupToolNames.length; j++) {\n    const toolName = toolGroupToolNames[j];\n    const tool = toolGroup.toolOptions[toolName];\n\n    const correctBinding =\n      numTouchPoints != null &&\n      tool.bindings.length &&\n      tool.bindings.some(\n        (binding) => binding.numTouchPoints === numTouchPoints\n      );\n\n    if (\n      modesFilter.includes(tool.mode) &&\n      (!numTouchPoints || correctBinding)\n    ) {\n      const toolInstance = toolGroup.getToolInstance(toolName);\n      enabledTools.push(toolInstance);\n    }\n  }\n\n  return enabledTools;\n}\n","import { state } from '../../store';\nimport { ToolModes } from '../../enums';\nimport { EventTypes } from '../../types';\nimport {\n  ToolAnnotationPair,\n  ToolsWithMoveableHandles,\n} from '../../types/InternalToolTypes';\n\nimport {\n  setAnnotationSelected,\n  isAnnotationSelected,\n} from '../../stateManagement/annotation/annotationSelection';\n\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\n\n// Util\nimport filterToolsWithMoveableHandles from '../../store/filterToolsWithMoveableHandles';\nimport filterToolsWithAnnotationsForElement from '../../store/filterToolsWithAnnotationsForElement';\nimport filterMoveableAnnotationTools from '../../store/filterMoveableAnnotationTools';\nimport getActiveToolForTouchEvent from '../shared/getActiveToolForTouchEvent';\nimport getToolsWithModesForTouchEvent from '../shared/getToolsWithModesForTouchEvent';\n\nconst { Active, Passive } = ToolModes;\n\n/**\n * touchStart - Event handler for touchStart events. Uses `customCallbackHandler` to fire\n * the `touchStartCallback` function on active tools.\n */\nexport default function touchStart(evt: EventTypes.TouchStartEventType) {\n  if (state.isInteractingWithTool) {\n    return;\n  }\n  const activeTool = getActiveToolForTouchEvent(evt);\n\n  // Check for preTouchStartCallbacks,\n  // If the tool claims it consumed the event, prevent further checks.\n  if (activeTool && typeof activeTool.preTouchStartCallback === 'function') {\n    const consumedEvent = activeTool.preTouchStartCallback(evt);\n\n    if (consumedEvent) {\n      return;\n    }\n  }\n\n  const isPrimaryClick = Object.keys(evt.detail.event.touches).length === 1;\n  const activeToolsWithEventBinding = getToolsWithModesForTouchEvent(\n    evt,\n    [Active],\n    Object.keys(evt.detail.event.touches).length\n  );\n  const passiveToolsIfEventWasPrimaryTouchButton = isPrimaryClick\n    ? getToolsWithModesForTouchEvent(evt, [Passive])\n    : undefined;\n  const applicableTools = [\n    ...(activeToolsWithEventBinding || []),\n    ...(passiveToolsIfEventWasPrimaryTouchButton || []),\n    activeTool,\n  ];\n\n  const eventDetail = evt.detail;\n  const { element } = eventDetail;\n\n  // Filter tools with annotations for this element\n  const annotationToolsWithAnnotations = filterToolsWithAnnotationsForElement(\n    element,\n    applicableTools\n  );\n\n  const canvasCoords = eventDetail.currentPoints.canvas;\n\n  // For the canvas coordinates, find all tools that might respond to this touch start\n  // on their handles. This filter will call getHandleNearImagePoint for each tool\n  // instance (each annotation)\n  const annotationToolsWithMoveableHandles = filterToolsWithMoveableHandles(\n    element,\n    annotationToolsWithAnnotations,\n    canvasCoords,\n    'touch'\n  );\n\n  const isMultiSelect = false;\n\n  // If there are annotation tools whose handle is near the touch, select the first one\n  // that isn't locked. If there's only one annotation tool, select it.\n  if (annotationToolsWithMoveableHandles.length > 0) {\n    const { tool, annotation, handle } = getAnnotationForSelection(\n      annotationToolsWithMoveableHandles\n    ) as ToolsWithMoveableHandles;\n\n    toggleAnnotationSelection(annotation.annotationUID, isMultiSelect);\n    tool.handleSelectedCallback(evt, annotation, handle, 'Touch');\n\n    return;\n  }\n\n  // If there were no annotation tools whose handle was near the touch, try to check\n  // if any of the annotation tools are interactable (e.g. moving an entire length annotation)\n  const moveableAnnotationTools = filterMoveableAnnotationTools(\n    element,\n    annotationToolsWithAnnotations,\n    canvasCoords,\n    'touch'\n  );\n\n  // If there are annotation tools that are interactable, select the first one\n  // that isn't locked. If there's only one annotation tool, select it.\n  if (moveableAnnotationTools.length > 0) {\n    const { tool, annotation } = getAnnotationForSelection(\n      moveableAnnotationTools\n    );\n\n    toggleAnnotationSelection(annotation.annotationUID, isMultiSelect);\n    tool.toolSelectedCallback(evt, annotation, 'Touch');\n\n    return;\n  }\n\n  // Run the postTouchStartCallback for the active tool if it exists\n  if (activeTool && typeof activeTool.postTouchStartCallback === 'function') {\n    const consumedEvent = activeTool.postTouchStartCallback(evt);\n\n    if (consumedEvent) {\n      // If the tool claims it consumed the event, prevent further checks.\n      return;\n    }\n  }\n\n  // Don't stop propagation so that touchStartActivate can handle the event\n}\n\n/**\n * If there are multiple annotation tools, return the first one that isn't locked neither hidden.\n * If there's only one annotation tool, return it\n * @param annotationTools - An array of tools and annotation.\n * @returns The candidate for selection\n */\nfunction getAnnotationForSelection(\n  toolsWithMovableHandles: ToolAnnotationPair[]\n): ToolAnnotationPair {\n  return (\n    (toolsWithMovableHandles.length > 1 &&\n      toolsWithMovableHandles.find(\n        (item) =>\n          !isAnnotationLocked(item.annotation) &&\n          isAnnotationVisible(item.annotation.annotationUID)\n      )) ||\n    toolsWithMovableHandles[0]\n  );\n}\n\n/**\n * If the annotation is selected, deselect it. If it's not selected, select it\n * @param annotationUID - The AnnotationUID that we\n * want to toggle the selection of.\n * @param isMultiSelect - If true, the annotation. will be deselected if it is\n * already selected, or deselected if it is selected.\n */\nfunction toggleAnnotationSelection(\n  annotationUID: string,\n  isMultiSelect = false\n): void {\n  if (isMultiSelect) {\n    if (isAnnotationSelected(annotationUID)) {\n      setAnnotationSelected(annotationUID, false);\n    } else {\n      const preserveSelected = true;\n      setAnnotationSelected(annotationUID, true, preserveSelected);\n    }\n  } else {\n    const preserveSelected = false;\n    setAnnotationSelected(annotationUID, true, preserveSelected);\n  }\n}\n","import { state } from '../../store';\nimport { EventTypes } from '../../types';\nimport { setAnnotationSelected } from '../../stateManagement/annotation/annotationSelection';\n\nimport getActiveToolForTouchEvent from '../shared/getActiveToolForTouchEvent';\n\n/**\n * If the `touchStart` handler does not consume an event,\n * activate the creation loop of the active tool, if one is found for the\n * touch button pressed.\n *\n * @param evt - The normalized touchStart event.\n */\nexport default function touchStartActivate(\n  evt: EventTypes.TouchStartActivateEventType\n) {\n  // If a tool has locked the current state it is dealing with an interaction within its own eventLoop.\n  if (state.isInteractingWithTool) {\n    return;\n  }\n\n  const activeTool = getActiveToolForTouchEvent(evt);\n\n  if (!activeTool) {\n    return;\n  }\n\n  if (state.isMultiPartToolActive) {\n    return;\n  }\n\n  if (activeTool.addNewAnnotation) {\n    const annotation = activeTool.addNewAnnotation(evt, 'touch');\n    setAnnotationSelected(annotation.annotationUID);\n  }\n}\n","import getActiveToolForTouchEvent from '../shared/getActiveToolForTouchEvent';\nimport { state } from '../../store';\nimport { TouchDragEventType } from '../../types/EventTypes';\n\n/**\n * touchDrag - Event handler for touchDrag events. Uses `customCallbackHandler` to fire\n * the `touchDragCallback` function on active tools.\n */\nexport default function touchDrag(evt: TouchDragEventType) {\n  if (state.isInteractingWithTool) {\n    return;\n  }\n\n  const activeTool = getActiveToolForTouchEvent(evt);\n\n  const noFoundToolOrDoesNotHaveTouchDragCallback =\n    !activeTool || typeof activeTool.touchDragCallback !== 'function';\n  if (noFoundToolOrDoesNotHaveTouchDragCallback) {\n    return;\n  }\n\n  activeTool.touchDragCallback(evt);\n}\n","import customCallbackHandler from '../shared/customCallbackHandler';\n\n/**\n * touchEnd - Event handler for touchEnd events. Uses `customCallbackHandler` to fire\n * the `touchEndCallback` function on active tools.\n */\nconst touchEnd = customCallbackHandler.bind(null, 'Touch', 'touchEndCallback');\n\nexport default touchEnd;\n","import customCallbackHandler from '../shared/customCallbackHandler';\n\n/**\n * touchTap - Event handler for touch tap events. Uses `customCallbackHandler` to fire\n * the `touchTapCallback` function on active tools.\n */\nconst touchTap = customCallbackHandler.bind(null, 'Touch', 'touchTapCallback');\n\nexport default touchTap;\n","import customCallbackHandler from '../shared/customCallbackHandler';\n\n/**\n * touchPress - Event handler for touch press events. Uses `customCallbackHandler` to fire\n * the `touchPressCallback` function on active tools.\n */\nconst touchPress = customCallbackHandler.bind(\n  null,\n  'Touch',\n  'touchPressCallback'\n);\n\nexport default touchPress;\n","import Events from '../enums/Events';\n\nimport {\n  touchStart,\n  touchStartActivate,\n  touchDrag,\n  touchEnd,\n  touchTap,\n  touchPress,\n} from './touchEventHandlers';\n\n/**\n * Enable these listeners are emitted in order, and can be cancelled/prevented from bubbling\n * by any previous event.\n *\n * @param element - The element to add the event listeners to.\n */\nconst enable = function (element: HTMLDivElement): void {\n  element.addEventListener(Events.TOUCH_START, touchStart as EventListener);\n  element.addEventListener(\n    Events.TOUCH_START_ACTIVATE,\n    touchStartActivate as EventListener\n  );\n  element.addEventListener(Events.TOUCH_DRAG, touchDrag as EventListener);\n  element.addEventListener(Events.TOUCH_END, touchEnd as EventListener);\n  element.addEventListener(Events.TOUCH_TAP, touchTap as EventListener);\n  element.addEventListener(Events.TOUCH_PRESS, touchPress as EventListener);\n};\n\n/**\n * Disable and Remove the MouseToolEventDispatcher handlers from the element.\n *\n * @param element - HTMLDivElement\n */\nconst disable = function (element: HTMLDivElement) {\n  element.removeEventListener(Events.TOUCH_START, touchStart as EventListener);\n  element.removeEventListener(\n    Events.TOUCH_START_ACTIVATE,\n    touchStartActivate as EventListener\n  );\n  element.removeEventListener(Events.TOUCH_DRAG, touchDrag as EventListener);\n  element.removeEventListener(Events.TOUCH_END, touchEnd as EventListener);\n  element.removeEventListener(Events.TOUCH_PRESS, touchPress as EventListener);\n};\n\nconst touchToolEventDispatcher = {\n  enable,\n  disable,\n};\n\nexport default touchToolEventDispatcher;\n","import { Types } from '@cornerstonejs/core';\nimport {\n  mouseEventListeners,\n  wheelEventListener,\n  touchEventListeners,\n  keyEventListener,\n} from '../eventListeners';\nimport {\n  imageRenderedEventDispatcher,\n  cameraModifiedEventDispatcher,\n  mouseToolEventDispatcher,\n  touchToolEventDispatcher,\n  keyboardToolEventDispatcher,\n  imageSpacingCalibratedEventDispatcher,\n} from '../eventDispatchers';\nimport { state } from './state';\n\nimport { annotationRenderingEngine } from '../utilities/triggerAnnotationRender';\n\n/**\n * When an element is \"enabled\", add event listeners and dispatchers to it\n * so we can use interactions to affect tool behaviors\n *\n * @param evt - The ELEMENT_ENABLED event\n */\nexport default function addEnabledElement(\n  evt: Types.EventTypes.ElementEnabledEvent\n): void {\n  const { element, viewportId } = evt.detail;\n  const svgLayer = _createSvgAnnotationLayer(viewportId);\n\n  // Reset/Create svgNodeCache for element\n  _setSvgNodeCache(element);\n  _appendChild(svgLayer, element);\n\n  // Add this element to the annotation rendering engine\n  annotationRenderingEngine.addViewportElement(viewportId, element);\n\n  // Listeners\n  mouseEventListeners.enable(element);\n  wheelEventListener.enable(element);\n  touchEventListeners.enable(element);\n  keyEventListener.enable(element);\n\n  // Dispatchers: renderer\n  imageRenderedEventDispatcher.enable(element);\n  cameraModifiedEventDispatcher.enable(element);\n  imageSpacingCalibratedEventDispatcher.enable(element);\n  // Dispatchers: interaction\n  mouseToolEventDispatcher.enable(element);\n  keyboardToolEventDispatcher.enable(element);\n  touchToolEventDispatcher.enable(element);\n\n  // labelmap\n  // State\n  state.enabledElements.push(element);\n}\n\n/**\n *\n */\nfunction _createSvgAnnotationLayer(viewportId: string): SVGElement {\n  const svgns = 'http://www.w3.org/2000/svg';\n  const svgLayer = document.createElementNS(svgns, 'svg');\n\n  const svgLayerId = `svg-layer-${viewportId}`;\n  svgLayer.classList.add('svg-layer');\n  svgLayer.setAttribute('id', svgLayerId);\n  svgLayer.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgLayer.style.width = '100%';\n  svgLayer.style.height = '100%';\n  svgLayer.style.pointerEvents = 'none';\n  svgLayer.style.position = 'absolute';\n  // TODO: we should test this on high-res monitors\n  //svgLayer.style.textRendering = 'optimizeSpeed'\n\n  // Single dropshadow config for now\n  const defs = document.createElementNS(svgns, 'defs');\n  const filter = document.createElementNS(svgns, 'filter');\n  const feOffset = document.createElementNS(svgns, 'feOffset');\n  const feColorMatrix = document.createElementNS(svgns, 'feColorMatrix');\n  const feBlend = document.createElementNS(svgns, 'feBlend');\n\n  //\n  filter.setAttribute('id', `shadow-${svgLayerId}`);\n  filter.setAttribute('filterUnits', 'userSpaceOnUse');\n\n  //\n  feOffset.setAttribute('result', 'offOut');\n  feOffset.setAttribute('in', 'SourceGraphic');\n  feOffset.setAttribute('dx', '0.5');\n  feOffset.setAttribute('dy', '0.5');\n\n  //\n  feColorMatrix.setAttribute('result', 'matrixOut');\n  feColorMatrix.setAttribute('in', 'offOut');\n  feColorMatrix.setAttribute('in2', 'matrix');\n  feColorMatrix.setAttribute(\n    'values',\n    '0.2 0 0 0 0 0 0.2 0 0 0 0 0 0.2 0 0 0 0 0 1 0'\n  );\n\n  //\n  feBlend.setAttribute('in', 'SourceGraphic');\n  feBlend.setAttribute('in2', 'matrixOut');\n  feBlend.setAttribute('mode', 'normal');\n\n  filter.appendChild(feOffset);\n  filter.appendChild(feColorMatrix);\n  filter.appendChild(feBlend);\n  defs.appendChild(filter);\n  svgLayer.appendChild(defs);\n\n  return svgLayer;\n}\n\nfunction _setSvgNodeCache(element) {\n  const { viewportUid: viewportId, renderingEngineUid: renderingEngineId } =\n    element.dataset;\n  const elementHash = `${viewportId}:${renderingEngineId}`;\n\n  // Create or reset\n  // TODO: If... Reset, we should blow out any nodes in DOM\n  state.svgNodeCache[elementHash] = {};\n}\n\n/**\n *\n * @param newNode\n * @param referenceNode\n */\nfunction _appendChild(\n  newNode: SVGElement,\n  referenceNode: HTMLDivElement\n): void {\n  referenceNode.querySelector('div.viewport-element').appendChild(newNode);\n}\n","import { state } from '../index';\nimport Synchronizer from './Synchronizer';\n\n/**\n * It returns all synchronizers that are not disabled and have a source viewport\n * with the given rendering engine Id and viewport Id\n * @param renderingEngineId - The Id of the rendering engine\n * @param viewportId - The Id of the viewport\n * @returns An array of synchronizers\n */\nfunction getSynchronizersForViewport(\n  viewportId: string,\n  renderingEngineId: string\n): Array<Synchronizer> {\n  const synchronizersFilteredByIds = [];\n\n  if (!renderingEngineId && !viewportId) {\n    throw new Error(\n      'At least one of renderingEngineId or viewportId should be given'\n    );\n  }\n\n  for (let i = 0; i < state.synchronizers.length; i++) {\n    const synchronizer = state.synchronizers[i];\n    const notDisabled = !synchronizer.isDisabled();\n    const hasSourceViewport = synchronizer.hasSourceViewport(\n      renderingEngineId,\n      viewportId\n    );\n\n    const hasTargetViewport = synchronizer.hasTargetViewport(\n      renderingEngineId,\n      viewportId\n    );\n\n    if (notDisabled && (hasSourceViewport || hasTargetViewport)) {\n      synchronizersFilteredByIds.push(synchronizer);\n    }\n  }\n\n  return synchronizersFilteredByIds;\n}\n\nexport default getSynchronizersForViewport;\n","import { getEnabledElement, Types } from '@cornerstonejs/core';\nimport {\n  mouseEventListeners,\n  wheelEventListener,\n  touchEventListeners,\n  keyEventListener,\n} from '../eventListeners';\nimport {\n  imageRenderedEventDispatcher,\n  cameraModifiedEventDispatcher,\n  mouseToolEventDispatcher,\n  keyboardToolEventDispatcher,\n  imageSpacingCalibratedEventDispatcher,\n  touchToolEventDispatcher,\n} from '../eventDispatchers';\n// ~~\n\nimport filterToolsWithAnnotationsForElement from './filterToolsWithAnnotationsForElement';\nimport { state } from './state';\nimport getToolsWithModesForElement from '../utilities/getToolsWithModesForElement';\nimport { ToolModes } from '../enums';\nimport { removeAnnotation } from '../stateManagement';\nimport getSynchronizersForViewport from './SynchronizerManager/getSynchronizersForViewport';\nimport getToolGroupForViewport from './ToolGroupManager/getToolGroupForViewport';\nimport { annotationRenderingEngine } from '../utilities/triggerAnnotationRender';\n\nconst VIEWPORT_ELEMENT = 'viewport-element';\n\nfunction removeEnabledElement(\n  elementDisabledEvt: Types.EventTypes.ElementDisabledEvent\n): void {\n  // Is DOM element\n  const { element, viewportId } = elementDisabledEvt.detail;\n\n  _resetSvgNodeCache(element);\n  _removeSvgNode(element);\n\n  // Remove this element from the annotation rendering engine\n  annotationRenderingEngine.removeViewportElement(viewportId, element);\n\n  // Listeners\n  mouseEventListeners.disable(element);\n  wheelEventListener.disable(element);\n  touchEventListeners.disable(element);\n  keyEventListener.disable(element);\n  // labelmap\n\n  // Dispatchers: renderer\n  imageRenderedEventDispatcher.disable(element);\n  cameraModifiedEventDispatcher.disable(element);\n  imageSpacingCalibratedEventDispatcher.disable(element);\n  // Dispatchers: interaction\n  mouseToolEventDispatcher.disable(element);\n  keyboardToolEventDispatcher.disable(element);\n  touchToolEventDispatcher.disable(element);\n\n  // State\n  // @TODO: We used to \"disable\" the tool before removal. Should we preserve the hook that would call on tools?\n  _removeViewportFromSynchronizers(element);\n  _removeViewportFromToolGroup(element);\n\n  // _removeAllToolsForElement(canvas)\n  _removeEnabledElement(element);\n}\n\nconst _removeViewportFromSynchronizers = (element: HTMLDivElement) => {\n  const enabledElement = getEnabledElement(element);\n\n  const synchronizers = getSynchronizersForViewport(\n    enabledElement.viewportId,\n    enabledElement.renderingEngineId\n  );\n  synchronizers.forEach((sync) => {\n    sync.remove(enabledElement);\n  });\n};\n\nconst _removeViewportFromToolGroup = (element: HTMLDivElement) => {\n  const { renderingEngineId, viewportId } = getEnabledElement(element);\n\n  const toolGroup = getToolGroupForViewport(viewportId, renderingEngineId);\n\n  if (toolGroup) {\n    toolGroup.removeViewports(renderingEngineId, viewportId);\n  }\n};\n\nconst _removeAllToolsForElement = function (element) {\n  const tools = getToolsWithModesForElement(element, [\n    ToolModes.Active,\n    ToolModes.Passive,\n  ]);\n\n  const toolsWithData = filterToolsWithAnnotationsForElement(element, tools);\n  toolsWithData.forEach(({ annotations }) => {\n    annotations.forEach((annotation) => {\n      removeAnnotation(annotation.annotationUID);\n    });\n  });\n};\n\nfunction _resetSvgNodeCache(element: HTMLDivElement) {\n  const { viewportUid: viewportId, renderingEngineUid: renderingEngineId } =\n    element.dataset;\n  const elementHash = `${viewportId}:${renderingEngineId}`;\n\n  delete state.svgNodeCache[elementHash];\n}\n\nfunction _removeSvgNode(element: HTMLDivElement) {\n  const internalViewportNode = element.querySelector(`div.${VIEWPORT_ELEMENT}`);\n  const svgLayer = internalViewportNode.querySelector('svg');\n  if (svgLayer) {\n    internalViewportNode.removeChild(svgLayer);\n  }\n}\n\n/**\n * @private\n * @param enabledElement\n */\nconst _removeEnabledElement = function (element: HTMLDivElement) {\n  const foundElementIndex = state.enabledElements.findIndex(\n    (el) => el === element\n  );\n\n  if (foundElementIndex > -1) {\n    state.enabledElements.splice(foundElementIndex, 1);\n  }\n};\n\nexport default removeEnabledElement;\n","import type { Types } from '@cornerstonejs/core';\nimport triggerAnnotationRender from './triggerAnnotationRender';\n\nexport function triggerAnnotationRenderForViewportIds(\n  renderingEngine: Types.IRenderingEngine,\n  viewportIdsToRender: string[]\n): void {\n  if (!viewportIdsToRender.length) {\n    return;\n  }\n\n  viewportIdsToRender.forEach((viewportId) => {\n    const { element } = renderingEngine.getViewport(viewportId);\n    triggerAnnotationRender(element);\n  });\n}\n\nexport default triggerAnnotationRenderForViewportIds;\n","import { getRenderingEngine } from '@cornerstonejs/core';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\n\n/**\n * This is a callback function that is called when an annotation is modified.\n * Since we are throttling the cachedStats calculation for annotation tools,\n * we need to trigger a final render for the annotation. so that the annotation\n * textBox is updated.\n * Todo: This will trigger all the annotation tools to re-render, although DOM\n * will update those that have changed, but more efficient would be to only\n * update the changed annotation.\n * Todo: A better way is to extract the textBox render logic from the renderAnnotation\n * of all tools and just trigger a render for that (instead of the entire annotation., even if\n * no svg update happens since the attributes for handles are the same)\n */\nfunction annotationModifiedListener(evt): void {\n  const { viewportId, renderingEngineId } = evt.detail;\n  const renderingEngine = getRenderingEngine(renderingEngineId);\n  triggerAnnotationRenderForViewportIds(renderingEngine, [viewportId]);\n}\n\nexport default annotationModifiedListener;\n","import { getRenderingEngines } from '@cornerstonejs/core';\nimport { triggerAnnotationRenderForViewportIds } from '../../utilities';\n\n/**\n * When an annotation is deselected, trigger an annotation render for all viewports.\n * The reason for this is that, drawing an annotation in a different viewport\n * should deselect all other annotations in other viewports. In order to achieve\n * this, we need to trigger an annotation render for all viewports.\n * Todo: Although this is inefficient, but since annotations are only rendered if necessary,\n * it's probably not going to have a noticeable impact on performance.\n * @param evt - The event object.\n */\nfunction annotationSelectionListener(evt): void {\n  const deselectedAnnotation = evt.detail.removed;\n\n  if (!deselectedAnnotation.length) {\n    return;\n  }\n\n  const renderingEngines = getRenderingEngines();\n\n  renderingEngines.forEach((renderingEngine) => {\n    const viewports = renderingEngine.getViewports();\n    const viewportIds = viewports.map((vp) => vp.id);\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIds);\n  });\n}\n\nexport default annotationSelectionListener;\n","import { SegmentationModifiedEventType } from '../../types/EventTypes';\nimport {\n  getToolGroupIdsWithSegmentation,\n  getSegmentationRepresentations,\n} from '../../stateManagement/segmentation/segmentationState';\nimport { triggerSegmentationRepresentationModified } from '../../stateManagement/segmentation/triggerSegmentationEvents';\n\n/** A function that listens to the `segmentationModified` event and triggers\n * the triggerSegmentationRepresentationModified on each toolGroup that\n * has a representation of the given segmentationId.\n */\nconst segmentationModifiedListener = function (\n  evt: SegmentationModifiedEventType\n): void {\n  const { segmentationId } = evt.detail;\n\n  const toolGroupIds = getToolGroupIdsWithSegmentation(segmentationId);\n\n  toolGroupIds.forEach((toolGroupId) => {\n    const segRepresentations = getSegmentationRepresentations(toolGroupId);\n    segRepresentations.forEach((representation) => {\n      if (representation.segmentationId === segmentationId) {\n        triggerSegmentationRepresentationModified(\n          toolGroupId,\n          representation.segmentationRepresentationUID\n        );\n      }\n    });\n  });\n};\n\nexport default segmentationModifiedListener;\n","import { state } from '../index';\nimport { IToolGroup } from '../../types';\n\n/**\n * Given a tool group Id, return the tool group\n * @param toolGroupId - The Id of the tool group to be retrieved.\n * @returns The tool group that has the same id as the tool group id that was\n * passed in.\n */\nfunction getToolGroup(toolGroupId: string): IToolGroup | undefined {\n  return state.toolGroups.find((s) => s.id === toolGroupId);\n}\n\nexport default getToolGroup;\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import SegmentationRepresentations from '../../../enums/SegmentationRepresentations';\nimport * as SegmentationState from '../../../stateManagement/segmentation/segmentationState';\n\nimport {\n  RepresentationConfig,\n  SegmentationRepresentationConfig,\n  SegmentSpecificRepresentationConfig,\n} from '../../../types/SegmentationStateTypes';\n\n/**\n * It returns the global segmentation config.\n * @returns The global segmentation config containing the representations\n * config for each representation type and renderInactiveSegmentations flag.\n */\nfunction getGlobalConfig(): SegmentationRepresentationConfig {\n  return SegmentationState.getGlobalConfig();\n}\n\n/**\n * Set the global segmentation config\n * @param segmentationConfig - SegmentationConfig\n */\nfunction setGlobalConfig(\n  segmentationConfig: SegmentationRepresentationConfig\n): void {\n  SegmentationState.setGlobalConfig(segmentationConfig);\n}\n\n/**\n * Given a representation type, return the corresponding global representation config\n * @param representationType - The type of representation to query\n * @returns A representation configuration object.\n */\nfunction getGlobalRepresentationConfig(\n  representationType: SegmentationRepresentations\n): RepresentationConfig['LABELMAP'] {\n  const globalConfig = getGlobalConfig();\n  return globalConfig.representations[representationType];\n}\n\n/**\n * Set the global configuration for a given representation type. It fires\n * a SEGMENTATION_MODIFIED event.\n *\n * @triggers SEGMENTATION_MODIFIED\n * @param representationType - The type of representation to set config for\n * @param config - The configuration for the representation.\n */\nfunction setGlobalRepresentationConfig(\n  representationType: SegmentationRepresentations,\n  config: RepresentationConfig['LABELMAP']\n): void {\n  const globalConfig = getGlobalConfig();\n\n  setGlobalConfig({\n    ...globalConfig,\n    representations: {\n      ...globalConfig.representations,\n      [representationType]: {\n        ...globalConfig.representations[representationType],\n        ...config,\n      },\n    },\n  });\n}\n\n/**\n * Get the toolGroup specific segmentation config\n * @param toolGroupId - The Id of the tool group\n * @returns A SegmentationConfig object.\n */\nfunction getToolGroupSpecificConfig(\n  toolGroupId: string\n): SegmentationRepresentationConfig {\n  return SegmentationState.getToolGroupSpecificConfig(toolGroupId);\n}\n\n/**\n * Sets the tool group specific configuration for the segmentation\n * representation. This will apply to all segmentation representations.\n * @param toolGroupId - The tool group id where the segmentation representation belongs to.\n * @param segmentationRepresentationConfig - This is the configuration object that you will use to set the default values for\n * the segmentation representation.\n */\nfunction setToolGroupSpecificConfig(\n  toolGroupId: string,\n  segmentationRepresentationConfig: SegmentationRepresentationConfig\n): void {\n  SegmentationState.setToolGroupSpecificConfig(\n    toolGroupId,\n    segmentationRepresentationConfig\n  );\n}\n\n/**\n * Give the segmentation representation UID, return the corresponding config\n * which is shared by all segments in the segmentation representation. This is\n * an optional level of configuration that can be set by the user, by default\n * it will fallback to the toolGroup specific config, if not set, it will fallback\n * to the global config.\n *\n * @param segmentationRepresentationUID - The uid of the segmentation representation\n * @param config - The configuration for the representation. This is an object\n * only containing the representation type as key and the config as value.\n * @returns - The configuration for the representation.\n */\nfunction getSegmentationRepresentationSpecificConfig(\n  toolGroupId: string,\n  segmentationRepresentationUID: string\n): RepresentationConfig {\n  return SegmentationState.getSegmentationRepresentationSpecificConfig(\n    toolGroupId,\n    segmentationRepresentationUID\n  );\n}\n\n/**\n * Set the segmentation representation specific configuration for the\n * segmentation representation. This will apply to all segments in the\n * segmentation representation and has higher priority than the toolGroup\n * specific config.\n *\n * @param segmentationRepresentationUID - The uid of the segmentation representation\n * @param config - The configuration for the representation. This is an object\n * only containing the representation type as key and the config as value.\n */\nfunction setSegmentationRepresentationSpecificConfig(\n  toolGroupId: string,\n  segmentationRepresentationUID: string,\n  config: RepresentationConfig\n): void {\n  SegmentationState.setSegmentationRepresentationSpecificConfig(\n    toolGroupId,\n    segmentationRepresentationUID,\n    config\n  );\n}\n\n/**\n * Get the segment specific configuration for the segmentation representation.\n *\n * @param toolGroupId - The tool group id where the segmentation representation belongs to.\n * @param segmentationRepresentationUID  - The uid of the segmentation representation\n * @param segmentIndex - The index of the segment\n * @returns - The configuration for the segment index in the segmentation representation that is shown in the toolGroup's viewport\n */\nfunction getSegmentSpecificConfig(\n  toolGroupId: string,\n  segmentationRepresentationUID: string,\n  segmentIndex: number\n): RepresentationConfig {\n  return SegmentationState.getSegmentSpecificRepresentationConfig(\n    toolGroupId,\n    segmentationRepresentationUID,\n    segmentIndex\n  );\n}\n\n/**\n * Set the segment specific configuration for the segmentation representation.\n * This configuration, if specified, has higher priority than the segmentation representation specific config,\n * and the toolGroup specific config. The order of priority is: segment specific config > segmentation representation specific config > toolGroup specific config > global config\n * @param toolGroupId - The tool group id where the segmentation representation belongs to.\n * @param segmentationRepresentationUID - The uid of the segmentation representation\n * @param segmentIndex - The index of the segment\n * @param config - The configuration for the representation. This is an object\n */\nfunction setSegmentSpecificConfig(\n  toolGroupId: string,\n  segmentationRepresentationUID: string,\n  config: SegmentSpecificRepresentationConfig\n): void {\n  SegmentationState.setSegmentSpecificRepresentationConfig(\n    toolGroupId,\n    segmentationRepresentationUID,\n    config\n  );\n}\n\nexport {\n  // Global\n  getGlobalConfig,\n  setGlobalConfig,\n  getGlobalRepresentationConfig,\n  setGlobalRepresentationConfig,\n  // ToolGroup Specific\n  getToolGroupSpecificConfig,\n  setToolGroupSpecificConfig,\n  // segmentation representation specific config\n  getSegmentationRepresentationSpecificConfig,\n  setSegmentationRepresentationSpecificConfig,\n  // segment specific config\n  getSegmentSpecificConfig,\n  setSegmentSpecificConfig,\n};\n","import { cache, Types } from '@cornerstonejs/core';\nimport * as SegmentationState from '../../../stateManagement/segmentation/segmentationState';\nimport { getSegmentationRepresentations } from '../../../stateManagement/segmentation/segmentationState';\nimport { ToolGroupSpecificRepresentation } from '../../../types/SegmentationStateTypes';\nimport { triggerSegmentationRepresentationModified } from '../triggerSegmentationEvents';\nimport SegmentationRepresentations from '../../../enums/SegmentationRepresentations';\n\nfunction getSegmentationIndices(segmentationId) {\n  const segmentation = SegmentationState.getSegmentation(segmentationId);\n\n  if (segmentation.type === SegmentationRepresentations.Labelmap) {\n    const volume = cache.getVolume(segmentationId);\n    const scalarData = volume.getScalarData();\n\n    const keySet = {};\n    for (let i = 0; i < scalarData.length; i++) {\n      const segmentIndex = scalarData[i];\n      if (segmentIndex !== 0 && !keySet[segmentIndex]) {\n        keySet[segmentIndex] = true;\n      }\n    }\n    return Object.keys(keySet).map((it) => parseInt(it, 10));\n  } else if (segmentation.type === SegmentationRepresentations.Contour) {\n    const geometryIds = segmentation.representationData.CONTOUR?.geometryIds;\n\n    if (!geometryIds) {\n      throw new Error(\n        `No geometryIds found for segmentationId ${segmentationId}`\n      );\n    }\n\n    return geometryIds.map((geometryId) => {\n      const geometry = cache.getGeometry(geometryId) as Types.IGeometry;\n      return (geometry.data as Types.IContourSet).getSegmentIndex();\n    });\n  }\n}\n\n/**\n * Set the visibility of a segmentation representation for a given tool group. It fires\n * a SEGMENTATION_REPRESENTATION_MODIFIED event. Visibility true will show all segments\n * and visibility false will hide all segments\"\n *\n * @triggers SEGMENTATION_REPRESENTATION_MODIFIED\n * @param toolGroupId - The Id of the tool group that contains the segmentation.\n * @param segmentationRepresentationUID - The id of the segmentation representation to modify its visibility.\n * @param visibility - boolean\n */\nfunction setSegmentationVisibility(\n  toolGroupId: string,\n  segmentationRepresentationUID: string,\n  visibility: boolean\n): void {\n  const toolGroupSegmentationRepresentations =\n    getSegmentationRepresentations(toolGroupId);\n\n  if (!toolGroupSegmentationRepresentations) {\n    return;\n  }\n\n  const representation = toolGroupSegmentationRepresentations.find(\n    (representation: ToolGroupSpecificRepresentation) =>\n      representation.segmentationRepresentationUID ===\n      segmentationRepresentationUID\n  );\n\n  if (!representation) {\n    return;\n  }\n\n  const { segmentsHidden, segmentationId } = representation;\n\n  const indices = getSegmentationIndices(segmentationId);\n\n  // if visibility is set to be true, we need to remove all the segments\n  // from the segmentsHidden set, otherwise we need to add all the segments\n  // to the segmentsHidden set\n  if (visibility) {\n    segmentsHidden.clear();\n  } else {\n    indices.forEach((index) => {\n      segmentsHidden.add(index);\n    });\n  }\n\n  triggerSegmentationRepresentationModified(\n    toolGroupId,\n    representation.segmentationRepresentationUID\n  );\n}\n\n/**\n * Get the visibility of a segmentation data for a given tool group.\n *\n * @param toolGroupId - The Id of the tool group that the segmentation\n * data belongs to.\n * @param segmentationRepresentationUID - The id of the segmentation data to get\n * @returns A boolean value that indicates whether the segmentation data is visible or\n * not on the toolGroup\n */\nfunction getSegmentationVisibility(\n  toolGroupId: string,\n  segmentationRepresentationUID: string\n): boolean | undefined {\n  const toolGroupSegmentationRepresentations =\n    getSegmentationRepresentations(toolGroupId);\n\n  const representation = toolGroupSegmentationRepresentations.find(\n    (representation: ToolGroupSpecificRepresentation) =>\n      representation.segmentationRepresentationUID ===\n      segmentationRepresentationUID\n  );\n\n  if (!representation) {\n    return;\n  }\n\n  const { segmentsHidden } = representation;\n\n  return segmentsHidden.size === 0;\n}\n\n/**\n * Set the visibility of the given segment indices to the given visibility. This\n * is a helper to set the visibility of multiple segments at once and reduces\n * the number of events fired.\n *\n * @param toolGroupId -  The tool group id of the segmentation representation.\n * @param segmentationRepresentationUID -  The UID of the segmentation\n * representation.\n * @param segmentIndices -  The indices of the segments to be hidden/shown.\n * @param visibility -  The visibility to set the segments to.\n *\n */\nfunction setSegmentsVisibility(\n  toolGroupId: string,\n  segmentationRepresentationUID: string,\n  segmentIndices: number[],\n  visibility: boolean\n): void {\n  const segRepresentation =\n    SegmentationState.getSegmentationRepresentationByUID(\n      toolGroupId,\n      segmentationRepresentationUID\n    );\n\n  if (!segRepresentation) {\n    return;\n  }\n\n  segmentIndices.forEach((segmentIndex) => {\n    visibility\n      ? segRepresentation.segmentsHidden.delete(segmentIndex)\n      : segRepresentation.segmentsHidden.add(segmentIndex);\n  });\n\n  triggerSegmentationRepresentationModified(\n    toolGroupId,\n    segmentationRepresentationUID\n  );\n}\n\nfunction setSegmentVisibility(\n  toolGroupId: string,\n  segmentationRepresentationUID: string,\n  segmentIndex: number,\n  visibility: boolean\n): void {\n  const segRepresentation =\n    SegmentationState.getSegmentationRepresentationByUID(\n      toolGroupId,\n      segmentationRepresentationUID\n    );\n\n  if (!segRepresentation) {\n    return;\n  }\n\n  visibility\n    ? segRepresentation.segmentsHidden.delete(segmentIndex)\n    : segRepresentation.segmentsHidden.add(segmentIndex);\n\n  triggerSegmentationRepresentationModified(\n    toolGroupId,\n    segmentationRepresentationUID\n  );\n}\n\nexport {\n  setSegmentationVisibility,\n  getSegmentationVisibility,\n  setSegmentVisibility,\n  setSegmentsVisibility,\n};\n","import {\n  StackViewport,\n  utilities,\n  BaseVolumeViewport,\n} from '@cornerstonejs/core';\nimport { Types } from '@cornerstonejs/core';\nimport { ToolModes } from '../../enums';\nimport { InteractionTypes, ToolProps, PublicToolProps } from '../../types';\n\nexport interface IBaseTool {\n  /** ToolGroup ID the tool instance belongs to */\n  toolGroupId: string;\n  /** Tool supported interaction types */\n  supportedInteractionTypes: InteractionTypes[];\n  /** Tool Mode : Active, Passive, Enabled, Disabled */\n  mode: ToolModes;\n  /** Tool Configuration */\n  configuration: {\n    preventHandleOutsideImage?: boolean;\n    strategies?: Record<string, any>;\n    defaultStrategy?: string;\n    activeStrategy?: string;\n    strategyOptions?: Record<string, unknown>;\n  };\n}\n\n/**\n * Abstract base class from which all tools derive.\n * Deals with cleanly merging custom and default configuration, and strategy\n * application.\n */\nabstract class BaseTool implements IBaseTool {\n  static toolName;\n  /** Supported Interaction Types - currently only Mouse */\n  public supportedInteractionTypes: InteractionTypes[];\n  public configuration: Record<string, any>;\n  /** ToolGroup ID the tool instance belongs to */\n  public toolGroupId: string;\n  /** Tool Mode - Active/Passive/Enabled/Disabled/ */\n  public mode: ToolModes;\n\n  constructor(toolProps: PublicToolProps, defaultToolProps: ToolProps) {\n    const initialProps = utilities.deepMerge(defaultToolProps, toolProps);\n\n    const {\n      configuration = {},\n      supportedInteractionTypes,\n      toolGroupId,\n    } = initialProps;\n\n    // If strategies are not initialized in the tool config\n    if (!configuration.strategies) {\n      configuration.strategies = {};\n      configuration.defaultStrategy = undefined;\n      configuration.activeStrategy = undefined;\n      configuration.strategyOptions = {};\n    }\n\n    this.toolGroupId = toolGroupId;\n    this.supportedInteractionTypes = supportedInteractionTypes || [];\n    this.configuration = Object.assign({}, configuration);\n    this.mode = ToolModes.Disabled;\n  }\n\n  /**\n   * Returns the name of the tool\n   * @returns The name of the tool.\n   */\n  public getToolName(): string {\n    // Since toolName is static we get it from the class constructor\n    return (<typeof BaseTool>this.constructor).toolName;\n  }\n\n  /**\n   * It applies the active strategy to the enabled element.\n   * @param enabledElement - The element that is being operated on.\n   * @param operationData - The data that needs to be passed to the strategy.\n   * @returns The result of the strategy.\n   */\n  public applyActiveStrategy(\n    enabledElement: Types.IEnabledElement,\n    operationData: unknown\n  ): any {\n    const { strategies, activeStrategy } = this.configuration;\n    return strategies[activeStrategy].call(this, enabledElement, operationData);\n  }\n\n  /**\n   * merges the new configuration with the tool configuration\n   * @param configuration - toolConfiguration\n   */\n  public setConfiguration(newConfiguration: Record<string, any>): void {\n    this.configuration = utilities.deepMerge(\n      this.configuration,\n      newConfiguration\n    );\n  }\n\n  /**\n   * Sets the active strategy for a tool. Strategies are\n   * multiple implementations of tool behavior that can be switched by tool\n   * configuration.\n   *\n   * @param strategyName - name of the strategy to be set as active\n   */\n  public setActiveStrategy(strategyName: string): void {\n    this.setConfiguration({ activeStrategy: strategyName });\n  }\n\n  /**\n   * Returns the volumeId for the volume viewport. It will grabbed the volumeId\n   * from the volumeId if particularly specified in the tool configuration, or if\n   * not, the first actorUID in the viewport is returned as the volumeId. NOTE: for\n   * segmentations, actorUID is not necessarily the volumeId since the segmentation\n   * can have multiple representations, use segmentation helpers to get the volumeId\n   * based on the actorUID.\n   *\n   * @param viewport - Volume viewport\n   * @returns the volumeId for the viewport if specified in the tool configuration,\n   * or the first actorUID in the viewport if not.\n   */\n  private getTargetVolumeId(viewport: Types.IViewport): string | undefined {\n    if (this.configuration.volumeId) {\n      return this.configuration.volumeId;\n    }\n\n    // If volume not specified, then return the actorUID for the\n    // default actor - first actor\n    const actorEntries = viewport.getActors();\n\n    if (!actorEntries) {\n      return;\n    }\n\n    // find the first image actor of instance type vtkVolume\n    return actorEntries.find(\n      (actorEntry) => actorEntry.actor.getClassName() === 'vtkVolume'\n    )?.uid;\n  }\n\n  /**\n   * Get the image that is displayed for the targetId in the cachedStats\n   * which can be either imageId:<imageId> or volumeId:<volumeId>\n   *\n   * @param targetId - annotation targetId stored in the cached stats\n   * @param renderingEngine - The rendering engine\n   * @returns The image data for the target.\n   */\n  protected getTargetIdImage(\n    targetId: string,\n    renderingEngine: Types.IRenderingEngine\n  ): Types.IImageData | Types.CPUIImageData | Types.IImageVolume {\n    if (targetId.startsWith('imageId:')) {\n      const imageId = targetId.split('imageId:')[1];\n      const imageURI = utilities.imageIdToURI(imageId);\n      let viewports = utilities.getViewportsWithImageURI(\n        imageURI,\n        renderingEngine.id\n      );\n\n      if (!viewports || !viewports.length) {\n        return;\n      }\n\n      viewports = viewports.filter((viewport) => {\n        return viewport.getCurrentImageId() === imageId;\n      });\n\n      if (!viewports || !viewports.length) {\n        return;\n      }\n\n      return viewports[0].getImageData();\n    } else if (targetId.startsWith('volumeId:')) {\n      const volumeId = targetId.split('volumeId:')[1];\n      const viewports = utilities.getViewportsWithVolumeId(\n        volumeId,\n        renderingEngine.id\n      );\n\n      if (!viewports || !viewports.length) {\n        return;\n      }\n\n      return viewports[0].getImageData();\n    } else {\n      throw new Error(\n        'getTargetIdImage: targetId must start with \"imageId:\" or \"volumeId:\"'\n      );\n    }\n  }\n\n  /**\n   * Get the target Id for the viewport which will be used to store the cached\n   * statistics scoped to that target in the annotations.\n   * For StackViewport, targetId is the viewportId, but for the volume viewport,\n   * the targetId will be grabbed from the volumeId if particularly specified\n   * in the tool configuration, or if not, the first actorUID in the viewport.\n   *\n   * @param viewport - viewport to get the targetId for\n   * @returns targetId\n   */\n  protected getTargetId(viewport: Types.IViewport): string | undefined {\n    if (viewport instanceof StackViewport) {\n      return `imageId:${viewport.getCurrentImageId()}`;\n    } else if (viewport instanceof BaseVolumeViewport) {\n      return `volumeId:${this.getTargetVolumeId(viewport)}`;\n    } else {\n      throw new Error(\n        'getTargetId: viewport must be a StackViewport or VolumeViewport'\n      );\n    }\n  }\n}\n\n// Note: this is a workaround since terser plugin does not support static blocks\n// yet and we can't easily say static toolName = \"BaseTool\" in the class definition.\nBaseTool.toolName = 'BaseTool';\nexport default BaseTool;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import { Enums, Types } from '@cornerstonejs/core';\nimport vtkCellArray from '@kitware/vtk.js/Common/Core/CellArray';\nimport vtkPoints from '@kitware/vtk.js/Common/Core/Points';\nimport vtkPolyData from '@kitware/vtk.js/Common/DataModel/PolyData';\nimport { ToolGroupSpecificContourRepresentation } from '../../../types';\n\n/**\n * If the segment specific config exists for the given segment id, it returns\n * the segment specific config. Otherwise, it looks for the segment specific\n * config for the given index. If it doesn't exist, it returns null.\n *\n * @param contourRepresentation -  The representation object that is passed\n * to the tool.\n * @param segmentId -  The id of the segment.\n * @param index -  The index of the segment in the list of segments.\n * @returns the segment specific config for the given segment id.\n *\n */\nexport function getSegmentSpecificConfig(\n  contourRepresentation: ToolGroupSpecificContourRepresentation,\n  segmentId: string,\n  index: number\n) {\n  let segmentSpecificConfig =\n    contourRepresentation.segmentSpecificConfig?.[segmentId];\n\n  if (!segmentSpecificConfig) {\n    // try the index\n    segmentSpecificConfig =\n      contourRepresentation.segmentSpecificConfig?.[index];\n  }\n\n  if (!segmentSpecificConfig) {\n    return null;\n  }\n\n  return segmentSpecificConfig.CONTOUR;\n}\n\n/**\n * takes a geometry object as an argument\n * and throws an error if the geometry object is not a contour\n * @param geometry -  The geometry object to be rendered.\n */\nexport function validateGeometry(geometry: Types.IGeometry): void {\n  if (!geometry) {\n    throw new Error(`No contours found for geometryId ${geometry.id}`);\n  }\n\n  const geometryId = geometry.id;\n\n  if (geometry.type !== Enums.GeometryType.CONTOUR) {\n    throw new Error(\n      `Geometry type ${geometry.type} not supported for rendering.`\n    );\n  }\n\n  if (!geometry.data) {\n    console.warn(\n      `No contours found for geometryId ${geometryId}. Skipping render.`\n    );\n    return;\n  }\n}\n\n/**\n * It takes a contourSet and returns a vtkPolyData for that contourSet. A contour set\n * is a collection of contours. Each contour is a collection of points. Each point\n * is x,y,z in the world coordinate system.\n *\n * @param contourSet -  the contour set that you want to convert to polyData\n * @returns A vtkPolyData object\n */\nexport function getPolyData(contourSet: Types.IContourSet) {\n  const pointArray = [];\n\n  const points = vtkPoints.newInstance();\n  const lines = vtkCellArray.newInstance();\n\n  // this variable will indicate the index of the first point in the current line\n  // so we can correctly generate the point index list to add in the cellArray\n  let pointIndex = 0;\n  contourSet.getContours().forEach((contour: Types.IContour) => {\n    const pointList = contour.getPoints();\n    const flatPoints = contour.getFlatPointsArray();\n    const type = contour.getType();\n\n    // creating a point index list that defines a line\n    const pointIndexes = pointList.map(\n      (_, pointListIndex) => pointListIndex + pointIndex\n    );\n\n    // if close planar, add the first point index to the list\n    if (type === Enums.ContourType.CLOSED_PLANAR) {\n      pointIndexes.push(pointIndexes[0]);\n    }\n\n    const linePoints = Float32Array.from(flatPoints);\n    // add the current points into the point list\n    pointArray.push(...linePoints);\n    // add the point indexes into the cell array\n    lines.insertNextCell([...pointIndexes]);\n    // update the first point index\n    pointIndex = pointIndex + pointList.length;\n  });\n\n  // converts the pointArray into vtkPoints\n  points.setData(pointArray, 3);\n\n  // creates the polyData\n  const polygon = vtkPolyData.newInstance();\n  polygon.setPoints(points);\n  polygon.setLines(lines);\n\n  return polygon;\n}\n","type ConfigCache = {\n  segmentsHidden: Set<number>;\n  outlineWidthActive: number;\n  visibility: boolean;\n};\n\n/**\n * Config cache is used to store the config for a given segmentation\n * representation. This is used to avoid having to recompute the config\n * every time the user changes the active segment, and also for performance\n * reasons.\n */\nconst configCachePerSegmentationRepresentationUID = new Map();\n\nexport function getConfigCache(\n  segmentationRepresentationUID: string\n): ConfigCache {\n  return configCachePerSegmentationRepresentationUID.get(\n    segmentationRepresentationUID\n  );\n}\n\nexport function setConfigCache(\n  segmentationRepresentationUID: string,\n  config: ConfigCache\n) {\n  configCachePerSegmentationRepresentationUID.set(\n    segmentationRepresentationUID,\n    config\n  );\n}\n\nexport function deleteConfigCache(segmentationRepresentationUID: string) {\n  configCachePerSegmentationRepresentationUID.delete(\n    segmentationRepresentationUID\n  );\n}\n","import { cache, Types } from '@cornerstonejs/core';\nimport vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\nimport vtkAppendPolyData from '@kitware/vtk.js/Filters/General/AppendPolyData';\nimport vtkActor from '@kitware/vtk.js/Rendering/Core/Actor';\nimport vtkMapper from '@kitware/vtk.js/Rendering/Core/Mapper';\n\nimport {\n  getPolyData,\n  getSegmentSpecificConfig,\n  validateGeometry,\n} from './utils';\n\nimport {\n  SegmentationRepresentationConfig,\n  ToolGroupSpecificContourRepresentation,\n} from '../../../types';\nimport { getConfigCache, setConfigCache } from './contourConfigCache';\n\nexport function addContourSetsToElement(\n  viewport: Types.IVolumeViewport,\n  geometryIds: string[],\n  contourRepresentation: ToolGroupSpecificContourRepresentation,\n  contourRepresentationConfig: SegmentationRepresentationConfig,\n  contourActorUID: string\n) {\n  const { segmentationRepresentationUID, segmentsHidden } =\n    contourRepresentation;\n  const appendPolyData = vtkAppendPolyData.newInstance();\n\n  const scalarToColorMap = new Map();\n  const segmentSpecificMap = new Map();\n\n  geometryIds.forEach((geometryId) => {\n    const geometry = cache.getGeometry(geometryId);\n\n    if (!geometry) {\n      console.warn(\n        `No geometry found for geometryId ${geometryId}. Skipping render.`\n      );\n      return;\n    }\n\n    const segmentIndex = (geometry.data as Types.IContourSet).getSegmentIndex();\n\n    validateGeometry(geometry);\n\n    const segmentSpecificConfig = getSegmentSpecificConfig(\n      contourRepresentation,\n      geometryId,\n      segmentIndex\n    );\n\n    const contourSet = geometry.data;\n    const polyData = getPolyData(contourSet);\n    const color = contourSet.getColor();\n\n    const size = polyData.getPoints().getNumberOfPoints();\n\n    const scalars = vtkDataArray.newInstance({\n      size: size * 4,\n      numberOfComponents: 4,\n      dataType: 'Uint8Array',\n    });\n    for (let i = 0; i < size; ++i) {\n      scalars.setTuple(i, [...color, 255]);\n    }\n    polyData.getPointData().setScalars(scalars);\n\n    if (segmentSpecificConfig) {\n      segmentSpecificMap.set(segmentIndex, segmentSpecificConfig);\n    }\n\n    scalarToColorMap.set(segmentIndex, [\n      ...color,\n      segmentsHidden.has(segmentIndex) ? 0 : 255,\n    ]);\n\n    segmentIndex === 0\n      ? appendPolyData.setInputData(polyData)\n      : appendPolyData.addInputData(polyData);\n  });\n\n  const polyDataOutput = appendPolyData.getOutputData();\n\n  const outlineWidthActive =\n    contourRepresentationConfig.representations.CONTOUR.outlineWidthActive;\n\n  const mapper = vtkMapper.newInstance();\n  mapper.setInputData(polyDataOutput);\n\n  const actor = vtkActor.newInstance();\n  actor.setMapper(mapper);\n  actor.getProperty().setLineWidth(outlineWidthActive);\n\n  // set the config cache for later update of the contour\n  setConfigCache(\n    segmentationRepresentationUID,\n    Object.assign({}, getConfigCache(segmentationRepresentationUID), {\n      segmentsHidden: new Set(segmentsHidden),\n      segmentSpecificMap,\n      outlineWidthActive,\n    })\n  );\n\n  actor.setForceOpaque(true);\n\n  viewport.addActor({\n    uid: contourActorUID,\n    actor: actor as unknown as Types.Actor,\n  });\n  viewport.resetCamera();\n  viewport.render();\n}\n","import { cache, Types } from '@cornerstonejs/core';\nimport vtkActor from '@kitware/vtk.js/Rendering/Core/Actor';\n\nimport {\n  SegmentationRepresentationConfig,\n  ToolGroupSpecificContourRepresentation,\n} from '../../../types';\nimport { getConfigCache, setConfigCache } from './contourConfigCache';\nimport { getSegmentSpecificConfig } from './utils';\n\nexport function updateContourSets(\n  viewport: Types.IVolumeViewport,\n  geometryIds: string[],\n  contourRepresentation: ToolGroupSpecificContourRepresentation,\n  contourRepresentationConfig: SegmentationRepresentationConfig,\n  contourActorUID: string\n) {\n  const { segmentationRepresentationUID, segmentsHidden } =\n    contourRepresentation;\n  const newContourConfig = contourRepresentationConfig.representations.CONTOUR;\n  const cachedConfig = getConfigCache(segmentationRepresentationUID);\n\n  const contourSetsActor = viewport.getActor(contourActorUID);\n\n  if (!contourSetsActor) {\n    console.warn(\n      `No contour actor found for actorUID ${contourActorUID}. Skipping render.`\n    );\n    return;\n  }\n\n  const { actor } = contourSetsActor;\n\n  const newOutlineWithActive = newContourConfig.outlineWidthActive;\n\n  if (cachedConfig?.outlineWidthActive !== newOutlineWithActive) {\n    (actor as unknown as vtkActor)\n      .getProperty()\n      .setLineWidth(newOutlineWithActive);\n\n    setConfigCache(\n      segmentationRepresentationUID,\n      Object.assign({}, cachedConfig, {\n        outlineWidthActive: newOutlineWithActive,\n      })\n    );\n  }\n\n  const mapper = (actor as unknown as vtkActor).getMapper();\n  const lut = mapper.getLookupTable();\n\n  const segmentsToSetToInvisible = [];\n  const segmentsToSetToVisible = [];\n\n  for (const segmentIndex of segmentsHidden) {\n    if (!cachedConfig.segmentsHidden.has(segmentIndex)) {\n      segmentsToSetToInvisible.push(segmentIndex);\n    }\n  }\n\n  // the other way around\n  for (const segmentIndex of cachedConfig.segmentsHidden) {\n    if (!segmentsHidden.has(segmentIndex)) {\n      segmentsToSetToVisible.push(segmentIndex);\n    }\n  }\n\n  const mergedInvisibleSegments = Array.from(cachedConfig.segmentsHidden)\n    .filter((segmentIndex) => !segmentsToSetToVisible.includes(segmentIndex))\n    .concat(segmentsToSetToInvisible);\n\n  const { contourSets, segmentSpecificConfigs } = geometryIds.reduce(\n    (acc, geometryId) => {\n      const geometry = cache.getGeometry(geometryId);\n      const { data: contourSet } = geometry;\n      const segmentIndex = (contourSet as Types.IContourSet).getSegmentIndex();\n      const segmentSpecificConfig = getSegmentSpecificConfig(\n        contourRepresentation,\n        geometryId,\n        segmentIndex\n      );\n\n      acc.contourSets.push(contourSet);\n      acc.segmentSpecificConfigs[segmentIndex] = segmentSpecificConfig ?? {};\n\n      return acc;\n    },\n    { contourSets: [], segmentSpecificConfigs: {} }\n  );\n\n  const affectedSegments = [\n    ...mergedInvisibleSegments,\n    ...segmentsToSetToVisible,\n  ];\n\n  const hasCustomSegmentSpecificConfig = Object.values(\n    segmentSpecificConfigs\n  ).some((config) => Object.keys(config).length > 0);\n\n  let polyDataModified = false;\n\n  if (affectedSegments.length || hasCustomSegmentSpecificConfig) {\n    const appendPolyData = mapper.getInputData();\n    const appendScalars = appendPolyData.getPointData().getScalars();\n    const appendScalarsData = appendScalars.getData();\n    // below we will only manipulate the polyData of the contourSets that are affected\n    // by picking the correct offset in the scalarData array\n    let offset = 0;\n    contourSets.forEach((contourSet) => {\n      const segmentIndex = (contourSet as Types.IContourSet).getSegmentIndex();\n      const size = contourSet.getTotalNumberOfPoints();\n\n      if (\n        affectedSegments.includes(segmentIndex) ||\n        segmentSpecificConfigs[segmentIndex]?.fillAlpha // Todo: add others\n      ) {\n        const color = contourSet.getColor();\n        let visibility = mergedInvisibleSegments.includes(segmentIndex)\n          ? 0\n          : 255;\n\n        const segmentConfig = segmentSpecificConfigs[segmentIndex];\n        if (segmentConfig.fillAlpha !== undefined) {\n          visibility = segmentConfig.fillAlpha * 255;\n        }\n\n        for (let i = 0; i < size; ++i) {\n          appendScalarsData[offset + i * 4] = color[0];\n          appendScalarsData[offset + i * 4 + 1] = color[1];\n          appendScalarsData[offset + i * 4 + 2] = color[2];\n          appendScalarsData[offset + i * 4 + 3] = visibility;\n        }\n\n        polyDataModified = true;\n      }\n\n      offset = offset + size * 4;\n    });\n\n    if (polyDataModified) {\n      appendPolyData.modified();\n    }\n\n    setConfigCache(\n      segmentationRepresentationUID,\n      Object.assign({}, cachedConfig, {\n        segmentsHidden: new Set(segmentsHidden),\n      })\n    );\n\n    mapper.setLookupTable(lut);\n  }\n\n  viewport.render();\n}\n","import { Types } from '@cornerstonejs/core';\n\nimport {\n  SegmentationRepresentationConfig,\n  ToolGroupSpecificContourRepresentation,\n} from '../../../types';\nimport { addContourSetsToElement } from './addContourSetsToElement';\nimport { updateContourSets } from './updateContourSets';\n\nexport function addOrUpdateContourSets(\n  viewport: Types.IVolumeViewport,\n  geometryIds: string[],\n  contourRepresentation: ToolGroupSpecificContourRepresentation,\n  contourRepresentationConfig: SegmentationRepresentationConfig\n) {\n  const { segmentationRepresentationUID } = contourRepresentation;\n  const actorUID = `CONTOUR_${segmentationRepresentationUID}`;\n  const actor = viewport.getActor(actorUID);\n\n  const addOrUpdateFn = actor ? updateContourSets : addContourSetsToElement;\n  addOrUpdateFn(\n    viewport,\n    geometryIds,\n    contourRepresentation,\n    contourRepresentationConfig,\n    actorUID\n  );\n}\n","import { getEnabledElement } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\n/**\n * Remove the contour representation from the viewport's HTML Element.\n * NOTE: This function should not be called directly.\n *\n * @param element - The element that the segmentation is being added to.\n * @param segmentationRepresentationUID - The UID of the contour representation to remove.\n * @param removeFromCache - boolean\n *\n * @internal\n */\nfunction removeContourFromElement(\n  element: HTMLDivElement,\n  segmentationRepresentationUID: string,\n  removeFromCache = false // Todo\n): void {\n  const enabledElement = getEnabledElement(element);\n  const { viewport } = enabledElement;\n\n  const actorEntries = (viewport as Types.IVolumeViewport).getActors();\n\n  // remove actors whose id has the same prefix as the segmentationRepresentationUID\n  const actorUIDsToRemove = actorEntries\n    .map(({ uid }) =>\n      uid.includes(segmentationRepresentationUID) ? uid : undefined\n    )\n    .filter(Boolean);\n\n  // @ts-ignore\n  viewport.removeActors(actorUIDsToRemove);\n}\n\nexport default removeContourFromElement;\n","import {\n  getEnabledElementByIds,\n  Types,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\n\nimport Representations from '../../../enums/SegmentationRepresentations';\nimport * as SegmentationConfig from '../../../stateManagement/segmentation/config/segmentationConfig';\nimport * as SegmentationState from '../../../stateManagement/segmentation/segmentationState';\nimport { getToolGroup } from '../../../store/ToolGroupManager';\nimport {\n  RepresentationPublicInput,\n  SegmentationRepresentationConfig,\n  ToolGroupSpecificRepresentation,\n} from '../../../types/SegmentationStateTypes';\nimport { addOrUpdateContourSets } from './addOrUpdateContourSets';\nimport removeContourFromElement from './removeContourFromElement';\nimport { deleteConfigCache } from './contourConfigCache';\n\n/**\n * It adds a new segmentation representation to the segmentation state\n * @param toolGroupId - The id of the toolGroup that the segmentation\n * belongs to\n * @param representationInput - RepresentationPublicInput\n * @param toolGroupSpecificConfig - The configuration that is specific to the toolGroup.\n * @returns The segmentationRepresentationUID\n */\nasync function addSegmentationRepresentation(\n  toolGroupId: string,\n  representationInput: RepresentationPublicInput,\n  toolGroupSpecificConfig?: SegmentationRepresentationConfig\n): Promise<string> {\n  const { segmentationId } = representationInput;\n  const segmentationRepresentationUID = csUtils.uuidv4();\n  // Todo: make these configurable during representation input by user\n  const segmentsHidden = new Set() as Set<number>;\n  const visibility = true;\n  const colorLUTIndex = 0;\n  const active = true;\n  const toolGroupSpecificRepresentation: ToolGroupSpecificRepresentation = {\n    segmentationId,\n    segmentationRepresentationUID,\n    type: Representations.Contour,\n    segmentsHidden,\n    colorLUTIndex,\n    active,\n    segmentationRepresentationSpecificConfig: {},\n    segmentSpecificConfig: {},\n    config: {},\n  };\n  // Update the toolGroup specific configuration\n  if (toolGroupSpecificConfig) {\n    // Since setting configuration on toolGroup will trigger a segmentationRepresentation\n    // update event, we don't want to trigger the event twice, so we suppress\n    // the first one\n    const currentToolGroupConfig =\n      SegmentationConfig.getToolGroupSpecificConfig(toolGroupId);\n    const mergedConfig = csUtils.deepMerge(\n      currentToolGroupConfig,\n      toolGroupSpecificConfig\n    );\n    SegmentationConfig.setToolGroupSpecificConfig(toolGroupId, {\n      renderInactiveSegmentations:\n        mergedConfig.renderInactiveSegmentations || true,\n      representations: {\n        ...mergedConfig.representations,\n      },\n    });\n  }\n  SegmentationState.addSegmentationRepresentation(\n    toolGroupId,\n    toolGroupSpecificRepresentation\n  );\n  return segmentationRepresentationUID;\n}\n\n/**\n * It removes a segmentation representation from the tool group's viewports and\n * from the segmentation state\n * @param toolGroupId - The toolGroupId of the toolGroup that the\n * segmentationRepresentation belongs to.\n * @param segmentationRepresentationUID - This is the unique identifier\n * for the segmentation representation.\n * @param renderImmediate - If true, the viewport will be rendered\n * immediately after the segmentation representation is removed.\n */\nfunction removeSegmentationRepresentation(\n  toolGroupId: string,\n  segmentationRepresentationUID: string,\n  renderImmediate = false\n): void {\n  _removeContourFromToolGroupViewports(\n    toolGroupId,\n    segmentationRepresentationUID\n  );\n  SegmentationState.removeSegmentationRepresentation(\n    toolGroupId,\n    segmentationRepresentationUID\n  );\n\n  deleteConfigCache(segmentationRepresentationUID);\n\n  if (renderImmediate) {\n    const viewportsInfo = getToolGroup(toolGroupId).getViewportsInfo();\n    viewportsInfo.forEach(({ viewportId, renderingEngineId }) => {\n      const enabledElement = getEnabledElementByIds(\n        viewportId,\n        renderingEngineId\n      );\n      enabledElement.viewport.render();\n    });\n  }\n}\n\n/**\n * It renders the contour sets for the given segmentation\n * @param viewport - The viewport object\n * @param representation - ToolGroupSpecificRepresentation\n * @param toolGroupConfig - This is the configuration object for the tool group\n */\nasync function render(\n  viewport: Types.IVolumeViewport,\n  representationConfig: ToolGroupSpecificRepresentation,\n  toolGroupConfig: SegmentationRepresentationConfig\n): Promise<void> {\n  const { segmentationId } = representationConfig;\n  const segmentation = SegmentationState.getSegmentation(segmentationId);\n  const contourData = segmentation.representationData[Representations.Contour];\n  const { geometryIds } = contourData;\n\n  if (!geometryIds?.length) {\n    console.warn(\n      `No contours found for segmentationId ${segmentationId}. Skipping render.`\n    );\n  }\n\n  // add the contour sets to the viewport\n  addOrUpdateContourSets(\n    viewport,\n    geometryIds,\n    representationConfig,\n    toolGroupConfig\n  );\n}\n\nfunction _removeContourFromToolGroupViewports(\n  toolGroupId: string,\n  segmentationRepresentationUID: string\n): void {\n  const toolGroup = getToolGroup(toolGroupId);\n\n  if (toolGroup === undefined) {\n    throw new Error(`ToolGroup with ToolGroupId ${toolGroupId} does not exist`);\n  }\n\n  const { viewportsInfo } = toolGroup;\n\n  for (const viewportInfo of viewportsInfo) {\n    const { viewportId, renderingEngineId } = viewportInfo;\n    const enabledElement = getEnabledElementByIds(\n      viewportId,\n      renderingEngineId\n    );\n    removeContourFromElement(\n      enabledElement.viewport.element,\n      segmentationRepresentationUID\n    );\n  }\n}\n\nexport default {\n  render,\n  addSegmentationRepresentation,\n  removeSegmentationRepresentation,\n};\n","import {\n  getEnabledElement,\n  addVolumesToViewports,\n  Types,\n  Enums,\n} from '@cornerstonejs/core';\n\n/**\n * It adds a labelmap segmentation representation of the viewport's HTML Element.\n * NOTE: This function should not be called directly.\n *\n * @param element - The element that will be rendered.\n * @param volumeId - The volume id of the labelmap.\n * @param segmentationRepresentationUID - The segmentation representation UID.\n *\n * @internal\n */\nasync function addLabelmapToElement(\n  element: HTMLDivElement,\n  volumeId: string,\n  segmentationRepresentationUID: string\n): Promise<void> {\n  const enabledElement = getEnabledElement(element);\n  const { renderingEngine, viewport } = enabledElement;\n  const { id: viewportId } = viewport;\n\n  // Default to true since we are setting a new segmentation, however,\n  // in the event listener, we will make other segmentations visible/invisible\n  // based on the config\n  const visibility = true;\n  const immediateRender = false;\n  const suppressEvents = true;\n\n  // Todo: Right now we use MIP blend mode for the labelmap, since the\n  // composite blend mode has a non linear behavior regarding fill and line\n  // opacity. This should be changed to a custom labelmap blendMode which does\n  // what composite does, but with a linear behavior.\n  const volumeInputs: Types.IVolumeInput[] = [\n    {\n      volumeId,\n      actorUID: segmentationRepresentationUID,\n      visibility,\n      blendMode: Enums.BlendModes.MAXIMUM_INTENSITY_BLEND,\n    },\n  ];\n\n  // Add labelmap volumes to the viewports to be be rendered, but not force the render\n  await addVolumesToViewports(\n    renderingEngine,\n    volumeInputs,\n    [viewportId],\n    immediateRender,\n    suppressEvents\n  );\n}\n\nexport default addLabelmapToElement;\n","import { getEnabledElement } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\n/**\n * Remove the labelmap segmentation representation from the viewport's HTML Element.\n * NOTE: This function should not be called directly.\n *\n * @param element - The element that the segmentation is being added to.\n * @param segmentationRepresentationUID - The UID of the labelmap representation to remove.\n * @param removeFromCache - boolean\n *\n * @internal\n */\nfunction removeLabelmapFromElement(\n  element: HTMLDivElement,\n  segmentationRepresentationUID: string,\n  removeFromCache = false // Todo\n): void {\n  const enabledElement = getEnabledElement(element);\n  const { viewport } = enabledElement;\n\n  (viewport as Types.IVolumeViewport).removeVolumeActors([\n    segmentationRepresentationUID,\n  ]);\n}\n\nexport default removeLabelmapFromElement;\n","import vtkPiecewiseFunction from '@kitware/vtk.js/Common/DataModel/PiecewiseFunction';\nimport vtkColorTransferFunction from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction';\n\nimport {\n  cache,\n  getEnabledElementByIds,\n  Types,\n  utilities,\n} from '@cornerstonejs/core';\n\nimport Representations from '../../../enums/SegmentationRepresentations';\nimport * as SegmentationConfig from '../../../stateManagement/segmentation/config/segmentationConfig';\nimport * as SegmentationState from '../../../stateManagement/segmentation/segmentationState';\nimport { getToolGroup } from '../../../store/ToolGroupManager';\nimport type {\n  LabelmapConfig,\n  LabelmapRenderingConfig,\n} from '../../../types/LabelmapTypes';\nimport {\n  RepresentationPublicInput,\n  SegmentationRepresentationConfig,\n  ToolGroupSpecificRepresentation,\n} from '../../../types/SegmentationStateTypes';\n\nimport addLabelmapToElement from './addLabelmapToElement';\n\nimport removeLabelmapFromElement from './removeLabelmapFromElement';\n\nconst MAX_NUMBER_COLORS = 255;\nconst labelMapConfigCache = new Map();\n\n/**\n * For each viewport, in the toolGroup it adds the segmentation labelmap\n * representation to its viewports.\n * @param toolGroup - the tool group that contains the viewports\n * @param representationInput - The segmentation representation input\n * @param toolGroupSpecificConfig - The configuration object for toolGroup\n *\n * @returns The UID of the new segmentation representation\n */\nasync function addSegmentationRepresentation(\n  toolGroupId: string,\n  representationInput: RepresentationPublicInput,\n  toolGroupSpecificConfig?: SegmentationRepresentationConfig\n): Promise<string> {\n  const { segmentationId } = representationInput;\n  const segmentationRepresentationUID = utilities.uuidv4();\n\n  // Todo: make these configurable during representation input by user\n  const segmentsHidden = new Set() as Set<number>;\n  const colorLUTIndex = 0;\n  const active = true;\n  const cfun = vtkColorTransferFunction.newInstance();\n  const ofun = vtkPiecewiseFunction.newInstance();\n\n  ofun.addPoint(0, 0);\n\n  const toolGroupSpecificRepresentation: ToolGroupSpecificRepresentation = {\n    segmentationId,\n    segmentationRepresentationUID,\n    type: Representations.Labelmap,\n    segmentsHidden,\n    colorLUTIndex,\n    active,\n    segmentationRepresentationSpecificConfig: {},\n    segmentSpecificConfig: {},\n    config: {\n      cfun,\n      ofun,\n    },\n  };\n\n  // Update the toolGroup specific configuration\n  if (toolGroupSpecificConfig) {\n    // Since setting configuration on toolGroup will trigger a segmentationRepresentation\n    // update event, we don't want to trigger the event twice, so we suppress\n    // the first one\n    const currentToolGroupConfig =\n      SegmentationConfig.getToolGroupSpecificConfig(toolGroupId);\n\n    const mergedConfig = utilities.deepMerge(\n      currentToolGroupConfig,\n      toolGroupSpecificConfig\n    );\n\n    SegmentationConfig.setToolGroupSpecificConfig(toolGroupId, {\n      renderInactiveSegmentations:\n        mergedConfig.renderInactiveSegmentations || true,\n      representations: {\n        ...mergedConfig.representations,\n      },\n    });\n  }\n\n  SegmentationState.addSegmentationRepresentation(\n    toolGroupId,\n    toolGroupSpecificRepresentation\n  );\n\n  return segmentationRepresentationUID;\n}\n\n/**\n * For each viewport, and for each segmentation, set the segmentation for the viewport's enabled element\n * Initializes the global and viewport specific state for the segmentation in the\n * SegmentationStateManager.\n * @param toolGroup - the tool group that contains the viewports\n * @param segmentationRepresentationUID - The uid of the segmentation representation\n * @param renderImmediate - If true, there will be a render call after the labelmap is removed\n */\nfunction removeSegmentationRepresentation(\n  toolGroupId: string,\n  segmentationRepresentationUID: string,\n  renderImmediate = false\n): void {\n  _removeLabelmapFromToolGroupViewports(\n    toolGroupId,\n    segmentationRepresentationUID\n  );\n  SegmentationState.removeSegmentationRepresentation(\n    toolGroupId,\n    segmentationRepresentationUID\n  );\n\n  if (renderImmediate) {\n    const viewportsInfo = getToolGroup(toolGroupId).getViewportsInfo();\n    viewportsInfo.forEach(({ viewportId, renderingEngineId }) => {\n      const enabledElement = getEnabledElementByIds(\n        viewportId,\n        renderingEngineId\n      );\n      enabledElement.viewport.render();\n    });\n  }\n}\n\n/**\n * Checks if a segmentation data have the same frameOfReference as the series\n * displayed in a given viewport\n * @param viewport\n * @param referencedVolumeId volume id of the segmentation reference series\n * @returns\n */\nfunction isSameFrameOfReference(viewport, referencedVolumeId) {\n  // if the referencedVolumeId is not defined, we acted as before to not break\n  // applications as referencedVolumeId is inserted in this change\n  // Can modify that in the future commits\n  if (!referencedVolumeId) {\n    return true;\n  }\n  const defaultActor = viewport.getDefaultActor();\n  if (!defaultActor) {\n    return false;\n  }\n  const { uid: defaultActorUID } = defaultActor;\n  const volume = cache.getVolume(defaultActorUID);\n\n  if (volume) {\n    const referencedVolume = cache.getVolume(referencedVolumeId);\n    if (\n      referencedVolume &&\n      volume.metadata.FrameOfReferenceUID ===\n        referencedVolume.metadata.FrameOfReferenceUID\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * It takes the enabled element, the segmentation Id, and the configuration, and\n * it sets the segmentation for the enabled element as a labelmap\n * @param enabledElement - The cornerstone enabled element\n * @param segmentationId - The id of the segmentation to be rendered.\n * @param configuration - The configuration object for the labelmap.\n */\nasync function render(\n  viewport: Types.IVolumeViewport,\n  representation: ToolGroupSpecificRepresentation,\n  toolGroupConfig: SegmentationRepresentationConfig\n): Promise<void> {\n  const {\n    colorLUTIndex,\n    active,\n    segmentationId,\n    segmentationRepresentationUID,\n    segmentsHidden,\n    config: renderingConfig,\n  } = representation;\n\n  const segmentation = SegmentationState.getSegmentation(segmentationId);\n  const labelmapData =\n    segmentation.representationData[Representations.Labelmap];\n  const { volumeId: labelmapUID } = labelmapData;\n\n  const labelmap = cache.getVolume(labelmapUID);\n\n  if (!labelmap) {\n    throw new Error(`No Labelmap found for volumeId: ${labelmapUID}`);\n  }\n\n  if (!isSameFrameOfReference(viewport, labelmapData?.referencedVolumeId)) {\n    return;\n  }\n  let actorEntry = viewport.getActor(segmentationRepresentationUID);\n\n  if (!actorEntry) {\n    const segmentation = SegmentationState.getSegmentation(segmentationId);\n    const { volumeId } =\n      segmentation.representationData[Representations.Labelmap];\n    // only add the labelmap to ToolGroup viewports if it is not already added\n    await _addLabelmapToViewport(\n      viewport,\n      volumeId,\n      segmentationRepresentationUID\n    );\n\n    actorEntry = viewport.getActor(segmentationRepresentationUID);\n  }\n\n  if (!actorEntry) {\n    return;\n  }\n\n  const { cfun, ofun } = renderingConfig as LabelmapRenderingConfig;\n\n  const renderInactiveSegmentations =\n    toolGroupConfig.renderInactiveSegmentations;\n\n  _setLabelmapColorAndOpacity(\n    viewport.id,\n    actorEntry,\n    cfun,\n    ofun,\n    colorLUTIndex,\n    toolGroupConfig.representations[Representations.Labelmap],\n    representation,\n    active,\n    renderInactiveSegmentations,\n    segmentsHidden\n  );\n}\n\nfunction _setLabelmapColorAndOpacity(\n  viewportId: string,\n  actorEntry: Types.ActorEntry,\n  cfun: vtkColorTransferFunction,\n  ofun: vtkPiecewiseFunction,\n  colorLUTIndex: number,\n  toolGroupLabelmapConfig: LabelmapConfig,\n  segmentationRepresentation: ToolGroupSpecificRepresentation,\n  isActiveLabelmap: boolean,\n  renderInactiveSegmentations: boolean,\n  segmentsHidden: Set<number>\n): void {\n  const { segmentSpecificConfig, segmentationRepresentationSpecificConfig } =\n    segmentationRepresentation;\n\n  const segmentationRepresentationLabelmapConfig =\n    segmentationRepresentationSpecificConfig[Representations.Labelmap];\n\n  // Note: MAX_NUMBER_COLORS = 256 is needed because the current method to generate\n  // the default color table uses RGB.\n  const colorLUT = SegmentationState.getColorLUT(colorLUTIndex);\n  const numColors = Math.min(256, colorLUT.length);\n  const volumeActor = actorEntry.actor as Types.VolumeActor;\n  const { uid: actorUID } = actorEntry;\n\n  // Note: right now outlineWidth and renderOutline are not configurable\n  // at the segment level, so we don't need to check for segment specific\n  // configuration in the loop, Todo: make them configurable at the segment level\n  const { outlineWidth, renderOutline, outlineOpacity } = _getLabelmapConfig(\n    toolGroupLabelmapConfig,\n    segmentationRepresentationLabelmapConfig,\n    isActiveLabelmap\n  );\n\n  for (let i = 0; i < numColors; i++) {\n    const segmentIndex = i;\n    const segmentColor = colorLUT[segmentIndex];\n\n    const segmentSpecificLabelmapConfig =\n      segmentSpecificConfig[segmentIndex]?.[Representations.Labelmap];\n\n    const { fillAlpha, outlineWidth, renderFill, renderOutline } =\n      _getLabelmapConfig(\n        toolGroupLabelmapConfig,\n        segmentationRepresentationLabelmapConfig,\n        isActiveLabelmap,\n        segmentSpecificLabelmapConfig\n      );\n\n    const { forceOpacityUpdate, forceColorUpdate } =\n      _needsTransferFunctionUpdate(viewportId, actorUID, segmentIndex, {\n        fillAlpha,\n        renderFill,\n        renderOutline,\n        segmentColor,\n        outlineWidth,\n        segmentsHidden,\n      });\n\n    if (forceColorUpdate) {\n      cfun.addRGBPoint(\n        segmentIndex,\n        segmentColor[0] / MAX_NUMBER_COLORS,\n        segmentColor[1] / MAX_NUMBER_COLORS,\n        segmentColor[2] / MAX_NUMBER_COLORS\n      );\n    }\n\n    if (forceOpacityUpdate) {\n      if (renderFill) {\n        const segmentOpacity = segmentsHidden.has(segmentIndex)\n          ? 0\n          : (segmentColor[3] / 255) * fillAlpha;\n\n        ofun.removePoint(segmentIndex);\n        ofun.addPointLong(segmentIndex, segmentOpacity, 0.5, 1.0);\n      } else {\n        ofun.addPointLong(segmentIndex, 0.01, 0.5, 1.0);\n      }\n    }\n  }\n\n  volumeActor.getProperty().setRGBTransferFunction(0, cfun);\n\n  ofun.setClamping(false);\n  volumeActor.getProperty().setScalarOpacity(0, ofun);\n\n  volumeActor.getProperty().setInterpolationTypeToNearest();\n\n  volumeActor.getProperty().setUseLabelOutline(renderOutline);\n\n  // @ts-ignore: setLabelOutlineWidth is not in the vtk.d.ts apparently\n  volumeActor.getProperty().setLabelOutlineOpacity(outlineOpacity);\n  volumeActor.getProperty().setLabelOutlineThickness(outlineWidth);\n\n  // Set visibility based on whether actor visibility is specifically asked\n  // to be turned on/off (on by default) AND whether is is in active but\n  // we are rendering inactive labelmap\n  const visible = isActiveLabelmap || renderInactiveSegmentations;\n  volumeActor.setVisibility(visible);\n}\n\nfunction _getLabelmapConfig(\n  toolGroupLabelmapConfig: LabelmapConfig,\n  segmentationRepresentationLabelmapConfig: LabelmapConfig,\n  isActiveLabelmap: boolean,\n  segmentsLabelmapConfig?: LabelmapConfig\n) {\n  const segmentLabelmapConfig = segmentsLabelmapConfig || {};\n\n  const configToUse = {\n    ...toolGroupLabelmapConfig,\n    ...segmentationRepresentationLabelmapConfig,\n    ...segmentLabelmapConfig,\n  };\n\n  const fillAlpha = isActiveLabelmap\n    ? configToUse.fillAlpha\n    : configToUse.fillAlphaInactive;\n  const outlineWidth = isActiveLabelmap\n    ? configToUse.outlineWidthActive\n    : configToUse.outlineWidthInactive;\n\n  const renderFill = isActiveLabelmap\n    ? configToUse.renderFill\n    : configToUse.renderFillInactive;\n\n  const renderOutline = configToUse.renderOutline;\n\n  const outlineOpacity = isActiveLabelmap\n    ? configToUse.outlineOpacity\n    : configToUse.outlineOpacityInactive;\n\n  return {\n    fillAlpha,\n    outlineWidth,\n    renderFill,\n    renderOutline,\n    outlineOpacity,\n  };\n}\n\nfunction _needsTransferFunctionUpdate(\n  viewportId: string,\n  actorUID: string,\n  segmentIndex: number,\n  {\n    fillAlpha,\n    renderFill,\n    renderOutline,\n    segmentColor,\n    outlineWidth,\n    segmentsHidden,\n  }: {\n    fillAlpha: number;\n    renderFill: boolean;\n    renderOutline: boolean;\n    outlineWidth: number;\n    segmentColor: number[];\n    segmentsHidden: Set<number>;\n  }\n) {\n  const cacheUID = `${viewportId}-${actorUID}-${segmentIndex}`;\n  const oldConfig = labelMapConfigCache.get(cacheUID);\n\n  if (!oldConfig) {\n    labelMapConfigCache.set(cacheUID, {\n      fillAlpha,\n      renderFill,\n      renderOutline,\n      outlineWidth,\n      segmentColor,\n      segmentsHidden: new Set(segmentsHidden), // Create a copy\n    });\n\n    return {\n      forceOpacityUpdate: true,\n      forceColorUpdate: true,\n    };\n  }\n\n  const {\n    fillAlpha: oldFillAlpha,\n    renderFill: oldRenderFill,\n    renderOutline: oldRenderOutline,\n    outlineWidth: oldOutlineWidth,\n    segmentColor: oldSegmentColor,\n    segmentsHidden: oldSegmentsHidden,\n  } = oldConfig;\n\n  const forceColorUpdate =\n    oldSegmentColor[0] !== segmentColor[0] ||\n    oldSegmentColor[1] !== segmentColor[1] ||\n    oldSegmentColor[2] !== segmentColor[2];\n\n  const forceOpacityUpdate =\n    oldSegmentColor[3] !== segmentColor[3] ||\n    oldFillAlpha !== fillAlpha ||\n    oldRenderFill !== renderFill ||\n    oldRenderOutline !== renderOutline ||\n    oldOutlineWidth !== outlineWidth ||\n    oldSegmentsHidden.has(segmentIndex) !== segmentsHidden.has(segmentIndex);\n\n  // update the cache\n  labelMapConfigCache.set(cacheUID, {\n    fillAlpha,\n    renderFill,\n    renderOutline,\n    outlineWidth,\n    segmentColor: segmentColor.slice(), // Create a copy\n    segmentsHidden: new Set(segmentsHidden), // Create a copy\n  });\n\n  return {\n    forceOpacityUpdate,\n    forceColorUpdate,\n  };\n}\n\nfunction _removeLabelmapFromToolGroupViewports(\n  toolGroupId: string,\n  segmentationRepresentationUID: string\n): void {\n  const toolGroup = getToolGroup(toolGroupId);\n\n  if (toolGroup === undefined) {\n    throw new Error(`ToolGroup with ToolGroupId ${toolGroupId} does not exist`);\n  }\n\n  const { viewportsInfo } = toolGroup;\n\n  for (const viewportInfo of viewportsInfo) {\n    const { viewportId, renderingEngineId } = viewportInfo;\n    const enabledElement = getEnabledElementByIds(\n      viewportId,\n      renderingEngineId\n    );\n    removeLabelmapFromElement(\n      enabledElement.viewport.element,\n      segmentationRepresentationUID\n    );\n  }\n}\n\nasync function _addLabelmapToViewport(\n  viewport: Types.IVolumeViewport,\n  volumeId: string,\n  segmentationRepresentationUID: string\n): Promise<void> {\n  await addLabelmapToElement(\n    viewport.element,\n    volumeId,\n    segmentationRepresentationUID\n  );\n}\n\nexport default {\n  render,\n  addSegmentationRepresentation,\n  removeSegmentationRepresentation,\n};\n","import {\n  getEnabledElementByIds,\n  Types,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport Representations from '../../enums/SegmentationRepresentations';\nimport { config as segmentationConfig } from '../../stateManagement/segmentation';\nimport { setSegmentationVisibility } from '../../stateManagement/segmentation/config/segmentationVisibility';\nimport { getSegmentationRepresentations } from '../../stateManagement/segmentation/segmentationState';\nimport { getToolGroup } from '../../store/ToolGroupManager';\nimport { PublicToolProps, ToolProps } from '../../types';\nimport { BaseTool } from '../base';\n\nimport {\n  SegmentationRepresentationConfig,\n  ToolGroupSpecificRepresentation,\n} from '../../types/SegmentationStateTypes';\nimport { contourDisplay } from './Contour';\nimport { labelmapDisplay } from './Labelmap';\n\n/**\n * In Cornerstone3DTools, displaying of segmentations are handled by the SegmentationDisplayTool.\n * Generally, any Segmentation can be viewed in various representations such as\n * labelmap (3d), contours, surface etc. As of now, Cornerstone3DTools only implements\n * Labelmap representation.\n *\n * SegmentationDisplayTool works at ToolGroup level, and is responsible for displaying the\n * segmentation representation for ALL viewports of a toolGroup, this way we can support complex\n * scenarios for displaying segmentations.\n *\n * Current Limitations:\n * - Only supports rendering of the volumetric segmentations in 3D space. (StackViewport segmentations are not supported yet)\n * - Labelmap representation is the only supported representation for now.\n *\n * Similar to other tools in Cornerstone3DTools, the SegmentationDisplayTool should\n * be added to the CornerstoneTools by calling cornerstoneTools.addTool(SegmentationDisplayTool)\n * and a toolGroup should be created for it using the ToolGroupManager API, finally\n * viewports information such as viewportId and renderingEngineId should be provided\n * to the toolGroup and the SegmentationDisplayTool should be set to be activated.\n *\n *\n */\nclass SegmentationDisplayTool extends BaseTool {\n  static toolName;\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      configuration: {},\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n  }\n\n  onSetToolEnabled(): void {\n    const toolGroupId = this.toolGroupId;\n    const toolGroupSegmentationRepresentations =\n      getSegmentationRepresentations(toolGroupId);\n\n    if (\n      !toolGroupSegmentationRepresentations ||\n      toolGroupSegmentationRepresentations.length === 0\n    ) {\n      return;\n    }\n\n    // for each segmentationData, make the visibility true\n    toolGroupSegmentationRepresentations.forEach(\n      (segmentationRepresentation) => {\n        setSegmentationVisibility(\n          toolGroupId,\n          segmentationRepresentation.segmentationRepresentationUID,\n          true\n        );\n      }\n    );\n  }\n\n  onSetToolDisabled(): void {\n    const toolGroupId = this.toolGroupId;\n    const toolGroupSegmentationRepresentations =\n      getSegmentationRepresentations(toolGroupId);\n\n    if (\n      !toolGroupSegmentationRepresentations ||\n      toolGroupSegmentationRepresentations.length === 0\n    ) {\n      return;\n    }\n\n    // for each segmentationData, make the visibility false\n    toolGroupSegmentationRepresentations.forEach(\n      (segmentationRepresentation) => {\n        setSegmentationVisibility(\n          toolGroupId,\n          segmentationRepresentation.segmentationRepresentationUID,\n          false\n        );\n      }\n    );\n  }\n\n  /**\n   * It is used to trigger the render for each segmentations in the toolGroup.\n   * Based on the segmentation representation type, it will call the corresponding\n   * render function.\n   *\n   * @param toolGroupId - the toolGroupId\n   */\n  renderSegmentation = (toolGroupId: string): void => {\n    const toolGroup = getToolGroup(toolGroupId);\n\n    if (!toolGroup) {\n      return;\n    }\n\n    const toolGroupSegmentationRepresentations =\n      getSegmentationRepresentations(toolGroupId);\n\n    if (\n      !toolGroupSegmentationRepresentations ||\n      toolGroupSegmentationRepresentations.length === 0\n    ) {\n      return;\n    }\n\n    // toolGroup Viewports\n    const toolGroupViewports = toolGroup.viewportsInfo.map(\n      ({ renderingEngineId, viewportId }) => {\n        const enabledElement = getEnabledElementByIds(\n          viewportId,\n          renderingEngineId\n        );\n\n        if (enabledElement) {\n          return enabledElement.viewport;\n        }\n      }\n    );\n\n    // Render each segmentationData, in each viewport in the toolGroup\n    const segmentationRenderList = toolGroupSegmentationRepresentations.map(\n      (representation: ToolGroupSpecificRepresentation) => {\n        const config = this._getMergedRepresentationsConfig(toolGroupId);\n\n        const viewportsRenderList = [];\n        for (const viewport of toolGroupViewports) {\n          if (representation.type == Representations.Labelmap) {\n            viewportsRenderList.push(\n              labelmapDisplay.render(\n                viewport as Types.IVolumeViewport,\n                representation,\n                config\n              )\n            );\n          } else if (representation.type == Representations.Contour) {\n            viewportsRenderList.push(\n              contourDisplay.render(\n                viewport as Types.IVolumeViewport,\n                representation,\n                config\n              )\n            );\n          }\n        }\n\n        return viewportsRenderList;\n      }\n    );\n\n    Promise.allSettled(segmentationRenderList).then(() => {\n      // for all viewports in the toolGroup trigger a re-render\n      toolGroupViewports.forEach((viewport) => {\n        viewport.render();\n      });\n    });\n  };\n\n  /**\n   * Merge the toolGroup specific configuration with the default global configuration\n   * @param toolGroupId\n   * @returns\n   */\n  _getMergedRepresentationsConfig(\n    toolGroupId: string\n  ): SegmentationRepresentationConfig {\n    const toolGroupConfig =\n      segmentationConfig.getToolGroupSpecificConfig(toolGroupId);\n    const globalConfig = segmentationConfig.getGlobalConfig();\n\n    // merge two configurations and override the global config\n    const mergedConfig = csUtils.deepMerge(globalConfig, toolGroupConfig);\n\n    return mergedConfig;\n  }\n}\n\nSegmentationDisplayTool.toolName = 'SegmentationDisplay';\nexport default SegmentationDisplayTool;\n","import {\n  triggerEvent,\n  eventTarget,\n  getRenderingEngine,\n  Enums,\n  Types,\n} from '@cornerstonejs/core';\nimport { Events as csToolsEvents } from '../../enums';\nimport {\n  getToolGroup,\n  getToolGroupForViewport,\n} from '../../store/ToolGroupManager';\n\nimport SegmentationDisplayTool from '../../tools/displayTools/SegmentationDisplayTool';\nimport { SegmentationRenderedEventDetail } from '../../types/EventTypes';\n\n/**\n * SegmentationRenderingEngine is a class that is responsible for rendering\n * segmentations for a toolGroup. It will call SegmentationDisplayTool to render the segmentation\n * based on the segmentation data and their configurations. Note: This is a Singleton class\n * and should not be instantiated directly. To trigger a render for all the\n * segmentations of a tool group you can use.\n *\n * ```\n * triggerSegmentationRender(toolGroupId)\n * ```\n */\nclass SegmentationRenderingEngine {\n  private _needsRender: Set<string> = new Set();\n  private _animationFrameSet = false;\n  private _animationFrameHandle: number | null = null;\n  public hasBeenDestroyed: boolean;\n\n  public removeToolGroup(toolGroupId) {\n    this._needsRender.delete(toolGroupId);\n\n    if (this._needsRender.size === 0) {\n      this._reset();\n    }\n  }\n\n  public renderToolGroupSegmentations(toolGroupId): void {\n    this._setToolGroupSegmentationToBeRenderedNextFrame([toolGroupId]);\n  }\n\n  /**\n   *  _throwIfDestroyed Throws an error if trying to interact with the `RenderingEngine`\n   * instance after its `destroy` method has been called.\n   */\n  private _throwIfDestroyed() {\n    if (this.hasBeenDestroyed) {\n      throw new Error(\n        'this.destroy() has been manually called to free up memory, can not longer use this instance. Instead make a new one.'\n      );\n    }\n  }\n\n  private _setToolGroupSegmentationToBeRenderedNextFrame(\n    toolGroupIds: string[]\n  ) {\n    // Add the viewports to the set of flagged viewports\n    toolGroupIds.forEach((toolGroupId) => {\n      this._needsRender.add(toolGroupId);\n    });\n\n    // Render any flagged viewports\n    this._render();\n  }\n\n  /**\n   *  _render Sets up animation frame if necessary\n   */\n  private _render() {\n    // If we have viewports that need rendering and we have not already\n    // set the RAF callback to run on the next frame.\n    if (this._needsRender.size > 0 && this._animationFrameSet === false) {\n      this._animationFrameHandle = window.requestAnimationFrame(\n        this._renderFlaggedToolGroups\n      );\n\n      // Set the flag that we have already set up the next RAF call.\n      this._animationFrameSet = true;\n    }\n  }\n\n  private _renderFlaggedToolGroups = () => {\n    this._throwIfDestroyed();\n\n    // for each toolGroupId insides the _needsRender set, render the segmentation\n    const toolGroupIds = Array.from(this._needsRender.values());\n\n    for (const toolGroupId of toolGroupIds) {\n      this._triggerRender(toolGroupId);\n\n      // This viewport has been rendered, we can remove it from the set\n      this._needsRender.delete(toolGroupId);\n\n      // If there is nothing left that is flagged for rendering, stop here\n      // and allow RAF to be called again\n      if (this._needsRender.size === 0) {\n        this._animationFrameSet = false;\n        this._animationFrameHandle = null;\n        return;\n      }\n    }\n  };\n  _triggerRender(toolGroupId) {\n    const toolGroup = getToolGroup(toolGroupId);\n\n    if (!toolGroup) {\n      console.warn(`No tool group found with toolGroupId: ${toolGroupId}`);\n      return;\n    }\n\n    const { viewportsInfo } = toolGroup;\n    const viewports = [];\n\n    viewportsInfo.forEach(({ viewportId, renderingEngineId }) => {\n      const renderingEngine = getRenderingEngine(renderingEngineId);\n\n      if (!renderingEngine) {\n        console.warn('rendering Engine has been destroyed');\n        return;\n      }\n\n      viewports.push(renderingEngine.getViewport(viewportId));\n    });\n\n    const segmentationDisplayToolInstance = toolGroup.getToolInstance(\n      SegmentationDisplayTool.toolName\n    ) as SegmentationDisplayTool;\n    if (!segmentationDisplayToolInstance) {\n      console.warn('No segmentation tool found inside', toolGroupId);\n      return;\n    }\n\n    function onSegmentationRender(evt: Types.EventTypes.ImageRenderedEvent) {\n      const { element, viewportId, renderingEngineId } = evt.detail;\n\n      element.removeEventListener(\n        Enums.Events.IMAGE_RENDERED,\n        onSegmentationRender as EventListener\n      );\n\n      const toolGroup = getToolGroupForViewport(viewportId, renderingEngineId);\n\n      if (!toolGroup) {\n        console.warn('toolGroup has been destroyed');\n        return;\n      }\n\n      const eventDetail: SegmentationRenderedEventDetail = {\n        toolGroupId: toolGroup.id,\n        viewportId,\n      };\n\n      triggerEvent(eventTarget, csToolsEvents.SEGMENTATION_RENDERED, {\n        ...eventDetail,\n      });\n    }\n\n    // Todo: for other representations we probably need the drawSVG, but right now we are not using it\n    // drawSvg(element, (svgDrawingHelper) => {\n    //   const handleDrawSvg = (tool) => {\n    //     if (tool instanceof SegmentationDisplayTool && tool.renderAnnotation) {\n    //       tool.renderAnnotation({ detail: eventDetail })\n    //       triggerEvent(element, csToolsEvents.SEGMENTATION_RENDERED, { ...eventDetail })\n    //     }\n    //   }\n    //   enabledTools.forEach(handleDrawSvg)\n    // })\n\n    viewports.forEach(({ element }) => {\n      element.addEventListener(\n        Enums.Events.IMAGE_RENDERED,\n        onSegmentationRender\n      );\n    });\n\n    segmentationDisplayToolInstance.renderSegmentation(toolGroupId);\n  }\n\n  /**\n   *  _reset Resets the `RenderingEngine`\n   */\n  private _reset() {\n    window.cancelAnimationFrame(this._animationFrameHandle);\n\n    this._needsRender.clear();\n    this._animationFrameSet = false;\n    this._animationFrameHandle = null;\n  }\n}\n\nconst segmentationRenderingEngine = new SegmentationRenderingEngine();\n\n/**\n * It triggers a render for all the segmentations of the tool group with the given Id.\n * @param toolGroupId - The Id of the tool group to render.\n */\nfunction triggerSegmentationRender(toolGroupId: string): void {\n  segmentationRenderingEngine.renderToolGroupSegmentations(toolGroupId);\n}\n\nexport { segmentationRenderingEngine, triggerSegmentationRender };\nexport default triggerSegmentationRender;\n","import { cache } from '@cornerstonejs/core';\n\nimport triggerSegmentationRender from '../../utilities/segmentation/triggerSegmentationRender';\nimport SegmentationRepresentations from '../../enums/SegmentationRepresentations';\nimport * as SegmentationState from '../../stateManagement/segmentation/segmentationState';\nimport { SegmentationDataModifiedEventType } from '../../types/EventTypes';\n\n/** A callback function that is called when the segmentation data is modified which\n *  often is as a result of tool interactions e.g., scissors, eraser, etc.\n */\nconst onSegmentationDataModified = function (\n  evt: SegmentationDataModifiedEventType\n): void {\n  const { segmentationId, modifiedSlicesToUse } = evt.detail;\n\n  const { representationData, type } =\n    SegmentationState.getSegmentation(segmentationId);\n\n  let toolGroupIds;\n  if (type === SegmentationRepresentations.Labelmap) {\n    // get the volume from cache, we need the openGLTexture to be updated to GPU\n    const segmentationVolume = cache.getVolume(\n      representationData[type].volumeId\n    );\n\n    if (!segmentationVolume) {\n      console.warn('segmentation not found in cache');\n      return;\n    }\n\n    const { imageData, vtkOpenGLTexture } = segmentationVolume;\n\n    // Update the texture for the volume in the GPU\n    let slicesToUpdate;\n    if (modifiedSlicesToUse && Array.isArray(modifiedSlicesToUse)) {\n      slicesToUpdate = modifiedSlicesToUse;\n    } else {\n      const numSlices = imageData.getDimensions()[2];\n      slicesToUpdate = [...Array(numSlices).keys()];\n    }\n\n    slicesToUpdate.forEach((i) => {\n      vtkOpenGLTexture.setUpdatedFrame(i);\n    });\n\n    // Trigger modified on the imageData to update the image\n    imageData.modified();\n    toolGroupIds =\n      SegmentationState.getToolGroupIdsWithSegmentation(segmentationId);\n  } else {\n    throw new Error(\n      `onSegmentationDataModified: representationType ${type} not supported yet`\n    );\n  }\n\n  toolGroupIds.forEach((toolGroupId) => {\n    triggerSegmentationRender(toolGroupId);\n  });\n};\n\nexport default onSegmentationDataModified;\n","import triggerSegmentationRender from '../../utilities/segmentation/triggerSegmentationRender';\nimport { SegmentationRepresentationModifiedEventType } from '../../types/EventTypes';\n\n/** A function that listens to the `segmentationStateModified` event and triggers\n * the `triggerSegmentationRender` function. This function is called when the\n * segmentation state or config is modified.\n */\nconst segmentationRepresentationModifiedListener = function (\n  evt: SegmentationRepresentationModifiedEventType\n): void {\n  const { toolGroupId } = evt.detail;\n  triggerSegmentationRender(toolGroupId);\n};\n\nexport default segmentationRepresentationModifiedListener;\n","import triggerSegmentationRender from '../../utilities/segmentation/triggerSegmentationRender';\nimport { SegmentationRepresentationRemovedEventType } from '../../types/EventTypes';\n\n/** A function that listens to the `segmentationRepresentationRemoved` event and triggers\n * the `triggerSegmentationRender` function. This function is called when the\n * segmentation state or config is modified.\n */\nconst segmentationRepresentationRemovedEventListener = function (\n  evt: SegmentationRepresentationRemovedEventType\n): void {\n  const { toolGroupId, segmentationRepresentationUID } = evt.detail;\n\n  triggerSegmentationRender(toolGroupId);\n};\n\nexport default segmentationRepresentationRemovedEventListener;\n","import SegmentationRepresentations from '../../enums/SegmentationRepresentations';\nimport { labelmapDisplay } from '../../tools/displayTools/Labelmap';\nimport { contourDisplay } from '../../tools/displayTools/Contour';\n\nimport {\n  getSegmentationRepresentations,\n  getSegmentationRepresentationByUID,\n} from './segmentationState';\n\n/**\n * Remove the segmentation representation (representation) from the viewports of the toolGroup.\n * @param toolGroupId - The Id of the toolGroup to remove the segmentation from.\n * @param segmentationRepresentationUIDs - The UIDs of the segmentation representations to remove.\n * @param immediate - if True the viewport will be re-rendered immediately.\n */\nfunction removeSegmentationsFromToolGroup(\n  toolGroupId: string,\n  segmentationRepresentationUIDs?: string[] | undefined,\n  immediate?: boolean\n): void {\n  const toolGroupSegRepresentations =\n    getSegmentationRepresentations(toolGroupId);\n\n  if (\n    !toolGroupSegRepresentations ||\n    toolGroupSegRepresentations.length === 0\n  ) {\n    return;\n  }\n\n  const toolGroupSegRepresentationUIDs = toolGroupSegRepresentations.map(\n    (representation) => representation.segmentationRepresentationUID\n  );\n\n  let segRepresentationUIDsToRemove = segmentationRepresentationUIDs;\n  if (segRepresentationUIDsToRemove) {\n    // make sure the segmentationDataUIDs that are going to be removed belong\n    // to the toolGroup\n    const invalidSegRepresentationUIDs = segmentationRepresentationUIDs.filter(\n      (segRepresentationUID) =>\n        !toolGroupSegRepresentationUIDs.includes(segRepresentationUID)\n    );\n\n    if (invalidSegRepresentationUIDs.length > 0) {\n      throw new Error(\n        `The following segmentationRepresentationUIDs are not part of the toolGroup: ${JSON.stringify(\n          invalidSegRepresentationUIDs\n        )}`\n      );\n    }\n  } else {\n    // remove all segmentation representations\n    segRepresentationUIDsToRemove = toolGroupSegRepresentationUIDs;\n  }\n\n  segRepresentationUIDsToRemove.forEach((segmentationDataUID) => {\n    _removeSegmentation(toolGroupId, segmentationDataUID, immediate);\n  });\n}\n\nfunction _removeSegmentation(\n  toolGroupId: string,\n  segmentationRepresentationUID: string,\n  immediate?: boolean\n): void {\n  const segmentationRepresentation = getSegmentationRepresentationByUID(\n    toolGroupId,\n    segmentationRepresentationUID\n  );\n\n  const { type } = segmentationRepresentation;\n\n  if (type === SegmentationRepresentations.Labelmap) {\n    labelmapDisplay.removeSegmentationRepresentation(\n      toolGroupId,\n      segmentationRepresentationUID,\n      immediate\n    );\n  } else if (type === SegmentationRepresentations.Contour) {\n    contourDisplay.removeSegmentationRepresentation(\n      toolGroupId,\n      segmentationRepresentationUID,\n      immediate\n    );\n  } else {\n    throw new Error(`The representation ${type} is not supported yet`);\n  }\n}\n\nexport default removeSegmentationsFromToolGroup;\n","import { state } from '../index';\nimport { removeSegmentationsFromToolGroup } from '../../stateManagement/segmentation';\nimport { segmentationRenderingEngine } from '../../utilities/segmentation/triggerSegmentationRender';\n// ToolGroups function entirely by their \"state\" being queried and leveraged\n// removing a ToolGroup from state is equivalent to killing it\n\n/**\n * Given a tool group Id, destroy the toolGroup. It will also cleanup all segmentations\n * associated with that tool group too\n *\n * @param toolGroupId - The Id of the tool group to be destroyed.\n */\nfunction destroyToolGroup(toolGroupId: string): void {\n  const toolGroupIndex = state.toolGroups.findIndex(\n    (tg) => tg.id === toolGroupId\n  );\n\n  if (toolGroupIndex > -1) {\n    segmentationRenderingEngine.removeToolGroup(toolGroupId);\n    // Todo: this should not happen here)\n    removeSegmentationsFromToolGroup(toolGroupId);\n    state.toolGroups.splice(toolGroupIndex, 1);\n  }\n}\n\nexport default destroyToolGroup;\n","// `BaseManager` or IManager interface for duplicate API between ToolGroup/Synchronizer?\nimport { state as csToolsState } from '../index';\nimport destroyToolGroup from './destroyToolGroup';\n\n// ToolGroups function entirely by their \"state\" being queried and leveraged\n// removing a ToolGroup from state is equivalent to killing it. Calling\n// destroyToolGroup() to make sure the SegmentationDisplayTools\n// have been removed from the toolGroup Viewports. //Todo: this makes more sense\n// to be based on events, but we don't have any toolGroup created/removed events\n\n/**\n * Destroy all tool groups\n */\nfunction destroy(): void {\n  const toolGroups = [...csToolsState.toolGroups];\n\n  for (const toolGroup of toolGroups) {\n    destroyToolGroup(toolGroup.id);\n  }\n\n  csToolsState.toolGroups = [];\n}\n\nexport default destroy;\n","import { eventTarget, Enums } from '@cornerstonejs/core';\nimport { getAnnotationManager } from './stateManagement/annotation/annotationState';\nimport { getDefaultSegmentationStateManager } from './stateManagement/segmentation/segmentationState';\nimport { Events as TOOLS_EVENTS } from './enums';\nimport { addEnabledElement, removeEnabledElement } from './store';\nimport { resetCornerstoneToolsState } from './store/state';\nimport {\n  annotationSelectionListener,\n  segmentationDataModifiedEventListener,\n  segmentationRepresentationModifiedEventListener,\n  segmentationRepresentationRemovedEventListener,\n  segmentationModifiedListener,\n  annotationModifiedListener,\n} from './eventListeners';\n\nimport * as ToolGroupManager from './store/ToolGroupManager';\n\nlet csToolsInitialized = false;\n\n/**\n * Initialize the cornerstoneTools package. It will add event listeners for mouse\n * and keyboard events.\n * @param defaultConfiguration - A configuration object that will be used to\n * initialize the tool.\n */\nexport function init(defaultConfiguration = {}): void {\n  if (csToolsInitialized) {\n    return;\n  }\n\n  _addCornerstoneEventListeners();\n  _addCornerstoneToolsEventListeners();\n\n  csToolsInitialized = true;\n}\n\n/**\n * It destroys and cleanup state for cornerstone3DTools. It removes all the tools\n * that were added to the tool groups and restore states. It also removes all\n * event listeners.\n */\nexport function destroy(): void {\n  _removeCornerstoneEventListeners();\n  _removeCornerstoneToolsEventListeners();\n\n  // Important: destroy ToolGroups first, in order for cleanup to work correctly for the\n  // added tools.\n  ToolGroupManager.destroy();\n\n  // Remove all tools\n  resetCornerstoneToolsState();\n\n  // remove all annotation.\n  const annotationManager = getAnnotationManager();\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n\n  annotationManager.restoreAnnotations({});\n  segmentationStateManager.resetState();\n  csToolsInitialized = false;\n}\n\n/**\n * Wires up event listeners for the Cornerstone#ElementDisabled and\n * Cornerstone#ElementEnabled events.\n *\n * @internal\n */\nfunction _addCornerstoneEventListeners(): void {\n  // Clear any listeners that may already be set\n  _removeCornerstoneEventListeners();\n\n  const elementEnabledEvent = Enums.Events.ELEMENT_ENABLED;\n  const elementDisabledEvent = Enums.Events.ELEMENT_DISABLED;\n\n  eventTarget.addEventListener(elementEnabledEvent, addEnabledElement);\n  eventTarget.addEventListener(elementDisabledEvent, removeEnabledElement);\n}\n\n/**\n * Removes event listeners for the Cornerstone#ElementDisabled and\n * Cornerstone#ElementEnabled events.\n *\n */\nfunction _removeCornerstoneEventListeners(): void {\n  const elementEnabledEvent = Enums.Events.ELEMENT_ENABLED;\n  const elementDisabledEvent = Enums.Events.ELEMENT_DISABLED;\n\n  eventTarget.removeEventListener(elementEnabledEvent, addEnabledElement);\n  eventTarget.removeEventListener(elementDisabledEvent, removeEnabledElement);\n}\n\n/**\n * It adds an event listener to the event target (the cornerstoneTools object) for\n * the annotation selected and annotation modified events.\n */\nfunction _addCornerstoneToolsEventListeners() {\n  // Clear any listeners that may already be set\n  _removeCornerstoneToolsEventListeners();\n\n  /**\n   * Annotation\n   */\n  eventTarget.addEventListener(\n    TOOLS_EVENTS.ANNOTATION_MODIFIED,\n    annotationModifiedListener\n  );\n\n  eventTarget.addEventListener(\n    TOOLS_EVENTS.ANNOTATION_SELECTION_CHANGE,\n    annotationSelectionListener\n  );\n\n  eventTarget.addEventListener(\n    TOOLS_EVENTS.ANNOTATION_SELECTION_CHANGE,\n    annotationSelectionListener\n  );\n\n  /**\n   * Segmentation\n   */\n  eventTarget.addEventListener(\n    TOOLS_EVENTS.SEGMENTATION_MODIFIED,\n    segmentationModifiedListener\n  );\n\n  eventTarget.addEventListener(\n    TOOLS_EVENTS.SEGMENTATION_DATA_MODIFIED,\n    segmentationDataModifiedEventListener\n  );\n  eventTarget.addEventListener(\n    TOOLS_EVENTS.SEGMENTATION_REPRESENTATION_MODIFIED,\n    segmentationRepresentationModifiedEventListener\n  );\n\n  eventTarget.addEventListener(\n    TOOLS_EVENTS.SEGMENTATION_REPRESENTATION_REMOVED,\n    segmentationRepresentationRemovedEventListener\n  );\n}\n\n/**\n * Remove the event listener for the the annotation selected and annotation modified events.\n */\nfunction _removeCornerstoneToolsEventListeners() {\n  /**\n   * Annotation\n   */\n  eventTarget.removeEventListener(\n    TOOLS_EVENTS.ANNOTATION_MODIFIED,\n    annotationModifiedListener\n  );\n\n  eventTarget.removeEventListener(\n    TOOLS_EVENTS.ANNOTATION_SELECTION_CHANGE,\n    annotationSelectionListener\n  );\n\n  eventTarget.removeEventListener(\n    TOOLS_EVENTS.ANNOTATION_SELECTION_CHANGE,\n    annotationSelectionListener\n  );\n\n  /**\n   * Segmentation\n   */\n\n  eventTarget.removeEventListener(\n    TOOLS_EVENTS.SEGMENTATION_MODIFIED,\n    segmentationModifiedListener\n  );\n\n  eventTarget.removeEventListener(\n    TOOLS_EVENTS.SEGMENTATION_DATA_MODIFIED,\n    segmentationDataModifiedEventListener\n  );\n  eventTarget.removeEventListener(\n    TOOLS_EVENTS.SEGMENTATION_REPRESENTATION_MODIFIED,\n    segmentationRepresentationModifiedEventListener\n  );\n\n  eventTarget.removeEventListener(\n    TOOLS_EVENTS.SEGMENTATION_REPRESENTATION_REMOVED,\n    segmentationRepresentationRemovedEventListener\n  );\n}\n\nexport default init;\n","import { state } from './state';\n\n/**\n * Adds the tool class to the cornerstoneTools to be used later. This function\n * should be called before creating the toolGroups and adding tools and setting their mode.\n * The flow is:\n * - addTool(ToolClass) // where ToolClass is the tool constructor imported from CornerstoneTools or created by a 3rd party\n * - createToolGroup(toolGroupId)\n * - toolGroup.addTool(${toolName}) // NOT THE TOOL CLASS\n * - toolGroup.setToolActive(${toolName})\n *\n * @param ToolClass - A tool calls to instantiate.\n * @param toolOptions - The tool-specific configuration options for the tool.\n * @returns\n */\nexport function addTool(ToolClass): void {\n  // Check if tool exists and name is not undefined\n  const toolName = ToolClass.toolName;\n  const toolAlreadyAdded = state.tools[toolName] !== undefined;\n\n  if (!toolName) {\n    throw new Error(`No Tool Found for the ToolClass ${ToolClass.name}`);\n  }\n\n  if (toolAlreadyAdded) {\n    throw new Error(`${toolName} has already been added globally`);\n  }\n\n  // Stores the toolNames and ToolClass to be instantiated in the toolGroup on toolGroup.addTool\n  state.tools[toolName] = {\n    toolClass: ToolClass,\n  };\n}\n\n/**\n * Removes the tool class from the cornerstoneTools.\n *\n * @param ToolClass - A tool calls to instantiate.\n */\nexport function removeTool(ToolClass): void {\n  const toolName = ToolClass.toolName;\n\n  if (!toolName) {\n    throw new Error(`No tool found for: ${ToolClass.name}`);\n  }\n\n  if (!state.tools[toolName] !== undefined) {\n    delete state.tools[toolName];\n  } else {\n    throw new Error(\n      `${toolName} cannot be removed because it has not been added`\n    );\n  }\n}\n\nexport default addTool;\n","import { ToolModes } from '../enums';\nimport getToolsWithModesForElement from '../utilities/getToolsWithModesForElement';\nimport filterToolsWithAnnotationsForElement from './filterToolsWithAnnotationsForElement';\n\n/**\n * Cancel the current active manipulation that is being performed on the provided\n * element. It filters all the active and passive tools for the enabledElement\n * and calls cancel() method for all of them, and returns the tool that has executed its\n * cancellation (returned its annotationUID), since tools that are not being manipulated will\n * short circuit early. Note: not all tools currently implement a cancel method.\n *\n * @param element - canvas element\n * @returns annotationUID that is cancelled\n */\nexport default function cancelActiveManipulations(\n  element: HTMLDivElement\n): string | undefined {\n  const tools = getToolsWithModesForElement(element, [\n    ToolModes.Active,\n    ToolModes.Passive,\n  ]);\n\n  const toolsWithData = filterToolsWithAnnotationsForElement(element, tools);\n  for (const { tool } of toolsWithData) {\n    const annotationUID = tool.cancel(element);\n    if (annotationUID) {\n      return annotationUID;\n    }\n  }\n}\n","import {\n  getRenderingEngine,\n  getEnabledElement,\n  Enums,\n  Types,\n} from '@cornerstonejs/core';\n\nimport { ISynchronizerEventHandler } from '../../types';\n\n/**\n * Synchronizer is a class that listens to a specific event on a specific source\n * targets and fires a specific event on a specific target elements. Use cases\n * include: synchronizing a camera between two viewports, synchronizing a\n * windowLevel between various viewports.\n */\nclass Synchronizer {\n  //\n  private _enabled: boolean;\n  private _eventName: string;\n  private _eventHandler: ISynchronizerEventHandler;\n  private _ignoreFiredEvents: boolean;\n  private _sourceViewports: Array<Types.IViewportId>;\n  private _targetViewports: Array<Types.IViewportId>;\n  private _viewportOptions: Record<string, Record<string, unknown>> = {};\n  private _options: any;\n  public id: string;\n\n  constructor(\n    synchronizerId: string,\n    eventName: string,\n    eventHandler: ISynchronizerEventHandler,\n    options?: any\n  ) {\n    this._enabled = true;\n    this._eventName = eventName;\n    this._eventHandler = eventHandler;\n    this._ignoreFiredEvents = false;\n    this._sourceViewports = [];\n    this._targetViewports = [];\n    this._options = options || {};\n\n    //\n    this.id = synchronizerId;\n  }\n\n  /**\n   * \"Returns true if the synchronizer is disabled.\"\n   * @returns A boolean value.\n   */\n  public isDisabled(): boolean {\n    return !this._enabled || !this._hasSourceElements();\n  }\n\n  /**\n   * Sets the options for the viewport id.  This can be used to\n   * provide configuration on a viewport basis for things like offsets\n   * to the general synchronization, or turn on/off synchronization of certain\n   * attributes.\n   */\n  public setOptions(\n    viewportId: string,\n    options: Record<string, unknown> = {}\n  ): void {\n    this._viewportOptions[viewportId] = options;\n  }\n\n  /** Gets the options for the given viewport id */\n  public getOptions(viewportId: string): Record<string, unknown> | undefined {\n    return this._viewportOptions[viewportId];\n  }\n\n  /**\n   * Add a viewport to the list of targets and sources both.\n   * @param viewportInfo - The viewportId and its renderingEngineId to add to the list of targets and sources.\n   */\n  public add(viewportInfo: Types.IViewportId): void {\n    this.addTarget(viewportInfo);\n    this.addSource(viewportInfo);\n  }\n\n  /**\n   * Add a viewport to the list of sources (source ONLY)\n   * @param viewportInfo - The viewportId and its renderingEngineId to add to the list of targets and sources.\n   */\n  public addSource(viewportInfo: Types.IViewportId): void {\n    if (_containsViewport(this._sourceViewports, viewportInfo)) {\n      return;\n    }\n\n    const { renderingEngineId, viewportId } = viewportInfo;\n\n    const { element } =\n      getRenderingEngine(renderingEngineId).getViewport(viewportId);\n\n    // @ts-ignore\n    element.addEventListener(this._eventName, this._onEvent.bind(this));\n    this._updateDisableHandlers();\n\n    this._sourceViewports.push(viewportInfo);\n  }\n\n  /**\n   * Add a viewport to the list of viewports that will get the eventHandler\n   * executed when the event is fired on the source viewport.\n   * @param viewportInfo - The viewportId and its renderingEngineId to add to the list of targets and sources.\n   */\n  public addTarget(viewportInfo: Types.IViewportId): void {\n    if (_containsViewport(this._targetViewports, viewportInfo)) {\n      return;\n    }\n\n    this._targetViewports.push(viewportInfo);\n    this._updateDisableHandlers();\n  }\n\n  /**\n   * Get the list of source viewports (as {viewportId, renderingEngineId} objects)\n   * @returns An array of {viewportId, renderingEngineId} objects.\n   */\n  public getSourceViewports(): Array<Types.IViewportId> {\n    return this._sourceViewports;\n  }\n\n  /**\n   * Get the list of target viewports (as {viewportId, renderingEngineId} objects)\n   * @returns An array of {viewportId, renderingEngineId} objects.\n   */\n  public getTargetViewports(): Array<Types.IViewportId> {\n    return this._targetViewports;\n  }\n\n  public destroy(): void {\n    this._sourceViewports.forEach((s) => this.removeSource(s));\n    this._targetViewports.forEach((t) => this.removeTarget(t));\n  }\n\n  /**\n   * Remove the viewport from the list of targets and sources\n   * @param viewportInfo - The viewport info including viewportId and renderingEngineId.\n   */\n  public remove(viewportInfo: Types.IViewportId): void {\n    this.removeTarget(viewportInfo);\n    this.removeSource(viewportInfo);\n  }\n\n  /**\n   * Remove the viewport from the list of source viewports\n   * @param viewportInfo - The viewport info including viewportId and renderingEngineId.\n   */\n  public removeSource(viewportInfo: Types.IViewportId): void {\n    const index = _getViewportIndex(this._sourceViewports, viewportInfo);\n\n    if (index === -1) {\n      return;\n    }\n\n    const element = _getViewportElement(viewportInfo);\n\n    this._sourceViewports.splice(index, 1);\n    // @ts-ignore\n    element.removeEventListener(this._eventName, this._eventHandler);\n    this._updateDisableHandlers();\n  }\n\n  /**\n   * Remove the viewport from the list of viewports that are currently targeted by\n   * this handler\n   * @param viewportInfo - The viewport info including viewportId and renderingEngineId.\n   *\n   */\n  public removeTarget(viewportInfo: Types.IViewportId): void {\n    const index = _getViewportIndex(this._targetViewports, viewportInfo);\n\n    if (index === -1) {\n      return;\n    }\n\n    this._targetViewports.splice(index, 1);\n    this._updateDisableHandlers();\n  }\n\n  public hasSourceViewport(\n    renderingEngineId: string,\n    viewportId: string\n  ): boolean {\n    return _containsViewport(this._sourceViewports, {\n      renderingEngineId,\n      viewportId,\n    });\n  }\n\n  public hasTargetViewport(\n    renderingEngineId: string,\n    viewportId: string\n  ): boolean {\n    return _containsViewport(this._targetViewports, {\n      renderingEngineId,\n      viewportId,\n    });\n  }\n\n  private fireEvent(sourceViewport: Types.IViewportId, sourceEvent: any): void {\n    if (this.isDisabled() || this._ignoreFiredEvents) {\n      return;\n    }\n\n    this._ignoreFiredEvents = true;\n    try {\n      for (let i = 0; i < this._targetViewports.length; i++) {\n        const targetViewport = this._targetViewports[i];\n        const targetIsSource =\n          sourceViewport.viewportId === targetViewport.viewportId;\n\n        if (targetIsSource) {\n          continue;\n        }\n\n        this._eventHandler(\n          this,\n          sourceViewport,\n          targetViewport,\n          sourceEvent,\n          this._options\n        );\n      }\n    } catch (ex) {\n      console.warn(`Synchronizer, for: ${this._eventName}`, ex);\n    } finally {\n      this._ignoreFiredEvents = false;\n    }\n  }\n\n  private _onEvent = (evt: any): void => {\n    if (this._ignoreFiredEvents === true) {\n      return;\n    }\n\n    // If no target viewports, then return immediately, this is useful\n    // when switching between layouts, when previous layout has disabled\n    // its viewports, and the new layout has not yet enabled them.\n    // Right now we don't \"delete\" the synchronizer if all source and targets\n    // are removed, but we may want to do that in the future.\n    if (!this._targetViewports.length) {\n      return;\n    }\n\n    const enabledElement = getEnabledElement(evt.currentTarget);\n\n    if (!enabledElement) {\n      return;\n    }\n\n    const { renderingEngineId, viewportId } = enabledElement;\n\n    // If the viewport has been removed from the synchronizer before the event is\n    // fired, then return immediately.\n    if (!this._sourceViewports.find((s) => s.viewportId === viewportId)) {\n      return;\n    }\n\n    this.fireEvent(\n      {\n        renderingEngineId,\n        viewportId,\n      },\n      evt\n    );\n  };\n\n  private _hasSourceElements(): boolean {\n    return this._sourceViewports.length !== 0;\n  }\n\n  private _updateDisableHandlers(): void {\n    const viewports = _getUniqueViewports(\n      this._sourceViewports,\n      this._targetViewports\n    );\n    const _remove = this.remove;\n    const disableHandler = (elementDisabledEvent) => {\n      _remove(elementDisabledEvent.detail.element);\n    };\n\n    viewports.forEach(function (vUid) {\n      const renderingEngine = getRenderingEngine(\n        vUid.renderingEngineId\n      ).getViewport(vUid.viewportId);\n\n      if (!renderingEngine) {\n        return;\n      }\n\n      const { element } = renderingEngine;\n\n      element.removeEventListener(\n        Enums.Events.ELEMENT_DISABLED,\n        disableHandler\n      );\n      element.addEventListener(Enums.Events.ELEMENT_DISABLED, disableHandler);\n    });\n  }\n}\n\nfunction _getUniqueViewports(\n  vp1: Array<Types.IViewportId>,\n  vp2: Array<Types.IViewportId>\n): Array<Types.IViewportId> {\n  const unique = [];\n\n  const vps = vp1.concat(vp2);\n\n  for (let i = 0; i < vps.length; i++) {\n    const vp = vps[i];\n    if (\n      !unique.some(\n        (u) =>\n          vp.renderingEngineId === u.renderingEngineId &&\n          vp.viewportId === u.viewportId\n      )\n    ) {\n      unique.push(vp);\n    }\n  }\n\n  return unique;\n}\n\nfunction _getViewportIndex(\n  arr: Array<Types.IViewportId>,\n  vp: Types.IViewportId\n): number {\n  return arr.findIndex(\n    (ar) =>\n      vp.renderingEngineId === ar.renderingEngineId &&\n      vp.viewportId === ar.viewportId\n  );\n}\n\nfunction _containsViewport(\n  arr: Array<Types.IViewportId>,\n  vp: Types.IViewportId\n) {\n  return arr.some(\n    (ar) =>\n      ar.renderingEngineId === vp.renderingEngineId &&\n      ar.viewportId === vp.viewportId\n  );\n}\n\nfunction _getViewportElement(vp: Types.IViewportId): HTMLDivElement {\n  const renderingEngine = getRenderingEngine(vp.renderingEngineId);\n  if (!renderingEngine) {\n    throw new Error(`No RenderingEngine for Id: ${vp.renderingEngineId}`);\n  }\n\n  return renderingEngine.getViewport(vp.viewportId).element;\n}\n\nexport default Synchronizer;\n","import { state } from '../index';\nimport Synchronizer from './Synchronizer';\nimport { ISynchronizerEventHandler } from '../../types';\n\n/**\n * Create a new synchronizer instance from Synchronizer class\n * @param synchronizerId - The id of the synchronizer.\n * @param eventName - The name of the event that will be emitted by the\n * synchronizer.\n * @param eventHandler - The event handler that will be\n * called when the event is emitted.\n * @param options - Options for the synchronizer.\n * @returns A reference to the synchronizer.\n */\nfunction createSynchronizer(\n  synchronizerId: string,\n  eventName: string,\n  eventHandler: ISynchronizerEventHandler,\n  options?: any\n): Synchronizer {\n  const synchronizerWithSameIdExists = state.synchronizers.some(\n    (sync) => sync.id === synchronizerId\n  );\n\n  if (synchronizerWithSameIdExists) {\n    throw new Error(`Synchronizer with id '${synchronizerId}' already exists.`);\n  }\n\n  // Create\n  const synchronizer = new Synchronizer(\n    synchronizerId,\n    eventName,\n    eventHandler,\n    options\n  );\n\n  // Update state\n  state.synchronizers.push(synchronizer);\n\n  // Return reference\n  return synchronizer;\n}\n\nexport default createSynchronizer;\n","import { state } from '../index';\n\n/**\n * \"Destroy all synchronizers.\"\n */\nfunction destroy(): void {\n  while (state.synchronizers.length > 0) {\n    const synchronizer = state.synchronizers.pop();\n\n    synchronizer.destroy();\n  }\n}\n\nexport default destroy;\n","import { state } from '../index';\nimport Synchronizer from './Synchronizer';\n\n/**\n * Get the synchronizer with the given id from the state.\n * @param synchronizerId - The id of the synchronizer to be retrieved.\n * @returns A synchronizer object.\n */\nfunction getSynchronizer(synchronizerId: string): Synchronizer | void {\n  return state.synchronizers.find((s) => s.id === synchronizerId);\n}\n\nexport default getSynchronizer;\n","import { state } from '../index';\nimport Synchronizer from './Synchronizer';\n\n/**\n * Return the array of synchronizers\n * @returns An array of synchronizers.\n */\nfunction getAllSynchronizers(): Array<Synchronizer> {\n  return state.synchronizers;\n}\n\nexport default getAllSynchronizers;\n","import { state } from '../index';\n\n// Synchronizers are a bit more tenacious. We need to make sure we remove\n// any attached events\n// We should probably just have a destroySynchronizer call\n// then use getByX to allow versatility in how we can call destroy\n\n/**\n * Destroy a synchronizer by its ID.\n * @param synchronizerId - The id of the synchronizer to destroy.\n */\nfunction destroySynchronizer(synchronizerId: string): void {\n  const synchronizerIndex = state.synchronizers.findIndex(\n    (sync) => sync.id === synchronizerId\n  );\n\n  if (synchronizerIndex > -1) {\n    const synchronizer = state.synchronizers[synchronizerIndex];\n\n    synchronizer.destroy();\n    state.synchronizers.splice(synchronizerIndex, 1);\n  }\n}\n\nexport default destroySynchronizer;\n","const DEFINED_CURSORS = Symbol('DefinedCursors');\nconst STANDARD_CURSORS = new Set([\n  'alias',\n  'all-scroll',\n  'auto',\n  'cell',\n  'col-resize',\n  'context-menu',\n  'copy',\n  'crosshair',\n  'default',\n  'e-resize',\n  'ew-resize',\n  'grab',\n  'grabbing',\n  'help',\n  'move',\n  'ne-resize',\n  'nesw-resize',\n  'no-drop',\n  'none',\n  'not-allowed',\n  'n-resize',\n  'ns-resize',\n  'nw-resize',\n  'nwse-resize',\n  'pointer',\n  'progress',\n  'row-resize',\n  'se-resize',\n  's-resize',\n  'sw-resize',\n  'text',\n  'vertical-text',\n  'wait',\n  'w-resize',\n  'zoom-in',\n  'zoom-out',\n]);\n\nexport default class MouseCursor {\n  private name: string;\n  private fallback: MouseCursor | undefined;\n\n  constructor(name: string, fallback?: MouseCursor | undefined) {\n    this.name = name + '';\n    this.fallback = fallback;\n  }\n\n  getName(): string {\n    return this.name + '';\n  }\n\n  addFallbackStyleProperty(style: string): string {\n    const { fallback } = this;\n    if (fallback instanceof MouseCursor) {\n      return `${style}, ${fallback.getStyleProperty()}`;\n    }\n    return style + '';\n  }\n\n  getStyleProperty(): string {\n    return this.addFallbackStyleProperty(this.name) + '';\n  }\n\n  static getDefinedCursor(name: string): MouseCursor | undefined {\n    const definedCursors = getDefinedCursors(\n      // @ts-ignore\n      MouseCursor as Record<symbol, Map<string, MouseCursor>>,\n      DEFINED_CURSORS\n    );\n    let mouseCursor = definedCursors.get(name);\n    if (mouseCursor instanceof MouseCursor) {\n      return mouseCursor;\n    }\n    if (STANDARD_CURSORS.has(name)) {\n      mouseCursor = new MouseCursor(name);\n      definedCursors.set(name, mouseCursor);\n      return mouseCursor;\n    }\n  }\n\n  static setDefinedCursor(name: string, cursor: MouseCursor): boolean {\n    if (cursor instanceof MouseCursor) {\n      const definedCursors = getDefinedCursors(\n        // @ts-ignore\n        MouseCursor as Record<symbol, Map<string, MouseCursor>>,\n        DEFINED_CURSORS\n      );\n      definedCursors.set(name, cursor);\n      return true;\n    }\n    return false;\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction getDefinedCursors(\n  context: Record<symbol, Map<string, MouseCursor>>,\n  symbol: symbol\n): Map<string, MouseCursor> {\n  let definedCursors = context[symbol];\n  if (!(definedCursors instanceof Map)) {\n    definedCursors = new Map();\n    Object.defineProperty(context, symbol, { value: definedCursors });\n  }\n  return definedCursors;\n}\n\nconst standardCursorNames = STANDARD_CURSORS.values();\nexport { standardCursorNames };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","/**\n * AnnotationStyleStates - This enum defines the 4 possible states available for\n *  a Annotation instance.\n *\n * Default:\n *   The default state for the annotation instance\n * Highlighted:\n *   The annotation should be rendered in \"highlighted\" mode in response to\n *   direct user interaction;\n * Selected:\n *   The annotation has been selected by the user;\n * Locked:\n *   The annotation has been locked;\n */\nenum AnnotationStyleStates {\n  Default = '',\n  Highlighted = 'Highlighted',\n  Selected = 'Selected',\n  Locked = 'Locked',\n}\n\nexport default AnnotationStyleStates;\n","import { utilities } from '@cornerstonejs/core';\nimport MouseCursor from './MouseCursor';\n\nconst DEFAULT_NAME = 'image-cursor';\n\nexport default class ImageMouseCursor extends MouseCursor {\n  private url: string;\n  private x: number;\n  private y: number;\n\n  constructor(\n    url: string,\n    x?: number,\n    y?: number,\n    name?: string | undefined,\n    fallback?: MouseCursor | undefined\n  ) {\n    super(\n      name || ImageMouseCursor.getUniqueInstanceName(DEFAULT_NAME),\n      fallback\n    );\n    this.url = url;\n    this.x = Number(x) || 0;\n    this.y = Number(y) || 0;\n  }\n\n  getStyleProperty(): string {\n    const { url, x, y } = this;\n    let style = `url('${url}')`;\n    if (x >= 0 && y >= 0 && (x > 0 || y > 0)) {\n      style += ` ${x} ${y}`;\n    }\n    return this.addFallbackStyleProperty(style);\n  }\n\n  static getUniqueInstanceName(prefix: string): string {\n    return `${prefix}-${utilities.getRuntimeId(ImageMouseCursor)}`;\n  }\n}\n","import { SVGCursorDescriptor } from '../types';\n\n/*\n * Definitions\n */\n\nconst BASE: SVGCursorDescriptor = {\n  iconContent: '',\n  iconSize: 16,\n  viewBox: {\n    x: 16,\n    y: 16,\n  },\n  mousePoint: {\n    x: 8,\n    y: 8,\n  },\n  mousePointerGroupString: `\n    <path stroke=\"{{color}}\" d=\"M8 16L8 0\"></path>\n    <path stroke=\"{{color}}\" d=\"M16 8L0 8\"></path>\n  `,\n};\n\nconst SEGMENTATION_CURSOR_BOUNDARIES = {\n  x: 127,\n  y: 60,\n};\n\nconst MINUS_RECT = `\n<rect fill=\"{{color}}\" x=\"80.19\" y=\"25.03\" width=\"47.14\" height=\"15.85\"/>\n`;\n\nconst PLUS_RECT = `\n<rect fill=\"{{color}}\" x=\"80.19\" y=\"25.03\" width=\"47.14\" height=\"15.85\"/>\n<rect fill=\"{{color}}\" x=\"95.84\" y=\"9.38\" width=\"15.85\" height=\"47.14\"/>\n`;\n\nconst SCISSOR_ICON = `<path fill=\"{{color}}\" d=\"M82.89,10a12.09,12.09,0,0,0-16.8-2.5l-27.5,20.4-8.5-6.3a2.93,2.93,0,0,1-1.1-3,14.66,14.66,0,0,0,.1-6.6,14.08,14.08,0,1,0-6.5,15.2,2.87,2.87,0,0,1,3.2.2l8.2,6.1-8.2,6.1a2.87,2.87,0,0,1-3.2.2,14.16,14.16,0,1,0,6.7,14.4,14,14,0,0,0-.3-5.8,2.93,2.93,0,0,1,1.1-3l8.5-6.3,27.5,20.4A11.91,11.91,0,0,0,82.89,57l-31.7-23.5ZM15.29,21a5.9,5.9,0,1,1,5.9-5.9A5.91,5.91,0,0,1,15.29,21Zm0,36.8a5.9,5.9,0,1,1,5.9-5.9A5.91,5.91,0,0,1,15.29,57.77Zm28.3-21.5a2.8,2.8,0,1,1,2.8-2.8A2.8,2.8,0,0,1,43.59,36.27Z\" transform=\"translate(-1.17 -0.96)\"/>`;\nconst RECTANGLE_ICON = `<path fill=\"{{color}}\" d=\"M8.86,2.25V66.08H72.69V2.25H8.86ZM65.28,58.67h-49v-49h49v49Z\" transform=\"translate(-8.86 -2.25)\"/>`;\nconst CIRCLE_ICON = `<path fill=\"{{color}}\" d=\"M40.77,2.25A31.92,31.92,0,1,0,72.69,34.16,31.92,31.92,0,0,0,40.77,2.25Zm0,57.63A25.71,25.71,0,1,1,66.48,34.16,25.71,25.71,0,0,1,40.77,59.87Z\" transform=\"translate(-8.86 -2.25)\"/>`;\n\nconst CursorSVG: Record<string, SVGCursorDescriptor> = {\n  Angle: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1203 544q0 13-10 23l-393 393 393 393q10 10 10 23t-10 23l-50\n    50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23\n    10l50 50q10 10 10 23z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  ArrowAnnotate: extend(BASE, {\n    iconContent: `<g id=\"arrowAnnotate-group\" fill=\"none\" stroke-width=\"1\" stroke=\"{{color}}\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <path id=\"arrowAnnotate-arrow\" d=\"M23,7 l-15,15 M7,17 l0,6 6,0\" stroke-width=\"2\" />\n  </g>`,\n    viewBox: {\n      x: 24,\n      y: 24,\n    },\n  }),\n  Bidirectional: extend(BASE, {\n    iconContent: `<g fill=\"{{color}}\" stroke-width=\"3\" stroke=\"{{color}}\">\n    <path d=\"M27.63 3.21L3.12 28.81\"></path>\n    <path d=\"M27.63 15.75L15.27 4.43\"></path>\n    <path d=\"M16.5 4.28C16.5 4.96 15.95 5.51 15.27 5.51C14.59 5.51 14.03 4.96 14.03 4.28C14.03 3.59 14.59 3.04 15.27 3.04C15.95 3.04 16.5 3.59 16.5 4.28Z\" ></path>\n    <path d=\"M28.87 3.19C28.87 3.87 28.31 4.43 27.63 4.43C26.95 4.43 26.4 3.87 26.4 3.19C26.4 2.51 26.95 1.95 27.63 1.95C28.31 1.95 28.87 2.51 28.87 3.19Z\"></path>\n    <path d=\"M28.87 15.75C28.87 16.43 28.31 16.99 27.63 16.99C26.95 16.99 26.4 16.43 26.4 15.75C26.4 15.07 26.95 14.51 27.63 14.51C28.31 14.51 28.87 15.07 28.87 15.75Z\"></path>\n    <path d=\"M4.73 28.44C4.73 29.12 4.17 29.68 3.49 29.68C2.81 29.68 2.25 29.12 2.25 28.44C2.25 27.76 2.81 27.2 3.49 27.2C4.17 27.2 4.73 27.76 4.73 28.44Z\"></path>\n  </g>`,\n    viewBox: {\n      x: 48,\n      y: 48,\n    },\n  }),\n  CobbAngle: extend(BASE, {\n    iconContent: `<g stroke=\"{{color}}\" stroke-width=\"3\">\n    <path d=\"M28.59 2.34L3.82 12.32\"></path>\n    <path d=\"M28.59 29.66L3.82 19.68\"></path>\n    <path stroke-dasharray=\"2\" fill-opacity=\"0\" d=\"M12.37\n      23.06C12.67 22.36 12.85 21.93 12.92 21.76C14.6 17.8 14.68 13.35 13.15\n      9.33C13.11 9.24 13.02 9 12.88 8.63\">\n    </path>\n  </g>`,\n    viewBox: {\n      x: 32,\n      y: 32,\n    },\n  }),\n  CircleROI: extend(BASE, {\n    iconContent: `<circle stroke=\"{{color}}\" fill=\"none\" stroke-width=\"3\" cx=\"16\" cy=\"16\" r=\"14\" />`,\n    viewBox: {\n      x: 32,\n      y: 32,\n    },\n  }),\n  EllipticalROI: extend(BASE, {\n    iconContent: `<path stroke=\"{{color}}\" fill=\"none\" stroke-width=\"3\" d=\"M30.74 15.76C30.74 20.99 24.14 25.23 16\n    25.23C7.86 25.23 1.26 20.99 1.26 15.76C1.26 10.54 7.86 6.3 16 6.3C24.14\n    6.3 30.74 10.54 30.74 15.76Z\" />`,\n    viewBox: {\n      x: 32,\n      y: 32,\n    },\n  }),\n  FreehandROI: extend(BASE, {\n    iconContent: `<g fill=\"{{color}}\" stroke=\"{{color}}\" stroke-width=\"2\">\n    <ellipse ry=\"1\" rx=\"1\" id=\"svg_3\" cy=\"4.240343\" cx=\"14.306499\"/>\n    <line id=\"svg_4\" y2=\"3.58462\" x2=\"12.242186\" y1=\"3.997482\" x1=\"13.432202\"/>\n    <line id=\"svg_5\" y2=\"3.268901\" x2=\"10.857882\" y1=\"3.608906\" x1=\"12.387902\"/>\n    <line id=\"svg_6\" y2=\"3.147471\" x2=\"9.740724\" y1=\"3.293187\" x1=\"10.955026\"/>\n    <line id=\"svg_7\" y2=\"3.147471\" x2=\"8.089274\" y1=\"3.196043\" x1=\"9.983585\"/>\n    <line id=\"svg_8\" y2=\"3.268901\" x2=\"6.874972\" y1=\"3.123185\" x1=\"8.307848\"/>\n    <line id=\"svg_9\" y2=\"3.657478\" x2=\"5.587812\" y1=\"3.220329\" x1=\"7.020688\"/>\n    <line id=\"svg_10\" y2=\"4.046054\" x2=\"4.737801\" y1=\"3.560334\" x1=\"5.854959\"/>\n    <line id=\"svg_11\" y2=\"4.337487\" x2=\"4.300652\" y1=\"3.997482\" x1=\"4.834945\"/>\n    <line id=\"svg_12\" y2=\"4.726063\" x2=\"3.88779\" y1=\"4.191771\" x1=\"4.470655\"/>\n    <line id=\"svg_15\" y2=\"5.3575\" x2=\"3.377783\" y1=\"4.604633\" x1=\"3.960648\"/>\n    <line id=\"svg_16\" y2=\"6.183226\" x2=\"2.916348\" y1=\"5.138926\" x1=\"3.547785\"/>\n    <line id=\"svg_17\" y2=\"6.960379\" x2=\"2.770632\" y1=\"5.867507\" x1=\"3.037779\"/>\n    <line id=\"svg_18\" y2=\"7.713246\" x2=\"2.673488\" y1=\"6.741804\" x1=\"2.819204\"/>\n    <line id=\"svg_19\" y2=\"8.684687\" x2=\"2.697774\" y1=\"7.616102\" x1=\"2.673488\"/>\n    <line id=\"svg_20\" y2=\"9.753273\" x2=\"2.892062\" y1=\"8.611829\" x1=\"2.697774\"/>\n    <line id=\"svg_21\" y2=\"10.724714\" x2=\"3.134923\" y1=\"9.534698\" x1=\"2.84349\"/>\n    <line id=\"svg_23\" y2=\"11.647583\" x2=\"3.596357\" y1=\"10.578998\" x1=\"3.086351\"/>\n    <line id=\"svg_25\" y2=\"12.521881\" x2=\"4.276366\" y1=\"11.501867\" x1=\"3.499213\"/>\n    <line id=\"svg_26\" y2=\"13.930471\" x2=\"5.830673\" y1=\"12.376165\" x1=\"4.13065\"/>\n    <line id=\"svg_28\" y2=\"14.707624\" x2=\"7.263549\" y1=\"13.881899\" x1=\"5.733528\"/>\n    <line id=\"svg_29\" y2=\"15.339061\" x2=\"8.963571\" y1=\"14.61048\" x1=\"7.06926\"/>\n    <line id=\"svg_30\" y2=\"15.581921\" x2=\"10.882168\" y1=\"15.314775\" x1=\"8.817855\"/>\n    <line id=\"svg_31\" y2=\"15.460491\" x2=\"12.023612\" y1=\"15.581921\" x1=\"10.785024\"/>\n    <line id=\"svg_33\" y2=\"15.120487\" x2=\"13.092197\" y1=\"15.484777\" x1=\"11.877895\"/>\n    <line id=\"svg_34\" y2=\"14.586194\" x2=\"13.86935\" y1=\"15.217631\" x1=\"12.897909\"/>\n    <line id=\"svg_35\" y2=\"13.833327\" x2=\"14.597931\" y1=\"14.756196\" x1=\"13.699348\"/>\n    <line id=\"svg_37\" y2=\"12.716169\" x2=\"15.180796\" y1=\"13.881899\" x1=\"14.549359\"/>\n    <line id=\"svg_39\" y2=\"11.429009\" x2=\"15.520801\" y1=\"12.813313\" x1=\"15.15651\"/>\n    <ellipse ry=\"1\" rx=\"1\" id=\"svg_40\" cy=\"10.967574\" cx=\"15.520801\"/>\n  </g>`,\n    viewBox: {\n      x: 18,\n      y: 18,\n    },\n  }),\n  FreehandROISculptor: extend(BASE, {\n    iconContent: `<g id=\"icon-freehand-sculpt\" fill=\"none\" stroke-width=\"1.5\" stroke=\"{{color}}\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <line id=\"svg_1\" y2=\"2.559367\" x2=\"10.184807\" y1=\"4.467781\" x1=\"8.81711\"/>\n    <line id=\"svg_4\" y2=\"1.493836\" x2=\"11.727442\" y1=\"2.766112\" x1=\"10.089386\"/>\n    <line id=\"svg_7\" y2=\"1.080346\" x2=\"13.047428\" y1=\"1.748291\" x1=\"11.345759\"/>\n    <line id=\"svg_8\" y2=\"1.000829\" x2=\"14.351511\" y1=\"1.112153\" x1=\"12.77707\"/>\n    <line id=\"svg_9\" y2=\"1.350705\" x2=\"15.242104\" y1=\"0.905408\" x1=\"13.969828\"/>\n    <line id=\"svg_10\" y2=\"2.098167\" x2=\"15.862339\" y1=\"1.14396\" x1=\"14.955842\"/>\n    <line id=\"svg_11\" y2=\"3.195505\" x2=\"16.41896\" y1=\"1.939133\" x1=\"15.766918\"/>\n    <line id=\"svg_12\" y2=\"4.292843\" x2=\"16.530284\" y1=\"2.925147\" x1=\"16.387153\"/>\n    <line id=\"svg_16\" y2=\"5.644637\" x2=\"16.196311\" y1=\"3.831643\" x1=\"16.593898\"/>\n    <line id=\"svg_18\" y2=\"7.266789\" x2=\"15.623787\" y1=\"5.19934\" x1=\"16.275829\"/>\n    <line id=\"svg_19\" y2=\"10.813258\" x2=\"14.526449\" y1=\"6.726071\" x1=\"15.766918\"/>\n    <line id=\"svg_20\" y2=\"5.056209\" x2=\"8.085552\" y1=\"4.181519\" x1=\"8.976145\"/>\n    <line id=\"svg_23\" y2=\"5.326568\" x2=\"7.481221\" y1=\"4.78585\" x1=\"8.403621\"/>\n    <line id=\"svg_24\" y2=\"5.565119\" x2=\"6.749662\" y1=\"5.294761\" x1=\"7.624352\"/>\n    <line id=\"svg_25\" y2=\"5.994512\" x2=\"5.429675\" y1=\"5.533312\" x1=\"6.956407\"/>\n    <line id=\"svg_27\" y2=\"6.551133\" x2=\"4.284627\" y1=\"5.962706\" x1=\"5.572807\"/>\n    <line id=\"svg_28\" y2=\"7.584858\" x2=\"3.044158\" y1=\"6.392099\" x1=\"4.427758\"/>\n    <line id=\"svg_29\" y2=\"8.84123\" x2=\"2.185372\" y1=\"7.489437\" x1=\"3.219096\"/>\n    <line id=\"svg_31\" y2=\"10.606513\" x2=\"1.644654\" y1=\"8.602678\" x1=\"2.280792\"/>\n    <line id=\"svg_32\" y2=\"13.214679\" x2=\"1.48562\" y1=\"10.352058\" x1=\"1.724171\"/>\n    <line id=\"svg_33\" y2=\"14.375631\" x2=\"1.676461\" y1=\"12.992031\" x1=\"1.453813\"/>\n    <line id=\"svg_34\" y2=\"15.298031\" x2=\"2.264889\" y1=\"14.152983\" x1=\"1.517427\"/>\n    <line id=\"svg_35\" y2=\"16.172721\" x2=\"3.521261\" y1=\"14.948155\" x1=\"1.915013\"/>\n    <line id=\"svg_36\" y2=\"16.824762\" x2=\"5.207027\" y1=\"15.997783\" x1=\"3.28271\"/>\n    <line id=\"svg_38\" y2=\"17.063314\" x2=\"7.035924\" y1=\"16.745245\" x1=\"4.968475\"/>\n    <line id=\"svg_39\" y2=\"16.888376\" x2=\"9.278311\" y1=\"17.047411\" x1=\"6.733758\"/>\n    <line id=\"svg_40\" y2=\"16.284045\" x2=\"10.661911\" y1=\"16.983797\" x1=\"8.992048\"/>\n    <line id=\"svg_41\" y2=\"15.313934\" x2=\"11.647925\" y1=\"16.395369\" x1=\"10.455166\"/>\n    <line id=\"svg_44\" y2=\"13.898527\" x2=\"12.82478\" y1=\"15.425259\" x1=\"11.504794\"/>\n    <line id=\"svg_45\" y2=\"12.037824\" x2=\"14.144766\" y1=\"14.312017\" x1=\"12.522614\"/>\n    <line id=\"svg_47\" y2=\"10.59061\" x2=\"14.605966\" y1=\"12.228665\" x1=\"13.953925\"/>\n    <ellipse ry=\"1\" rx=\"1\" id=\"svg_48\" cy=\"3.982726\" cx=\"13.460918\"/>\n  </g>`,\n    viewBox: {\n      x: 18,\n      y: 18,\n    },\n  }),\n  Length: extend(BASE, {\n    iconContent: `<g id=\"length-group\" fill=\"none\" stroke-width=\"1\" stroke=\"{{color}}\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <path id=\"length-dashes\" d=\"m22.5,6 -16.5,16.5\" stroke-width=\"3\" stroke-dasharray=\"0.6666,5\" />\n  </g>`,\n    viewBox: {\n      x: 24,\n      y: 24,\n    },\n  }),\n  Probe: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1152 896q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75\n    75 181zm-256-544q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73 273-73\n    198-198 73-273-73-273-198-198-273-73zm768 544q0 209-103 385.5t-279.5\n    279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5\n    385.5-103 385.5 103 279.5 279.5 103 385.5z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  RectangleROI: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1312 256h-832q-66 0-113 47t-47 113v832q0 66 47\n    113t113 47h832q66 0 113-47t47-113v-832q0-66-47-113t-113-47zm288 160v832q0\n    119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119\n    84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  TextMarker: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M789 559l-170 450q33 0 136.5 2t160.5 2q19 0\n    57-2-87-253-184-452zm-725 1105l2-79q23-7 56-12.5t57-10.5 49.5-14.5 44.5-29\n    31-50.5l237-616 280-724h128q8 14 11 21l205 480q33 78 106 257.5t114 274.5q15\n    34 58 144.5t72 168.5q20 45 35 57 19 15 88 29.5t84 20.5q6 38 6 57 0 5-.5\n    13.5t-.5 12.5q-63 0-190-8t-191-8q-76 0-215 7t-178 8q0-43 4-78l131-28q1 0\n    12.5-2.5t15.5-3.5 14.5-4.5 15-6.5 11-8 9-11\n    2.5-14q0-16-31-96.5t-72-177.5-42-100l-450-2q-26 58-76.5 195.5t-50.5 162.5q0\n    22 14 37.5t43.5 24.5 48.5 13.5 57 8.5 41 4q1 19 1 58 0 9-2 27-58\n    0-174.5-10t-174.5-10q-8 0-26.5 4t-21.5 4q-80 14-188 14z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  Crosshairs: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1325 1024h-109q-26 0-45-19t-19-45v-128q0-26\n    19-45t45-19h109q-32-108-112.5-188.5t-188.5-112.5v109q0 26-19 45t-45\n    19h-128q-26 0-45-19t-19-45v-109q-108 32-188.5 112.5t-112.5 188.5h109q26\n    0 45 19t19 45v128q0 26-19 45t-45 19h-109q32 108 112.5 188.5t188.5\n    112.5v-109q0-26 19-45t45-19h128q26 0 45 19t19 45v109q108-32\n    188.5-112.5t112.5-188.5zm339-192v128q0 26-19 45t-45 19h-143q-37 161-154.5\n    278.5t-278.5 154.5v143q0 26-19 45t-45 19h-128q-26\n    0-45-19t-19-45v-143q-161-37-278.5-154.5t-154.5-278.5h-143q-26\n    0-45-19t-19-45v-128q0-26 19-45t45-19h143q37-161\n    154.5-278.5t278.5-154.5v-143q0-26 19-45t45-19h128q26 0 45 19t19 45v143q161\n    37 278.5 154.5t154.5 278.5h143q26 0 45 19t19 45z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  Eraser: extend(BASE, {\n    iconContent: `<path transform=\"translate(0,1792) scale(1,-1)\" fill=\"{{color}}\" d=\"M960 1408l336-384h-768l-336 384h768zm1013-1077q15\n    34 9.5 71.5t-30.5 65.5l-896 1024q-38 44-96 44h-768q-38\n    0-69.5-20.5t-47.5-54.5q-15-34-9.5-71.5t30.5-65.5l896-1024q38-44 96-44h768q38\n    0 69.5 20.5t47.5 54.5z\" />`,\n    viewBox: {\n      x: 2048,\n      y: 1792,\n    },\n  }),\n  Magnify: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M508.5 481.6l-129-129c-2.3-2.3-5.3-3.5-8.5-3.5h-10.3C395\n    312 416 262.5 416 208 416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c54.5\n    0 104-21 141.1-55.2V371c0 3.2 1.3 6.2 3.5 8.5l129 129c4.7 4.7 12.3 4.7 17\n    0l9.9-9.9c4.7-4.7 4.7-12.3 0-17zM208 384c-97.3 0-176-78.7-176-176S110.7 32 208\n    32s176 78.7 176 176-78.7 176-176 176z\" />`,\n    viewBox: {\n      x: 512,\n      y: 512,\n    },\n  }),\n  Pan: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1411 541l-355 355 355 355 144-144q29-31 70-14 39 17\n    39 59v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39 14-69l144-144-355-355-355\n    355 144 144q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59\n    39-17 69 14l144 144 355-355-355-355-144 144q-19 19-45 19-12\n    0-24-5-40-17-40-59v-448q0-26 19-45t45-19h448q42 0 59 40 17 39-14 69l-144\n    144 355 355 355-355-144-144q-31-30-14-69 17-40 59-40h448q26 0 45 19t19\n    45v448q0 42-39 59-13 5-25 5-26 0-45-19z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  Rotate: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1664 256v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39\n    14-69l138-138q-148-137-349-137-104 0-198.5 40.5t-163.5 109.5-109.5\n    163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5q119 0\n    225-52t179-147q7-10 23-12 15 0 25 9l137 138q9 8 9.5 20.5t-7.5 22.5q-109\n    132-264 204.5t-327 72.5q-156 0-298-61t-245-164-164-245-61-298 61-298\n    164-245 245-164 298-61q147 0 284.5 55.5t244.5 156.5l130-129q29-31 70-14\n    39 17 39 59z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  StackScroll: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M24 21v2c0 0.547-0.453 1-1 1h-22c-0.547\n    0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547 0 1 0.453 1 1zM24 13v2c0\n    0.547-0.453 1-1 1h-22c-0.547 0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547\n    0 1 0.453 1 1zM24 5v2c0 0.547-0.453 1-1 1h-22c-0.547\n    0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547 0 1 0.453 1 1z\" />`,\n    viewBox: {\n      x: 24,\n      y: 28,\n    },\n  }),\n  WindowLevelRegion: extend(BASE, {\n    iconContent: `<path fill=\"{{color}}\" d=\"M1664 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119\n    0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5\n    84.5t84.5 203.5z\" />`,\n    viewBox: {\n      x: 1792,\n      y: 1792,\n    },\n  }),\n  WindowLevel: extend(BASE, {\n    iconContent: `\n    <path fill=\"{{color}}\" d=\"M14.5,3.5 a1 1 0 0 1 -11,11 Z\" stroke=\"none\" opacity=\"0.8\" />\n    <circle cx=\"9\" cy=\"9\" r=\"8\" fill=\"none\" stroke-width=\"2\" stroke=\"{{color}}\" />`,\n    viewBox: {\n      x: 18,\n      y: 18,\n    },\n  }),\n  Zoom: extend(BASE, {\n    iconContent: `\n  <path fill=\"{{color}}\" d=\"M508.5 481.6l-129-129c-2.3-2.3-5.3-3.5-8.5-3.5h-10.3C395\n    312 416 262.5 416 208 416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c54.5\n    0 104-21 141.1-55.2V371c0 3.2 1.3 6.2 3.5 8.5l129 129c4.7 4.7 12.3 4.7 17\n    0l9.9-9.9c4.7-4.7 4.7-12.3 0-17zM208 384c-97.3 0-176-78.7-176-176S110.7 32 208\n    32s176 78.7 176 176-78.7 176-176 176z\" />\n  <path fill=\"{{color}}\" transform=\"scale(0.22,0.22) translate(1400,0)\" d=\"M1216\n    320q0 26-19 45t-45 19h-128v1024h128q26 0 45 19t19 45-19 45l-256 256q-19\n    19-45 19t-45-19l-256-256q-19-19-19-45t19-45 45-19h128v-1024h-128q-26\n    0-45-19t-19-45 19-45l256-256q19-19 45-19t45 19l256 256q19 19 19 45z\" />`,\n    viewBox: {\n      x: 640,\n      y: 512,\n    },\n  }),\n\n  /*\n   * Segmentation Cursors\n   */\n\n  SegmentationFreeHandEraseInside: extend(BASE, {\n    iconContent: `${SCISSOR_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  SegmentationFreeHandFillInside: extend(BASE, {\n    iconContent: `${SCISSOR_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  SegmentationFreeHandEraseOutside: extend(BASE, {\n    iconContent: `${SCISSOR_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  SegmentationFreeHandFillOutside: extend(BASE, {\n    iconContent: `${SCISSOR_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  SegmentationRectangleEraseInside: extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  // Default Rectangle Scissors\n  RectangleScissor: extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'RectangleScissor.FILL_INSIDE': extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'RectangleScissor.FILL_OUTSIDE': extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'RectangleScissor.ERASE_OUTSIDE': extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'RectangleScissor.ERASE_INSIDE': extend(BASE, {\n    iconContent: `${RECTANGLE_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  CircleScissor: extend(BASE, {\n    iconContent: `${CIRCLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'CircleScissor.FILL_INSIDE': extend(BASE, {\n    iconContent: `${CIRCLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'CircleScissor.ERASE_OUTSIDE': extend(BASE, {\n    iconContent: `${CIRCLE_ICON} ${MINUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n\n  'CircleScissor.FILL_OUTSIDE': extend(BASE, {\n    iconContent: `${CIRCLE_ICON} ${PLUS_RECT}`,\n    viewBox: SEGMENTATION_CURSOR_BOUNDARIES,\n  }),\n};\n\n/*\n * Utils\n */\n\nfunction extend(\n  base: SVGCursorDescriptor,\n  values: Record<string, unknown>\n): SVGCursorDescriptor {\n  return Object.assign(Object.create(base), values);\n}\n\n/**\n * Registers a cursor to the list, so that it will be used for the given `toolName`.\n * Overwrites the given cursor if it is already set.\n *\n * @param toolName - The name of the tool to assign a cursor to.\n * @param iconContent - The SVG icon content of the cursor.\n * @param viewBox - The viewBox of the cursor object.\n */\nfunction registerCursor(\n  toolName: string,\n  iconContent: string,\n  viewBox: { x: number; y: number }\n) {\n  CursorSVG[toolName] = extend(BASE, {\n    iconContent,\n    viewBox,\n  });\n}\n\nfunction getDefinedSVGCursorDescriptor(\n  name: string\n): SVGCursorDescriptor | undefined {\n  return CursorSVG[name];\n}\n\n/*\n * Exports\n */\nconst svgCursorNames = Object.keys(CursorSVG);\n\nexport {\n  getDefinedSVGCursorDescriptor,\n  registerCursor,\n  svgCursorNames,\n  CursorSVG,\n};\n","import {\n  StyleConfig,\n  ToolStyleConfig,\n  StyleSpecifier,\n  AnnotationStyle,\n} from '../../../types/AnnotationStyle';\n\n/**\n * This class handles the configuration of the tool style. You can use it to set\n * the style of a tool at various levels (annotation, viewport, toolGroup, global).\n *\n * The hierarchy of the configuration is as follows (each level falls back to the\n * next level if not specified):\n *\n * 1) Annotation-level styles (with annotationUID)\n *     2) Viewport-level tool styles\n *         - Per-tool: Length on the viewport with viewportId\n *         - Global: All tools on the viewport with viewportId\n *             3) ToolGroup tool styles\n *                 - Per-tool: Angle on toolGroupId in all viewports of the toolGroup\n *                 - Global: All tools in the toolGroupId for all viewports\n *                     4) Default level:\n *                         - Per-tool: Length styles\n *                         - Global: Opinionated styles by CornerstoneJS\n */\nclass ToolStyle {\n  config: StyleConfig;\n\n  constructor() {\n    const defaultConfig = {\n      color: 'rgb(255, 255, 0)',\n      colorHighlighted: 'rgb(0, 255, 0)',\n      colorSelected: 'rgb(0, 220, 0)',\n      colorLocked: 'rgb(255, 255, 0)',\n      lineWidth: '1',\n      lineDash: '',\n      shadow: true,\n      textBoxFontFamily: 'Helvetica Neue, Helvetica, Arial, sans-serif',\n      textBoxFontSize: '14px',\n      textBoxColor: 'rgb(255, 255, 0)',\n      textBoxColorHighlighted: 'rgb(0, 255, 0)',\n      textBoxColorSelected: 'rgb(0, 255, 0)',\n      textBoxColorLocked: 'rgb(255, 255, 0)',\n      textBoxBackground: '',\n      textBoxLinkLineWidth: '1',\n      textBoxLinkLineDash: '2,3',\n      textBoxShadow: true,\n    };\n\n    this._initializeConfig(defaultConfig);\n  }\n\n  /**\n   * It returns the annotation-specific tool styles for the annotation with the given UID\n   * @param annotationUID - The unique identifier of the annotation.\n   * @returns The annotation tool styles for the annotation with the given UID.\n   */\n  getAnnotationToolStyles(annotationUID: string): AnnotationStyle {\n    return this.config.annotations && this.config.annotations[annotationUID];\n  }\n\n  /**\n   * It returns the styles for a given viewport. It includes tool-specific and\n   * global styles (all tools in the viewport)\n   * @param viewportId - The id of the viewport\n   * @returns The viewport tool styles for the given viewport id.\n   */\n  getViewportToolStyles(viewportId: string): ToolStyleConfig {\n    return this.config.viewports && this.config.viewports[viewportId];\n  }\n\n  /**\n   * It returns the tool style for the given toolGroup. It includes tool-specific and\n   * global styles (all tools in the toolGroup)\n   * @param toolGroupId - The id of the toolGroup.\n   * @returns The tool styles for the tool group with the given id.\n   */\n  getToolGroupToolStyles(toolGroupId: string): ToolStyleConfig {\n    return this.config.toolGroups && this.config.toolGroups[toolGroupId];\n  }\n\n  /**\n   * It returns the default tool styles from the config file. It includes tool-specific and\n   * global styles (all tools in all tooLGroups)\n   * @returns The default tool styles.\n   */\n  getDefaultToolStyles(): ToolStyleConfig {\n    return this.config.default;\n  }\n\n  /**\n   * It takes an annotationUID and a style object and sets the styles at\n   * the annotationLevel (highest priority in the hierarchy). The styles is an\n   * object with key value pairs.\n   * @param annotationUID - string - The unique identifier for the annotation.\n   * @param styles - ToolStyles\n   */\n  setAnnotationStyles(annotationUID: string, styles: AnnotationStyle) {\n    let annotationSpecificStyles = this.config.annotations;\n\n    if (!annotationSpecificStyles) {\n      this.config = {\n        ...this.config,\n        annotations: {},\n      };\n\n      annotationSpecificStyles = this.config.annotations;\n    }\n\n    annotationSpecificStyles[annotationUID] = styles;\n  }\n\n  /**\n   * It takes a viewportId and a ToolStyles object, and adds the ToolStyles object\n   * at the viewport level (second highest priority in the hierarchy after the annotation level).\n   * @param viewportId - The id of the viewport\n   * @param styles - style object including tool-specific and/or global styles (All tools in the viewport)\n   */\n  setViewportToolStyles(viewportId: string, styles: ToolStyleConfig) {\n    let viewportSpecificStyles = this.config.viewports;\n\n    if (!viewportSpecificStyles) {\n      this.config = {\n        ...this.config,\n        viewports: {},\n      };\n\n      viewportSpecificStyles = this.config.viewports;\n    }\n\n    viewportSpecificStyles[viewportId] = styles;\n  }\n\n  /**\n   * It takes a toolGroupId and a ToolStyles object, and it adds the ToolStyles object\n   * at the toolGroup level (third highest priority in the hierarchy after the viewport level).\n   * @param toolGroupId - The id of the toolGroup\n   * @param styles - style object including tool-specific (in all viewports of the toolGroup) and/or\n   * global styles (All tools in the toolGroup for all viewports)\n   */\n  setToolGroupToolStyles(toolGroupId: string, styles: ToolStyleConfig) {\n    let toolGroupSpecificStyles = this.config.toolGroups;\n\n    if (!toolGroupSpecificStyles) {\n      this.config = {\n        ...this.config,\n        toolGroups: {},\n      };\n\n      toolGroupSpecificStyles = this.config.toolGroups;\n    }\n\n    toolGroupSpecificStyles[toolGroupId] = styles;\n  }\n\n  /**\n   * Sets the default tool styles for the editor. It overrides the default styles for all tools.\n   * @param styles - style object including tool-specific (a tool in all toolGroups) and/or\n   * global styles (All tools in all tooLGroups)\n   */\n  setDefaultToolStyles(styles: ToolStyleConfig) {\n    this.config.default = styles;\n  }\n\n  /**\n   * It returns the value for a given style key, based on the provided specifications.\n   * It starts by looking at the annotation-specific styles, then at the viewport-specific styles,\n   * then at the toolGroup-specific styles, and finally at the default styles.\n   * @param styleKey - The key of the style.\n   * @param styleSpecifier - An object containing the specifications such as viewportId,\n   * toolGroupId, toolName and annotationUID which are used to get the style if the level of specificity is\n   * met\n   * @returns The value for the given style key.\n   */\n  getStyleProperty(toolStyle: string, specifications: StyleSpecifier) {\n    const { annotationUID, viewportId, toolGroupId, toolName } = specifications;\n\n    return this._getToolStyle(\n      toolStyle,\n      annotationUID,\n      viewportId,\n      toolGroupId,\n      toolName\n    );\n  }\n\n  private _getToolStyle(\n    property: string,\n    annotationUID: string,\n    viewportId: string,\n    toolGroupId: string,\n    toolName: string\n  ) {\n    if (annotationUID) {\n      const styles = this.getAnnotationToolStyles(annotationUID);\n\n      if (styles) {\n        // check first in the toolSpecific styles\n        if (styles[property]) {\n          return styles[property];\n        }\n      }\n    }\n\n    if (viewportId) {\n      const styles = this.getViewportToolStyles(viewportId);\n\n      if (styles) {\n        // check if we have the viewportId specific style\n        // check first in the toolSpecific styles\n        if (styles[toolName] && styles[toolName][property]) {\n          return styles[toolName][property];\n        }\n\n        // check if we have the style in the viewport specific global viewportSpecificStyles\n        if (styles.global && styles.global[property]) {\n          return styles.global[property];\n        }\n      }\n    }\n\n    if (toolGroupId) {\n      const styles = this.getToolGroupToolStyles(toolGroupId);\n\n      if (styles) {\n        // check first in the toolSpecific styles\n        if (styles[toolName] && styles[toolName][property]) {\n          return styles[toolName][property];\n        }\n\n        // check if we have the style in the toolGroup specific global styles\n        if (styles.global && styles.global[property]) {\n          return styles.global[property];\n        }\n      }\n    }\n\n    const globalStyles = this.getDefaultToolStyles();\n\n    if (globalStyles[toolName] && globalStyles[toolName][property]) {\n      return globalStyles[toolName][property];\n    }\n\n    if (globalStyles.global && globalStyles.global[property]) {\n      return globalStyles.global[property];\n    }\n  }\n\n  private _initializeConfig(config) {\n    const toolStyles = {};\n    for (const name in config) {\n      toolStyles[name] = config[name];\n    }\n\n    this.config = {\n      default: {\n        global: toolStyles as AnnotationStyle,\n      },\n    };\n  }\n}\n\nconst toolStyle = new ToolStyle();\n\nexport default toolStyle;\n","import { StyleSpecifier } from '../../../types/AnnotationStyle';\nimport { ToolModes, AnnotationStyleStates } from '../../../enums';\nimport toolStyle from './ToolStyle';\n\n/**\n * Build a list of hierarchal property names in ascending order of priority\n * @param property - The base property name -- e.g., 'color'\n * @param state - An optional state to determine the final property name\n * @param mode - An optional mode to determine the final property name\n * @returns A list of property names\n */\nfunction getHierarchalPropertyStyles(\n  property: string,\n  state?: AnnotationStyleStates,\n  mode?: ToolModes\n): string[] {\n  const list = [`${property}`];\n  if (state) list.push(`${list[0]}${state}`);\n  if (mode) list.push(`${list[list.length - 1]}${mode}`);\n  return list;\n}\n\n/**\n * Get the value of a style property from the ToolStyle config\n * @param property - The name of the property to get.\n * @param styleSpecifier - An object containing the specifications such as viewportId,\n * toolGroupId, toolName and annotationUID which are used to get the style if the level of specificity is\n * met (hierarchy is checked from most specific to least specific which is\n * annotationLevel -> viewportLevel -> toolGroupLevel -> default.\n * @param state - The state of the tool (Default, Locked etc.)\n * @param mode - The current tool mode. (Active, Passive etc.)\n * @returns The value of the property.\n */\nfunction getStyleProperty(\n  property: string,\n  styleSpecifier: StyleSpecifier,\n  state?: AnnotationStyleStates,\n  mode?: ToolModes\n): string {\n  // Hierarchal property styles is a list of property names with priority in ascending\n  // order like: ['color', 'colorSelected', 'colorSelectedActive'], if in the toolStyle\n  // config, the `colorSelectedActive` property is defined, it will be used, otherwise\n  // the `colorSelected` property will be used, and if that is not defined, the `color`\n  // property will be used. This is done to ensure that the most specific property is used.\n  // Thus, we attempt resolving property names in reverse order\n  const alternatives = getHierarchalPropertyStyles(property, state, mode);\n  for (let i = alternatives.length - 1; i >= 0; --i) {\n    const style = toolStyle.getStyleProperty(alternatives[i], styleSpecifier);\n    if (style !== undefined) {\n      return style;\n    }\n  }\n}\n\nexport { getStyleProperty };\n","import { ToolModes, AnnotationStyleStates } from '../enums';\nimport MouseCursor from './MouseCursor';\nimport ImageMouseCursor from './ImageMouseCursor';\nimport { getDefinedSVGCursorDescriptor } from './SVGCursorDescriptor';\nimport { getStyleProperty } from '../stateManagement/annotation/config/helpers';\n\nimport type { StyleSpecifier } from '../types/AnnotationStyle';\nimport type { SVGCursorDescriptor } from '../types';\n\nconst PROPERTY = 'color';\nconst STATE = AnnotationStyleStates.Highlighted;\nconst MODE = ToolModes.Active;\n\nexport default class SVGMouseCursor extends ImageMouseCursor {\n  constructor(\n    url: string,\n    x?: number,\n    y?: number,\n    name?: string | undefined,\n    fallback?: MouseCursor | undefined\n  ) {\n    super(url, x, y, name, fallback);\n  }\n\n  /**\n   * Get a shared instance of the SVGMouseCursor class satisfying the given parameters.\n   *\n   * @param name - The name of the cursor (defined in SVGCursorDescriptor.ts);\n   * @param pointer - Should be true to use the version of the cursor containing\n   * a mouse pointer. Defaults to false (which does not add a pointer to the cursor);\n   * @param color - The color of the cursor. Defaults to tool.style.colorHighlightedActive;\n   * @returns a SVGMouseCursor instance or\n   * undefined if no SVG cursor descriptor was found with the given name;\n   */\n  static getDefinedCursor(\n    name: string,\n    pointer = false,\n    color?: string\n  ): MouseCursor {\n    if (!color) {\n      color = getStyleProperty(PROPERTY, {} as StyleSpecifier, STATE, MODE);\n    }\n    const urn = getCursorURN(name, pointer, color);\n    let cursor = super.getDefinedCursor(urn);\n    if (!cursor) {\n      const descriptor = getDefinedSVGCursorDescriptor(name);\n      if (descriptor) {\n        cursor = createSVGMouseCursor(\n          descriptor,\n          urn,\n          pointer,\n          color,\n          super.getDefinedCursor('default')\n        );\n        super.setDefinedCursor(urn, cursor);\n      }\n    }\n    return cursor;\n  }\n}\n\n/*\n * Helpers\n */\n\nfunction format(template: string, dictionary: Record<string, unknown>): string {\n  const dict = Object(dictionary);\n  const defined = Object.prototype.hasOwnProperty.bind(dict);\n  return (template + '').replace(/\\{\\{(\\w+)\\}\\}/g, (match, key) => {\n    return defined(key) ? dict[key] + '' : '';\n  });\n}\n\nfunction getCursorURN(name: string, pointer: boolean, color: string) {\n  const type = pointer ? 'pointer' : 'cursor';\n  return `${type}:${name}/${color}`;\n}\n\nfunction createSVGMouseCursor(\n  descriptor: SVGCursorDescriptor,\n  name: string,\n  pointer: boolean,\n  color: string,\n  fallback: MouseCursor\n): SVGMouseCursor {\n  const { x, y } = descriptor.mousePoint;\n  return new SVGMouseCursor(\n    createSVGIconUrl(descriptor, pointer, { color }),\n    x,\n    y,\n    name,\n    fallback\n  );\n}\n\nfunction createSVGIconUrl(\n  descriptor: SVGCursorDescriptor,\n  pointer: boolean,\n  options: Record<string, unknown>\n): string {\n  return URL.createObjectURL(createSVGIconBlob(descriptor, pointer, options));\n}\n\nfunction createSVGIconBlob(\n  descriptor: SVGCursorDescriptor,\n  pointer: boolean,\n  options: Record<string, unknown>\n): Blob {\n  const svgString = (pointer ? createSVGIconWithPointer : createSVGIcon)(\n    descriptor,\n    options\n  );\n  return new Blob([svgString], { type: 'image/svg+xml' });\n}\n\nfunction createSVGIcon(\n  descriptor: SVGCursorDescriptor,\n  options: Record<string, unknown>\n): string {\n  const { iconContent, iconSize, viewBox } = descriptor;\n  const svgString = `\n    <svg data-icon=\"cursor\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"${iconSize}\" height=\"${iconSize}\" viewBox=\"0 0\n      ${viewBox.x} ${viewBox.y}\">\n      ${iconContent}\n    </svg>`;\n  return format(svgString, options);\n}\n\nfunction createSVGIconWithPointer(\n  descriptor: SVGCursorDescriptor,\n  options: Record<string, unknown>\n) {\n  const { iconContent, iconSize, viewBox, mousePointerGroupString } =\n    descriptor;\n  const scale = iconSize / Math.max(viewBox.x, viewBox.y, 1);\n  const svgSize = 16 + iconSize;\n  const svgString = `\n    <svg data-icon=\"cursor\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"${svgSize}\" height=\"${svgSize}\" viewBox=\"0 0 ${svgSize} ${svgSize}\">\n      <g>${mousePointerGroupString}</g>\n      <g transform=\"translate(16, 16) scale(${scale})\">${iconContent}</g>\n    </svg>`;\n  return format(svgString, options);\n}\n","import { MouseCursor } from '.';\n\nconst ELEMENT_CURSORS_MAP = Symbol('ElementCursorsMap');\n\n/*\n * Public Methods\n */\n\nfunction initElementCursor(\n  element: HTMLDivElement,\n  cursor: MouseCursor | null\n): void {\n  _getElementCursors(element)[0] = cursor;\n  _setElementCursor(element, cursor);\n}\n\nfunction _setElementCursor(\n  element: HTMLDivElement,\n  cursor: MouseCursor | null\n): void {\n  const cursors = _getElementCursors(element);\n  cursors[1] = cursors[0];\n  cursors[0] = cursor;\n  element.style.cursor = (\n    cursor instanceof MouseCursor\n      ? cursor\n      : MouseCursor.getDefinedCursor('auto')\n  ).getStyleProperty();\n}\n\nfunction resetElementCursor(element: HTMLDivElement): void {\n  _setElementCursor(element, _getElementCursors(element)[1]);\n}\n\nfunction hideElementCursor(element: HTMLDivElement): void {\n  _setElementCursor(element, MouseCursor.getDefinedCursor('none'));\n}\n\n/*\n * Helpers\n */\n\nfunction _getElementCursors(\n  element: HTMLDivElement\n): [MouseCursor | null, MouseCursor | null] {\n  let map = _getElementCursors[ELEMENT_CURSORS_MAP];\n  if (!(map instanceof WeakMap)) {\n    map = new WeakMap();\n    Object.defineProperty(_getElementCursors, ELEMENT_CURSORS_MAP, {\n      value: map,\n    });\n  }\n  let cursors = map.get(element);\n  if (!cursors) {\n    cursors = [null, null];\n    map.set(element, cursors);\n  }\n  return cursors;\n}\n\n/*\n * Exports\n */\nexport {\n  initElementCursor,\n  resetElementCursor,\n  hideElementCursor,\n  _setElementCursor as setElementCursor,\n};\n","import { MouseBindings, ToolModes } from '../../enums';\nimport cloneDeep from 'lodash.clonedeep';\nimport get from 'lodash.get';\nimport {\n  triggerEvent,\n  eventTarget,\n  getRenderingEngine,\n  getRenderingEngines,\n  getEnabledElementByIds,\n  Settings,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport { Events } from '../../enums';\nimport { ToolActivatedEventDetail } from '../../types/EventTypes';\nimport { state } from '../index';\nimport {\n  IToolBinding,\n  IToolClassReference,\n  IToolGroup,\n  SetToolBindingsType,\n  ToolOptionsType,\n} from '../../types';\n\nimport { MouseCursor, SVGMouseCursor } from '../../cursors';\nimport { initElementCursor } from '../../cursors/elementCursor';\n\nconst { Active, Passive, Enabled, Disabled } = ToolModes;\n\n/**\n * ToolGroup class which is a container for tools and their modes and states.\n * In Cornerstone3DTools, you need to create a tool group in order to use the\n * tools. ToolGroup is a way to share tool configuration, state (enabled, disabled, etc.)\n * across a set of viewports. Tools can set to be activated, enabled or disabled\n * in a toolGroup. You should not directly instantiate a ToolGroup. You need to use\n * ToolGroupManager helpers to create a new toolGroup or get a reference to an existing toolGroup.\n *\n * ```js\n * const toolGroup = csTools.ToolGroupManager.createToolGroup('toolGroupId')\n * ```\n */\nexport default class ToolGroup implements IToolGroup {\n  id: string;\n  viewportsInfo = [];\n  toolOptions = {};\n  _toolInstances = {};\n\n  constructor(id: string) {\n    this.id = id;\n  }\n\n  /**\n   * Get the viewport IDs of all the viewports in the current viewport\n   * @returns An array of viewport IDs.\n   */\n  getViewportIds(): string[] {\n    return this.viewportsInfo.map(({ viewportId }) => viewportId);\n  }\n\n  /**\n   * Returns the toolGroup viewports info which is an array of {viewportId, renderingEngineId}\n   */\n  getViewportsInfo(): Array<Types.IViewportId> {\n    return this.viewportsInfo.slice();\n  }\n\n  /**\n   * Get the tool instance for a given tool name in the toolGroup\n   * @param toolName - The name of the tool.\n   * @returns A tool instance.\n   */\n  public getToolInstance(toolInstanceName: string) {\n    const toolInstance = this._toolInstances[toolInstanceName];\n    if (!toolInstance) {\n      console.warn(\n        `'${toolInstanceName}' is not registered with this toolGroup (${this.id}).`\n      );\n      return;\n    }\n\n    return toolInstance;\n  }\n  /**\n   * Add a tool to the tool group with the given tool name and tool configuration.\n   * Note that adding a tool to a tool group will not automatically set the tool\n   * to be active. You must call setToolActive or setToolPassive and other methods\n   * to set the tool to be active or passive or in other states.\n   *\n   * @param toolName - string\n   * @param configuration - Tool configuration objects\n   */\n  addTool(toolName: string, configuration = {}): void {\n    const toolDefinition = state.tools[toolName];\n    const hasToolName = typeof toolName !== 'undefined' && toolName !== '';\n    const localToolInstance = this.toolOptions[toolName];\n\n    if (!hasToolName) {\n      console.warn(\n        'Tool with configuration did not produce a toolName: ',\n        configuration\n      );\n      return;\n    }\n\n    if (!toolDefinition) {\n      console.warn(\n        `'${toolName}' is not registered with the library. You need to use cornerstoneTools.addTool to register it.`\n      );\n      return;\n    }\n\n    if (localToolInstance) {\n      console.warn(\n        `'${toolName}' is already registered for ToolGroup ${this.id}.`\n      );\n      return;\n    }\n\n    // Should these be renamed higher up, so we don't have to alias?\n    // Wrap in try-catch so 3rd party tools don't explode?\n    const { toolClass: ToolClass } = toolDefinition;\n\n    const toolProps = {\n      name: toolName,\n      toolGroupId: this.id,\n      configuration,\n    };\n\n    const instantiatedTool = new ToolClass(toolProps);\n\n    // API instead of directly exposing schema?\n    // Maybe not here, but feels like a \"must\" for any method outside of the ToolGroup itself\n    this._toolInstances[toolName] = instantiatedTool;\n  }\n\n  public addToolInstance(\n    toolName: string,\n    parentClassName: string,\n    configuration = {}\n  ): void {\n    let ToolClassToUse = state.tools[toolName]\n      ?.toolClass as IToolClassReference;\n\n    if (!ToolClassToUse) {\n      // get parent class constructor\n      const ParentClass = state.tools[parentClassName]\n        .toolClass as IToolClassReference;\n\n      // Todo: could not find a way to make this work with typescript\n      // @ts-ignore\n      class ToolInstance extends ParentClass {}\n      // @ts-ignore\n      ToolInstance.toolName = toolName;\n      // @ts-ignore\n      ToolClassToUse = ToolInstance;\n\n      state.tools[toolName] = {\n        toolClass: ToolInstance as IToolClassReference,\n      };\n    }\n\n    // add the tool to the toolGroup\n    // @ts-ignore\n    this.addTool(ToolClassToUse.toolName, configuration);\n  }\n\n  //   class InstanceTool extends parentClass;\n  // InstanceTool.constructor.toolName = name;\n  // addTool(InstanceTool,configuration)\n  /**\n   * Add a viewport to the ToolGroup. It accepts viewportId and optional\n   * renderingEngineId parameter. If renderingEngineId is not provided,\n   * it checks if cornerstone-core has more than one renderingEngine; If so,\n   * it will throw an error. If cornerstone-core has only one renderingEngine,\n   * it will use that renderingEngine.\n   *\n   * @param viewportId - The unique identifier for the viewport.\n   * @param renderingEngineId - The rendering engine to use.\n   */\n  public addViewport(viewportId: string, renderingEngineId?: string): void {\n    const renderingEngines = getRenderingEngines();\n\n    if (!renderingEngineId && renderingEngines.length > 1) {\n      throw new Error(\n        'You must specify a renderingEngineId when there are multiple rendering engines.'\n      );\n    }\n\n    const renderingEngineUIDToUse = renderingEngineId || renderingEngines[0].id;\n\n    // Don't overwrite if it already exists\n    if (\n      !this.viewportsInfo.some(({ viewportId: vpId }) => vpId === viewportId)\n    ) {\n      this.viewportsInfo.push({\n        viewportId,\n        renderingEngineId: renderingEngineUIDToUse,\n      });\n    }\n\n    // Handle the newly added viewport's mouse cursor\n    const toolName = this.getActivePrimaryMouseButtonTool();\n\n    const runtimeSettings = Settings.getRuntimeSettings();\n    if (runtimeSettings.get('useCursors')) {\n      this.setViewportsCursorByToolName(toolName);\n    }\n  }\n\n  /**\n   * Removes viewport from the toolGroup. If only renderingEngineId is defined\n   * it removes all the viewports with the same renderingEngineId, if viewportId\n   * is also provided, it will remove that specific viewport from the ToolGroup.\n   *\n   * @param renderingEngineId - renderingEngine id\n   * @param viewportId - viewport id\n   */\n  public removeViewports(renderingEngineId: string, viewportId?: string): void {\n    const indices = [];\n\n    this.viewportsInfo.forEach((vpInfo, index) => {\n      let match = false;\n      if (vpInfo.renderingEngineId === renderingEngineId) {\n        match = true;\n\n        if (viewportId && vpInfo.viewportId !== viewportId) {\n          match = false;\n        }\n      }\n      if (match) {\n        indices.push(index);\n      }\n    });\n\n    if (indices.length) {\n      // Note: Traverse the array backwards, such that when we remove items we\n      // do not immediately mess up our loop indicies.\n      for (let i = indices.length - 1; i >= 0; i--) {\n        this.viewportsInfo.splice(indices[i], 1);\n      }\n    }\n  }\n\n  public setActiveStrategy(toolName: string, strategyName: string) {\n    const toolInstance = this._toolInstances[toolName];\n\n    if (toolInstance === undefined) {\n      console.warn(\n        `Tool ${toolName} not added to toolGroup, can't set tool configuration.`\n      );\n\n      return;\n    }\n\n    toolInstance.setActiveStrategy(strategyName);\n  }\n\n  setToolMode(\n    toolName: string,\n    mode: ToolModes,\n    options = {} as SetToolBindingsType\n  ): void {\n    if (!toolName) {\n      console.warn('setToolMode: toolName must be defined');\n      return;\n    }\n\n    if (mode === ToolModes.Active) {\n      this.setToolActive(toolName, options);\n      return;\n    }\n\n    if (mode === ToolModes.Passive) {\n      this.setToolPassive(toolName);\n      return;\n    }\n\n    if (mode === ToolModes.Enabled) {\n      this.setToolEnabled(toolName);\n      return;\n    }\n\n    if (mode === ToolModes.Disabled) {\n      this.setToolDisabled(toolName);\n      return;\n    }\n\n    console.warn('setToolMode: mode must be defined');\n  }\n\n  /**\n   * Set the tool mode on the toolGroup to be Active. This means the tool\n   * can be actively used by the defined bindings (e.g., Mouse primary click)\n   *\n   * - Can be actively used by mouse/touch events mapped to its `ToolBinding`s.\n   * - Can add data if an annotation tool.\n   * - Can be passively interacted by grabbing a tool or its handles.\n   * - Renders data if the tool has a `renderAnnotation` method.\n   *\n   * @param toolName - tool name\n   * @param toolBindingsOptions - tool bindings\n   */\n  public setToolActive(\n    toolName: string,\n    toolBindingsOptions = {} as SetToolBindingsType\n  ): void {\n    const toolInstance = this._toolInstances[toolName];\n\n    if (toolInstance === undefined) {\n      console.warn(\n        `Tool ${toolName} not added to toolGroup, can't set tool mode.`\n      );\n\n      return;\n    }\n\n    if (!toolInstance) {\n      console.warn(\n        `'${toolName}' instance ${toolInstance} is not registered with this toolGroup, can't set tool mode.`\n      );\n      return;\n    }\n\n    const prevBindings: IToolBinding[] = this.toolOptions[toolName]\n      ? this.toolOptions[toolName].bindings\n      : [];\n\n    const newBindings = toolBindingsOptions.bindings\n      ? toolBindingsOptions.bindings\n      : [];\n\n    // combine the new bindings with the previous bindings to avoid duplicates\n    // it allows duplicated mouse buttons as long as they don't have same\n    // modifier keys.\n    const bindingsToUse = [...prevBindings, ...newBindings].reduce(\n      (unique, binding) => {\n        const TouchBinding = binding.numTouchPoints !== undefined;\n        const MouseBinding = binding.mouseButton !== undefined;\n\n        if (\n          !unique.some((obj) => hasSameBinding(obj, binding)) &&\n          (TouchBinding || MouseBinding)\n        ) {\n          unique.push(binding);\n        }\n        return unique;\n      },\n      []\n    );\n\n    // We should not override the bindings if they are already set\n    const toolOptions: ToolOptionsType = {\n      bindings: bindingsToUse,\n      mode: Active,\n    };\n\n    this.toolOptions[toolName] = toolOptions;\n    this._toolInstances[toolName].mode = Active;\n\n    // reset the mouse cursor if tool has left click binding\n    const runtimeSettings = Settings.getRuntimeSettings();\n    const useCursor = runtimeSettings.get('useCursors');\n\n    if (this._hasMousePrimaryButtonBinding(toolBindingsOptions) && useCursor) {\n      this.setViewportsCursorByToolName(toolName);\n    } else {\n      // reset to default cursor only if there is no other tool with primary binding\n      const activeToolIdentifier = this.getActivePrimaryMouseButtonTool();\n      if (!activeToolIdentifier && useCursor) {\n        const cursor = MouseCursor.getDefinedCursor('default');\n        this._setCursorForViewports(cursor);\n      }\n    }\n\n    if (typeof toolInstance.onSetToolActive === 'function') {\n      toolInstance.onSetToolActive();\n    }\n    this._renderViewports();\n\n    const eventDetail: ToolActivatedEventDetail = {\n      toolGroupId: this.id,\n      toolName,\n      toolBindingsOptions,\n    };\n\n    triggerEvent(eventTarget, Events.TOOL_ACTIVATED, eventDetail);\n  }\n\n  /**\n   * Set the tool mode on the toolGroup to be Passive.\n   *\n   * - Can be passively interacted by grabbing a tool or its handles.\n   * - Renders data if the tool has a `renderAnnotation` method.\n   *\n   * @param toolName - tool name\n   */\n  public setToolPassive(toolName: string): void {\n    const toolInstance = this._toolInstances[toolName];\n\n    if (toolInstance === undefined) {\n      console.warn(\n        `Tool ${toolName} not added to toolGroup, can't set tool mode.`\n      );\n\n      return;\n    }\n\n    // We should only remove the primary button bindings and keep\n    // the other ones (Zoom on right click)\n    const prevToolOptions = this.getToolOptions(toolName);\n    const toolOptions = Object.assign(\n      {\n        bindings: prevToolOptions ? prevToolOptions.bindings : [],\n      },\n      prevToolOptions,\n      {\n        mode: Passive,\n      }\n    );\n\n    const defaultMousePrimary = this.getDefaultMousePrimary();\n\n    // Remove the primary button bindings without modifiers, if they exist\n    toolOptions.bindings = toolOptions.bindings.filter(\n      (binding) =>\n        binding.mouseButton !== defaultMousePrimary || binding.modifierKey\n    );\n    // If there are other bindings, set the tool to be active\n    let mode = Passive;\n    if (toolOptions.bindings.length !== 0) {\n      mode = Active;\n      toolOptions.mode = mode;\n    }\n\n    this.toolOptions[toolName] = toolOptions;\n    toolInstance.mode = mode;\n\n    if (typeof toolInstance.onSetToolPassive === 'function') {\n      toolInstance.onSetToolPassive();\n    }\n    this._renderViewports();\n  }\n\n  /**\n   * Set the tool mode on the toolGroup to be Enabled.\n   *\n   * - Renders data if the tool has a `renderAnnotation` method..\n   *\n   * @param toolName - tool name\n   */\n  public setToolEnabled(toolName: string): void {\n    const toolInstance = this._toolInstances[toolName];\n\n    if (toolInstance === undefined) {\n      console.warn(\n        `Tool ${toolName} not added to toolGroup, can't set tool mode.`\n      );\n\n      return;\n    }\n\n    const toolOptions = {\n      bindings: [],\n      mode: Enabled,\n    };\n\n    this.toolOptions[toolName] = toolOptions;\n    toolInstance.mode = Enabled;\n\n    if (typeof toolInstance.onSetToolEnabled === 'function') {\n      toolInstance.onSetToolEnabled();\n    }\n\n    this._renderViewports();\n  }\n\n  /**\n   * Set the tool mode on the toolGroup to be Disabled.\n   *\n   * - Annotation does not render.\n   *\n   * @param toolName - tool name\n   */\n  public setToolDisabled(toolName: string): void {\n    const toolInstance = this._toolInstances[toolName];\n\n    if (toolInstance === undefined) {\n      console.warn(\n        `Tool ${toolName} not added to toolGroup, can't set tool mode.`\n      );\n\n      return;\n    }\n\n    const toolOptions = {\n      bindings: [],\n      mode: Disabled,\n    };\n\n    this.toolOptions[toolName] = toolOptions;\n    toolInstance.mode = Disabled;\n\n    if (typeof toolInstance.onSetToolDisabled === 'function') {\n      toolInstance.onSetToolDisabled();\n    }\n    this._renderViewports();\n  }\n\n  /**\n   * Get the options for a given tool\n   * @param toolName - The name of the tool.\n   * @returns the tool options\n   */\n  public getToolOptions(toolName: string): ToolOptionsType {\n    const toolOptionsForTool = this.toolOptions[toolName];\n\n    if (toolOptionsForTool === undefined) {\n      return;\n    }\n\n    return toolOptionsForTool;\n  }\n\n  /**\n   * Find the name of the tool that is Active and has a primary button binding\n   * (Mouse primary click)\n   *\n   * @returns The name of the tool\n   */\n  public getActivePrimaryMouseButtonTool(): string {\n    return Object.keys(this.toolOptions).find((toolName) => {\n      const toolOptions = this.toolOptions[toolName];\n      return (\n        toolOptions.mode === Active &&\n        this._hasMousePrimaryButtonBinding(toolOptions)\n      );\n    });\n  }\n\n  public setViewportsCursorByToolName(\n    toolName: string,\n    strategyName?: string\n  ): void {\n    const cursor = this._getCursor(toolName, strategyName);\n\n    this._setCursorForViewports(cursor);\n  }\n\n  private _getCursor(toolName: string, strategyName?: string): MouseCursor {\n    let cursorName;\n    let cursor;\n\n    if (strategyName) {\n      // Try combinations with strategyName first:\n      // Try with toolName and toolInstanceName first.\n      cursorName = `${toolName}.${strategyName}`;\n\n      cursor = SVGMouseCursor.getDefinedCursor(cursorName, true);\n\n      if (cursor) {\n        return cursor;\n      }\n    }\n\n    // Try with toolName and toolInstanceName first.\n    cursorName = `${toolName}`;\n\n    cursor = SVGMouseCursor.getDefinedCursor(cursorName, true);\n\n    if (cursor) {\n      return cursor;\n    }\n\n    // Try with just toolName.\n    cursorName = toolName;\n\n    cursor = SVGMouseCursor.getDefinedCursor(cursorName, true);\n\n    if (cursor) {\n      return cursor;\n    }\n\n    return MouseCursor.getDefinedCursor('default');\n  }\n\n  _setCursorForViewports(cursor: MouseCursor): void {\n    this.viewportsInfo.forEach(({ renderingEngineId, viewportId }) => {\n      const enabledElement = getEnabledElementByIds(\n        viewportId,\n        renderingEngineId\n      );\n\n      if (!enabledElement) {\n        return;\n      }\n\n      const { viewport } = enabledElement;\n      initElementCursor(viewport.element, cursor);\n    });\n  }\n\n  /**\n   * Set a configuration of a tool by the given toolName.\n   * Use overwrite as true in case you want to overwrite any existing configuration (be careful, depending on config change it might break the annotation flow).\n   */\n  public setToolConfiguration(\n    toolName: string,\n    configuration: Record<any, any>,\n    overwrite?: boolean\n  ): boolean {\n    if (this._toolInstances[toolName] === undefined) {\n      console.warn(\n        `Tool ${toolName} not present, can't set tool configuration.`\n      );\n      return false;\n    }\n\n    let _configuration;\n\n    if (overwrite) {\n      _configuration = configuration;\n    } else {\n      _configuration = csUtils.deepMerge(\n        this._toolInstances[toolName].configuration,\n        configuration\n      );\n    }\n\n    this._toolInstances[toolName].configuration = _configuration;\n\n    this._renderViewports();\n\n    return true;\n  }\n\n  /**\n   * Returns the default mouse primary button.\n   *\n   */\n  public getDefaultMousePrimary(): MouseBindings {\n    return MouseBindings.Primary;\n  }\n\n  /**\n   * Get the configuration of tool. It returns only the config for the given path (in case exists).\n   * ConfigurationPath is the the path of the property to get separated by '.'.\n   *\n   * @example\n   * getToolConfiguration('LengthTool', 'firstLevel.secondLevel')\n   * // get from LengthTool instance the configuration value as being LengthToolInstance[configuration][firstLevel][secondLevel]\n   */\n  getToolConfiguration(toolName: string, configurationPath: string): any {\n    if (this._toolInstances[toolName] === undefined) {\n      console.warn(\n        `Tool ${toolName} not present, can't set tool configuration.`\n      );\n      return;\n    }\n\n    const _configuration = get(\n      this._toolInstances[toolName].configuration,\n      configurationPath\n    );\n\n    return cloneDeep(_configuration);\n  }\n\n  /**\n   * Check if the tool binding is set to be primary mouse button.\n   * @param toolOptions - The options for the tool mode.\n   * @returns A boolean value.\n   */\n  private _hasMousePrimaryButtonBinding(toolOptions) {\n    const defaultMousePrimary = this.getDefaultMousePrimary();\n\n    return toolOptions?.bindings?.some(\n      (binding) =>\n        binding.mouseButton === defaultMousePrimary &&\n        binding.modifierKey === undefined\n    );\n  }\n\n  /**\n   * It re-renders the viewports in the toolGroup\n   */\n  private _renderViewports(): void {\n    this.viewportsInfo.forEach(({ renderingEngineId, viewportId }) => {\n      getRenderingEngine(renderingEngineId).renderViewport(viewportId);\n    });\n  }\n}\n\nfunction hasSameBinding(\n  binding1: IToolBinding,\n  binding2: IToolBinding\n): boolean {\n  if (binding1.mouseButton !== binding2.mouseButton) {\n    return false;\n  }\n\n  return binding1.modifierKey === binding2.modifierKey;\n}\n","import { state } from '../index';\nimport ToolGroup from './ToolGroup';\nimport { IToolGroup } from '../../types';\n\n/**\n * Create a new tool group with the given name. ToolGroups are the new way\n * in Cornerstone3DTools to share tool configuration, state (enabled, disabled, etc.)\n * across a set of viewports.\n *\n * @param toolGroupId - The unique ID of the tool group.\n * @returns A reference to the tool group that was created.\n */\nfunction createToolGroup(toolGroupId: string): IToolGroup | undefined {\n  // Exit early if ID conflict\n  const toolGroupWithIdExists = state.toolGroups.some(\n    (tg) => tg.id === toolGroupId\n  );\n\n  if (toolGroupWithIdExists) {\n    console.warn(`'${toolGroupId}' already exists.`);\n    return;\n  }\n\n  const toolGroup = new ToolGroup(toolGroupId);\n\n  // Update state\n  state.toolGroups.push(toolGroup);\n\n  // Return reference\n  return toolGroup;\n}\n\nexport default createToolGroup;\n","import { state } from '../index';\nimport { IToolGroup } from '../../types';\n\n/**\n * Return the array of tool groups\n * @returns An array of tool groups.\n */\nfunction getAllToolGroups(): Array<IToolGroup> {\n  return state.toolGroups;\n}\n\nexport default getAllToolGroups;\n","import { getRenderingEngine, Types } from '@cornerstonejs/core';\nimport { Synchronizer } from '../../store';\n\n/**\n * Synchronizer callback to synchronize the camera by updating all camera\n * values.  See also zoomPanSyncCallback\n *\n * @param synchronizerInstance - The Instance of the Synchronizer\n * @param sourceViewport - The list of IDs defining the source viewport.\n * @param targetViewport - The list of IDs defining the target viewport, never\n *   the same as sourceViewport.\n * @param cameraModifiedEvent - The CAMERA_MODIFIED event.\n */\nexport default function cameraSyncCallback(\n  synchronizerInstance: Synchronizer,\n  sourceViewport: Types.IViewportId,\n  targetViewport: Types.IViewportId,\n  cameraModifiedEvent: CustomEvent\n): void {\n  const { camera } = cameraModifiedEvent.detail;\n\n  const renderingEngine = getRenderingEngine(targetViewport.renderingEngineId);\n  if (!renderingEngine) {\n    throw new Error(\n      `No RenderingEngine for Id: ${targetViewport.renderingEngineId}`\n    );\n  }\n\n  const tViewport = renderingEngine.getViewport(targetViewport.viewportId);\n\n  tViewport.setCamera(camera);\n  tViewport.render();\n}\n","import { createSynchronizer } from '../../store/SynchronizerManager';\nimport { Enums } from '@cornerstonejs/core';\nimport cameraSyncCallback from '../callbacks/cameraSyncCallback';\nimport Synchronizer from '../../store/SynchronizerManager/Synchronizer';\n\nconst { CAMERA_MODIFIED } = Enums.Events;\n\n/**\n * A helper that creates a new `Synchronizer` which listens to the `CAMERA_MODIFIED`\n * rendering event and calls the `cameraSyncCallback`.\n *\n * @param synchronizerName - The name of the synchronizer.\n * @returns A new `Synchronizer` instance.\n */\nexport default function createCameraPositionSynchronizer(\n  synchronizerName: string\n): Synchronizer {\n  const cameraPositionSynchronizer = createSynchronizer(\n    synchronizerName,\n    CAMERA_MODIFIED,\n    cameraSyncCallback\n  );\n\n  return cameraPositionSynchronizer;\n}\n","import {\n  BaseVolumeViewport,\n  getRenderingEngine,\n  StackViewport,\n  Types,\n} from '@cornerstonejs/core';\n\n/**\n * Synchronizer callback to synchronize the voi of volumeActors of identical volumes\n * in different viewports.\n *\n * @param synchronizerInstance - The Instance of the Synchronizer\n * @param sourceViewport - The list of IDs defining the source viewport.\n * @param targetViewport - The list of IDs defining the target viewport.\n * @param voiModifiedEvent - The VOI_MODIFIED event.\n * @param options - Options for the synchronizer.\n */\nexport default function voiSyncCallback(\n  synchronizerInstance,\n  sourceViewport: Types.IViewportId,\n  targetViewport: Types.IViewportId,\n  voiModifiedEvent: Types.EventTypes.VoiModifiedEvent,\n  options?: any\n): void {\n  const eventDetail = voiModifiedEvent.detail;\n  const { volumeId, range, invertStateChanged, invert } = eventDetail;\n\n  const renderingEngine = getRenderingEngine(targetViewport.renderingEngineId);\n  if (!renderingEngine) {\n    throw new Error(\n      `Rendering Engine does not exist: ${targetViewport.renderingEngineId}`\n    );\n  }\n\n  const tViewport = renderingEngine.getViewport(targetViewport.viewportId);\n  const tProperties:\n    | Types.VolumeViewportProperties\n    | Types.StackViewportProperties = {\n    voiRange: range,\n  };\n\n  if (options.syncInvertState && invertStateChanged) {\n    tProperties.invert = invert;\n  }\n\n  if (tViewport instanceof BaseVolumeViewport) {\n    tViewport.setProperties(tProperties, volumeId);\n  } else if (tViewport instanceof StackViewport) {\n    tViewport.setProperties(tProperties);\n  } else {\n    throw new Error('Viewport type not supported.');\n  }\n\n  tViewport.render();\n}\n","import { createSynchronizer } from '../../store/SynchronizerManager';\nimport { Enums } from '@cornerstonejs/core';\nimport voiSyncCallback from '../callbacks/voiSyncCallback';\nimport Synchronizer from '../../store/SynchronizerManager/Synchronizer';\n\ntype VOISynchronizerOptions = {\n  syncInvertState: boolean;\n};\n\n/**\n * A helper that creates a new `Synchronizer`\n * which listens to the `VOI_MODIFIED` rendering event and calls the `voiSyncCallback`.\n *\n * @param synchronizerName - The name of the synchronizer.\n * @param options - The options for the synchronizer. By default the voi\n * synchronizer will also sync the invert state of the volume, but this can be\n * disabled by setting `syncInvertState` to false.\n *\n * @returns A new `Synchronizer` instance.\n */\nexport default function createVOISynchronizer(\n  synchronizerName: string,\n  options = { syncInvertState: true } as VOISynchronizerOptions\n): Synchronizer {\n  const VOISynchronizer = createSynchronizer(\n    synchronizerName,\n    Enums.Events.VOI_MODIFIED,\n    voiSyncCallback,\n    options\n  );\n\n  return VOISynchronizer;\n}\n","import { getRenderingEngine, Types } from '@cornerstonejs/core';\nimport { Synchronizer } from '../../store';\n\n/**\n * Synchronizer callback to synchronize the camera. Synchronization\n *\n * targetViewport.options.syncZoom set to false to not sync the zoom\n * targetViewport.options.syncPan set to false to not sync the pan\n\n * @param synchronizerInstance - The Instance of the Synchronizer\n * @param sourceViewport - The list of IDs defining the source viewport.\n * @param targetViewport - The list of IDs defining the target viewport, different\n *   from sourceViewport\n */\nexport default function zoomPanSyncCallback(\n  synchronizerInstance: Synchronizer,\n  sourceViewport: Types.IViewportId,\n  targetViewport: Types.IViewportId\n): void {\n  const renderingEngine = getRenderingEngine(targetViewport.renderingEngineId);\n  if (!renderingEngine) {\n    throw new Error(\n      `No RenderingEngine for Id: ${targetViewport.renderingEngineId}`\n    );\n  }\n\n  const options = synchronizerInstance.getOptions(targetViewport.viewportId);\n\n  const tViewport = renderingEngine.getViewport(targetViewport.viewportId);\n  const sViewport = renderingEngine.getViewport(sourceViewport.viewportId);\n\n  if (options?.syncZoom !== false) {\n    const srcZoom = sViewport.getZoom();\n    // Do the zoom first, as the pan is relative to the zoom level\n    tViewport.setZoom(srcZoom);\n  }\n  if (options?.syncPan !== false) {\n    const srcPan = sViewport.getPan();\n    tViewport.setPan(srcPan);\n  }\n\n  tViewport.render();\n}\n","import { createSynchronizer } from '../../store/SynchronizerManager';\nimport { Enums } from '@cornerstonejs/core';\nimport zoomPanSyncCallback from '../callbacks/zoomPanSyncCallback';\nimport Synchronizer from '../../store/SynchronizerManager/Synchronizer';\n\nconst { CAMERA_MODIFIED } = Enums.Events;\n\n/**\n * A helper that creates a new `Synchronizer` which listens to the `CAMERA_MODIFIED`\n * rendering event and calls the `cameraSyncCallback`.\n *\n * @param synchronizerName - The name of the synchronizer.\n * @returns A new `Synchronizer` instance.\n */\nexport default function createZoomPanSynchronizer(\n  synchronizerName: string\n): Synchronizer {\n  const zoomPanSynchronizer = createSynchronizer(\n    synchronizerName,\n    CAMERA_MODIFIED,\n    zoomPanSyncCallback\n  );\n\n  return zoomPanSynchronizer;\n}\n","/**\n * Clips a value to an upper and lower bound.\n * @export @public @method\n * @name clip\n *\n * @param  {number} val  The value to clip.\n * @param  {number} low  The lower bound.\n * @param  {number} high The upper bound.\n * @returns {number}      The clipped value.\n */\nexport function clip(val, low, high) {\n  return Math.min(Math.max(low, val), high);\n}\n\n/**\n * Clips a value within a box.\n * @export @public @method\n * @name clipToBox\n *\n * @param  {Object} point The point to clip\n * @param  {Object} box   The bounding box to clip to.\n * @returns {Object}       The clipped point.\n */\nexport function clipToBox(point, box) {\n  // Clip an {x, y} point to a box of size {width, height}\n  point.x = clip(point.x, 0, box.width);\n  point.y = clip(point.y, 0, box.height);\n}\n\nexport default clip;\n","import {\n  StackViewport,\n  Types,\n  VolumeViewport,\n  eventTarget,\n  EVENTS,\n  utilities as csUtils,\n  getEnabledElement,\n} from '@cornerstonejs/core';\nimport { ScrollOptions, EventTypes } from '../types';\n\n/**\n * It scrolls one slice in the Stack or Volume Viewport, it uses the options provided\n * to determine the slice to scroll to. For Stack Viewport, it scrolls in the 1 or -1\n * direction, for Volume Viewport, it uses the camera and focal point to determine the\n * slice to scroll to based on the spacings.\n * @param viewport - The viewport in which to scroll\n * @param options - Options to use for scrolling, including direction, invert, and volumeId\n * @returns\n */\nexport default function scroll(\n  viewport: Types.IStackViewport | Types.IVolumeViewport,\n  options: ScrollOptions\n): void {\n  // check if viewport is disabled then throw error\n  const enabledElement = getEnabledElement(viewport.element);\n\n  if (!enabledElement) {\n    throw new Error('Scroll::Viewport is not enabled (it might be disabled)');\n  }\n\n  if (\n    viewport instanceof StackViewport &&\n    viewport.getImageIds().length === 0\n  ) {\n    throw new Error('Scroll::Stack Viewport has no images');\n  }\n\n  const { type: viewportType } = viewport;\n  const { volumeId, delta } = options;\n\n  if (viewport instanceof StackViewport) {\n    viewport.scroll(delta, options.debounceLoading, options.loop);\n  } else if (viewport instanceof VolumeViewport) {\n    scrollVolume(viewport, volumeId, delta);\n  } else {\n    throw new Error(`Not implemented for Viewport Type: ${viewportType}`);\n  }\n}\n\nexport function scrollVolume(\n  viewport: VolumeViewport,\n  volumeId: string,\n  delta: number\n) {\n  const { numScrollSteps, currentStepIndex, sliceRangeInfo } =\n    csUtils.getVolumeViewportScrollInfo(viewport, volumeId);\n\n  if (!sliceRangeInfo) {\n    return;\n  }\n\n  const { sliceRange, spacingInNormalDirection, camera } = sliceRangeInfo;\n  const { focalPoint, viewPlaneNormal, position } = camera;\n\n  const { newFocalPoint, newPosition } = csUtils.snapFocalPointToSlice(\n    focalPoint,\n    position,\n    sliceRange,\n    viewPlaneNormal,\n    spacingInNormalDirection,\n    delta\n  );\n\n  viewport.setCamera({\n    focalPoint: newFocalPoint,\n    position: newPosition,\n  });\n  viewport.render();\n\n  const desiredStepIndex = currentStepIndex + delta;\n\n  if (\n    (desiredStepIndex > numScrollSteps || desiredStepIndex < 0) &&\n    viewport.getCurrentImageId() // Check that we are in the plane of acquistion\n  ) {\n    // One common use case of this trigger might be to load the next\n    // volume in a time series or the next segment of a partially loaded volume.\n\n    const VolumeScrollEventDetail = {\n      volumeId,\n      viewport,\n      delta,\n      desiredStepIndex,\n      currentStepIndex,\n      numScrollSteps,\n      currentImageId: viewport.getCurrentImageId(),\n    };\n\n    csUtils.triggerEvent(\n      eventTarget,\n      EVENTS.VOLUME_SCROLL_OUT_OF_BOUNDS,\n      VolumeScrollEventDetail as EventTypes.VolumeScrollOutOfBoundsEventDetail\n    );\n  }\n}\n","import {\n  getEnabledElement,\n  StackViewport,\n  VolumeViewport,\n  utilities as csUtils,\n  Types,\n} from '@cornerstonejs/core';\nimport JumpToSliceOptions from '../../types/JumpToSliceOptions';\nimport clip from '../clip';\nimport scroll from '../scroll';\n\n/**\n * It uses the imageIndex in the Options to scroll to the slice that is intended.\n * It works for both Stack and Volume viewports. In VolumeViewports, the imageIndex\n * should be given with respect to the index in the 3D image in the view direction\n * (i.e. the index of the slice in Axial, Sagittal, Coronal, or Oblique).\n *\n * @param element - the HTML Div element scrolling inside\n * @param options - the options used for jumping to a slice\n * @returns Promise that resolves to ImageIdIndex\n */\nasync function jumpToSlice(\n  element: HTMLDivElement,\n  options = {} as JumpToSliceOptions\n): Promise<void> {\n  const { imageIndex, debounceLoading, volumeId } = options;\n  const enabledElement = getEnabledElement(element);\n\n  if (!enabledElement) {\n    throw new Error('Element has been disabled');\n  }\n\n  const { viewport } = enabledElement;\n\n  const { imageIndex: currentImageIndex, numberOfSlices } = _getImageSliceData(\n    viewport,\n    debounceLoading\n  );\n\n  const imageIndexToJump = _getImageIndexToJump(numberOfSlices, imageIndex);\n  const delta = imageIndexToJump - currentImageIndex;\n\n  scroll(viewport, { delta, debounceLoading, volumeId });\n}\n\nfunction _getImageSliceData(\n  viewport: Types.IStackViewport | Types.IVolumeViewport,\n  debounceLoading?: boolean\n): Types.ImageSliceData {\n  if (viewport instanceof StackViewport) {\n    return {\n      numberOfSlices: viewport.getImageIds().length,\n      imageIndex: debounceLoading\n        ? viewport.getTargetImageIdIndex()\n        : viewport.getCurrentImageIdIndex(),\n    };\n  } else if (viewport instanceof VolumeViewport) {\n    return csUtils.getImageSliceDataForVolumeViewport(viewport);\n  } else {\n    throw new Error('Unsupported viewport type');\n  }\n}\n\nfunction _getImageIndexToJump(\n  numberOfSlices: number,\n  imageIndex: number\n): number {\n  const lastSliceIndex = numberOfSlices - 1;\n\n  return clip(imageIndex, 0, lastSliceIndex);\n}\n\nexport default jumpToSlice;\n","import { vec3 } from 'gl-matrix';\nimport {\n  getRenderingEngine,\n  Types,\n  metaData,\n  utilities,\n} from '@cornerstonejs/core';\nimport { Synchronizer } from '../../store';\nimport { jumpToSlice } from '../../utilities';\nimport areViewportsCoplanar from './areViewportsCoplanar ';\n/**\n * Synchronizer callback to synchronize the source viewport image to the\n * target viewports closest image in its stack. There are two scenarios\n *\n * 1) viewports are in the same frameOfReferenceUID then we can use the\n * absolute imagePositionPatient for the source viewport's current image\n * and set the target viewport's image to the closest image in its stack\n * (which might have different slice thickness so cannot use slice number)\n *\n * 2) viewports have different frameOfReferenceUIDs then we look inside the\n * registrationMetadataProvider to check if there is a corresponding matrix\n * for mapping between the source and target viewport if so it is used to\n * and is applied to the imagePositionPatient of the source viewport's to\n * get the imagePositionPatient of the target viewport's closest image in\n * its stack.\n * Note for 2) The consuming apps using Cornerstone3D (OHIF, etc) are responsible\n * to provide such data in the registrationMetadataProvider. This can be done\n * by various methods 1) Using spatialRegistrationModule inside dicom 2) assuming\n * the user has actually manually scrolled the target viewport to the correct\n * slice before initiating the synchronization 3) using some other method\n * But overall, the consuming app is responsible for providing the data.\n *\n *\n * @param synchronizerInstance - The Instance of the Synchronizer\n * @param sourceViewport - The list of IDs defining the source viewport.\n * @param targetViewport - The list of IDs defining the target viewport, never\n *   the same as sourceViewport.\n * @param cameraModifiedEvent - The CAMERA_MODIFIED event.\n */\nexport default async function stackImageSyncCallback(\n  synchronizerInstance: Synchronizer,\n  sourceViewport: Types.IViewportId,\n  targetViewport: Types.IViewportId\n): Promise<void> {\n  const renderingEngine = getRenderingEngine(targetViewport.renderingEngineId);\n  if (!renderingEngine) {\n    throw new Error(\n      `No RenderingEngine for Id: ${targetViewport.renderingEngineId}`\n    );\n  }\n\n  const sViewport = renderingEngine.getViewport(\n    sourceViewport.viewportId\n  ) as Types.IStackViewport;\n\n  const tViewport = renderingEngine.getViewport(\n    targetViewport.viewportId\n  ) as Types.IStackViewport;\n\n  const frameOfReferenceUID1 = sViewport.getFrameOfReferenceUID();\n  const frameOfReferenceUID2 = tViewport.getFrameOfReferenceUID();\n\n  const imageId1 = sViewport.getCurrentImageId();\n  const imagePlaneModule1 = metaData.get('imagePlaneModule', imageId1);\n  const sourceImagePositionPatient = imagePlaneModule1.imagePositionPatient;\n\n  const targetImageIds = tViewport.getImageIds();\n\n  if (!areViewportsCoplanar(sViewport, tViewport)) {\n    return;\n  }\n\n  if (frameOfReferenceUID1 === frameOfReferenceUID2) {\n    // if frames of references are the same we can use the absolute\n    // imagePositionPatient to find the closest image in the target viewport's stack\n    const closestImageIdIndex = _getClosestImageIdIndex(\n      sourceImagePositionPatient,\n      targetImageIds\n    );\n\n    if (\n      closestImageIdIndex.index !== -1 &&\n      tViewport.getCurrentImageIdIndex() !== closestImageIdIndex.index\n    ) {\n      // await tViewport.setImageIdIndex(closestImageIdIndex.index);\n      await jumpToSlice(tViewport.element, {\n        imageIndex: closestImageIdIndex.index,\n      });\n\n      return;\n    }\n  } else {\n    // if the frame of reference is different we need to use the registrationMetadataProvider\n    // and add that to the imagePositionPatient of the source viewport to get the\n    // imagePositionPatient of the target viewport's closest image in its stack\n    const registrationMatrixMat4 =\n      utilities.spatialRegistrationMetadataProvider.get(\n        'spatialRegistrationModule',\n        [targetViewport.viewportId, sourceViewport.viewportId]\n      );\n\n    if (!registrationMatrixMat4) {\n      throw new Error(\n        `No registration matrix found for sourceViewport: ${sourceViewport.viewportId} and targetViewport: ${targetViewport.viewportId}, viewports with different frameOfReferenceUIDs must have a registration matrix in the registrationMetadataProvider. Use calculateViewportsRegistrationMatrix to calculate the matrix.`\n      );\n    }\n\n    // apply the registration matrix to the source viewport's imagePositionPatient\n    // to get the target viewport's imagePositionPatient\n    const targetImagePositionPatientWithRegistrationMatrix = vec3.transformMat4(\n      vec3.create(),\n      sourceImagePositionPatient,\n      registrationMatrixMat4\n    );\n\n    // find the closest image in the target viewport's stack to the\n    // targetImagePositionPatientWithRegistrationMatrix\n    const closestImageIdIndex2 = _getClosestImageIdIndex(\n      targetImagePositionPatientWithRegistrationMatrix,\n      targetImageIds\n    );\n\n    if (\n      closestImageIdIndex2.index !== -1 &&\n      tViewport.getCurrentImageIdIndex() !== closestImageIdIndex2.index\n    ) {\n      await jumpToSlice(tViewport.element, {\n        imageIndex: closestImageIdIndex2.index,\n      });\n    }\n  }\n}\n\nfunction _getClosestImageIdIndex(targetPoint, imageIds) {\n  // todo: this does not assume orientation yet, but that can be added later\n  return imageIds.reduce(\n    (closestImageIdIndex, imageId, index) => {\n      const { imagePositionPatient } = metaData.get(\n        'imagePlaneModule',\n        imageId\n      );\n      const distance = vec3.distance(imagePositionPatient, targetPoint);\n\n      if (distance < closestImageIdIndex.distance) {\n        return {\n          distance,\n          index,\n        };\n      }\n      return closestImageIdIndex;\n    },\n    {\n      distance: Infinity,\n      index: -1,\n    }\n  );\n}\n","import { vec3 } from 'gl-matrix';\nimport { Types } from '@cornerstonejs/core';\n\nexport default function areViewportsCoplanar(\n  viewport1: Types.IStackViewport,\n  viewport2: Types.IStackViewport\n): boolean {\n  const { viewPlaneNormal: viewPlaneNormal1 } = viewport1.getCamera();\n  const { viewPlaneNormal: viewPlaneNormal2 } = viewport2.getCamera();\n  const dotProducts = vec3.dot(viewPlaneNormal1, viewPlaneNormal2);\n  return Math.abs(dotProducts) > 0.9;\n}\n","import { createSynchronizer } from '../../store/SynchronizerManager';\nimport { Enums } from '@cornerstonejs/core';\nimport stackImageSyncCallback from '../callbacks/stackImageSyncCallback';\nimport Synchronizer from '../../store/SynchronizerManager/Synchronizer';\n\nconst { STACK_NEW_IMAGE } = Enums.Events;\n\n/**\n * A helper that creates a new `Synchronizer` which listens to the `STACK_NEW_IMAGE`\n * rendering event and calls the `stackImageSyncCallback`.\n *\n * @param synchronizerName - The name of the synchronizer.\n * @returns A new `Synchronizer` instance.\n */\nexport default function createStackImageSynchronizer(\n  synchronizerName: string\n): Synchronizer {\n  const stackImageSynchronizer = createSynchronizer(\n    synchronizerName,\n    STACK_NEW_IMAGE,\n    stackImageSyncCallback\n  );\n\n  return stackImageSynchronizer;\n}\n","function _getHash(\n  annotationUID: string,\n  drawingElementType: string,\n  nodeUID: string\n): string {\n  return `${annotationUID}::${drawingElementType}::${nodeUID}`;\n}\n\nexport default _getHash;\n","export function _setAttributesIfNecessary(attributes, svgNode) {\n  Object.keys(attributes).forEach((key) => {\n    const currentValue = svgNode.getAttribute(key);\n    const newValue = attributes[key];\n    if (newValue === undefined || newValue === '') {\n      svgNode.removeAttribute(key);\n    } else if (currentValue !== newValue) {\n      svgNode.setAttribute(key, newValue);\n    }\n  });\n}\n\nexport default _setAttributesIfNecessary;\n","export function _setNewAttributesIfValid(attributes, svgNode) {\n  Object.keys(attributes).forEach((key) => {\n    const newValue = attributes[key];\n    if (newValue !== undefined && newValue !== '') {\n      svgNode.setAttribute(key, newValue);\n    }\n  });\n}\n\nexport default _setNewAttributesIfValid;\n","import type { Types } from '@cornerstonejs/core';\nimport { SVGDrawingHelper } from '../types';\n\nimport _getHash from './_getHash';\n\nimport _setAttributesIfNecessary from './_setAttributesIfNecessary';\nimport _setNewAttributesIfValid from './_setNewAttributesIfValid';\n\nfunction drawCircle(\n  svgDrawingHelper: SVGDrawingHelper,\n  annotationUID: string,\n  circleUID: string,\n  center: Types.Point2,\n  radius: number,\n  options = {},\n  dataId = ''\n): void {\n  const { color, fill, width, lineWidth, lineDash } = Object.assign(\n    {\n      color: 'dodgerblue',\n      fill: 'transparent',\n      width: '2',\n      lineDash: undefined,\n      lineWidth: undefined,\n    },\n    options\n  );\n\n  // for supporting both lineWidth and width options\n  const strokeWidth = lineWidth || width;\n\n  // variable for the namespace\n  const svgns = 'http://www.w3.org/2000/svg';\n  const svgNodeHash = _getHash(annotationUID, 'circle', circleUID);\n  const existingCircleElement = svgDrawingHelper.getSvgNode(svgNodeHash);\n\n  const attributes = {\n    cx: `${center[0]}`,\n    cy: `${center[1]}`,\n    r: `${radius}`,\n    stroke: color,\n    fill,\n    'stroke-width': strokeWidth,\n    'stroke-dasharray': lineDash,\n  };\n\n  if (existingCircleElement) {\n    _setAttributesIfNecessary(attributes, existingCircleElement);\n\n    svgDrawingHelper.setNodeTouched(svgNodeHash);\n  } else {\n    const newCircleElement = document.createElementNS(svgns, 'circle');\n\n    if (dataId !== '') {\n      newCircleElement.setAttribute('data-id', dataId);\n    }\n\n    _setNewAttributesIfValid(attributes, newCircleElement);\n\n    svgDrawingHelper.appendNode(newCircleElement, svgNodeHash);\n  }\n}\n\nexport default drawCircle;\n","import type { Types } from '@cornerstonejs/core';\nimport { SVGDrawingHelper } from '../types';\n\nimport _getHash from './_getHash';\nimport _setAttributesIfNecessary from './_setAttributesIfNecessary';\nimport _setNewAttributesIfValid from './_setNewAttributesIfValid';\n\nfunction drawEllipse(\n  svgDrawingHelper: SVGDrawingHelper,\n  annotationUID: string,\n  ellipseUID: string,\n  corner1: Types.Point2,\n  corner2: Types.Point2,\n  options = {},\n  dataId = ''\n): void {\n  const { color, width, lineWidth, lineDash } = Object.assign(\n    {\n      color: 'dodgerblue',\n      width: '2',\n      lineWidth: undefined,\n      lineDash: undefined,\n    },\n    options\n  );\n\n  // for supporting both lineWidth and width options\n  const strokeWidth = lineWidth || width;\n\n  const svgns = 'http://www.w3.org/2000/svg';\n  const svgNodeHash = _getHash(annotationUID, 'ellipse', ellipseUID);\n  const existingEllipse = svgDrawingHelper.getSvgNode(svgNodeHash);\n\n  const w = Math.abs(corner1[0] - corner2[0]);\n  const h = Math.abs(corner1[1] - corner2[1]);\n  const xMin = Math.min(corner1[0], corner2[0]);\n  const yMin = Math.min(corner1[1], corner2[1]);\n\n  const center = [xMin + w / 2, yMin + h / 2];\n  const radiusX = w / 2;\n  const radiusY = h / 2;\n\n  const attributes = {\n    cx: `${center[0]}`,\n    cy: `${center[1]}`,\n    rx: `${radiusX}`,\n    ry: `${radiusY}`,\n    stroke: color,\n    fill: 'transparent',\n    'stroke-width': strokeWidth,\n    'stroke-dasharray': lineDash,\n  };\n\n  if (existingEllipse) {\n    _setAttributesIfNecessary(attributes, existingEllipse);\n\n    svgDrawingHelper.setNodeTouched(svgNodeHash);\n  } else {\n    const svgEllipseElement = document.createElementNS(svgns, 'ellipse');\n\n    if (dataId !== '') {\n      svgEllipseElement.setAttribute('data-id', dataId);\n    }\n\n    _setNewAttributesIfValid(attributes, svgEllipseElement);\n\n    svgDrawingHelper.appendNode(svgEllipseElement, svgNodeHash);\n  }\n}\n\nexport default drawEllipse;\n","import type { Types } from '@cornerstonejs/core';\n\nimport _getHash from './_getHash';\nimport _setNewAttributesIfValid from './_setNewAttributesIfValid';\nimport _setAttributesIfNecessary from './_setAttributesIfNecessary';\nimport { SVGDrawingHelper } from '../types';\n\nfunction drawHandles(\n  svgDrawingHelper: SVGDrawingHelper,\n  annotationUID: string,\n  handleGroupUID: string,\n  handlePoints: Array<Types.Point2>,\n  options = {}\n): void {\n  const { color, handleRadius, width, lineWidth, fill, type, opacity } =\n    Object.assign(\n      {\n        color: 'dodgerblue',\n        handleRadius: '6',\n        width: '2',\n        lineWidth: undefined,\n        fill: 'transparent',\n        type: 'circle',\n        opacity: 1,\n      },\n      options\n    );\n\n  // for supporting both lineWidth and width options\n  const strokeWidth = lineWidth || width;\n\n  for (let i = 0; i < handlePoints.length; i++) {\n    const handle = handlePoints[i];\n\n    // variable for the namespace\n    const svgns = 'http://www.w3.org/2000/svg';\n    const svgNodeHash = _getHash(\n      annotationUID,\n      'handle',\n      `hg-${handleGroupUID}-index-${i}`\n    );\n\n    let attributes;\n    if (type === 'circle') {\n      attributes = {\n        cx: `${handle[0]}`,\n        cy: `${handle[1]}`,\n        r: handleRadius,\n        stroke: color,\n        fill,\n        'stroke-width': strokeWidth,\n        opacity: opacity,\n      };\n    } else if (type === 'rect') {\n      const handleRadiusFloat = parseFloat(handleRadius);\n      const side = handleRadiusFloat * 1.5;\n      const x = handle[0] - side * 0.5;\n      const y = handle[1] - side * 0.5;\n\n      attributes = {\n        x: `${x}`,\n        y: `${y}`,\n        width: `${side}`,\n        height: `${side}`,\n        stroke: color,\n        fill,\n        'stroke-width': strokeWidth,\n        rx: `${side * 0.1}`,\n        opacity: opacity,\n      };\n    } else {\n      throw new Error(`Unsupported handle type: ${type}`);\n    }\n\n    const existingHandleElement = svgDrawingHelper.getSvgNode(svgNodeHash);\n\n    if (existingHandleElement) {\n      _setAttributesIfNecessary(attributes, existingHandleElement);\n\n      svgDrawingHelper.setNodeTouched(svgNodeHash);\n    } else {\n      const newHandleElement = document.createElementNS(svgns, type);\n\n      _setNewAttributesIfValid(attributes, newHandleElement);\n\n      svgDrawingHelper.appendNode(newHandleElement, svgNodeHash);\n    }\n  }\n}\n\nexport default drawHandles;\n","import type { Types } from '@cornerstonejs/core';\n\nimport _getHash from './_getHash';\nimport _setNewAttributesIfValid from './_setNewAttributesIfValid';\nimport _setAttributesIfNecessary from './_setAttributesIfNecessary';\nimport { SVGDrawingHelper } from '../types';\n\nexport default function drawLine(\n  svgDrawingHelper: SVGDrawingHelper,\n  annotationUID: string,\n  lineUID: string,\n  start: Types.Point2,\n  end: Types.Point2,\n  options = {},\n  dataId = ''\n): void {\n  // if length is NaN return\n  if (isNaN(start[0]) || isNaN(start[1]) || isNaN(end[0]) || isNaN(end[1])) {\n    return;\n  }\n\n  const { color, width, lineWidth, lineDash, shadow } = Object.assign(\n    {\n      color: 'dodgerblue',\n      width: '2',\n      lineWidth: undefined,\n      lineDash: undefined,\n      shadow: undefined,\n    },\n    options\n  );\n\n  // for supporting both lineWidth and width options\n  const strokeWidth = lineWidth || width;\n\n  const svgns = 'http://www.w3.org/2000/svg';\n  const svgNodeHash = _getHash(annotationUID, 'line', lineUID);\n  const existingLine = svgDrawingHelper.getSvgNode(svgNodeHash);\n  const dropShadowStyle = shadow\n    ? `filter:url(#shadow-${svgDrawingHelper.svgLayerElement.id});`\n    : '';\n\n  const attributes = {\n    x1: `${start[0]}`,\n    y1: `${start[1]}`,\n    x2: `${end[0]}`,\n    y2: `${end[1]}`,\n    stroke: color,\n    style: dropShadowStyle,\n    'stroke-width': strokeWidth,\n    'stroke-dasharray': lineDash,\n  };\n\n  if (existingLine) {\n    // This is run to avoid re-rendering annotations that actually haven't changed\n    _setAttributesIfNecessary(attributes, existingLine);\n\n    svgDrawingHelper.setNodeTouched(svgNodeHash);\n  } else {\n    const newLine = document.createElementNS(svgns, 'line');\n\n    if (dataId !== '') {\n      newLine.setAttribute('data-id', dataId);\n    }\n\n    _setNewAttributesIfValid(attributes, newLine);\n\n    svgDrawingHelper.appendNode(newLine, svgNodeHash);\n  }\n}\n","import type { Types } from '@cornerstonejs/core';\nimport _getHash from './_getHash';\nimport _setNewAttributesIfValid from './_setNewAttributesIfValid';\nimport _setAttributesIfNecessary from './_setAttributesIfNecessary';\nimport { SVGDrawingHelper } from '../types';\n\n/**\n * Draws an SVG polyline with the given points.\n *\n * The `connectLastToFirst` option, if true, draws a closed polyline, with the\n * last point connected to the first.\n */\nexport default function drawPolyline(\n  svgDrawingHelper: SVGDrawingHelper,\n  annotationUID: string,\n  polylineUID: string,\n  points: Types.Point2[],\n  options: {\n    color?: string;\n    width?: number;\n    lineWidth?: number;\n    lineDash?: string;\n    connectLastToFirst?: boolean;\n  }\n): void {\n  if (points.length < 2) {\n    return;\n  }\n\n  const { color, width, lineWidth, lineDash } = Object.assign(\n    {\n      color: 'dodgerblue',\n      width: '2',\n      lineWidth: undefined,\n      lineDash: undefined,\n      connectLastToFirst: false,\n    },\n    options\n  );\n\n  // for supporting both lineWidth and width options\n  const strokeWidth = lineWidth || width;\n\n  const svgns = 'http://www.w3.org/2000/svg';\n  const svgNodeHash = _getHash(annotationUID, 'polyline', polylineUID);\n  const existingPolyLine = svgDrawingHelper.getSvgNode(svgNodeHash);\n\n  let pointsAttribute = '';\n\n  for (const point of points) {\n    pointsAttribute += `${point[0]}, ${point[1]} `;\n  }\n\n  if (options.connectLastToFirst) {\n    const firstPoint = points[0];\n\n    pointsAttribute += `${firstPoint[0]}, ${firstPoint[1]}`;\n  }\n\n  const attributes = {\n    points: pointsAttribute,\n    stroke: color,\n    fill: 'none',\n    'stroke-width': strokeWidth,\n    'stroke-dasharray': lineDash,\n  };\n\n  if (existingPolyLine) {\n    // This is run to avoid re-rendering annotations that actually haven't changed\n    _setAttributesIfNecessary(attributes, existingPolyLine);\n\n    svgDrawingHelper.setNodeTouched(svgNodeHash);\n  } else {\n    const newPolyLine = document.createElementNS(svgns, 'polyline');\n\n    _setNewAttributesIfValid(attributes, newPolyLine);\n\n    svgDrawingHelper.appendNode(newPolyLine, svgNodeHash);\n  }\n}\n","import type { Types } from '@cornerstonejs/core';\nimport { SVGDrawingHelper } from '../types';\n\nimport _getHash from './_getHash';\nimport _setAttributesIfNecessary from './_setAttributesIfNecessary';\n\n/**\n * Draws a textBox.\n *\n * @param textLines - The text to display.\n * @param position - The x/y position of the textbox\n * @param options - Options for the textBox.\n * @returns Bounding box; can be used for isPointNearTool\n */\nfunction drawTextBox(\n  svgDrawingHelper: SVGDrawingHelper,\n  annotationUID: string,\n  textUID: string,\n  textLines: Array<string>,\n  position: Types.Point2,\n  options = {}\n): SVGRect {\n  const mergedOptions = Object.assign(\n    {\n      fontFamily: 'Helvetica, Arial, sans-serif',\n      fontSize: '14px',\n      color: 'rgb(255, 255, 0)',\n      background: '',\n      padding: 25,\n      centerX: false,\n      centerY: true,\n    },\n    options\n  );\n\n  // Draw each of the text lines on top of the background box\n  const textGroupBoundingBox = _drawTextGroup(\n    svgDrawingHelper,\n    annotationUID,\n    textUID,\n    textLines,\n    position,\n    mergedOptions\n  );\n\n  return textGroupBoundingBox;\n}\n\nfunction _drawTextGroup(\n  svgDrawingHelper: SVGDrawingHelper,\n  annotationUID: string,\n  textUID: string,\n  textLines: Array<string> = [''],\n  position: Types.Point2,\n  options: any\n): SVGRect {\n  const { padding, color, fontFamily, fontSize, background } = options;\n\n  let textGroupBoundingBox;\n  const [x, y] = [position[0] + padding, position[1] + padding];\n  const svgns = 'http://www.w3.org/2000/svg';\n  const svgNodeHash = _getHash(annotationUID, 'text', textUID);\n  const existingTextGroup = svgDrawingHelper.getSvgNode(svgNodeHash);\n\n  // Todo: right now textBox gets a re-render even if the textBox has not changed\n  // and evenIf the attributes are not set again since they are the same.\n  if (existingTextGroup) {\n    // TODO: Iterate each node and update color? font-size?\n    const textElement = existingTextGroup.querySelector('text');\n    const textSpans = Array.from(textElement.children) as Array<SVGElement>;\n\n    for (let i = 0; i < textSpans.length; i++) {\n      const textSpanElement = textSpans[i];\n      const text = textLines[i] || '';\n\n      textSpanElement.textContent = text;\n    }\n\n    // if the textLines have changed size, we need to create textSpans for them\n    if (textLines.length > textSpans.length) {\n      for (let i = 0; i < textLines.length - textSpans.length; i++) {\n        const textLine = textLines[i + textSpans.length];\n        const textSpan = _createTextSpan(textLine);\n\n        textElement.appendChild(textSpan);\n      }\n\n      existingTextGroup.appendChild(textElement);\n      svgDrawingHelper.appendNode(existingTextGroup, svgNodeHash);\n    }\n\n    const textAttributes = {\n      fill: color,\n      'font-size': fontSize,\n      'font-family': fontFamily,\n    };\n\n    const textGroupAttributes = {\n      transform: `translate(${x} ${y})`,\n    };\n\n    // Todo: for some reason this does not work to not re-render the textBox\n    _setAttributesIfNecessary(textAttributes, textElement);\n    _setAttributesIfNecessary(textGroupAttributes, existingTextGroup);\n\n    textGroupBoundingBox = _drawTextBackground(existingTextGroup, background);\n\n    svgDrawingHelper.setNodeTouched(svgNodeHash);\n  } else {\n    const textGroup = document.createElementNS(svgns, 'g');\n\n    textGroup.setAttribute('transform', `translate(${x} ${y})`);\n\n    //\n    const textElement = _createTextElement(svgDrawingHelper, options);\n    for (let i = 0; i < textLines.length; i++) {\n      const textLine = textLines[i];\n      const textSpan = _createTextSpan(textLine);\n\n      textElement.appendChild(textSpan);\n    }\n\n    textGroup.appendChild(textElement);\n    svgDrawingHelper.appendNode(textGroup, svgNodeHash);\n    textGroupBoundingBox = _drawTextBackground(textGroup, background);\n  }\n\n  // We translate the group using `position`\n  // which means we also need to pluck those values when returning\n  // the bounding box\n  return Object.assign({}, textGroupBoundingBox, {\n    x,\n    y,\n    height: textGroupBoundingBox.height + padding,\n    width: textGroupBoundingBox.width + padding,\n  });\n}\n\nfunction _createTextElement(\n  svgDrawingHelper: SVGDrawingHelper,\n  options: any\n): SVGElement {\n  const { color, fontFamily, fontSize } = options;\n  const svgns = 'http://www.w3.org/2000/svg';\n  const textElement = document.createElementNS(svgns, 'text');\n  const noSelectStyle =\n    'user-select: none; pointer-events: none; -webkit-tap-highlight-color:  rgba(255, 255, 255, 0);';\n  const dropShadowStyle = `filter:url(#shadow-${svgDrawingHelper.svgLayerElement.id});`;\n  const combinedStyle = `${noSelectStyle}${dropShadowStyle}`;\n\n  // font-size=\"100\"\n  textElement.setAttribute('x', '0');\n  textElement.setAttribute('y', '0');\n  textElement.setAttribute('fill', color);\n  textElement.setAttribute('font-family', fontFamily);\n  textElement.setAttribute('font-size', fontSize);\n  textElement.setAttribute('style', combinedStyle);\n\n  return textElement;\n}\n\nfunction _createTextSpan(text): SVGElement {\n  const svgns = 'http://www.w3.org/2000/svg';\n  const textSpanElement = document.createElementNS(svgns, 'tspan');\n\n  // TODO: centerX\n  // (parent width / 2) - my width\n  // TODO: centerY\n\n  textSpanElement.setAttribute('x', '0');\n  textSpanElement.setAttribute('dy', '1.2em');\n  textSpanElement.textContent = text;\n\n  return textSpanElement;\n}\n\nfunction _drawTextBackground(group: SVGGElement, color: string) {\n  let element = group.querySelector('rect.background');\n\n  // If we have no background color, remove any element that exists and return\n  // the bounding box of the text\n  if (!color) {\n    if (element) {\n      group.removeChild(element);\n    }\n\n    return group.getBBox();\n  }\n\n  // Otherwise, check if we have a <rect> element. If not, create one\n  if (!element) {\n    element = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n    element.setAttribute('class', 'background');\n    group.insertBefore(element, group.firstChild);\n  }\n\n  // Get the text groups's bounding box and use it to draw the background rectangle\n  const bBox = group.getBBox();\n\n  const attributes = {\n    x: `${bBox.x}`,\n    y: `${bBox.y}`,\n    width: `${bBox.width}`,\n    height: `${bBox.height}`,\n    fill: color,\n  };\n\n  _setAttributesIfNecessary(attributes, element);\n\n  return bBox;\n}\n\nexport default drawTextBox;\n","import type { Types } from '@cornerstonejs/core';\n\n/**\n * Find the closest point to the target point\n *\n * @param sourcePoints - The potential source points.\n * @param targetPoint - The target point, used to find the closest source.\n * @returns The closest point in the array of point sources\n */\nexport default function findClosestPoint(\n  sourcePoints: Array<Types.Point2>,\n  targetPoint: Types.Point2\n): Types.Point2 {\n  let minPoint = [0, 0];\n  let minDistance = Number.MAX_SAFE_INTEGER;\n\n  sourcePoints.forEach(function (sourcePoint) {\n    const distance = _distanceBetween(targetPoint, sourcePoint);\n\n    if (distance < minDistance) {\n      minDistance = distance;\n      minPoint = [...sourcePoint];\n    }\n  });\n\n  return minPoint as Types.Point2;\n}\n\n/**\n *\n * @private\n * @param p1\n * @param p2\n */\nfunction _distanceBetween(p1: Types.Point2, p2: Types.Point2): number {\n  const [x1, y1] = p1;\n  const [x2, y2] = p2;\n\n  return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n}\n","import type { Types } from '@cornerstonejs/core';\n\nimport drawLine from './drawLine';\nimport findClosestPoint from '../utilities/math/vec2/findClosestPoint';\nimport { PlanarBoundingBox, SVGDrawingHelper } from '../types';\n\n/**\n * Draw a link between an annotation to a box.\n */\nfunction drawLink(\n  svgDrawingHelper: SVGDrawingHelper,\n  annotationUID: string,\n  linkUID: string,\n  // Find closest point to approx. bounding box\n  annotationAnchorPoints: Array<Types.Point2>,\n  refPoint: Types.Point2,\n  // Find bounding box point that's closest to our identified\n  // start point\n  boundingBox: PlanarBoundingBox,\n  options = {}\n): void {\n  // The closest anchor point (for the annotation) to the\n  // text box / bounding box\n  const start =\n    annotationAnchorPoints.length > 0\n      ? findClosestPoint(annotationAnchorPoints, refPoint)\n      : refPoint;\n\n  // Calculate the midpoints of the bounding box\n  const boundingBoxPoints = _boundingBoxPoints(boundingBox);\n  // Find the closest textBox midpoint to the annotation's anchor/start point\n  const end = findClosestPoint(boundingBoxPoints, start);\n\n  // Finally we draw the dashed linking line\n  const mergedOptions = Object.assign(\n    {\n      color: 'rgb(255, 255, 0)',\n      lineWidth: '1',\n      lineDash: '2,3',\n    },\n    options\n  );\n\n  drawLine(\n    svgDrawingHelper,\n    annotationUID,\n    `link-${linkUID}`,\n    start,\n    end,\n    mergedOptions\n  );\n}\n\n/**\n * Find potential anchor points for a given bounding box. For example, it may\n * look nicer to draw a line from the \"middle left\" of a bounding box to an\n * annotation (instead of from a corner). This function calculates those points\n *\n * @param boundingBox\n */\nfunction _boundingBoxPoints(\n  boundingBox: PlanarBoundingBox\n): Array<Types.Point2> {\n  const { x: left, y: top, height, width } = boundingBox;\n  const halfWidth = width / 2;\n  const halfHeight = height / 2;\n\n  const topMiddle = [left + halfWidth, top] as Types.Point2;\n  const leftMiddle = [left, top + halfHeight] as Types.Point2;\n  const bottomMiddle = [left + halfWidth, top + height] as Types.Point2;\n  const rightMiddle = [left + width, top + halfHeight] as Types.Point2;\n\n  return [topMiddle, leftMiddle, bottomMiddle, rightMiddle];\n}\n\nexport default drawLink;\n","import type { Types } from '@cornerstonejs/core';\n\nimport drawTextBox from './drawTextBox';\nimport drawLink from './drawLink';\nimport { SVGDrawingHelper } from '../types';\n\nfunction drawLinkedTextBox(\n  svgDrawingHelper: SVGDrawingHelper,\n  annotationUID: string,\n  textBoxUID: string,\n  //\n  textLines: Array<string>,\n  textBoxPosition: Types.Point2,\n  annotationAnchorPoints: Array<Types.Point2>,\n  textBox: unknown,\n  options = {}\n  // TODO: yCenter as an option\n): SVGRect {\n  const mergedOptions = Object.assign(\n    {\n      handleRadius: '6',\n      centering: {\n        x: false,\n        y: true, // yCenter,\n      },\n    },\n    options\n  );\n\n  // Draw the text box\n  const canvasBoundingBox = drawTextBox(\n    svgDrawingHelper,\n    annotationUID,\n    textBoxUID,\n    textLines,\n    textBoxPosition,\n    mergedOptions\n  );\n  // if (textBox.hasMoved) {\n  //   // Draw dashed link line between tool and text\n  drawLink(\n    svgDrawingHelper,\n    annotationUID,\n    textBoxUID,\n    annotationAnchorPoints, // annotationAnchorPoints\n    textBoxPosition, // refPoint (text)\n    canvasBoundingBox, // textBoxBoundingBox\n    mergedOptions\n  );\n  // }\n\n  // const { top, left, width, height } = canvasBoundingBox\n\n  // textBox.worldBoundingBox = {\n  //   topLeft: canvasToWorld([left, top]),\n  //   topRight: canvasToWorld([left + width, top]),\n  //   bottomLeft: canvasToWorld([left, top + height]),\n  //   bottomRight: canvasToWorld([left + width, top + height]),\n  // }\n\n  return canvasBoundingBox;\n}\n\nexport default drawLinkedTextBox;\n","import type { Types } from '@cornerstonejs/core';\n\nimport _getHash from './_getHash';\nimport _setAttributesIfNecessary from './_setAttributesIfNecessary';\nimport _setNewAttributesIfValid from './_setNewAttributesIfValid';\nimport { SVGDrawingHelper } from '../types';\n\n// <rect x=\"120\" y=\"100\" width=\"100\" height=\"100\" />\nexport default function drawRect(\n  svgDrawingHelper: SVGDrawingHelper,\n  annotationUID: string,\n  rectangleUID: string,\n  start: Types.Point2,\n  end: Types.Point2,\n  options = {},\n  dataId = ''\n): void {\n  const {\n    color,\n    width: _width,\n    lineWidth,\n    lineDash,\n  } = Object.assign(\n    {\n      color: 'dodgerblue',\n      width: '2',\n      lineWidth: undefined,\n      lineDash: undefined,\n    },\n    options\n  );\n\n  // for supporting both lineWidth and width options\n  const strokeWidth = lineWidth || _width;\n\n  const svgns = 'http://www.w3.org/2000/svg';\n  const svgNodeHash = _getHash(annotationUID, 'rect', rectangleUID);\n  const existingRect = svgDrawingHelper.getSvgNode(svgNodeHash);\n\n  const tlhc = [Math.min(start[0], end[0]), Math.min(start[1], end[1])];\n  const width = Math.abs(start[0] - end[0]);\n  const height = Math.abs(start[1] - end[1]);\n\n  const attributes = {\n    x: `${tlhc[0]}`,\n    y: `${tlhc[1]}`,\n    width: `${width}`,\n    height: `${height}`,\n    stroke: color,\n    fill: 'transparent',\n    'stroke-width': strokeWidth,\n    'stroke-dasharray': lineDash,\n  };\n\n  if (existingRect) {\n    _setAttributesIfNecessary(attributes, existingRect);\n\n    svgDrawingHelper.setNodeTouched(svgNodeHash);\n  } else {\n    const svgRectElement = document.createElementNS(svgns, 'rect');\n\n    if (dataId !== '') {\n      svgRectElement.setAttribute('data-id', dataId);\n    }\n\n    _setNewAttributesIfValid(attributes, svgRectElement);\n\n    svgDrawingHelper.appendNode(svgRectElement, svgNodeHash);\n  }\n}\n","import type { Types } from '@cornerstonejs/core';\nimport { SVGDrawingHelper } from '../types';\nimport drawLine from './drawLine';\n\nexport default function drawArrow(\n  svgDrawingHelper: SVGDrawingHelper,\n  annotationUID: string,\n  arrowUID: string,\n  start: Types.Point2,\n  end: Types.Point2,\n  options = {}\n): void {\n  // if length is NaN return\n  if (isNaN(start[0]) || isNaN(start[1]) || isNaN(end[0]) || isNaN(end[1])) {\n    return;\n  }\n\n  const { color, width, lineWidth, lineDash } = Object.assign(\n    {\n      color: 'dodgerblue',\n      width: '2',\n      lineWidth: undefined,\n      lineDash: undefined,\n    },\n    options\n  );\n\n  // The line itself\n  drawLine(svgDrawingHelper, annotationUID, arrowUID, start, end, {\n    color,\n    width,\n    lineWidth,\n    lineDash,\n  });\n\n  // Drawing the head arrow with two lines\n  // Variables to be used when creating the arrow\n  const headLength = 10;\n  const angle = Math.atan2(end[1] - start[1], end[0] - start[0]);\n\n  const firstLine = {\n    start: [\n      end[0] - headLength * Math.cos(angle - Math.PI / 7),\n      end[1] - headLength * Math.sin(angle - Math.PI / 7),\n    ] as Types.Point2,\n    end: end,\n  };\n\n  const secondLine = {\n    start: [\n      end[0] - headLength * Math.cos(angle + Math.PI / 7),\n      end[1] - headLength * Math.sin(angle + Math.PI / 7),\n    ] as Types.Point2,\n    end: end,\n  };\n\n  drawLine(\n    svgDrawingHelper,\n    annotationUID,\n    '2',\n    firstLine.start,\n    firstLine.end,\n    {\n      color,\n      width,\n      lineWidth,\n    }\n  );\n\n  drawLine(\n    svgDrawingHelper,\n    annotationUID,\n    '3',\n    secondLine.start,\n    secondLine.end,\n    {\n      color,\n      width,\n      lineWidth,\n    }\n  );\n}\n","import { getEnabledElement } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { AnnotationTool, BaseTool } from '../tools';\nimport { Annotation } from '../types';\nimport { getAnnotations } from '../stateManagement/annotation/annotationState';\nimport * as ToolGroupManager from '../store/ToolGroupManager';\n\n/**\n * Get the annotation that is close to the provided canvas point, it will return\n * the first annotation that is found.\n *\n * @param element - The element to search for an annotation on.\n * @param canvasPoint - The canvasPoint on the page where the user clicked.\n * @param proximity - The distance from the canvasPoint to the annotation.\n * @returns The annotation for the element\n */\nfunction getAnnotationNearPoint(\n  element: HTMLDivElement,\n  canvasPoint: Types.Point2,\n  proximity = 5\n): Annotation | null {\n  // Todo: this function should return closest annotation, BUT, we are not using\n  // the function anywhere.\n  const enabledElement = getEnabledElement(element);\n  if (!enabledElement) {\n    throw new Error('getAnnotationNearPoint: enabledElement not found');\n  }\n\n  return getAnnotationNearPointOnEnabledElement(\n    enabledElement,\n    canvasPoint,\n    proximity\n  );\n}\n\n/**\n * \"Find the annotation near the point on the enabled element.\" it will return the\n * first annotation that is found.\n *\n * @param enabledElement - The element that is currently active.\n * @param point - The point to search near.\n * @param proximity - The distance from the point that the annotation must\n * be within.\n * @returns A Annotation object.\n */\nfunction getAnnotationNearPointOnEnabledElement(\n  enabledElement: Types.IEnabledElement,\n  point: Types.Point2,\n  proximity: number\n): Annotation | null {\n  // Todo: this function should return closest annotation, BUT, we are not using\n  // the function anywhere.\n  const { renderingEngineId, viewportId } = enabledElement;\n  const toolGroup = ToolGroupManager.getToolGroupForViewport(\n    viewportId,\n    renderingEngineId\n  );\n\n  if (!toolGroup) {\n    return null;\n  }\n\n  const { _toolInstances: tools } = toolGroup;\n  for (const name in tools) {\n    const found = findAnnotationNearPointByTool(\n      tools[name],\n      enabledElement,\n      point,\n      proximity\n    );\n    if (found) {\n      return found;\n    }\n  }\n\n  return null;\n}\n\n/**\n * For the provided toolClass, it will find the annotation that is near the point,\n * it will return the first annotation that is found.\n *\n * @param tool - AnnotationTool\n * @param enabledElement - The element that is currently active.\n * @param point - The point in the image where the user clicked.\n * @param proximity - The distance from the point that the tool must be\n * within to be considered \"near\" the point.\n * @returns The annotation object that is being returned is the annotation object that\n * is being used in the tool.\n */\nfunction findAnnotationNearPointByTool(\n  tool: AnnotationTool,\n  enabledElement: Types.IEnabledElement,\n  point: Types.Point2,\n  proximity: number\n): Annotation | null {\n  // Todo: this function does not return closest annotation. It just returns\n  // the first annotation that is found in the proximity. BUT, we are not using\n  // the function anywhere.\n  const { viewport } = enabledElement;\n\n  const annotations = getAnnotations(\n    (tool.constructor as typeof BaseTool).toolName,\n    viewport?.element\n  );\n  const currentId = viewport?.getCurrentImageId?.();\n  if (annotations?.length) {\n    const { element } = enabledElement.viewport;\n    for (const annotation of annotations) {\n      const referencedImageId = annotation.metadata?.referencedImageId;\n      if (\n        (currentId && referencedImageId && currentId !== referencedImageId) ||\n        !tool.isPointNearTool\n      ) {\n        continue;\n      }\n\n      if (\n        tool.isPointNearTool(element, annotation, point, proximity, '') ||\n        tool.getHandleNearImagePoint(element, annotation, point, proximity)\n      ) {\n        return annotation;\n      }\n    }\n  }\n  return null;\n}\n\nexport { getAnnotationNearPoint, getAnnotationNearPointOnEnabledElement };\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @since 0.1.0\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * isObject({})\n * // => true\n *\n * isObject([1, 2, 3])\n * // => true\n *\n * isObject(Function)\n * // => true\n *\n * isObject(null)\n * // => false\n */\nfunction isObject(value) {\n  const type = typeof value;\n\n  return value !== null && (type === 'object' || type === 'function');\n}\n\nexport default isObject;\n","import isObject from './isObject';\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked, or until the next browser frame is drawn. The debounced function\n * comes with a `cancel` method to cancel delayed `func` invocations and a\n * `flush` method to immediately invoke them. Provide `options` to indicate\n * whether `func` should be invoked on the leading and/or trailing edge of the\n * `wait` timeout. The `func` is invoked with the last arguments provided to the\n * debounced function. Subsequent calls to the debounced function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `debounce` and `throttle`.\n *\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0]\n *  The number of milliseconds to delay; if omitted, `requestAnimationFrame` is\n *  used (if available).\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', debounce(calculateLayout, 150))\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }))\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * const debounced = debounce(batchLog, 250, { 'maxWait': 1000 })\n * const source = new EventSource('/stream')\n * jQuery(source).on('message', debounced)\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel)\n *\n * // Check for pending invocations.\n * const status = debounced.pending() ? \"Pending...\" : \"Ready\"\n */\nfunction debounce(func, wait, options) {\n  let lastArgs, lastThis, maxWait, result, timerId, lastCallTime;\n\n  let lastInvokeTime = 0;\n  let leading = false;\n  let maxing = false;\n  let trailing = true;\n\n  // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.\n  const useRAF =\n    !wait && wait !== 0 && typeof window.requestAnimationFrame === 'function';\n\n  if (typeof func !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n  wait = Number(wait) || 0;\n  if (isObject(options)) {\n    leading = Boolean(options.leading);\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? Math.max(Number(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? Boolean(options.trailing) : trailing;\n  }\n\n  function invokeFunc(time) {\n    const args = lastArgs;\n    const thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n\n    return result;\n  }\n\n  function startTimer(pendingFunc, wait) {\n    if (useRAF) {\n      return window.requestAnimationFrame(pendingFunc);\n    }\n\n    return setTimeout(pendingFunc, wait);\n  }\n\n  function cancelTimer(id) {\n    if (useRAF) {\n      return window.cancelAnimationFrame(id);\n    }\n    clearTimeout(id);\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = startTimer(timerExpired, wait);\n\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    const timeSinceLastCall = time - lastCallTime;\n    const timeSinceLastInvoke = time - lastInvokeTime;\n    const timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    const timeSinceLastCall = time - lastCallTime;\n    const timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (\n      lastCallTime === undefined ||\n      timeSinceLastCall >= wait ||\n      timeSinceLastCall < 0 ||\n      (maxing && timeSinceLastInvoke >= maxWait)\n    );\n  }\n\n  function timerExpired() {\n    const time = Date.now();\n\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = startTimer(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      cancelTimer(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(Date.now());\n  }\n\n  function pending() {\n    return timerId !== undefined;\n  }\n\n  function debounced(...args) {\n    const time = Date.now();\n    const isInvoking = shouldInvoke(time);\n\n    lastArgs = args;\n    lastThis = this; // eslint-disable-line consistent-this\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = startTimer(timerExpired, wait);\n\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = startTimer(timerExpired, wait);\n    }\n\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  debounced.pending = pending;\n\n  return debounced;\n}\n\nexport default debounce;\n","import debounce from './debounce';\nimport isObject from './isObject';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds (or once per browser frame). The throttled function\n * comes with a `cancel` method to cancel delayed `func` invocations and a\n * `flush` method to immediately invoke them. Provide `options` to indicate\n * whether `func` should be invoked on the leading and/or trailing edge of the\n * `wait` timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * If `wait` is omitted in an environment with `requestAnimationFrame`, `func`\n * invocation will be deferred until the next frame is drawn (typically about\n * 16ms).\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `throttle` and `debounce`.\n *\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0]\n *  The number of milliseconds to throttle invocations to; if omitted,\n *  `requestAnimationFrame` is used (if available).\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', throttle(updatePosition, 100))\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * const throttled = throttle(renewToken, 300000, { 'trailing': false })\n * jQuery(element).on('click', throttled)\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel)\n */\nfunction throttle(func, wait, options) {\n  let leading = true;\n  let trailing = true;\n\n  if (typeof func !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? Boolean(options.leading) : leading;\n    trailing = 'trailing' in options ? Boolean(options.trailing) : trailing;\n  }\n\n  return debounce(func, wait, {\n    leading,\n    trailing,\n    maxWait: wait,\n  });\n}\n\nexport default throttle;\n","import { utilities, Enums } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nconst { calibratedPixelSpacingMetadataProvider } = utilities;\n\n/**\n * It adds the provided spacing to the Cornerstone internal calibratedPixelSpacing\n * metadata provider, then it invalidates all the tools that have the imageId as\n * their reference imageIds. Finally, it triggers a re-render for invalidated annotations.\n * @param imageId - ImageId for the calibrated image\n * @param rowPixelSpacing - Spacing in row direction\n * @param calibrationOrScale - either the calibration object or a scale value\n */\nexport default function calibrateImageSpacing(\n  imageId: string,\n  renderingEngine: Types.IRenderingEngine,\n  calibrationOrScale: Types.IImageCalibration | number\n): void {\n  // Handle simple parameter version\n  if (typeof calibrationOrScale === 'number') {\n    calibrationOrScale = {\n      type: Enums.CalibrationTypes.USER,\n      scale: calibrationOrScale,\n    };\n  }\n  // 1. Add the calibratedPixelSpacing metadata to the metadata\n  calibratedPixelSpacingMetadataProvider.add(imageId, calibrationOrScale);\n\n  // 2. Update the actor for stackViewports\n  const viewports = renderingEngine.getStackViewports();\n\n  // 2.1 If imageId is already being used in a stackViewport -> update actor\n  viewports.forEach((viewport) => {\n    const imageIds = viewport.getImageIds();\n    if (imageIds.includes(imageId)) {\n      viewport.calibrateSpacing(imageId);\n    }\n  });\n\n  // 2.2 If imageId is cached but not being displayed in a viewport, stackViewport\n  // will handle using the calibratedPixelSpacing since it has been added\n  // to the provider\n}\n","import { vec3 } from 'gl-matrix';\nimport type { Types } from '@cornerstonejs/core';\nimport type { vtkImageData } from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport BoundsIJK from '../types/BoundsIJK';\n\nexport type PointInShapeCallback = ({\n  value,\n  index,\n  pointIJK,\n  pointLPS,\n}: {\n  value: number;\n  index: number;\n  pointIJK: Types.Point3;\n  pointLPS: Types.Point3;\n}) => void;\n\nexport type ShapeFnCriteria = (\n  pointIJK: Types.Point3,\n  pointLPS: Types.Point3\n) => boolean;\n\n/**\n * For each point in the image (If boundsIJK is not provided, otherwise, for each\n * point in the provided bounding box), It runs the provided callback IF the point\n * passes the provided criteria to be inside the shape (which is defined by the\n * provided pointInShapeFn)\n *\n * @param imageData - The image data object.\n * @param dimensions - The dimensions of the image.\n * @param pointInShapeFn - A function that takes a point in LPS space and returns\n * true if the point is in the shape and false if it is not.\n * @param callback - A function that will be called for\n * every point in the shape.\n * @param boundsIJK - The bounds of the volume in IJK coordinates.\n */\nexport default function pointInShapeCallback(\n  imageData: vtkImageData | Types.CPUImageData,\n  pointInShapeFn: ShapeFnCriteria,\n  callback: PointInShapeCallback,\n  boundsIJK?: BoundsIJK\n): void {\n  let iMin, iMax, jMin, jMax, kMin, kMax;\n\n  let scalarData;\n\n  // if getScalarData is a method on imageData\n  if ((imageData as Types.CPUImageData).getScalarData) {\n    scalarData = (imageData as Types.CPUImageData).getScalarData();\n  } else {\n    scalarData = (imageData as vtkImageData)\n      .getPointData()\n      .getScalars()\n      .getData();\n  }\n\n  const dimensions = imageData.getDimensions();\n\n  if (!boundsIJK) {\n    iMin = 0;\n    iMax = dimensions[0];\n    jMin = 0;\n    jMax = dimensions[1];\n    kMin = 0;\n    kMax = dimensions[2];\n  } else {\n    [[iMin, iMax], [jMin, jMax], [kMin, kMax]] = boundsIJK;\n  }\n\n  const start = vec3.fromValues(iMin, jMin, kMin);\n\n  const direction = imageData.getDirection();\n  const rowCosines = direction.slice(0, 3);\n  const columnCosines = direction.slice(3, 6);\n  const scanAxisNormal = direction.slice(6, 9);\n\n  const spacing = imageData.getSpacing();\n  const [rowSpacing, columnSpacing, scanAxisSpacing] = spacing;\n\n  // @ts-ignore will be fixed in vtk-master\n  const worldPosStart = imageData.indexToWorld(start);\n\n  const rowStep = vec3.fromValues(\n    rowCosines[0] * rowSpacing,\n    rowCosines[1] * rowSpacing,\n    rowCosines[2] * rowSpacing\n  );\n\n  const columnStep = vec3.fromValues(\n    columnCosines[0] * columnSpacing,\n    columnCosines[1] * columnSpacing,\n    columnCosines[2] * columnSpacing\n  );\n\n  const scanAxisStep = vec3.fromValues(\n    scanAxisNormal[0] * scanAxisSpacing,\n    scanAxisNormal[1] * scanAxisSpacing,\n    scanAxisNormal[2] * scanAxisSpacing\n  );\n\n  const yMultiple = dimensions[0];\n  const zMultiple = dimensions[0] * dimensions[1];\n\n  for (let k = kMin; k <= kMax; k++) {\n    for (let j = jMin; j <= jMax; j++) {\n      for (let i = iMin; i <= iMax; i++) {\n        const pointIJK: Types.Point3 = [i, j, k];\n        const dI = i - iMin;\n        const dJ = j - jMin;\n        const dK = k - kMin;\n\n        const startWorld = worldPosStart;\n\n        const pointLPS: Types.Point3 = [\n          startWorld[0] +\n            dI * rowStep[0] +\n            dJ * columnStep[0] +\n            dK * scanAxisStep[0],\n          startWorld[1] +\n            dI * rowStep[1] +\n            dJ * columnStep[1] +\n            dK * scanAxisStep[1],\n          startWorld[2] +\n            dI * rowStep[2] +\n            dJ * columnStep[2] +\n            dK * scanAxisStep[2],\n        ];\n\n        if (pointInShapeFn(pointLPS, pointIJK)) {\n          const index = k * zMultiple + j * yMultiple + i;\n          const value = scalarData[index];\n\n          callback({ value, index, pointIJK, pointLPS });\n        }\n      }\n    }\n  }\n}\n","import type { Types } from '@cornerstonejs/core';\n\n/**\n * With a given vertices (points) coordinates in IJK, it calculates the minimum and maximum\n * coordinate in each axis, and returns them. If dimensions are provided it also\n * clip the min, max to the provided width, height and depth\n *\n * @param points - shape corner points coordinates (IJK)\n * @param dimensions - dimensions of the image\n * @returns [[xMin,xMax],[yMin,yMax], [zMin,zMax]]\n */\nfunction getBoundingBoxAroundShape(\n  points: Types.Point3[],\n  dimensions?: Types.Point3\n): [Types.Point2, Types.Point2, Types.Point2] {\n  let xMin = Infinity;\n  let xMax = 0;\n  let yMin = Infinity;\n  let yMax = 0;\n  let zMin = Infinity;\n  let zMax = 0;\n\n  points.forEach((p) => {\n    xMin = Math.min(p[0], xMin);\n    xMax = Math.max(p[0], xMax);\n    yMin = Math.min(p[1], yMin);\n    yMax = Math.max(p[1], yMax);\n    zMin = Math.min(p[2], zMin);\n    zMax = Math.max(p[2], zMax);\n  });\n\n  xMin = Math.floor(xMin);\n  xMax = Math.floor(xMax);\n  yMin = Math.floor(yMin);\n  yMax = Math.floor(yMax);\n  zMin = Math.floor(zMin);\n  zMax = Math.floor(zMax);\n\n  if (dimensions) {\n    // clip the min, max to the provided width, height and depth\n    const [width, height, depth] = dimensions;\n    xMin = Math.max(0, xMin);\n    xMax = Math.min(width - 1, xMax);\n    yMin = Math.max(0, yMin);\n    yMax = Math.min(height - 1, yMax);\n    zMin = Math.max(0, zMin);\n    zMax = Math.min(depth - 1, zMax);\n  }\n\n  return [\n    [xMin, xMax],\n    [yMin, yMax],\n    [zMin, zMax],\n  ];\n}\n\nexport default getBoundingBoxAroundShape;\n","import { utilities as csUtils } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport type { vtkImageData } from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport { vec3 } from 'gl-matrix';\nimport { pointInSphere } from './math/sphere';\nimport pointInShapeCallback, {\n  PointInShapeCallback,\n} from './pointInShapeCallback';\nimport { BoundsIJK } from '../types';\nimport { getBoundingBoxAroundShape } from './boundingBox';\n\nconst { transformWorldToIndex } = csUtils;\n\n/**\n * Given an imageData, and the great circle top and bottom points of a sphere,\n * this function will run the callback for each point of the imageData that is\n * within the sphere defined by the great circle points. If the viewport\n * is provided, region of interest will be an accurate approximation of the\n * sphere (using viewport camera), and the resulting performance will be\n * better.\n *\n * @privateRemarks great circle also known as orthodrome is the intersection of\n * the sphere and the plane that passes through the center of the sphere\n *\n * @param imageData - The volume imageData\n * @param circlePoints - bottom and top points of the great circle in world coordinates\n * @param callback - A callback function that will be called for each point in the shape.\n */\nexport default function pointInSurroundingSphereCallback(\n  imageData: vtkImageData,\n  circlePoints: [Types.Point3, Types.Point3],\n  callback: PointInShapeCallback,\n  viewport?: Types.IVolumeViewport\n): void {\n  // We can run the sphere equation to determine if a point is inside\n  // the sphere; however, since the imageData dimensions can be quite large, we\n  // can narrow down the search by estimating the bounds of the sphere in index\n  // space.\n  const { boundsIJK, centerWorld, radiusWorld } = _getBounds(\n    circlePoints,\n    imageData,\n    viewport\n  );\n\n  const sphereObj = {\n    center: centerWorld,\n    radius: radiusWorld,\n  };\n\n  pointInShapeCallback(\n    imageData,\n    (pointLPS) => pointInSphere(sphereObj, pointLPS),\n    callback,\n    boundsIJK\n  );\n}\n\nfunction _getBounds(\n  circlePoints: [Types.Point3, Types.Point3],\n  imageData: vtkImageData,\n  viewport\n): {\n  boundsIJK: BoundsIJK;\n  centerWorld: Types.Point3;\n  radiusWorld: number;\n} {\n  const [bottom, top] = circlePoints;\n\n  // Sphere center in world\n  const centerWorld = vec3.fromValues(\n    (bottom[0] + top[0]) / 2,\n    (bottom[1] + top[1]) / 2,\n    (bottom[2] + top[2]) / 2\n  );\n\n  // sphere radius in world\n  const radiusWorld = vec3.distance(bottom, top) / 2;\n\n  let boundsIJK;\n\n  if (!viewport) {\n    // If no viewport is provide (no camera), we can estimate the bounding box\n    // of the sphere in index space.\n    // This is done by calculating the maximum value for radius in the index\n    // space (since the radius is in world space, we need to convert it to index, and\n    // each dimensions can have a different scale factor). Therefore, by finding\n    // the minimum spacing value in the imageData, we can calculate the maximum\n    // radius in index space and use that to calculate the bounds of the sphere\n    // This will not be accurate, but it is a good first approximation.\n    // sphere center in index\n    const centerIJK = transformWorldToIndex(\n      imageData,\n      centerWorld as Types.Point3\n    );\n\n    const spacings = imageData.getSpacing();\n    const minSpacing = Math.min(...spacings);\n\n    const maxRadiusIJK = Math.ceil(radiusWorld / minSpacing);\n\n    boundsIJK = [\n      [centerIJK[0] - maxRadiusIJK, centerIJK[0] + maxRadiusIJK],\n      [centerIJK[1] - maxRadiusIJK, centerIJK[1] + maxRadiusIJK],\n      [centerIJK[2] - maxRadiusIJK, centerIJK[2] + maxRadiusIJK],\n    ];\n\n    return {\n      boundsIJK,\n      centerWorld: centerWorld as Types.Point3,\n      radiusWorld,\n    };\n  }\n\n  boundsIJK = _computeBoundsIJKWithCamera(\n    imageData,\n    viewport,\n    circlePoints,\n    centerWorld,\n    radiusWorld\n  );\n\n  return {\n    boundsIJK,\n    centerWorld: centerWorld as Types.Point3,\n    radiusWorld,\n  };\n}\n\nfunction _computeBoundsIJKWithCamera(\n  imageData,\n  viewport,\n  circlePoints,\n  centerWorld,\n  radiusWorld\n) {\n  const [bottom, top] = circlePoints;\n\n  const dimensions = imageData.getDimensions() as Types.Point3;\n  const camera = viewport.getCamera();\n\n  // Calculate viewRight from the camera, this will get used in order to\n  // calculate circles topLeft and bottomRight on different planes of intersection\n  // between sphere and viewPlane\n  const viewUp = vec3.fromValues(\n    camera.viewUp[0],\n    camera.viewUp[1],\n    camera.viewUp[2]\n  );\n  const viewPlaneNormal = vec3.fromValues(\n    camera.viewPlaneNormal[0],\n    camera.viewPlaneNormal[1],\n    camera.viewPlaneNormal[2]\n  );\n  const viewRight = vec3.create();\n\n  vec3.cross(viewRight, viewUp, viewPlaneNormal);\n\n  // we need to find the bounding box of the sphere in the image, e.g., the\n  // topLeftWorld and bottomRightWorld points of the bounding box.\n  // We go from the sphereCenter in the normal direction of amount radius, and\n  // we go left to find the topLeftWorld point of the bounding box. Next we go\n  // in the opposite direction and go right to find the bottomRightWorld point\n  // of the bounding box.\n  const topLeftWorld = vec3.create();\n  const bottomRightWorld = vec3.create();\n\n  vec3.scaleAndAdd(topLeftWorld, top, viewPlaneNormal, radiusWorld);\n  vec3.scaleAndAdd(bottomRightWorld, bottom, viewPlaneNormal, -radiusWorld);\n\n  // go in the direction of viewRight with the value of radius\n  vec3.scaleAndAdd(topLeftWorld, topLeftWorld, viewRight, -radiusWorld);\n  vec3.scaleAndAdd(bottomRightWorld, bottomRightWorld, viewRight, radiusWorld);\n\n  // convert the world coordinates to index coordinates\n\n  const sphereCornersIJK = [\n    <Types.Point3>transformWorldToIndex(imageData, <Types.Point3>topLeftWorld),\n    <Types.Point3>(\n      transformWorldToIndex(imageData, <Types.Point3>bottomRightWorld)\n    ),\n  ];\n\n  // get the bounding box of the sphere in the image\n  const boundsIJK = getBoundingBoxAroundShape(sphereCornersIJK, dimensions);\n\n  return boundsIJK;\n}\n","import type { Types } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\n\ntype Sphere = {\n  center: Types.Point3 | vec3;\n  radius: number;\n};\n\n/**\n * Checks if a point is inside a sphere. Note: this is similar to the\n * `pointInEllipse` function, but since we don't need checks for the\n * ellipse's rotation in different views, we can use a simpler equation\n * which would be faster (no if statements).\n *\n * @param sphere - Sphere object with center and radius\n * @param pointLPS - the point to check in world coordinates\n * @returns boolean\n */\nexport default function pointInSphere(\n  sphere: Sphere,\n  pointLPS: Types.Point3\n): boolean {\n  const { center, radius } = sphere;\n\n  return (\n    (pointLPS[0] - center[0]) ** 2 +\n      (pointLPS[1] - center[1]) ** 2 +\n      (pointLPS[2] - center[2]) ** 2 <=\n    radius ** 2\n  );\n}\n","/**\n * Truncates decimal points to that there is at least 1+precision significant\n * digits.\n *\n * For example, with the default precision 2 (3 significant digits)\n * * Values larger than 100 show no information after the decimal point\n * * Values between 10 and 99 show 1 decimal point\n * * Values between 1 and 9 show 2 decimal points\n *\n * @param value - to return a fixed measurement value from\n * @param precision - defining how many digits after 1..9 are desired\n */\nfunction roundNumber(value: string | number, precision = 2): string {\n  if (value === undefined || value === null || value === '') return 'NaN';\n  value = Number(value);\n  if (value < 0.0001) return `${value}`;\n  const fixedPrecision =\n    value >= 100\n      ? precision - 2\n      : value >= 10\n      ? precision - 1\n      : value >= 1\n      ? precision\n      : value >= 0.1\n      ? precision + 1\n      : value >= 0.01\n      ? precision + 2\n      : value >= 0.001\n      ? precision + 3\n      : precision + 4;\n  return value.toFixed(fixedPrecision);\n}\n\nexport default roundNumber;\n","import type { Types } from '@cornerstonejs/core';\n\nimport { triggerSegmentationDataModified } from '../../../stateManagement/segmentation/triggerSegmentationEvents';\nimport { pointInSurroundingSphereCallback } from '../../../utilities';\n\ntype OperationData = {\n  points: [Types.Point3, Types.Point3, Types.Point3, Types.Point3];\n  volume: Types.IImageVolume;\n  segmentIndex: number;\n  segmentationId: string;\n  segmentsLocked: number[];\n  viewPlaneNormal: Types.Point3;\n  viewUp: Types.Point3;\n  constraintFn: () => boolean;\n};\n\nfunction fillSphere(\n  enabledElement: Types.IEnabledElement,\n  operationData: OperationData,\n  _inside = true\n): void {\n  const { viewport } = enabledElement;\n  const {\n    volume: segmentation,\n    segmentsLocked,\n    segmentIndex,\n    segmentationId,\n    points,\n  } = operationData;\n\n  const { imageData, dimensions } = segmentation;\n  const scalarData = segmentation.getScalarData();\n  const scalarIndex = [];\n\n  const callback = ({ index, value }) => {\n    if (segmentsLocked.includes(value)) {\n      return;\n    }\n    scalarData[index] = segmentIndex;\n    scalarIndex.push(index);\n  };\n\n  pointInSurroundingSphereCallback(\n    imageData,\n    [points[0], points[1]],\n    callback,\n    viewport as Types.IVolumeViewport\n  );\n\n  // Since the scalar indexes start from the top left corner of the cube, the first\n  // slice that needs to be rendered can be calculated from the first mask coordinate\n  // divided by the zMultiple, as well as the last slice for the last coordinate\n  const zMultiple = dimensions[0] * dimensions[1];\n  const minSlice = Math.floor(scalarIndex[0] / zMultiple);\n  const maxSlice = Math.floor(scalarIndex[scalarIndex.length - 1] / zMultiple);\n  const sliceArray = Array.from(\n    { length: maxSlice - minSlice + 1 },\n    (v, k) => k + minSlice\n  );\n\n  triggerSegmentationDataModified(segmentationId, sliceArray);\n}\n\n/**\n * Fill inside a sphere with the given segment index in the given operation data. The\n * operation data contains the sphere required points.\n * @param enabledElement - The element that is enabled and selected.\n * @param operationData - OperationData\n */\nexport function fillInsideSphere(\n  enabledElement: Types.IEnabledElement,\n  operationData: OperationData\n): void {\n  fillSphere(enabledElement, operationData, true);\n}\n\n/**\n * Fill outside a sphere with the given segment index in the given operation data. The\n * operation data contains the sphere required points.\n * @param enabledElement - The element that is enabled and selected.\n * @param operationData - OperationData\n */\nexport function fillOutsideSphere(\n  enabledElement: Types.IEnabledElement,\n  operationData: OperationData\n): void {\n  fillSphere(enabledElement, operationData, false);\n}\n","import type { Types } from '@cornerstonejs/core';\n\nimport { fillInsideSphere } from './fillSphere';\n\ntype OperationData = {\n  points: [Types.Point3, Types.Point3, Types.Point3, Types.Point3];\n  volume: Types.IImageVolume;\n  segmentIndex: number;\n  segmentationId: string;\n  segmentsLocked: number[];\n  viewPlaneNormal: Types.Point3;\n  viewUp: Types.Point3;\n  constraintFn: () => boolean;\n};\n\nexport function eraseInsideSphere(\n  enabledElement: Types.IEnabledElement,\n  operationData: OperationData\n): void {\n  // Take the arguments and set the segmentIndex to 0,\n  // Then use existing fillInsideCircle functionality.\n  const eraseOperationData = Object.assign({}, operationData, {\n    segmentIndex: 0,\n  });\n\n  fillInsideSphere(enabledElement, eraseOperationData);\n}\n","import type { Types } from '@cornerstonejs/core';\n\ntype canvasCoordinates = [\n  Types.Point2, // bottom\n  Types.Point2, // top\n  Types.Point2, // left\n  Types.Point2 // right\n];\n\n/**\n * It takes the canvas coordinates of the ellipse corners and returns the top left and bottom right\n * corners of it\n *\n * @param ellipseCanvasPoints - The coordinates of the ellipse in the canvas.\n * @returns An array of two points.\n */\nexport default function getCanvasEllipseCorners(\n  ellipseCanvasPoints: canvasCoordinates\n): Array<Types.Point2> {\n  const [bottom, top, left, right] = ellipseCanvasPoints;\n\n  const topLeft = <Types.Point2>[left[0], top[1]];\n  const bottomRight = <Types.Point2>[right[0], bottom[1]];\n\n  return [topLeft, bottomRight];\n}\n","import type { Types } from '@cornerstonejs/core';\n\ntype Ellipse = {\n  center: Types.Point3;\n  xRadius: number;\n  yRadius: number;\n  zRadius: number;\n};\n\n/**\n * Given an ellipse and a point, return true if the point is inside the ellipse\n * @param ellipse - The ellipse object to check against.\n * @param pointLPS - The point in LPS space to test.\n * @returns A boolean value.\n */\nexport default function pointInEllipse(\n  ellipse: Ellipse,\n  pointLPS: Types.Point3\n): boolean {\n  const { center: circleCenterWorld, xRadius, yRadius, zRadius } = ellipse;\n  const [x, y, z] = pointLPS;\n  const [x0, y0, z0] = circleCenterWorld;\n\n  let inside = 0;\n  if (xRadius !== 0) {\n    inside += ((x - x0) * (x - x0)) / (xRadius * xRadius);\n  }\n\n  if (yRadius !== 0) {\n    inside += ((y - y0) * (y - y0)) / (yRadius * yRadius);\n  }\n\n  if (zRadius !== 0) {\n    inside += ((z - z0) * (z - z0)) / (zRadius * zRadius);\n  }\n\n  return inside <= 1;\n}\n","import { vec3 } from 'gl-matrix';\nimport type { Types } from '@cornerstonejs/core';\nimport { utilities as csUtils } from '@cornerstonejs/core';\n\nimport {\n  getCanvasEllipseCorners,\n  pointInEllipse,\n} from '../../../utilities/math/ellipse';\nimport { getBoundingBoxAroundShape } from '../../../utilities/boundingBox';\nimport { triggerSegmentationDataModified } from '../../../stateManagement/segmentation/triggerSegmentationEvents';\nimport { pointInShapeCallback } from '../../../utilities';\n\nconst { transformWorldToIndex } = csUtils;\n\ntype OperationData = {\n  segmentationId: string;\n  imageVolume: Types.IImageVolume;\n  points: any; // Todo:fix\n  volume: Types.IImageVolume;\n  segmentIndex: number;\n  segmentsLocked: number[];\n  viewPlaneNormal: number[];\n  viewUp: number[];\n  strategySpecificConfiguration: any;\n  constraintFn: () => boolean;\n};\n\nfunction fillCircle(\n  enabledElement: Types.IEnabledElement,\n  operationData: OperationData,\n  threshold = false\n): void {\n  const {\n    volume: segmentationVolume,\n    imageVolume,\n    points,\n    segmentsLocked,\n    segmentIndex,\n    segmentationId,\n    strategySpecificConfiguration,\n  } = operationData;\n  const { imageData, dimensions } = segmentationVolume;\n  const scalarData = segmentationVolume.getScalarData();\n  const { viewport } = enabledElement;\n\n  // Average the points to get the center of the ellipse\n  const center = vec3.fromValues(0, 0, 0);\n  points.forEach((point) => {\n    vec3.add(center, center, point);\n  });\n  vec3.scale(center, center, 1 / points.length);\n\n  const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n\n  // 1. From the drawn tool: Get the ellipse (circle) topLeft and bottomRight\n  // corners in canvas coordinates\n  const [topLeftCanvas, bottomRightCanvas] =\n    getCanvasEllipseCorners(canvasCoordinates);\n\n  // 2. Find the extent of the ellipse (circle) in IJK index space of the image\n  const topLeftWorld = viewport.canvasToWorld(topLeftCanvas);\n  const bottomRightWorld = viewport.canvasToWorld(bottomRightCanvas);\n\n  const ellipsoidCornersIJK = [\n    <Types.Point3>transformWorldToIndex(imageData, topLeftWorld),\n    <Types.Point3>transformWorldToIndex(imageData, bottomRightWorld),\n  ];\n\n  const boundsIJK = getBoundingBoxAroundShape(ellipsoidCornersIJK, dimensions);\n\n  // using circle as a form of ellipse\n  const ellipseObj = {\n    center: center as Types.Point3,\n    xRadius: Math.abs(topLeftWorld[0] - bottomRightWorld[0]) / 2,\n    yRadius: Math.abs(topLeftWorld[1] - bottomRightWorld[1]) / 2,\n    zRadius: Math.abs(topLeftWorld[2] - bottomRightWorld[2]) / 2,\n  };\n\n  const modifiedSlicesToUse = new Set() as Set<number>;\n\n  let callback;\n\n  if (threshold) {\n    callback = ({ value, index, pointIJK }) => {\n      if (segmentsLocked.includes(value)) {\n        return;\n      }\n\n      if (\n        isWithinThreshold(index, imageVolume, strategySpecificConfiguration)\n      ) {\n        scalarData[index] = segmentIndex;\n        //Todo: I don't think this will always be index 2 in streamingImageVolume?\n        modifiedSlicesToUse.add(pointIJK[2]);\n      }\n    };\n  } else {\n    callback = ({ value, index, pointIJK }) => {\n      if (segmentsLocked.includes(value)) {\n        return;\n      }\n      scalarData[index] = segmentIndex;\n      //Todo: I don't think this will always be index 2 in streamingImageVolume?\n      modifiedSlicesToUse.add(pointIJK[2]);\n    };\n  }\n\n  pointInShapeCallback(\n    imageData,\n    (pointLPS, pointIJK) => pointInEllipse(ellipseObj, pointLPS),\n    callback,\n    boundsIJK\n  );\n\n  const arrayOfSlices: number[] = Array.from(modifiedSlicesToUse);\n\n  triggerSegmentationDataModified(segmentationId, arrayOfSlices);\n}\n\nfunction isWithinThreshold(\n  index: number,\n  imageVolume: Types.IImageVolume,\n  strategySpecificConfiguration: any\n) {\n  const { THRESHOLD_INSIDE_CIRCLE } = strategySpecificConfiguration;\n\n  const voxelValue = imageVolume.getScalarData()[index];\n  const { threshold } = THRESHOLD_INSIDE_CIRCLE;\n\n  return threshold[0] <= voxelValue && voxelValue <= threshold[1];\n}\n\n/**\n * Fill inside the circular region segment inside the segmentation defined by the operationData.\n * It fills the segmentation pixels inside the defined circle.\n * @param enabledElement - The element for which the segment is being erased.\n * @param operationData - EraseOperationData\n */\nexport function fillInsideCircle(\n  enabledElement: Types.IEnabledElement,\n  operationData: OperationData\n): void {\n  fillCircle(enabledElement, operationData, false);\n}\n\n/**\n * Fill inside the circular region segment inside the segmentation defined by the operationData.\n * It fills the segmentation pixels inside the defined circle.\n * @param enabledElement - The element for which the segment is being erased.\n * @param operationData - EraseOperationData\n */\nexport function thresholdInsideCircle(\n  enabledElement: Types.IEnabledElement,\n  operationData: OperationData\n): void {\n  const { volume, imageVolume } = operationData;\n\n  if (\n    !csUtils.isEqual(volume.dimensions, imageVolume.dimensions) ||\n    !csUtils.isEqual(volume.direction, imageVolume.direction)\n  ) {\n    throw new Error(\n      'Only source data the same dimensions/size/orientation as the segmentation currently supported.'\n    );\n  }\n\n  fillCircle(enabledElement, operationData, true);\n}\n\n/**\n * Fill outside the circular region segment inside the segmentation defined by the operationData.\n * It fills the segmentation pixels outside the  defined circle.\n * @param enabledElement - The element for which the segment is being erased.\n * @param operationData - EraseOperationData\n */\nexport function fillOutsideCircle(\n  enabledElement: Types.IEnabledElement,\n  operationData: OperationData\n): void {\n  throw new Error('Not yet implemented');\n}\n","import type { Types } from '@cornerstonejs/core';\n\nimport { fillInsideCircle } from './fillCircle';\n\ntype OperationData = {\n  segmentationId: string;\n  imageVolume: Types.IImageVolume;\n  points: any; // Todo:fix\n  volume: Types.IImageVolume;\n  segmentIndex: number;\n  segmentsLocked: number[];\n  viewPlaneNormal: number[];\n  viewUp: number[];\n  strategySpecificConfiguration: any;\n  constraintFn: () => boolean;\n};\n\nexport function eraseInsideCircle(\n  enabledElement: Types.IEnabledElement,\n  operationData: OperationData\n): void {\n  // Take the arguments and set the segmentIndex to 0,\n  // Then use existing fillInsideCircle functionality.\n  const eraseOperationData = {\n    ...operationData,\n    segmentIndex: 0,\n  };\n\n  fillInsideCircle(enabledElement, eraseOperationData);\n}\n","import { ToolGroupSpecificRepresentation } from '../../types/SegmentationStateTypes';\nimport { getDefaultSegmentationStateManager } from './segmentationState';\nimport { triggerSegmentationRepresentationModified } from './triggerSegmentationEvents';\n\n/**\n * Get the active segmentation representation for the tool group with\n * the given toolGroupId.\n * @param toolGroupId - The Id of the tool group\n * @returns The active segmentation representation for the tool group.\n */\nfunction getActiveSegmentationRepresentation(\n  toolGroupId: string\n): ToolGroupSpecificRepresentation {\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n\n  const toolGroupSegmentationRepresentations =\n    segmentationStateManager.getSegmentationRepresentations(toolGroupId);\n\n  if (!toolGroupSegmentationRepresentations) {\n    return;\n  }\n\n  const activeRepresentation = toolGroupSegmentationRepresentations.find(\n    (representation) => representation.active\n  );\n\n  return activeRepresentation;\n}\n\n/**\n * Set the active segmentation for the given tool group for all its viewports\n *\n * @param toolGroupId - The Id of the tool group to set the active\n * segmentation for.\n * @param segmentationRepresentationUID - The id of the segmentation representation to set as\n * active.\n */\nfunction setActiveSegmentationRepresentation(\n  toolGroupId: string,\n  segmentationRepresentationUID: string\n): void {\n  const segmentationStateManager = getDefaultSegmentationStateManager();\n\n  segmentationStateManager.setActiveSegmentationRepresentation(\n    toolGroupId,\n    segmentationRepresentationUID\n  );\n\n  triggerSegmentationRepresentationModified(\n    toolGroupId,\n    segmentationRepresentationUID\n  );\n}\n\nexport {\n  // get\n  getActiveSegmentationRepresentation,\n  // set\n  setActiveSegmentationRepresentation,\n};\n","import { getActiveSegmentationRepresentation } from './activeSegmentation';\n\nimport { getSegmentation } from '../../stateManagement/segmentation/segmentationState';\nimport { triggerSegmentationModified } from './triggerSegmentationEvents';\n\n/**\n * Get the locked status for a segment index in a segmentation\n * @param segmentationId - The id of the segmentation that the segment\n * belongs to.\n * @param segmentIndex - The index of the segment\n * @returns A boolean value indicating whether the segment is locked or not.\n */\nfunction isSegmentIndexLocked(\n  segmentationId: string,\n  segmentIndex: number\n): boolean {\n  const segmentation = getSegmentation(segmentationId);\n\n  if (!segmentation) {\n    throw new Error(`No segmentation state found for ${segmentationId}`);\n  }\n\n  const { segmentsLocked } = segmentation;\n  return segmentsLocked.has(segmentIndex);\n}\n\n/**\n * Set the locked status of a segment index in a segmentation\n * @param segmentationId - The id of the segmentation whose segment\n * index is being modified.\n * @param segmentIndex - The index of the segment to lock/unlock.\n */\nfunction setSegmentIndexLocked(\n  segmentationId: string,\n  segmentIndex: number,\n  locked = true\n): void {\n  const segmentation = getSegmentation(segmentationId);\n\n  if (!segmentation) {\n    throw new Error(`No segmentation state found for ${segmentationId}`);\n  }\n\n  const { segmentsLocked } = segmentation;\n\n  if (locked) {\n    segmentsLocked.add(segmentIndex);\n  } else {\n    segmentsLocked.delete(segmentIndex);\n  }\n\n  triggerSegmentationModified(segmentationId);\n}\n\n/**\n * Get the locked segments for a segmentation\n * @param segmentationId - The id of the segmentation to get locked\n * segments for.\n * @returns An array of locked segment indices.\n */\nfunction getLockedSegments(segmentationId: string): number[] | [] {\n  const segmentation = getSegmentation(segmentationId);\n\n  if (!segmentation) {\n    throw new Error(`No segmentation state found for ${segmentationId}`);\n  }\n\n  const { segmentsLocked } = segmentation;\n  return Array.from(segmentsLocked);\n}\n\nexport { isSegmentIndexLocked, setSegmentIndexLocked, getLockedSegments };\n","import { getSegmentation } from './segmentationState';\nimport { triggerSegmentationModified } from './triggerSegmentationEvents';\n\n/**\n * Set the active segment index for a segmentation Id. It fires a global state\n * modified event.\n *\n * @triggers SEGMENTATION_MODIFIED\n * @param segmentationId - The id of the segmentation that the segment belongs to.\n * @param segmentIndex - The index of the segment to be activated.\n */\nfunction setActiveSegmentIndex(\n  segmentationId: string,\n  segmentIndex: number\n): void {\n  const segmentation = getSegmentation(segmentationId);\n\n  if (segmentation?.activeSegmentIndex !== segmentIndex) {\n    segmentation.activeSegmentIndex = segmentIndex;\n\n    triggerSegmentationModified(segmentationId);\n  }\n}\n\n/**\n * Get the active segment index for a segmentation in the global state\n * @param segmentationId - The id of the segmentation to get the active segment index from.\n * @returns The active segment index for the given segmentation.\n */\nfunction getActiveSegmentIndex(segmentationId: string): number | undefined {\n  const segmentation = getSegmentation(segmentationId);\n\n  if (segmentation) {\n    return segmentation.activeSegmentIndex;\n  }\n}\n\nexport { getActiveSegmentIndex, setActiveSegmentIndex };\n","import { utilities } from '@cornerstonejs/core';\nimport * as SegmentationState from '../../../stateManagement/segmentation/segmentationState';\nimport { Color } from '../../../types/SegmentationStateTypes';\nimport { ColorLUT } from '../../../types/SegmentationStateTypes';\nimport { triggerSegmentationRepresentationModified } from '../triggerSegmentationEvents';\nimport { SegmentationRepresentations } from '../../../enums';\n\n/**\n * addColorLUT - Adds a new color LUT to the state at the given colorLUTIndex.\n * If no colorLUT is provided, a new color LUT is generated.\n *\n * @param colorLUTIndex - the index of the colorLUT in the state\n * @param colorLUT - An array of The colorLUT to set.\n * @returns\n */\nfunction addColorLUT(colorLUT: ColorLUT, colorLUTIndex: number): void {\n  if (!colorLUT) {\n    throw new Error('addColorLUT: colorLUT is required');\n  }\n\n  // Append the \"zero\" (no label) color to the front of the LUT, if necessary.\n  if (!utilities.isEqual(colorLUT[0], [0, 0, 0, 0])) {\n    console.warn(\n      'addColorLUT: [0, 0, 0, 0] color is not provided for the background color (segmentIndex =0), automatically adding it'\n    );\n    colorLUT.unshift([0, 0, 0, 0]);\n  }\n\n  SegmentationState.addColorLUT(colorLUT, colorLUTIndex);\n}\n\n/**\n * It sets the toolGroup's segmentationRepresentation to use the provided\n * colorLUT at the given colorLUTIndex.\n * @param toolGroupId - the id of the toolGroup that renders the representation\n * @param segmentationRepresentationUID - the representationUID for the segmentation\n * @param colorLUTIndex - the index of the colorLUT to use\n */\nfunction setColorLUT(\n  toolGroupId: string,\n  segmentationRepresentationUID: string,\n  colorLUTIndex: number\n): void {\n  const segRepresentation =\n    SegmentationState.getSegmentationRepresentationByUID(\n      toolGroupId,\n      segmentationRepresentationUID\n    );\n\n  if (!segRepresentation) {\n    throw new Error(\n      `setColorLUT: could not find segmentation representation with UID ${segmentationRepresentationUID}`\n    );\n  }\n\n  if (!SegmentationState.getColorLUT(colorLUTIndex)) {\n    throw new Error(\n      `setColorLUT: could not find colorLUT with index ${colorLUTIndex}`\n    );\n  }\n\n  segRepresentation.colorLUTIndex = colorLUTIndex;\n\n  triggerSegmentationRepresentationModified(\n    toolGroupId,\n    segmentationRepresentationUID\n  );\n}\n\n/**\n * Given a tool group UID, a segmentation representationUID, and a segment index, return the\n * color for that segment. It can be used for segmentation tools that need to\n * display the color of their annotation.\n *\n * @param toolGroupId - The Id of the tool group that owns the segmentation representation.\n * @param segmentationRepresentationUID - The uid of the segmentation representation\n * @param segmentIndex - The index of the segment in the segmentation\n * @returns A color.\n */\nfunction getColorForSegmentIndex(\n  toolGroupId: string,\n  segmentationRepresentationUID: string,\n  segmentIndex: number\n): Color {\n  const segmentationRepresentation =\n    SegmentationState.getSegmentationRepresentationByUID(\n      toolGroupId,\n      segmentationRepresentationUID\n    );\n\n  if (!segmentationRepresentation) {\n    throw new Error(\n      `segmentation representation with UID ${segmentationRepresentationUID} does not exist for tool group ${toolGroupId}`\n    );\n  }\n\n  const { colorLUTIndex } = segmentationRepresentation;\n\n  // get colorLUT\n  const colorLUT = SegmentationState.getColorLUT(colorLUTIndex);\n  return colorLUT[segmentIndex];\n}\n\nfunction setColorForSegmentIndex(\n  toolGroupId: string,\n  segmentationRepresentationUID: string,\n  segmentIndex: number,\n  color: Color\n): void {\n  // Get the reference to the color in the colorLUT.\n  const colorReference = getColorForSegmentIndex(\n    toolGroupId,\n    segmentationRepresentationUID,\n    segmentIndex\n  );\n\n  // Modify the values by reference\n  for (let i = 0; i < color.length; i++) {\n    colorReference[i] = color[i];\n  }\n\n  triggerSegmentationRepresentationModified(\n    toolGroupId,\n    segmentationRepresentationUID\n  );\n}\n\nexport {\n  getColorForSegmentIndex,\n  addColorLUT,\n  setColorLUT,\n  setColorForSegmentIndex,\n};\n","import { cache, getEnabledElement, StackViewport } from '@cornerstonejs/core';\n\nimport type { Types } from '@cornerstonejs/core';\nimport type {\n  PublicToolProps,\n  ToolProps,\n  EventTypes,\n  SVGDrawingHelper,\n} from '../../types';\nimport { BaseTool } from '../base';\nimport { fillInsideSphere } from './strategies/fillSphere';\nimport { eraseInsideSphere } from './strategies/eraseSphere';\nimport {\n  thresholdInsideCircle,\n  fillInsideCircle,\n} from './strategies/fillCircle';\nimport { eraseInsideCircle } from './strategies/eraseCircle';\nimport { Events, ToolModes } from '../../enums';\nimport { drawCircle as drawCircleSvg } from '../../drawingSvg';\nimport {\n  resetElementCursor,\n  hideElementCursor,\n} from '../../cursors/elementCursor';\n\nimport triggerAnnotationRenderForViewportUIDs from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport {\n  config as segmentationConfig,\n  segmentLocking,\n  segmentIndex as segmentIndexController,\n  state as segmentationState,\n  activeSegmentation,\n} from '../../stateManagement/segmentation';\nimport { LabelmapSegmentationData } from '../../types/LabelmapTypes';\n\n/**\n * @public\n */\nclass BrushTool extends BaseTool {\n  static toolName;\n  private _editData: {\n    segmentation: Types.IImageVolume;\n    imageVolume: Types.IImageVolume; //\n    segmentsLocked: number[]; //\n  } | null;\n  private _hoverData?: {\n    brushCursor: any;\n    segmentationId: string;\n    segmentIndex: number;\n    segmentationRepresentationUID: string;\n    segmentColor: [number, number, number, number];\n    viewportIdsToRender: string[];\n    centerCanvas?: Array<number>;\n  };\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        strategies: {\n          FILL_INSIDE_CIRCLE: fillInsideCircle,\n          THRESHOLD_INSIDE_CIRCLE: thresholdInsideCircle,\n          ERASE_INSIDE_CIRCLE: eraseInsideCircle,\n          FILL_INSIDE_SPHERE: fillInsideSphere,\n          ERASE_INSIDE_SPHERE: eraseInsideSphere,\n        },\n        strategySpecificConfiguration: {\n          THRESHOLD_INSIDE_CIRCLE: {\n            threshold: [-150, -70], // E.g. CT Fat // Only used during threshold strategies.\n          },\n        },\n        defaultStrategy: 'FILL_INSIDE_CIRCLE',\n        activeStrategy: 'FILL_INSIDE_CIRCLE',\n        brushSize: 25,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n  }\n\n  onSetToolPassive = () => {\n    this.disableCursor();\n  };\n\n  onSetToolEnabled = () => {\n    this.disableCursor();\n  };\n\n  onSetToolDisabled = () => {\n    this.disableCursor();\n  };\n\n  private disableCursor() {\n    this._hoverData = undefined;\n  }\n\n  preMouseDownCallback = (\n    evt: EventTypes.MouseDownActivateEventType\n  ): boolean => {\n    const eventData = evt.detail;\n    const { element } = eventData;\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    if (viewport instanceof StackViewport) {\n      throw new Error('Not implemented yet');\n    }\n\n    const toolGroupId = this.toolGroupId;\n\n    const activeSegmentationRepresentation =\n      activeSegmentation.getActiveSegmentationRepresentation(toolGroupId);\n    if (!activeSegmentationRepresentation) {\n      throw new Error(\n        'No active segmentation detected, create one before using the brush tool'\n      );\n    }\n\n    const { segmentationId, type } = activeSegmentationRepresentation;\n    const segmentsLocked = segmentLocking.getLockedSegments(segmentationId);\n\n    const { representationData } =\n      segmentationState.getSegmentation(segmentationId);\n\n    // Todo: are we going to support contour editing with this tool?\n    const { volumeId } = representationData[type] as LabelmapSegmentationData;\n    const segmentation = cache.getVolume(volumeId);\n\n    const actors = viewport.getActors();\n\n    // Note: For tools that need the source data. Assumed to use\n    // First volume actor for now.\n    const firstVolumeActorUID = actors[0].uid;\n    const imageVolume = cache.getVolume(firstVolumeActorUID);\n\n    const viewportIdsToRender = [viewport.id];\n\n    this._editData = {\n      segmentation,\n      imageVolume,\n      segmentsLocked,\n    };\n\n    this._activateDraw(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportUIDs(\n      renderingEngine,\n      viewportIdsToRender\n    );\n\n    return true;\n  };\n\n  mouseMoveCallback = (evt: EventTypes.InteractionEventType): void => {\n    if (this.mode === ToolModes.Active) {\n      this.updateCursor(evt);\n    }\n  };\n\n  private updateCursor(evt: EventTypes.InteractionEventType) {\n    const eventData = evt.detail;\n    const { element } = eventData;\n    const { currentPoints } = eventData;\n    const centerCanvas = currentPoints.canvas;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine, viewport } = enabledElement;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    const toolGroupId = this.toolGroupId;\n\n    const activeSegmentationRepresentation =\n      activeSegmentation.getActiveSegmentationRepresentation(toolGroupId);\n    if (!activeSegmentationRepresentation) {\n      console.warn(\n        'No active segmentation detected, create one before using the brush tool'\n      );\n      return;\n    }\n\n    const { segmentationRepresentationUID, segmentationId } =\n      activeSegmentationRepresentation;\n    const segmentIndex =\n      segmentIndexController.getActiveSegmentIndex(segmentationId);\n\n    const segmentColor = segmentationConfig.color.getColorForSegmentIndex(\n      toolGroupId,\n      segmentationRepresentationUID,\n      segmentIndex\n    );\n\n    const viewportIdsToRender = [viewport.id];\n\n    // Center of circle in canvas Coordinates\n\n    const brushCursor = {\n      metadata: {\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID: viewport.getFrameOfReferenceUID(),\n        referencedImageId: '',\n        toolName: this.getToolName(),\n        segmentColor,\n      },\n      data: {},\n    };\n\n    this._hoverData = {\n      brushCursor,\n      centerCanvas,\n      segmentIndex,\n      segmentationId,\n      segmentationRepresentationUID,\n      segmentColor,\n      viewportIdsToRender,\n    };\n\n    this._calculateCursor(element, centerCanvas);\n\n    triggerAnnotationRenderForViewportUIDs(\n      renderingEngine,\n      viewportIdsToRender\n    );\n  }\n\n  private _dragCallback = (evt: EventTypes.InteractionEventType): void => {\n    const eventData = evt.detail;\n    const { element } = eventData;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    const { imageVolume, segmentation, segmentsLocked } = this._editData;\n\n    this.updateCursor(evt);\n\n    const {\n      segmentIndex,\n      segmentationId,\n      segmentationRepresentationUID,\n      brushCursor,\n      viewportIdsToRender,\n    } = this._hoverData;\n\n    const { data } = brushCursor;\n    const { viewPlaneNormal, viewUp } = brushCursor.metadata;\n\n    triggerAnnotationRenderForViewportUIDs(\n      renderingEngine,\n      viewportIdsToRender\n    );\n\n    const operationData = {\n      points: data.handles.points,\n      volume: segmentation, // todo: just pass the segmentationId instead\n      imageVolume,\n      segmentIndex,\n      segmentsLocked,\n      viewPlaneNormal,\n      toolGroupId: this.toolGroupId,\n      segmentationId,\n      segmentationRepresentationUID,\n      viewUp,\n      strategySpecificConfiguration:\n        this.configuration.strategySpecificConfiguration,\n    };\n\n    this.applyActiveStrategy(enabledElement, operationData);\n  };\n\n  private _calculateCursor(element, centerCanvas) {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const { canvasToWorld } = viewport;\n    const { brushSize } = this.configuration;\n    // Center of circle in canvas Coordinates\n\n    const radius = brushSize;\n\n    const bottomCanvas: Types.Point2 = [\n      centerCanvas[0],\n      centerCanvas[1] + radius,\n    ];\n    const topCanvas: Types.Point2 = [centerCanvas[0], centerCanvas[1] - radius];\n    const leftCanvas: Types.Point2 = [\n      centerCanvas[0] - radius,\n      centerCanvas[1],\n    ];\n    const rightCanvas: Types.Point2 = [\n      centerCanvas[0] + radius,\n      centerCanvas[1],\n    ];\n\n    const { brushCursor } = this._hoverData;\n    const { data } = brushCursor;\n\n    if (data.handles === undefined) {\n      data.handles = {};\n    }\n\n    data.handles.points = [\n      canvasToWorld(bottomCanvas),\n      canvasToWorld(topCanvas),\n      canvasToWorld(leftCanvas),\n      canvasToWorld(rightCanvas),\n    ];\n\n    data.invalidated = false;\n  }\n\n  private _endCallback = (evt: EventTypes.InteractionEventType): void => {\n    const eventData = evt.detail;\n    const { element } = eventData;\n\n    const { imageVolume, segmentation, segmentsLocked } = this._editData;\n    const {\n      segmentIndex,\n      segmentationId,\n      segmentationRepresentationUID,\n      brushCursor,\n    } = this._hoverData;\n\n    const { data } = brushCursor;\n    const { viewPlaneNormal, viewUp } = brushCursor.metadata;\n\n    this._deactivateDraw(element);\n\n    resetElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    this._editData = null;\n    this.updateCursor(evt);\n\n    if (viewport instanceof StackViewport) {\n      throw new Error('Not implemented yet');\n    }\n\n    const operationData = {\n      points: data.handles.points,\n      volume: segmentation,\n      imageVolume,\n      segmentIndex,\n      segmentsLocked,\n      viewPlaneNormal,\n      toolGroupId: this.toolGroupId,\n      segmentationId,\n      segmentationRepresentationUID,\n      viewUp,\n      strategySpecificConfiguration:\n        this.configuration.strategySpecificConfiguration,\n    };\n\n    this.applyActiveStrategy(enabledElement, operationData);\n  };\n\n  /**\n   * Add event handlers for the modify event loop, and prevent default event propagation.\n   */\n  private _activateDraw = (element: HTMLDivElement): void => {\n    element.addEventListener(\n      Events.MOUSE_UP,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_DRAG,\n      this._dragCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_CLICK,\n      this._endCallback as EventListener\n    );\n  };\n\n  /**\n   * Add event handlers for the modify event loop, and prevent default event prapogation.\n   */\n  private _deactivateDraw = (element: HTMLDivElement): void => {\n    element.removeEventListener(\n      Events.MOUSE_UP,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_DRAG,\n      this._dragCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_CLICK,\n      this._endCallback as EventListener\n    );\n  };\n\n  public invalidateBrushCursor() {\n    if (this._hoverData !== undefined) {\n      const { data } = this._hoverData.brushCursor;\n\n      data.invalidated = true;\n    }\n  }\n\n  renderAnnotation(\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): void {\n    if (!this._hoverData) {\n      return;\n    }\n\n    const { viewport } = enabledElement;\n\n    const viewportIdsToRender = this._hoverData.viewportIdsToRender;\n\n    if (!viewportIdsToRender.includes(viewport.id)) {\n      return;\n    }\n\n    const brushCursor = this._hoverData.brushCursor;\n\n    if (brushCursor.data.invalidated === true) {\n      const { centerCanvas } = this._hoverData;\n      const { element } = viewport;\n\n      // This can be set true when changing the brush size programmatically\n      // whilst the cursor is being rendered.\n      this._calculateCursor(element, centerCanvas);\n    }\n\n    const toolMetadata = brushCursor.metadata;\n    const annotationUID = toolMetadata.brushCursorUID;\n\n    const data = brushCursor.data;\n    const { points } = data.handles;\n    const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n\n    const bottom = canvasCoordinates[0];\n    const top = canvasCoordinates[1];\n\n    const center = [\n      Math.floor((bottom[0] + top[0]) / 2),\n      Math.floor((bottom[1] + top[1]) / 2),\n    ];\n\n    const radius = Math.abs(bottom[1] - Math.floor((bottom[1] + top[1]) / 2));\n\n    const color = `rgb(${toolMetadata.segmentColor.slice(0, 3)})`;\n\n    // If rendering engine has been destroyed while rendering\n    if (!viewport.getRenderingEngine()) {\n      console.warn('Rendering Engine has been destroyed');\n      return;\n    }\n\n    const circleUID = '0';\n    drawCircleSvg(\n      svgDrawingHelper,\n      annotationUID,\n      circleUID,\n      center as Types.Point2,\n      radius,\n      {\n        color,\n      }\n    );\n  }\n}\n\nBrushTool.toolName = 'Brush';\nexport default BrushTool;\n","import { Types } from '@cornerstonejs/core';\nimport { utilities as csUtils } from '@cornerstonejs/core';\nimport { getToolGroup } from '../../store/ToolGroupManager';\nimport BrushTool from '../../tools/segmentation/BrushTool';\nimport getBoundingBoxAroundShape from '../boundingBox/getBoundingBoxAroundShape';\n\nexport type ThresholdInformation = {\n  volume: Types.IImageVolume;\n  lower: number;\n  upper: number;\n};\n\nexport default function getBrushToolInstances(toolGroupId) {\n  const toolGroup = getToolGroup(toolGroupId);\n\n  if (toolGroup === undefined) {\n    return;\n  }\n\n  const toolInstances = toolGroup._toolInstances;\n\n  if (!Object.keys(toolInstances).length) {\n    return;\n  }\n\n  // For each tool that has BrushTool as base class, set the brush size.\n  const brushBasedToolInstances = Object.values(toolInstances).filter(\n    (toolInstance) => toolInstance instanceof BrushTool\n  ) as BrushTool[];\n\n  return brushBasedToolInstances;\n}\n\nconst equalsCheck = (a, b) => {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\n/**\n * Given the center of a voxel in world coordinates, calculate the voxel\n * corners in world coords to calculate the voxel overlap in another volume\n */\nexport function getVoxelOverlap(\n  imageData,\n  dimensions,\n  voxelSpacing,\n  voxelCenter\n) {\n  const voxelCornersWorld = [];\n  for (let i = 0; i < 2; i++) {\n    for (let j = 0; j < 2; j++) {\n      for (let k = 0; k < 2; k++) {\n        const point = voxelCenter;\n        point[0] = point[0] + ((i * 2 - 1) * voxelSpacing[0]) / 2;\n        point[1] = point[1] + ((j * 2 - 1) * voxelSpacing[1]) / 2;\n        point[2] = point[2] + ((k * 2 - 1) * voxelSpacing[2]) / 2;\n        voxelCornersWorld.push(point);\n      }\n    }\n  }\n  const voxelCornersIJK = voxelCornersWorld.map(\n    (world) => csUtils.transformWorldToIndex(imageData, world) as Types.Point3\n  );\n  const overlapBounds = getBoundingBoxAroundShape(voxelCornersIJK, dimensions);\n\n  return overlapBounds;\n}\n\n/**\n * Prepare a list of volume information objects for callback functions\n */\nexport function processVolumes(\n  segmentationVolume: Types.IImageVolume,\n  thresholdVolumeInformation: ThresholdInformation[]\n) {\n  const { spacing: segmentationSpacing, imageData: segmentationImageData } =\n    segmentationVolume;\n  const scalarData = segmentationVolume.getScalarData();\n\n  // prepare a list of volume information objects for callback functions\n  const volumeInfoList = [];\n  let baseVolumeIdx = 0;\n  for (let i = 0; i < thresholdVolumeInformation.length; i++) {\n    const { imageData, spacing, dimensions } =\n      thresholdVolumeInformation[i].volume;\n\n    const volumeSize =\n      thresholdVolumeInformation[i].volume.getScalarData().length;\n    // discover the index of the volume the segmentation data is based on\n    if (\n      volumeSize === scalarData.length &&\n      equalsCheck(spacing, segmentationSpacing)\n    ) {\n      baseVolumeIdx = i;\n    }\n\n    // prepare information used in callback functions\n    const referenceValues = imageData.getPointData().getScalars().getData();\n    const lower = thresholdVolumeInformation[i].lower;\n    const upper = thresholdVolumeInformation[i].upper;\n\n    volumeInfoList.push({\n      imageData,\n      referenceValues,\n      lower,\n      upper,\n      spacing,\n      dimensions,\n      volumeSize,\n    });\n  }\n\n  return {\n    volumeInfoList,\n    baseVolumeIdx,\n  };\n}\n","import { Types } from '@cornerstonejs/core';\nimport { pointInShapeCallback } from '../../utilities';\nimport { triggerSegmentationDataModified } from '../../stateManagement/segmentation/triggerSegmentationEvents';\nimport { BoundsIJK } from '../../types';\nimport {\n  getVoxelOverlap,\n  processVolumes,\n  ThresholdInformation,\n} from './utilities';\n\nexport type ThresholdRangeOptions = {\n  overwrite: boolean;\n  boundsIJK: BoundsIJK;\n  overlapType?: number;\n};\n\n/**\n * It thresholds a segmentation volume based on a set of threshold values with\n * respect to a list of volumes and respective threshold ranges.\n * @param segmentationVolume - the segmentation volume to be modified\n * @param thresholdVolumeInformation - array of objects containing volume data\n * and a range (lower and upper values) to threshold\n * @param options - the options for thresholding\n * As there is a chance the volumes might have different dimensions and spacing,\n * could be the case of no 1 to 1 mapping. So we need to work with the idea of\n * voxel overlaps (1 to many mappings). We consider all intersections valid, to\n * avoid the complexity to calculate a minimum voxel intersection percentage.\n * This function, given a voxel center and spacing, calculates the overlap of\n * the voxel with another volume and range check the voxels in the overlap.\n * Three situations can occur: all voxels pass the range check, some voxels pass\n * or none voxels pass. The overlapType parameter indicates if the user requires\n * all voxels pass (overlapType = 1) or any voxel pass (overlapType = 0)\n *\n * @returns segmented volume\n */\nfunction thresholdVolumeByRange(\n  segmentationVolume: Types.IImageVolume,\n  thresholdVolumeInformation: ThresholdInformation[],\n  options: ThresholdRangeOptions\n): Types.IImageVolume {\n  const { imageData: segmentationImageData } = segmentationVolume;\n  const scalarData = segmentationVolume.getScalarData();\n\n  const { overwrite, boundsIJK } = options;\n  const overlapType = options?.overlapType || 0;\n\n  // set the segmentation to all zeros\n  if (overwrite) {\n    for (let i = 0; i < scalarData.length; i++) {\n      scalarData[i] = 0;\n    }\n  }\n\n  const { baseVolumeIdx, volumeInfoList } = processVolumes(\n    segmentationVolume,\n    thresholdVolumeInformation\n  );\n\n  // global variables used in callbackOverlap function\n  let overlaps, total, range;\n\n  const testOverlapRange = (volumeInfo, voxelSpacing, voxelCenter) => {\n    /**\n     * This callback function will test all overlaps between a voxel in base\n     * volume (the reference for segmentation volume creation) and voxels in other\n     * volumes.\n     */\n    const callbackOverlap = ({ value }) => {\n      total = total + 1;\n      if (value >= range.lower && value <= range.upper) {\n        overlaps = overlaps + 1;\n      }\n    };\n\n    const { imageData, dimensions, lower, upper } = volumeInfo;\n\n    const overlapBounds = getVoxelOverlap(\n      imageData,\n      dimensions,\n      voxelSpacing,\n      voxelCenter\n    );\n\n    // reset global variables and setting the range check\n    total = 0;\n    overlaps = 0;\n    range = { lower, upper };\n\n    let overlapTest = false;\n\n    // check all voxel overlaps\n    pointInShapeCallback(imageData, () => true, callbackOverlap, overlapBounds);\n\n    if (overlapType === 0) {\n      overlapTest = overlaps > 0; // any voxel overlap is accepted\n    } else if (overlapType == 1) {\n      overlapTest = overlaps === total; // require all voxel overlaps\n    }\n    return overlapTest;\n  };\n\n  // range checks a voxel in a volume with same dimension as the segmentation\n  const testRange = (volumeInfo, pointIJK) => {\n    const { imageData, referenceValues, lower, upper } = volumeInfo;\n    const offset = imageData.computeOffsetIndex(pointIJK);\n\n    const value = referenceValues[offset];\n    if (value <= lower || value >= upper) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * This callback function will test all overlaps between a voxel in base\n   * volume (the reference for segmentation volume creation) and voxels in other\n   * volumes.\n   */\n  const callback = ({ index, pointIJK, pointLPS }) => {\n    let insert = volumeInfoList.length > 0;\n    for (let i = 0; i < volumeInfoList.length; i++) {\n      // if volume has the same size as segmentation volume, just range check\n      if (volumeInfoList[i].volumeSize === scalarData.length) {\n        insert = testRange(volumeInfoList[i], pointIJK);\n      } else {\n        // if not, need to calculate overlaps\n        insert = testOverlapRange(\n          volumeInfoList[i],\n          volumeInfoList[baseVolumeIdx].spacing,\n          pointLPS\n        );\n      }\n      if (!insert) {\n        break;\n      }\n    }\n\n    // Todo: make the segmentIndex a parameter\n    if (insert) scalarData[index] = 1;\n  };\n\n  pointInShapeCallback(segmentationImageData, () => true, callback, boundsIJK);\n\n  triggerSegmentationDataModified(segmentationVolume.volumeId);\n\n  return segmentationVolume;\n}\n\nexport default thresholdVolumeByRange;\n","import type { Types } from '@cornerstonejs/core';\n\n/**\n * Given an array of viewports, returns a list of viewports that are viewing a\n * world space with the given `FrameOfReferenceUID`.\n *\n * @param viewports - An array of viewports.\n * @param FrameOfReferenceUID - The UID defining a particular world space/Frame Of Reference.\n *\n * @returns A filtered array of viewports.\n */\nexport default function filterViewportsWithFrameOfReferenceUID(\n  viewports: Array<Types.IStackViewport | Types.IVolumeViewport>,\n  FrameOfReferenceUID: string\n): Array<Types.IStackViewport | Types.IVolumeViewport> {\n  const numViewports = viewports.length;\n  const viewportsWithFrameOfReferenceUID = [];\n\n  for (let vp = 0; vp < numViewports; vp++) {\n    const viewport = viewports[vp];\n\n    if (viewport.getFrameOfReferenceUID() === FrameOfReferenceUID) {\n      viewportsWithFrameOfReferenceUID.push(viewport);\n    }\n  }\n\n  return viewportsWithFrameOfReferenceUID;\n}\n","import type { Types } from '@cornerstonejs/core';\nimport type { IToolGroup } from '../../types';\nimport { ToolGroupManager } from '../../store';\nimport { ToolModes } from '../../enums';\n\nconst { Active, Passive, Enabled } = ToolModes;\n\n/**\n * Given an array of viewports, returns a list of viewports that have the the specified tool enabled.\n *\n * @param viewports - An array of viewports.\n * @param toolName - The name of the tool to filter on.\n *\n * @returns A filtered array of viewports.\n */\nexport default function filterViewportsWithToolEnabled(\n  viewports: Array<Types.IStackViewport | Types.IVolumeViewport>,\n  toolName: string\n): Array<Types.IStackViewport | Types.IVolumeViewport> {\n  const numViewports = viewports.length;\n\n  const viewportsWithToolEnabled = [];\n\n  for (let vp = 0; vp < numViewports; vp++) {\n    const viewport = viewports[vp];\n\n    const toolGroup = ToolGroupManager.getToolGroupForViewport(\n      viewport.id,\n      viewport.renderingEngineId\n    );\n\n    if (!toolGroup) {\n      continue;\n    }\n\n    const hasTool = _toolGroupHasActiveEnabledOrPassiveTool(\n      toolGroup,\n      toolName\n    );\n\n    if (hasTool) {\n      viewportsWithToolEnabled.push(viewport);\n    }\n  }\n\n  return viewportsWithToolEnabled;\n}\n\n/**\n * Given a toolGroup, return true if it contains the tool with the given `toolName` and it is\n * active, passive or enabled.\n *\n * @param toolGroup - The `toolGroup` to check.\n * @param toolName - The name of the tool.\n *\n * @returns True if the tool is enabled, passive or active in the `toolGroup`.\n */\nfunction _toolGroupHasActiveEnabledOrPassiveTool(\n  toolGroup: IToolGroup,\n  toolName: string\n) {\n  const { toolOptions } = toolGroup;\n  const tool = toolOptions[toolName];\n\n  if (!tool) {\n    return false;\n  }\n\n  const toolMode = tool.mode;\n\n  return toolMode === Active || toolMode === Passive || toolMode === Enabled;\n}\n","import { vec3 } from 'gl-matrix';\n\n/**\n * It filters the viewports that are looking in the same view as the camera\n * It basically checks if the viewPlaneNormal is parallel to the camera viewPlaneNormal\n * @param viewports - Array of viewports to filter\n * @param camera - Camera to compare against\n * @returns - Array of viewports with the same view\n */\nexport function filterViewportsWithParallelNormals(\n  viewports,\n  camera,\n  EPS = 0.999\n) {\n  return viewports.filter((viewport) => {\n    const vpCamera = viewport.getCamera();\n\n    const isParallel =\n      Math.abs(vec3.dot(vpCamera.viewPlaneNormal, camera.viewPlaneNormal)) >\n      EPS;\n\n    return isParallel;\n  });\n}\n\nexport default filterViewportsWithParallelNormals;\n","import { getEnabledElement } from '@cornerstonejs/core';\nimport filterViewportsWithFrameOfReferenceUID from './filterViewportsWithFrameOfReferenceUID';\nimport filterViewportsWithToolEnabled from './filterViewportsWithToolEnabled';\nimport filterViewportsWithParallelNormals from './filterViewportsWithParallelNormals';\n\n/**\n * Given a cornerstone3D enabled `element`, and a `toolName`, find all viewportIds\n * looking at the same Frame Of Reference that have the tool with the given `toolName`\n * active, passive or enabled.\n *\n * @param element - The target cornerstone3D enabled element.\n * @param toolName - The string toolName.\n * @param requireParallelNormals - If true, only return viewports that have parallel normals.\n *\n * @returns An array of viewportIds.\n */\nexport default function getViewportIdsWithToolToRender(\n  element: HTMLDivElement,\n  toolName: string,\n  requireParallelNormals = true\n): string[] {\n  const enabledElement = getEnabledElement(element);\n  const { renderingEngine, FrameOfReferenceUID } = enabledElement;\n\n  let viewports = renderingEngine.getViewports();\n\n  viewports = filterViewportsWithFrameOfReferenceUID(\n    viewports,\n    FrameOfReferenceUID\n  );\n  viewports = filterViewportsWithToolEnabled(viewports, toolName);\n\n  const viewport = renderingEngine.getViewport(enabledElement.viewportId);\n\n  if (requireParallelNormals) {\n    viewports = filterViewportsWithParallelNormals(\n      viewports,\n      viewport.getCamera()\n    );\n  }\n\n  const viewportIds = viewports.map((vp) => vp.id);\n\n  return viewportIds;\n}\n","import { vec3 } from 'gl-matrix';\nimport { CONSTANTS, metaData } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport { Annotations, Annotation } from '../../types';\nimport { debug } from 'console';\n\nconst { EPSILON } = CONSTANTS;\n\nconst PARALLEL_THRESHOLD = 1 - EPSILON;\n\n/**\n * given some `Annotations`, and the slice defined by the camera's normal\n * direction and the spacing in the normal, filter the `Annotations` which\n * is within the slice.\n *\n * @param annotations - Annotations\n * @param camera - The camera\n * @param spacingInNormalDirection - The spacing in the normal direction\n * @returns The filtered `Annotations`.\n */\nexport default function filterAnnotationsWithinSlice(\n  annotations: Annotations,\n  camera: Types.ICamera,\n  spacingInNormalDirection: number\n): Annotations {\n  const { viewPlaneNormal } = camera;\n\n  // The reason we use parallel normals instead of actual orientation is that\n  // flipped action is done through camera API, so we can't rely on the\n  // orientation (viewplaneNormal and viewUp) since even the same image and\n  // same slice if flipped will have different orientation, but still rendering\n  // the same slice. Instead, we choose to use the parallel normals to filter\n  // the annotations and later we fine tune it with the annotation within slice\n  // logic down below.\n  const annotationsWithParallelNormals = annotations.filter(\n    (td: Annotation) => {\n      let annotationViewPlaneNormal = td.metadata.viewPlaneNormal;\n\n      if (!annotationViewPlaneNormal) {\n        // This code is run to set the annotation view plane normal\n        // for historical data which was saved without the normal.\n        const { referencedImageId } = td.metadata;\n        const { imageOrientationPatient } = metaData.get(\n          'imagePlaneModule',\n          referencedImageId\n        );\n        const rowCosineVec = vec3.fromValues(\n          imageOrientationPatient[0],\n          imageOrientationPatient[1],\n          imageOrientationPatient[2]\n        );\n\n        const colCosineVec = vec3.fromValues(\n          imageOrientationPatient[3],\n          imageOrientationPatient[4],\n          imageOrientationPatient[5]\n        );\n\n        annotationViewPlaneNormal = vec3.create() as Types.Point3;\n\n        vec3.cross(annotationViewPlaneNormal, rowCosineVec, colCosineVec);\n        td.metadata.viewPlaneNormal = annotationViewPlaneNormal;\n      }\n      const isParallel =\n        Math.abs(vec3.dot(viewPlaneNormal, annotationViewPlaneNormal)) >\n        PARALLEL_THRESHOLD;\n\n      return annotationViewPlaneNormal && isParallel;\n    }\n  );\n\n  // No in plane annotations.\n  if (!annotationsWithParallelNormals.length) {\n    return [];\n  }\n\n  // Annotation should be within the slice, which means that it should be between\n  // camera's focalPoint +/- spacingInNormalDirection.\n\n  const halfSpacingInNormalDirection = spacingInNormalDirection / 2;\n  const { focalPoint } = camera;\n\n  const annotationsWithinSlice = [];\n\n  for (const annotation of annotationsWithParallelNormals) {\n    const data = annotation.data;\n    const point = data.handles.points[0];\n\n    if (!annotation.isVisible) {\n      continue;\n    }\n    // A = point\n    // B = focal point\n    // P = normal\n\n    // B-A dot P  => Distance in the view direction.\n    // this should be less than half the slice distance.\n\n    const dir = vec3.create();\n\n    vec3.sub(dir, focalPoint, point);\n\n    const dot = vec3.dot(dir, viewPlaneNormal);\n\n    if (Math.abs(dot) < halfSpacingInNormalDirection) {\n      annotationsWithinSlice.push(annotation);\n    }\n  }\n\n  return annotationsWithinSlice;\n}\n","import {\n  StackViewport,\n  VolumeViewport,\n  Types,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\n\nimport filterAnnotationsWithinSlice from './filterAnnotationsWithinSlice';\nimport { Annotations } from '../../types';\n\n/**\n * Given the viewport and the annotations, it filters the annotations array and only\n * return those annotation that should be displayed on the viewport\n * @param annotations - Annotations\n * @returns A filtered version of the annotations.\n */\nexport default function filterAnnotationsForDisplay(\n  viewport: Types.IViewport,\n  annotations: Annotations\n): Annotations {\n  if (viewport instanceof StackViewport) {\n    // 1. Get the currently displayed imageId from the StackViewport\n    const imageId = viewport.getCurrentImageId();\n\n    // 2. remove the dataLoader scheme since it might be an annotation that was\n    // created on the volumeViewport initially and has the volumeLoader scheme\n    // but shares the same imageId\n    const colonIndex = imageId.indexOf(':');\n    const imageURI = imageId.substring(colonIndex + 1);\n\n    // 3. Filter annotation in the frame of reference by the referenced image ID property\n    // Note: With the current implementation drawing on the stack (PT stack) will not\n    // show the annotation on a volume that does not share the same imageURIs (CT Volume),\n    // and we don't have a proper way to check distance either since a stack can be\n    // composed of multiple unrelated images\n    return annotations.filter((annotation) => {\n      if (!annotation.isVisible) {\n        return false;\n      }\n\n      const imageId = annotation.metadata.referencedImageId;\n\n      if (imageId === undefined) {\n        // This annotation was not drawn on a non-coplanar reformat, and such does\n        // note have a referenced imageId.\n        return false;\n      }\n\n      const colonIndex = imageId.indexOf(':');\n      const referenceImageURI = imageId.substring(colonIndex + 1);\n      return referenceImageURI === imageURI;\n    });\n  } else if (viewport instanceof VolumeViewport) {\n    const camera = viewport.getCamera();\n\n    const { spacingInNormalDirection } =\n      csUtils.getTargetVolumeAndSpacingInNormalDir(viewport, camera);\n\n    // Get data with same normal and within the same slice\n    return filterAnnotationsWithinSlice(\n      annotations,\n      camera,\n      spacingInNormalDirection\n    );\n  } else {\n    throw new Error(`Viewport Type ${viewport.type} not supported`);\n  }\n}\n","import { Annotation } from '../../../types';\nimport { isAnnotationLocked } from '../annotationLocking';\nimport { isAnnotationSelected } from '../annotationSelection';\nimport { AnnotationStyleStates } from '../../../enums';\n\n/**\n * Given a Annotation object, return the annotationStyle State that it\n * should be in based on its data\n * @param annotation - The annotation that we want to style.\n * @returns The state of the annotation whether it is Default, Highlighted, Locked, or Selected.\n */\nfunction getState(annotation?: Annotation): AnnotationStyleStates {\n  if (annotation) {\n    if (annotation.data && annotation.highlighted)\n      return AnnotationStyleStates.Highlighted;\n    if (isAnnotationSelected(annotation.annotationUID))\n      return AnnotationStyleStates.Selected;\n\n    // Todo: make annotation lock api not to rely on the annotation itself\n    if (isAnnotationLocked(annotation)) return AnnotationStyleStates.Locked;\n  }\n\n  return AnnotationStyleStates.Default;\n}\n\nexport default getState;\n","import {\n  utilities,\n  getEnabledElement,\n  VolumeViewport,\n  StackViewport,\n  cache,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport BaseTool from './BaseTool';\nimport { getAnnotationManager } from '../../stateManagement/annotation/annotationState';\nimport { Annotation, Annotations, SVGDrawingHelper } from '../../types';\nimport triggerAnnotationRender from '../../utilities/triggerAnnotationRender';\nimport filterAnnotationsForDisplay from '../../utilities/planar/filterAnnotationsForDisplay';\nimport { getStyleProperty } from '../../stateManagement/annotation/config/helpers';\nimport { getState } from '../../stateManagement/annotation/config';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\n\n/**\n * Abstract class for tools which create and display annotations on the\n * cornerstone3D canvas. In addition, it provides a base class for segmentation\n * tools that require drawing an annotation before running the segmentation strategy\n * for instance threshold segmentation based on an area and a threshold.\n * Annotation tools make use of drawing utilities to draw SVG elements on the viewport.\n *\n * To create a new annotation tool, derive from this class and implement the\n * abstract methods.\n */\nabstract class AnnotationDisplayTool extends BaseTool {\n  static toolName;\n\n  // ===================================================================\n  // Abstract Methods - Must be implemented.\n  // ===================================================================\n\n  /**\n   * @abstract renderAnnotation it used to draw the tool's annotation in each\n   * request animation frame\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  abstract renderAnnotation(\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  );\n\n  /**\n   * @virtual Given the element and annotations which is an array of annotation, it\n   * filters the annotations array to only include the annotation based on the viewportType.\n   * If the viewport is StackViewport, it filters based on the current imageId of the viewport,\n   * if the viewport is volumeViewport, it only returns those that are within the\n   * same slice as the current rendered slice in the volume viewport.\n   * imageId as the enabledElement.\n   * @param element - The HTML element\n   * @param annotations - The annotations to filter (array of annotation)\n   * @returns The filtered annotations\n   */\n  filterInteractableAnnotationsForElement(\n    element: HTMLDivElement,\n    annotations: Annotations\n  ): Annotations | undefined {\n    if (!annotations || !annotations.length) {\n      return;\n    }\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    return filterAnnotationsForDisplay(viewport, annotations);\n  }\n\n  /**\n   * On Image Calibration, take all the annotation from the AnnotationState manager,\n   * and invalidate them to force them to be re-rendered and their stats to be recalculated.\n   * Then use the old and new imageData (non-calibrated and calibrated) to calculate the\n   * new position for the annotations in the space of the new imageData.\n   *\n   * @param evt - The calibration event\n   *\n   */\n  public onImageSpacingCalibrated = (\n    evt: Types.EventTypes.ImageSpacingCalibratedEvent\n  ) => {\n    const { element, imageId } = evt.detail;\n\n    const imageURI = utilities.imageIdToURI(imageId);\n    const annotationManager = getAnnotationManager();\n    const framesOfReference = annotationManager.getFramesOfReference();\n\n    // For each frame Of Reference\n    framesOfReference.forEach((frameOfReference) => {\n      const frameOfReferenceSpecificAnnotations =\n        annotationManager.getAnnotations(frameOfReference);\n\n      const toolSpecificAnnotations =\n        frameOfReferenceSpecificAnnotations[this.getToolName()];\n\n      if (!toolSpecificAnnotations || !toolSpecificAnnotations.length) {\n        return;\n      }\n\n      // for this specific tool\n      toolSpecificAnnotations.forEach((annotation) => {\n        // if the annotation is drawn on the same imageId\n        const referencedImageURI = utilities.imageIdToURI(\n          annotation.metadata.referencedImageId\n        );\n\n        if (referencedImageURI === imageURI) {\n          // make them invalid since the image has been calibrated so that\n          // we can update the cachedStats and also rendering\n          annotation.invalidated = true;\n          annotation.data.cachedStats = {};\n        }\n      });\n      triggerAnnotationRender(element);\n    });\n  };\n\n  protected getReferencedImageId(\n    viewport: Types.IStackViewport | Types.IVolumeViewport,\n    worldPos: Types.Point3,\n    viewPlaneNormal: Types.Point3,\n    viewUp: Types.Point3\n  ): string {\n    const targetId = this.getTargetId(viewport);\n\n    let referencedImageId;\n\n    if (viewport instanceof StackViewport) {\n      referencedImageId = targetId.split('imageId:')[1];\n    } else {\n      const volumeId = targetId.split('volumeId:')[1];\n      const imageVolume = cache.getVolume(volumeId);\n\n      referencedImageId = utilities.getClosestImageId(\n        imageVolume,\n        worldPos,\n        viewPlaneNormal\n      );\n    }\n\n    return referencedImageId;\n  }\n\n  /**\n   * It takes the property (color, lineDash, etc.) and based on the state of the\n   * annotation (selected, highlighted etc.) it returns the appropriate value\n   * based on the central toolStyle settings for each level of specification.\n   * @param property - The name of the style property to get.\n   * @param styleSpecifier - An object containing the specifications such as viewportId,\n   * toolGroupId, toolName and annotationUID which are used to get the style if the level of specificity is\n   * met (hierarchy is checked from most specific to least specific which is\n   * annotationLevel -> viewportLevel -> toolGroupLevel -> default.\n   * @param annotation - The annotation for the tool that is\n   * currently active.\n   * @returns The value of the property.\n   */\n  public getStyle(\n    property: string,\n    specifications: StyleSpecifier,\n    annotation?: Annotation\n  ): unknown {\n    return getStyleProperty(\n      property,\n      specifications,\n      getState(annotation),\n      this.mode\n    );\n  }\n}\n\nAnnotationDisplayTool.toolName = 'AnnotationDisplayTool';\nexport default AnnotationDisplayTool;\n","import {\n  BaseVolumeViewport,\n  StackViewport,\n  cache,\n  getEnabledElement,\n  metaData,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { vec2 } from 'gl-matrix';\n\nimport AnnotationDisplayTool from './AnnotationDisplayTool';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport {\n  Annotation,\n  Annotations,\n  EventTypes,\n  ToolHandle,\n  InteractionTypes,\n} from '../../types';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\n\n/**\n * Abstract class for tools which create and display annotations on the\n * cornerstone3D canvas. In addition, it provides a base class for segmentation\n * tools that require drawing an annotation before running the segmentation strategy\n * for instance threshold segmentation based on an area and a threshold.\n * Annotation tools make use of drawing utilities to draw SVG elements on the viewport.\n *\n * To create a new annotation tool, derive from this class and implement the\n * abstract methods.\n */\nabstract class AnnotationTool extends AnnotationDisplayTool {\n  static toolName;\n  // ===================================================================\n  // Abstract Methods - Must be implemented.\n  // ===================================================================\n\n  /**\n   * @abstract addNewAnnotation Creates a new annotation based on the clicked mouse position\n   *\n   * @param evt - The normalized mouse event\n   * @param interactionType -  The interaction type used to add the annotation.\n   */\n  abstract addNewAnnotation(\n    evt: EventTypes.InteractionEventType,\n    interactionType: InteractionTypes\n  ): Annotation;\n\n  /**\n   * @abstract cancel Used to cancel the ongoing tool drawing and manipulation\n   *\n   */\n  abstract cancel(element: HTMLDivElement);\n\n  /**\n   * handleSelectedCallback Custom callback for when a handle is selected.\n   *\n   * @param evt - The normalized mouse event\n   * @param annotation - The annotation selected.\n   * @param handle - The selected handle (either Types.Point3 in space for annotations, or TextBoxHandle object for text boxes).\n   * @param interactionType - The interaction type the handle was selected with.\n   */\n  abstract handleSelectedCallback(\n    evt: EventTypes.InteractionEventType,\n    annotation: Annotation,\n    handle: ToolHandle,\n    interactionType: InteractionTypes\n  ): void;\n\n  /**\n   * Custom callback for when an annotation is selected\n   *\n   * @param evt - The normalized mouse event\n   * @param annotation - The `Annotation` to check.\n   * @param interactionType - The interaction type used to select the tool.\n   */\n  abstract toolSelectedCallback(\n    evt: EventTypes.InteractionEventType,\n    annotation: Annotation,\n    interactionType: InteractionTypes\n  ): void;\n\n  /**\n   * Returns true if the provided canvas coordinate tool is near the annotation\n   *\n   * @param element - The HTML element\n   * @param annotation - The annotation to check\n   * @param canvasCoords - The canvas coordinate to check\n   * @param proximity - The minimum proximity to consider the point near\n   * @param interactionType - The interaction type used to select the tool.\n   *\n   * @returns boolean if the point is near.\n   */\n  abstract isPointNearTool(\n    element: HTMLDivElement,\n    annotation: Annotation,\n    canvasCoords: Types.Point2,\n    proximity: number,\n    interactionType: string\n  ): boolean;\n\n  /**\n   * @virtual Event handler for Cornerstone MOUSE_MOVE event.\n   *\n   *\n   * @param evt - The normalized mouse event\n   * @param filteredAnnotations - The annotations to check for hover interactions\n   * @returns True if the annotation needs to be re-drawn by the annotationRenderingEngine.\n   */\n  public mouseMoveCallback = (\n    evt: EventTypes.MouseMoveEventType,\n    filteredAnnotations?: Annotations\n  ): boolean => {\n    if (!filteredAnnotations) {\n      return false;\n    }\n\n    const { element, currentPoints } = evt.detail;\n    const canvasCoords = currentPoints.canvas;\n    let annotationsNeedToBeRedrawn = false;\n\n    for (const annotation of filteredAnnotations) {\n      // Do not do anything if the annotation is locked or hidden.\n      if (\n        isAnnotationLocked(annotation) ||\n        !isAnnotationVisible(annotation.annotationUID)\n      ) {\n        continue;\n      }\n\n      const { data } = annotation;\n      const activateHandleIndex = data.handles\n        ? data.handles.activeHandleIndex\n        : undefined;\n\n      // Perform tool specific imagePointNearToolOrHandle to determine if the mouse\n      // is near the tool or its handles or its textBox.\n      const near = this._imagePointNearToolOrHandle(\n        element,\n        annotation,\n        canvasCoords,\n        6 // Todo: This should come from the state\n      );\n\n      const nearToolAndNotMarkedActive = near && !annotation.highlighted;\n      const notNearToolAndMarkedActive = !near && annotation.highlighted;\n      if (nearToolAndNotMarkedActive || notNearToolAndMarkedActive) {\n        annotation.highlighted = !annotation.highlighted;\n        annotationsNeedToBeRedrawn = true;\n      } else if (\n        data.handles &&\n        data.handles.activeHandleIndex !== activateHandleIndex\n      ) {\n        // Active handle index has changed, re-render.\n        annotationsNeedToBeRedrawn = true;\n      }\n    }\n\n    return annotationsNeedToBeRedrawn;\n  };\n\n  /**\n   * It checks if the mouse click is near TextBoxHandle or AnnotationHandle itself, and\n   * return either it. It prioritize TextBoxHandle over AnnotationHandle. If\n   * the mouse click is not near any of the handles, it does not return anything.\n   *\n   * @param element - The element that the tool is attached to.\n   * @param annotation - The annotation object associated with the annotation\n   * @param canvasCoords - The coordinates of the mouse click on canvas\n   * @param proximity - The distance from the mouse cursor to the point\n   * that is considered \"near\".\n   * @returns The handle that is closest to the cursor, or null if the cursor\n   * is not near any of the handles.\n   */\n  getHandleNearImagePoint(\n    element: HTMLDivElement,\n    annotation: Annotation,\n    canvasCoords: Types.Point2,\n    proximity: number\n  ): ToolHandle | undefined {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    const { data } = annotation;\n    const { points, textBox } = data.handles;\n    const { worldBoundingBox } = textBox;\n\n    if (worldBoundingBox) {\n      const canvasBoundingBox = {\n        topLeft: viewport.worldToCanvas(worldBoundingBox.topLeft),\n        topRight: viewport.worldToCanvas(worldBoundingBox.topRight),\n        bottomLeft: viewport.worldToCanvas(worldBoundingBox.bottomLeft),\n        bottomRight: viewport.worldToCanvas(worldBoundingBox.bottomRight),\n      };\n\n      if (\n        canvasCoords[0] >= canvasBoundingBox.topLeft[0] &&\n        canvasCoords[0] <= canvasBoundingBox.bottomRight[0] &&\n        canvasCoords[1] >= canvasBoundingBox.topLeft[1] &&\n        canvasCoords[1] <= canvasBoundingBox.bottomRight[1]\n      ) {\n        data.handles.activeHandleIndex = null;\n        return textBox;\n      }\n    }\n\n    for (let i = 0; i < points.length; i++) {\n      const point = points[i];\n      const annotationCanvasCoordinate = viewport.worldToCanvas(point);\n\n      const near =\n        vec2.distance(canvasCoords, annotationCanvasCoordinate) < proximity;\n\n      if (near === true) {\n        data.handles.activeHandleIndex = i;\n        return point;\n      }\n    }\n\n    data.handles.activeHandleIndex = null;\n  }\n\n  /**\n   * It returns the style for the text box\n   * @param styleSpecifier - An object containing the specifications such as viewportId,\n   * toolGroupId, toolName and annotationUID which are used to get the style if the level of specificity is\n   * met (hierarchy is checked from most specific to least specific which is\n   * annotationLevel -> viewportLevel -> toolGroupLevel -> default.\n   * @param annotation - The annotation for the tool that is\n   * currently active.\n   * @returns An object of the style settings for the text box.\n   */\n  public getLinkedTextBoxStyle(\n    specifications: StyleSpecifier,\n    annotation?: Annotation\n  ): Record<string, unknown> {\n    // Todo: this function can be used to set different styles for different toolMode\n    // for the textBox.\n\n    return {\n      fontFamily: this.getStyle(\n        'textBoxFontFamily',\n        specifications,\n        annotation\n      ),\n      fontSize: this.getStyle('textBoxFontSize', specifications, annotation),\n      color: this.getStyle('textBoxColor', specifications, annotation),\n      shadow: this.getStyle('textBoxShadow', specifications, annotation),\n      background: this.getStyle(\n        'textBoxBackground',\n        specifications,\n        annotation\n      ),\n      lineWidth: this.getStyle(\n        'textBoxLinkLineWidth',\n        specifications,\n        annotation\n      ),\n      lineDash: this.getStyle(\n        'textBoxLinkLineDash',\n        specifications,\n        annotation\n      ),\n    };\n  }\n\n  /**\n   * Returns true if the viewport is scaled to SUV units\n   * @param viewport - The viewport\n   * @param targetId - The annotation targetId\n   * @param imageId - The annotation imageId\n   * @returns\n   */\n  isSuvScaled(\n    viewport: Types.IStackViewport | Types.IVolumeViewport,\n    targetId: string,\n    imageId?: string\n  ): boolean {\n    if (viewport instanceof BaseVolumeViewport) {\n      const volumeId = targetId.split('volumeId:')[1];\n      const volume = cache.getVolume(volumeId);\n      return volume.scaling?.PT !== undefined;\n    } else if (viewport instanceof StackViewport) {\n      const scalingModule: Types.ScalingParameters | undefined =\n        imageId && metaData.get('scalingModule', imageId);\n      return typeof scalingModule?.suvbw === 'number';\n    } else {\n      throw new Error('Viewport is not a valid type');\n    }\n  }\n\n  /**\n   * Returns true if the `canvasCoords` are near a handle or selectable part of the tool\n   *\n   * @param element - The HTML element\n   * @param annotation - The annotation to check\n   * @param canvasCoords - The canvas coordinates to check\n   * @param proximity - The proximity to consider\n   *\n   * @returns If the point is near.\n   */\n  private _imagePointNearToolOrHandle(\n    element: HTMLDivElement,\n    annotation: Annotation,\n    canvasCoords: Types.Point2,\n    proximity: number\n  ): boolean {\n    // Based on the tool instance type, check if the point is near the tool handles\n    const handleNearImagePoint = this.getHandleNearImagePoint(\n      element,\n      annotation,\n      canvasCoords,\n      proximity\n    );\n\n    if (handleNearImagePoint) {\n      return true;\n    }\n\n    // If the point is not near the handles, check if the point is near the tool\n    const toolNewImagePoint = this.isPointNearTool(\n      element,\n      annotation,\n      canvasCoords,\n      proximity,\n      'mouse'\n    );\n\n    if (toolNewImagePoint) {\n      return true;\n    }\n  }\n}\n\nAnnotationTool.toolName = 'AnnotationTool';\nexport default AnnotationTool;\n","import { Enums } from '@cornerstonejs/core';\n\nconst { CalibrationTypes } = Enums;\nconst PIXEL_UNITS = 'px';\n\n/**\n * Extracts the length units and the type of calibration for those units\n * into the response.  The length units will typically be either mm or px\n * while the calibration type can be any of a number of different calibraiton types.\n *\n * Volumetric images have no calibration type, so are just the raw mm.\n *\n * TODO: Handle region calibration\n *\n * @param handles - used to detect if the spacing information is different\n *   between various points (eg angled ERMF or US Region).\n *   Currently unused, but needed for correct US Region handling\n * @param image - to extract the calibration from\n *        image.calibration - calibration value to extract units form\n * @returns String containing the units and type of calibration\n */\nconst getCalibratedLengthUnits = (handles, image): string => {\n  const { calibration, hasPixelSpacing } = image;\n  // Anachronistic - moving to using calibration consistently, but not completed yet\n  const units = hasPixelSpacing ? 'mm' : PIXEL_UNITS;\n  if (!calibration || !calibration.type) return units;\n  if (calibration.type === CalibrationTypes.UNCALIBRATED) return PIXEL_UNITS;\n  // TODO - handle US regions properly\n  if (calibration.SequenceOfUltrasoundRegions) return 'US Region';\n  return `${units} ${calibration.type}`;\n};\n\nconst SQUARE = '\\xb2';\n/**\n *  Extracts the area units, including the squared sign plus calibration type.\n */\nconst getCalibratedAreaUnits = (handles, image): string => {\n  const { calibration, hasPixelSpacing } = image;\n  const units = (hasPixelSpacing ? 'mm' : PIXEL_UNITS) + SQUARE;\n  if (!calibration || !calibration.type) return units;\n  if (calibration.SequenceOfUltrasoundRegions) return 'US Region';\n  return `${units} ${calibration.type}`;\n};\n\n/**\n * Gets the scale divisor for converting from internal spacing to\n * image spacing for calibrated images.\n */\nconst getCalibratedScale = (image) => image.calibration?.scale || 1;\n\n/** Gets the aspect ratio of the screen display relative to the image\n * display in order to square up measurement values.\n * That is, suppose the spacing on the image is 1, 0.5 (x,y spacing)\n * This is displayed at 1, 1 spacing on screen, then the\n * aspect value will be 1/0.5 = 2\n */\nconst getCalibratedAspect = (image) => image.calibration?.aspect || 1;\n\nexport default getCalibratedLengthUnits;\n\nexport {\n  getCalibratedAreaUnits,\n  getCalibratedLengthUnits,\n  getCalibratedScale,\n  getCalibratedAspect,\n};\n","import { Types } from '@cornerstonejs/core';\n\nfunction dist2(p1: Types.Point2, p2: Types.Point2): number {\n  return (p1[0] - p2[0]) * (p1[0] - p2[0]) + (p1[1] - p2[1]) * (p1[1] - p2[1]);\n}\n\n/**\n * Calculates the distance-squared of a point to a line\n *\n * @param lineStart - x,y coordinates of the start of the line\n * @param lineEnd - x,y coordinates of the end of the line\n * @param point - x,y of the point\n * @returns distance-squared\n */\nexport default function distanceToPointSquared(\n  lineStart: Types.Point2,\n  lineEnd: Types.Point2,\n  point: Types.Point2\n): number {\n  const d2 = dist2(lineStart, lineEnd);\n\n  if (d2 === 0) {\n    return dist2(point, lineStart);\n  }\n\n  const t =\n    ((point[0] - lineStart[0]) * (lineEnd[0] - lineStart[0]) +\n      (point[1] - lineStart[1]) * (lineEnd[1] - lineStart[1])) /\n    d2;\n\n  if (t < 0) {\n    return dist2(point, lineStart);\n  }\n  if (t > 1) {\n    return dist2(point, lineEnd);\n  }\n\n  const pt: Types.Point2 = [\n    lineStart[0] + t * (lineEnd[0] - lineStart[0]),\n    lineStart[1] + t * (lineEnd[1] - lineStart[1]),\n  ];\n\n  return dist2(point, pt);\n}\n","import distanceToPointSquared from './distanceToPointSquared';\nimport type { Types } from '@cornerstonejs/core';\n\n/**\n * Calculates the distance of a point to a line\n *\n * @param lineStart - x,y coordinates of the start of the line\n * @param lineEnd - x,y coordinates of the end of the line\n * @param point - x,y of the point\n * @returns distance\n */\nexport default function distanceToPoint(\n  lineStart: Types.Point2,\n  lineEnd: Types.Point2,\n  point: Types.Point2\n): number {\n  if (lineStart.length !== 2 || lineEnd.length !== 2 || point.length !== 2) {\n    throw Error(\n      'lineStart, lineEnd, and point should have 2 elements of [x, y]'\n    );\n  }\n\n  return Math.sqrt(distanceToPointSquared(lineStart, lineEnd, point));\n}\n","import type { Types } from '@cornerstonejs/core';\nimport * as lineSegment from '../line';\n\ntype rectLineSegments = {\n  top: Types.Point2[];\n  right: Types.Point2[];\n  bottom: Types.Point2[];\n  left: Types.Point2[];\n};\n\n/**\n * Given a rectangle left, top, width and height, return an object containing the\n * line segments that make up the rectangle's four sides\n * @param left - The x-coordinate of the left edge of the rectangle.\n * @param top - The y-coordinate of the top edge of the rectangle.\n * @param width - The width of the rectangle.\n * @param height - The height of the rectangle.\n * @returns An object with four keys, each of which contains an array of two\n * points.\n */\nfunction rectToLineSegments(\n  left: number,\n  top: number,\n  width: number,\n  height: number\n): rectLineSegments {\n  const topLineStart: Types.Point2 = [left, top];\n  const topLineEnd: Types.Point2 = [left + width, top];\n\n  const rightLineStart: Types.Point2 = [left + width, top];\n  const rightLineEnd: Types.Point2 = [left + width, top + height];\n\n  const bottomLineStart: Types.Point2 = [left + width, top + height];\n  const bottomLineEnd: Types.Point2 = [left, top + height];\n\n  const leftLineStart: Types.Point2 = [left, top + height];\n  const leftLineEnd: Types.Point2 = [left, top];\n\n  const lineSegments = {\n    top: [topLineStart, topLineEnd],\n    right: [rightLineStart, rightLineEnd],\n    bottom: [bottomLineStart, bottomLineEnd],\n    left: [leftLineStart, leftLineEnd],\n  };\n\n  return lineSegments;\n}\n\n/**\n * Calculates distance of the point to the rectangle. It calculates the minimum\n * distance between the point and each line segment of the rectangle.\n *\n * @param rect - coordinates of the rectangle [left, top, width, height]\n * @param point - [x,y] coordinates of a point\n * @returns\n */\nexport default function distanceToPoint(\n  rect: number[],\n  point: Types.Point2\n): number {\n  if (rect.length !== 4 || point.length !== 2) {\n    throw Error(\n      'rectangle:[left, top, width, height] or point: [x,y] not defined correctly'\n    );\n  }\n\n  const [left, top, width, height] = rect;\n\n  let minDistance = 655535;\n  const lineSegments = rectToLineSegments(left, top, width, height);\n\n  Object.keys(lineSegments).forEach((segment) => {\n    const [lineStart, lineEnd] = lineSegments[segment];\n    const distance = lineSegment.distanceToPoint(lineStart, lineEnd, point);\n\n    if (distance < minDistance) {\n      minDistance = distance;\n    }\n  });\n\n  return minDistance;\n}\n","import type { Types } from '@cornerstonejs/core';\n\n/**\n * Determine the coordinates that will place the textbox to the right of the\n * annotation.\n *\n * @param annotationCanvasPoints - The canvas points of the annotation's handles.\n * @returns - The coordinates for default placement of the textbox.\n */\nexport default function getTextBoxCoordsCanvas(\n  annotationCanvasPoints: Array<Types.Point2>\n): Types.Point2 {\n  const corners = _determineCorners(annotationCanvasPoints);\n  const centerY = (corners.top[1] + corners.bottom[1]) / 2;\n  const textBoxCanvas = <Types.Point2>[corners.right[0], centerY];\n\n  return textBoxCanvas;\n}\n\n/**\n * Determine the handles that have the min/max x and y values.\n *\n * @param canvasPoints - The canvas points of the annotation's handles.\n * @returns - The top, left, bottom, and right handles.\n */\nfunction _determineCorners(canvasPoints: Array<Types.Point2>) {\n  const handlesLeftToRight = [canvasPoints[0], canvasPoints[1]].sort(_compareX);\n  const handlesTopToBottom = [canvasPoints[0], canvasPoints[1]].sort(_compareY);\n  const right = handlesLeftToRight[handlesLeftToRight.length - 1];\n  const top = handlesTopToBottom[0];\n  const bottom = handlesTopToBottom[handlesTopToBottom.length - 1];\n\n  return {\n    top,\n    bottom,\n    right,\n  };\n\n  function _compareX(a, b) {\n    return a[0] < b[0] ? -1 : 1;\n  }\n  function _compareY(a, b) {\n    return a[1] < b[1] ? -1 : 1;\n  }\n}\n","import { vec3 } from 'gl-matrix';\nimport type { Types } from '@cornerstonejs/core';\n\n/**\n * Given two world positions and an orthogonal view to an `imageVolume` defined\n * by a `viewPlaneNormal` and a `viewUp`, get the width and height in world coordinates\n * of the rectangle defined by the two points. The implementation works both with orthogonal\n * non-orthogonal rectangles.\n *\n * @param viewPlaneNormal - The normal of the view.\n * @param viewUp - The up direction of the view.\n * @param imageVolume - The imageVolume to use to measure.\n * @param topLeftWorld - The first world position.\n * @param bottomRightWorld - The second world position.\n *\n * @returns The `worldWidth` and `worldHeight`.\n */\nexport default function getWorldWidthAndHeightFromCorners(\n  viewPlaneNormal: Types.Point3,\n  viewUp: Types.Point3,\n  topLeftWorld: Types.Point3,\n  bottomRightWorld: Types.Point3\n): { worldWidth: number; worldHeight: number } {\n  const viewRight = vec3.create();\n\n  vec3.cross(viewRight, <vec3>viewUp, <vec3>viewPlaneNormal);\n\n  const pos1 = vec3.fromValues(...topLeftWorld);\n  const pos2 = vec3.fromValues(...bottomRightWorld);\n\n  const diagonal = vec3.create();\n  vec3.subtract(diagonal, pos1, pos2);\n\n  const diagonalLength = vec3.length(diagonal);\n\n  // When the two points are very close to each other return width as 0\n  // to avoid NaN the cosTheta formula calculation\n  if (diagonalLength < 0.0001) {\n    return { worldWidth: 0, worldHeight: 0 };\n  }\n\n  const cosTheta =\n    vec3.dot(diagonal, viewRight) / (diagonalLength * vec3.length(viewRight));\n\n  const sinTheta = Math.sqrt(1 - cosTheta * cosTheta);\n\n  const worldWidth = sinTheta * diagonalLength;\n  const worldHeight = cosTheta * diagonalLength;\n\n  return { worldWidth, worldHeight };\n}\n","import { metaData } from '@cornerstonejs/core';\n\ntype ModalityUnitOptions = {\n  isPreScaled: boolean;\n  isSuvScaled: boolean;\n};\n\nfunction getModalityUnit(\n  modality: string,\n  imageId: string,\n  options: ModalityUnitOptions\n): string {\n  if (modality === 'CT') {\n    return 'HU';\n  } else if (modality === 'PT') {\n    return _handlePTModality(imageId, options);\n  } else {\n    return '';\n  }\n}\n\nfunction _handlePTModality(imageId: string, options: ModalityUnitOptions) {\n  if (!options.isPreScaled) {\n    return 'raw';\n  }\n\n  if (options.isSuvScaled) {\n    return 'SUV';\n  }\n\n  const petSeriesModule = metaData.get('petSeriesModule', imageId);\n  return petSeriesModule?.units || 'unitless';\n}\n\nexport { getModalityUnit, ModalityUnitOptions };\n","import {\n  cache,\n  StackViewport,\n  Types,\n  BaseVolumeViewport,\n} from '@cornerstonejs/core';\n\nfunction isViewportPreScaled(\n  viewport: Types.IStackViewport | Types.IVolumeViewport,\n  targetId: string\n): boolean {\n  if (viewport instanceof BaseVolumeViewport) {\n    const volumeId = targetId.split('volumeId:')[1];\n    const volume = cache.getVolume(volumeId);\n    return !!volume?.scaling && Object.keys(volume.scaling).length > 0;\n  } else if (viewport instanceof StackViewport) {\n    const { preScale } = viewport.getImageData() || {};\n    return !!preScale?.scaled;\n  } else {\n    throw new Error('Viewport is not a valid type');\n  }\n}\n\nexport { isViewportPreScaled };\n","import { AnnotationTool } from '../base';\n\nimport {\n  getEnabledElement,\n  VolumeViewport,\n  triggerEvent,\n  eventTarget,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport {\n  getCalibratedAreaUnits,\n  getCalibratedScale,\n} from '../../utilities/getCalibratedUnits';\nimport roundNumber from '../../utilities/roundNumber';\nimport throttle from '../../utilities/throttle';\nimport {\n  addAnnotation,\n  getAnnotations,\n  removeAnnotation,\n} from '../../stateManagement';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport {\n  drawHandles as drawHandlesSvg,\n  drawLinkedTextBox as drawLinkedTextBoxSvg,\n  drawRect as drawRectSvg,\n} from '../../drawingSvg';\nimport { state } from '../../store';\nimport { Events } from '../../enums';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport * as rectangle from '../../utilities/math/rectangle';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport getWorldWidthAndHeightFromCorners from '../../utilities/planar/getWorldWidthAndHeightFromCorners';\nimport {\n  resetElementCursor,\n  hideElementCursor,\n} from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\n\nimport {\n  EventTypes,\n  ToolHandle,\n  TextBoxHandle,\n  ToolProps,\n  PublicToolProps,\n  InteractionTypes,\n  SVGDrawingHelper,\n} from '../../types';\nimport { RectangleROIAnnotation } from '../../types/ToolSpecificAnnotationTypes';\nimport {\n  AnnotationCompletedEventDetail,\n  AnnotationModifiedEventDetail,\n} from '../../types/EventTypes';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\nimport { getModalityUnit } from '../../utilities/getModalityUnit';\nimport { isViewportPreScaled } from '../../utilities/viewport/isViewportPreScaled';\n\nconst { transformWorldToIndex } = csUtils;\n\n/**\n * RectangleROIAnnotation let you draw annotations that measures the statistics\n * such as area, max, mean and stdDev of a Rectangular region of interest.\n * You can use RectangleROIAnnotation in all perpendicular views (axial, sagittal, coronal).\n * Note: annotation tools in cornerstone3DTools exists in the exact location\n * in the physical 3d space, as a result, by default, all annotations that are\n * drawing in the same frameOfReference will get shared between viewports that\n * are in the same frameOfReference. RectangleROI tool's text box lines are dynamically\n * generated based on the viewport's underlying Modality. For instance, if\n * the viewport is displaying CT, the text box will shown the statistics in Hounsfield units,\n * and if the viewport is displaying PET, the text box will show the statistics in\n * SUV units.\n *\n * The resulting annotation's data (statistics) and metadata (the\n * state of the viewport while drawing was happening) will get added to the\n * ToolState manager and can be accessed from the ToolState by calling getAnnotations\n * or similar methods.\n *\n * ```js\n * cornerstoneTools.addTool(RectangleROITool)\n *\n * const toolGroup = ToolGroupManager.createToolGroup('toolGroupId')\n *\n * toolGroup.addTool(RectangleROITool.toolName)\n *\n * toolGroup.addViewport('viewportId', 'renderingEngineId')\n *\n * toolGroup.setToolActive(RectangleROITool.toolName, {\n *   bindings: [\n *    {\n *       mouseButton: MouseBindings.Primary, // Left Click\n *     },\n *   ],\n * })\n * ```\n *\n * Read more in the Docs section of the website.\n */\nclass RectangleROITool extends AnnotationTool {\n  static toolName;\n\n  _throttledCalculateCachedStats: any;\n  editData: {\n    annotation: any;\n    viewportIdsToRender: string[];\n    handleIndex?: number;\n    movingTextBox?: boolean;\n    newAnnotation?: boolean;\n    hasMoved?: boolean;\n  } | null;\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        shadow: true,\n        preventHandleOutsideImage: false,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n\n    this._throttledCalculateCachedStats = throttle(\n      this._calculateCachedStats,\n      100,\n      { trailing: true }\n    );\n  }\n\n  /**\n   * Based on the current position of the mouse and the current imageId to create\n   * a RectangleROI Annotation and stores it in the annotationManager\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  addNewAnnotation = (\n    evt: EventTypes.InteractionEventType\n  ): RectangleROIAnnotation => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    const referencedImageId = this.getReferencedImageId(\n      viewport,\n      worldPos,\n      viewPlaneNormal,\n      viewUp\n    );\n\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n    const annotation = {\n      invalidated: true,\n      highlighted: true,\n      metadata: {\n        toolName: this.getToolName(),\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId,\n      },\n      data: {\n        label: '',\n        handles: {\n          points: [\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n          ],\n          textBox: {\n            hasMoved: false,\n            worldPosition: <Types.Point3>[0, 0, 0],\n            worldBoundingBox: {\n              topLeft: <Types.Point3>[0, 0, 0],\n              topRight: <Types.Point3>[0, 0, 0],\n              bottomLeft: <Types.Point3>[0, 0, 0],\n              bottomRight: <Types.Point3>[0, 0, 0],\n            },\n          },\n          activeHandleIndex: null,\n        },\n        cachedStats: {},\n      },\n    };\n\n    addAnnotation(annotation, element);\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex: 3,\n      movingTextBox: false,\n      newAnnotation: true,\n      hasMoved: false,\n    };\n    this._activateDraw(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  };\n\n  /**\n   * It returns if the canvas point is near the provided annotation in the provided\n   * element or not. A proximity is passed to the function to determine the\n   * proximity of the point to the annotation in number of pixels.\n   *\n   * @param element - HTML Element\n   * @param annotation - Annotation\n   * @param canvasCoords - Canvas coordinates\n   * @param proximity - Proximity to tool to consider\n   * @returns Boolean, whether the canvas point is near tool\n   */\n  isPointNearTool = (\n    element: HTMLDivElement,\n    annotation: RectangleROIAnnotation,\n    canvasCoords: Types.Point2,\n    proximity: number\n  ): boolean => {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    const { data } = annotation;\n    const { points } = data.handles;\n\n    const canvasPoint1 = viewport.worldToCanvas(points[0]);\n    const canvasPoint2 = viewport.worldToCanvas(points[3]);\n\n    const rect = this._getRectangleImageCoordinates([\n      canvasPoint1,\n      canvasPoint2,\n    ]);\n\n    const point = [canvasCoords[0], canvasCoords[1]];\n    const { left, top, width, height } = rect;\n\n    const distanceToPoint = rectangle.distanceToPoint(\n      [left, top, width, height],\n      point as Types.Point2\n    );\n\n    if (distanceToPoint <= proximity) {\n      return true;\n    }\n\n    return false;\n  };\n\n  toolSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: RectangleROIAnnotation\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    annotation.highlighted = true;\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      movingTextBox: false,\n    };\n\n    this._activateModify(element);\n\n    hideElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    evt.preventDefault();\n  };\n\n  handleSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: RectangleROIAnnotation,\n    handle: ToolHandle\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const { data } = annotation;\n\n    annotation.highlighted = true;\n\n    let movingTextBox = false;\n    let handleIndex;\n\n    if ((handle as TextBoxHandle).worldPosition) {\n      movingTextBox = true;\n    } else {\n      handleIndex = data.handles.points.findIndex((p) => p === handle);\n    }\n\n    // Find viewports to render on drag.\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex,\n      movingTextBox,\n    };\n    this._activateModify(element);\n\n    hideElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    evt.preventDefault();\n  };\n\n  _endCallback = (evt: EventTypes.InteractionEventType): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, newAnnotation, hasMoved } =\n      this.editData;\n    const { data } = annotation;\n\n    if (newAnnotation && !hasMoved) {\n      return;\n    }\n\n    data.handles.activeHandleIndex = null;\n\n    this._deactivateModify(element);\n    this._deactivateDraw(element);\n\n    resetElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    this.editData = null;\n    this.isDrawing = false;\n\n    if (\n      this.isHandleOutsideImage &&\n      this.configuration.preventHandleOutsideImage\n    ) {\n      removeAnnotation(annotation.annotationUID);\n    }\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    if (newAnnotation) {\n      const eventType = Events.ANNOTATION_COMPLETED;\n\n      const eventDetail: AnnotationCompletedEventDetail = {\n        annotation,\n      };\n\n      triggerEvent(eventTarget, eventType, eventDetail);\n    }\n  };\n\n  _dragCallback = (evt: EventTypes.InteractionEventType): void => {\n    this.isDrawing = true;\n\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, handleIndex, movingTextBox } =\n      this.editData;\n    const { data } = annotation;\n\n    if (movingTextBox) {\n      // Drag mode - Move the text boxes world position\n      const { deltaPoints } = eventDetail as EventTypes.MouseDragEventDetail;\n      const worldPosDelta = deltaPoints.world;\n\n      const { textBox } = data.handles;\n      const { worldPosition } = textBox;\n\n      worldPosition[0] += worldPosDelta[0];\n      worldPosition[1] += worldPosDelta[1];\n      worldPosition[2] += worldPosDelta[2];\n\n      textBox.hasMoved = true;\n    } else if (handleIndex === undefined) {\n      // Drag mode - Moving tool, so move all points by the world points delta\n      const { deltaPoints } = eventDetail as EventTypes.MouseDragEventDetail;\n      const worldPosDelta = deltaPoints.world;\n\n      const { points } = data.handles;\n\n      points.forEach((point) => {\n        point[0] += worldPosDelta[0];\n        point[1] += worldPosDelta[1];\n        point[2] += worldPosDelta[2];\n      });\n      annotation.invalidated = true;\n    } else {\n      // Moving handle.\n      const { currentPoints } = eventDetail;\n      const enabledElement = getEnabledElement(element);\n      const { worldToCanvas, canvasToWorld } = enabledElement.viewport;\n      const worldPos = currentPoints.world;\n\n      const { points } = data.handles;\n\n      // Move this handle.\n      points[handleIndex] = [...worldPos];\n\n      let bottomLeftCanvas;\n      let bottomRightCanvas;\n      let topLeftCanvas;\n      let topRightCanvas;\n\n      let bottomLeftWorld;\n      let bottomRightWorld;\n      let topLeftWorld;\n      let topRightWorld;\n\n      switch (handleIndex) {\n        case 0:\n        case 3:\n          // Moving bottomLeft or topRight\n\n          bottomLeftCanvas = worldToCanvas(points[0]);\n          topRightCanvas = worldToCanvas(points[3]);\n\n          bottomRightCanvas = [topRightCanvas[0], bottomLeftCanvas[1]];\n          topLeftCanvas = [bottomLeftCanvas[0], topRightCanvas[1]];\n\n          bottomRightWorld = canvasToWorld(bottomRightCanvas);\n          topLeftWorld = canvasToWorld(topLeftCanvas);\n\n          points[1] = bottomRightWorld;\n          points[2] = topLeftWorld;\n\n          break;\n        case 1:\n        case 2:\n          // Moving bottomRight or topLeft\n          bottomRightCanvas = worldToCanvas(points[1]);\n          topLeftCanvas = worldToCanvas(points[2]);\n\n          bottomLeftCanvas = <Types.Point2>[\n            topLeftCanvas[0],\n            bottomRightCanvas[1],\n          ];\n          topRightCanvas = <Types.Point2>[\n            bottomRightCanvas[0],\n            topLeftCanvas[1],\n          ];\n\n          bottomLeftWorld = canvasToWorld(bottomLeftCanvas);\n          topRightWorld = canvasToWorld(topRightCanvas);\n\n          points[0] = bottomLeftWorld;\n          points[3] = topRightWorld;\n\n          break;\n      }\n      annotation.invalidated = true;\n    }\n\n    this.editData.hasMoved = true;\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  };\n\n  cancel = (element: HTMLDivElement) => {\n    // If it is mid-draw or mid-modify\n    if (this.isDrawing) {\n      this.isDrawing = false;\n      this._deactivateDraw(element);\n      this._deactivateModify(element);\n      resetElementCursor(element);\n\n      const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n\n      const { data } = annotation;\n\n      annotation.highlighted = false;\n      data.handles.activeHandleIndex = null;\n\n      const enabledElement = getEnabledElement(element);\n      const { renderingEngine } = enabledElement;\n\n      triggerAnnotationRenderForViewportIds(\n        renderingEngine,\n        viewportIdsToRender\n      );\n\n      if (newAnnotation) {\n        const eventType = Events.ANNOTATION_COMPLETED;\n\n        const eventDetail: AnnotationCompletedEventDetail = {\n          annotation,\n        };\n\n        triggerEvent(eventTarget, eventType, eventDetail);\n      }\n\n      this.editData = null;\n      return annotation.annotationUID;\n    }\n  };\n  /**\n   * Add event handlers for the modify event loop, and prevent default event prapogation.\n   */\n  _activateDraw = (element) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(Events.MOUSE_UP, this._endCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n    element.addEventListener(Events.MOUSE_MOVE, this._dragCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.addEventListener(Events.TOUCH_END, this._endCallback);\n    element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n    element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n  };\n\n  /**\n   * Add event handlers for the modify event loop, and prevent default event prapogation.\n   */\n  _deactivateDraw = (element) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n    element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n    element.removeEventListener(Events.MOUSE_MOVE, this._dragCallback);\n    element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.removeEventListener(Events.TOUCH_END, this._endCallback);\n    element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n    element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n  };\n\n  /**\n   * Add event handlers for the modify event loop, and prevent default event prapogation.\n   */\n  _activateModify = (element) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(Events.MOUSE_UP, this._endCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.addEventListener(Events.TOUCH_END, this._endCallback);\n    element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n    element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n  };\n\n  /**\n   * Remove event handlers for the modify event loop, and enable default event propagation.\n   */\n  _deactivateModify = (element) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n    element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n    element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.removeEventListener(Events.TOUCH_END, this._endCallback);\n    element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n    element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n  };\n\n  /**\n   * it is used to draw the rectangleROI annotation in each\n   * request animation frame. It calculates the updated cached statistics if\n   * data is invalidated and cache it.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n    const { viewport } = enabledElement;\n    const { element } = viewport;\n\n    let annotations = getAnnotations(this.getToolName(), element);\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    annotations = this.filterInteractableAnnotationsForElement(\n      element,\n      annotations\n    );\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    const targetId = this.getTargetId(viewport);\n    const renderingEngine = viewport.getRenderingEngine();\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    for (let i = 0; i < annotations.length; i++) {\n      const annotation = annotations[i] as RectangleROIAnnotation;\n      const { annotationUID, data } = annotation;\n      const { points, activeHandleIndex } = data.handles;\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n\n      styleSpecifier.annotationUID = annotationUID;\n\n      const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n      const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n      const color = this.getStyle('color', styleSpecifier, annotation);\n\n      const { viewPlaneNormal, viewUp } = viewport.getCamera();\n\n      const modalityUnitOptions = {\n        isPreScaled: isViewportPreScaled(viewport, targetId),\n\n        isSuvScaled: this.isSuvScaled(\n          viewport,\n          targetId,\n          annotation.metadata.referencedImageId\n        ),\n      };\n\n      // If cachedStats does not exist, or the unit is missing (as part of import/hydration etc.),\n      // force to recalculate the stats from the points\n      if (\n        !data.cachedStats[targetId] ||\n        data.cachedStats[targetId].areaUnit === undefined\n      ) {\n        data.cachedStats[targetId] = {\n          Modality: null,\n          area: null,\n          max: null,\n          mean: null,\n          stdDev: null,\n          areaUnit: null,\n        };\n\n        this._calculateCachedStats(\n          annotation,\n          viewPlaneNormal,\n          viewUp,\n          renderingEngine,\n          enabledElement,\n          modalityUnitOptions\n        );\n      } else if (annotation.invalidated) {\n        this._throttledCalculateCachedStats(\n          annotation,\n          viewPlaneNormal,\n          viewUp,\n          renderingEngine,\n          enabledElement,\n          modalityUnitOptions\n        );\n\n        // If the invalidated data is as a result of volumeViewport manipulation\n        // of the tools, we need to invalidate the related stackViewports data if\n        // they are not at the referencedImageId, so that\n        // when scrolling to the related slice in which the tool were manipulated\n        // we re-render the correct tool position. This is due to stackViewport\n        // which doesn't have the full volume at each time, and we are only working\n        // on one slice at a time.\n        if (viewport instanceof VolumeViewport) {\n          const { referencedImageId } = annotation.metadata;\n\n          // invalidate all the relevant stackViewports if they are not\n          // at the referencedImageId\n          for (const targetId in data.cachedStats) {\n            if (targetId.startsWith('imageId')) {\n              const viewports = renderingEngine.getStackViewports();\n\n              const invalidatedStack = viewports.find((vp) => {\n                // The stack viewport that contains the imageId but is not\n                // showing it currently\n                const referencedImageURI =\n                  csUtils.imageIdToURI(referencedImageId);\n                const hasImageURI = vp.hasImageURI(referencedImageURI);\n                const currentImageURI = csUtils.imageIdToURI(\n                  vp.getCurrentImageId()\n                );\n                return hasImageURI && currentImageURI !== referencedImageURI;\n              });\n\n              if (invalidatedStack) {\n                delete data.cachedStats[targetId];\n              }\n            }\n          }\n        }\n      }\n\n      // If rendering engine has been destroyed while rendering\n      if (!viewport.getRenderingEngine()) {\n        console.warn('Rendering Engine has been destroyed');\n        return renderStatus;\n      }\n\n      let activeHandleCanvasCoords;\n\n      if (!isAnnotationVisible(annotationUID)) {\n        continue;\n      }\n\n      if (\n        !isAnnotationLocked(annotation) &&\n        !this.editData &&\n        activeHandleIndex !== null\n      ) {\n        // Not locked or creating and hovering over handle, so render handle.\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n      }\n\n      if (activeHandleCanvasCoords) {\n        const handleGroupUID = '0';\n\n        drawHandlesSvg(\n          svgDrawingHelper,\n          annotationUID,\n          handleGroupUID,\n          activeHandleCanvasCoords,\n          {\n            color,\n          }\n        );\n      }\n\n      const dataId = `${annotationUID}-rect`;\n      const rectangleUID = '0';\n      drawRectSvg(\n        svgDrawingHelper,\n        annotationUID,\n        rectangleUID,\n        canvasCoordinates[0],\n        canvasCoordinates[3],\n        {\n          color,\n          lineDash,\n          lineWidth,\n        },\n        dataId\n      );\n\n      renderStatus = true;\n\n      const textLines = this._getTextLines(data, targetId);\n      if (!textLines || textLines.length === 0) {\n        continue;\n      }\n\n      if (!data.handles.textBox.hasMoved) {\n        const canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCoordinates);\n\n        data.handles.textBox.worldPosition =\n          viewport.canvasToWorld(canvasTextBoxCoords);\n      }\n\n      const textBoxPosition = viewport.worldToCanvas(\n        data.handles.textBox.worldPosition\n      );\n\n      const textBoxUID = '1';\n      const boundingBox = drawLinkedTextBoxSvg(\n        svgDrawingHelper,\n        annotationUID,\n        textBoxUID,\n        textLines,\n        textBoxPosition,\n        canvasCoordinates,\n        {},\n        this.getLinkedTextBoxStyle(styleSpecifier, annotation)\n      );\n\n      const { x: left, y: top, width, height } = boundingBox;\n\n      data.handles.textBox.worldBoundingBox = {\n        topLeft: viewport.canvasToWorld([left, top]),\n        topRight: viewport.canvasToWorld([left + width, top]),\n        bottomLeft: viewport.canvasToWorld([left, top + height]),\n        bottomRight: viewport.canvasToWorld([left + width, top + height]),\n      };\n    }\n\n    return renderStatus;\n  };\n\n  _getRectangleImageCoordinates = (\n    points: Array<Types.Point2>\n  ): {\n    left: number;\n    top: number;\n    width: number;\n    height: number;\n  } => {\n    const [point0, point1] = points;\n\n    return {\n      left: Math.min(point0[0], point1[0]),\n      top: Math.min(point0[1], point1[1]),\n      width: Math.abs(point0[0] - point1[0]),\n      height: Math.abs(point0[1] - point1[1]),\n    };\n  };\n\n  /**\n   * _getTextLines - Returns the Area, mean and std deviation of the area of the\n   * target volume enclosed by the rectangle.\n   *\n   * @param data - The annotation tool-specific data.\n   * @param targetId - The volumeId of the volume to display the stats for.\n   * @param isPreScaled - Whether the viewport is pre-scaled or not.\n   */\n  _getTextLines = (data, targetId: string): string[] | undefined => {\n    const cachedVolumeStats = data.cachedStats[targetId];\n    const { area, mean, max, stdDev, areaUnit, modalityUnit } =\n      cachedVolumeStats;\n\n    if (mean === undefined) {\n      return;\n    }\n\n    const textLines: string[] = [];\n\n    textLines.push(`Area: ${roundNumber(area)} ${areaUnit}`);\n    textLines.push(`Mean: ${roundNumber(mean)} ${modalityUnit}`);\n    textLines.push(`Max: ${roundNumber(max)} ${modalityUnit}`);\n    textLines.push(`Std Dev: ${roundNumber(stdDev)} ${modalityUnit}`);\n\n    return textLines;\n  };\n\n  /**\n   * _calculateCachedStats - For each volume in the frame of reference that a\n   * tool instance in particular viewport defines as its target volume, find the\n   * volume coordinates (i,j,k) being probed by the two corners. One of i,j or k\n   * will be constant across the two points. In the other two directions iterate\n   * over the voxels and calculate the first and second-order statistics.\n   *\n   * @param data - The annotation tool-specific data.\n   * @param viewPlaneNormal - The normal vector of the camera.\n   * @param viewUp - The viewUp vector of the camera.\n   */\n  _calculateCachedStats = (\n    annotation,\n    viewPlaneNormal,\n    viewUp,\n    renderingEngine,\n    enabledElement,\n    modalityUnitOptions\n  ) => {\n    const { data } = annotation;\n    const { viewportId, renderingEngineId } = enabledElement;\n\n    const worldPos1 = data.handles.points[0];\n    const worldPos2 = data.handles.points[3];\n    const { cachedStats } = data;\n\n    const targetIds = Object.keys(cachedStats);\n\n    for (let i = 0; i < targetIds.length; i++) {\n      const targetId = targetIds[i];\n\n      const image = this.getTargetIdImage(targetId, renderingEngine);\n\n      // If image does not exists for the targetId, skip. This can be due\n      // to various reasons such as if the target was a volumeViewport, and\n      // the volumeViewport has been decached in the meantime.\n      if (!image) {\n        continue;\n      }\n\n      const { dimensions, imageData, metadata } = image;\n      const scalarData =\n        'getScalarData' in image ? image.getScalarData() : image.scalarData;\n\n      const worldPos1Index = transformWorldToIndex(imageData, worldPos1);\n\n      worldPos1Index[0] = Math.floor(worldPos1Index[0]);\n      worldPos1Index[1] = Math.floor(worldPos1Index[1]);\n      worldPos1Index[2] = Math.floor(worldPos1Index[2]);\n\n      const worldPos2Index = transformWorldToIndex(imageData, worldPos2);\n\n      worldPos2Index[0] = Math.floor(worldPos2Index[0]);\n      worldPos2Index[1] = Math.floor(worldPos2Index[1]);\n      worldPos2Index[2] = Math.floor(worldPos2Index[2]);\n\n      // Check if one of the indexes are inside the volume, this then gives us\n      // Some area to do stats over.\n\n      if (this._isInsideVolume(worldPos1Index, worldPos2Index, dimensions)) {\n        this.isHandleOutsideImage = false;\n\n        // Calculate index bounds to iterate over\n\n        const iMin = Math.min(worldPos1Index[0], worldPos2Index[0]);\n        const iMax = Math.max(worldPos1Index[0], worldPos2Index[0]);\n\n        const jMin = Math.min(worldPos1Index[1], worldPos2Index[1]);\n        const jMax = Math.max(worldPos1Index[1], worldPos2Index[1]);\n\n        const kMin = Math.min(worldPos1Index[2], worldPos2Index[2]);\n        const kMax = Math.max(worldPos1Index[2], worldPos2Index[2]);\n\n        const { worldWidth, worldHeight } = getWorldWidthAndHeightFromCorners(\n          viewPlaneNormal,\n          viewUp,\n          worldPos1,\n          worldPos2\n        );\n        const scale = getCalibratedScale(image);\n\n        const area = Math.abs(worldWidth * worldHeight) / (scale * scale);\n\n        let count = 0;\n        let mean = 0;\n        let stdDev = 0;\n        let max = -Infinity;\n\n        const yMultiple = dimensions[0];\n        const zMultiple = dimensions[0] * dimensions[1];\n\n        //Todo: this can be replaced by pointInShapeCallback....\n        // This is a triple loop, but one of these 3 values will be constant\n        // In the planar view.\n        for (let k = kMin; k <= kMax; k++) {\n          for (let j = jMin; j <= jMax; j++) {\n            for (let i = iMin; i <= iMax; i++) {\n              const value = scalarData[k * zMultiple + j * yMultiple + i];\n\n              if (value > max) {\n                max = value;\n              }\n\n              count++;\n              mean += value;\n            }\n          }\n        }\n\n        mean /= count;\n\n        for (let k = kMin; k <= kMax; k++) {\n          for (let j = jMin; j <= jMax; j++) {\n            for (let i = iMin; i <= iMax; i++) {\n              const value = scalarData[k * zMultiple + j * yMultiple + i];\n\n              const valueMinusMean = value - mean;\n\n              stdDev += valueMinusMean * valueMinusMean;\n            }\n          }\n        }\n\n        stdDev /= count;\n        stdDev = Math.sqrt(stdDev);\n\n        const modalityUnit = getModalityUnit(\n          metadata.Modality,\n          annotation.metadata.referencedImageId,\n          modalityUnitOptions\n        );\n\n        cachedStats[targetId] = {\n          Modality: metadata.Modality,\n          area,\n          mean,\n          stdDev,\n          max,\n          areaUnit: getCalibratedAreaUnits(null, image),\n          modalityUnit,\n        };\n      } else {\n        this.isHandleOutsideImage = true;\n        cachedStats[targetId] = {\n          Modality: metadata.Modality,\n        };\n      }\n    }\n\n    annotation.invalidated = false;\n\n    // Dispatching annotation modified\n    const eventType = Events.ANNOTATION_MODIFIED;\n\n    const eventDetail: AnnotationModifiedEventDetail = {\n      annotation,\n      viewportId,\n      renderingEngineId,\n    };\n    triggerEvent(eventTarget, eventType, eventDetail);\n\n    return cachedStats;\n  };\n\n  _isInsideVolume = (index1, index2, dimensions) => {\n    return (\n      csUtils.indexWithinDimensions(index1, dimensions) &&\n      csUtils.indexWithinDimensions(index2, dimensions)\n    );\n  };\n}\n\nRectangleROITool.toolName = 'RectangleROI';\nexport default RectangleROITool;\n","import {\n  getEnabledElement,\n  cache,\n  StackViewport,\n  triggerEvent,\n  eventTarget,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { addAnnotation, getAnnotations } from '../../stateManagement';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { Events } from '../../enums';\n\nimport {\n  drawHandles as drawHandlesSvg,\n  drawRect as drawRectSvg,\n} from '../../drawingSvg';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { hideElementCursor } from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport {\n  PublicToolProps,\n  ToolProps,\n  EventTypes,\n  SVGDrawingHelper,\n} from '../../types';\nimport { RectangleROIThresholdAnnotation } from '../../types/ToolSpecificAnnotationTypes';\nimport { AnnotationModifiedEventDetail } from '../../types/EventTypes';\nimport RectangleROITool from '../annotation/RectangleROITool';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\n\n/**\n * This tool is exactly the RectangleROITool but only draws a rectangle on the image,\n * and by using utility functions such as thresholdByRange and thresholdByROIStat it can be used to\n * create a segmentation. This tool, however, does not calculate the statistics\n * as RectangleROITool does.\n */\nclass RectangleROIThresholdTool extends RectangleROITool {\n  static toolName;\n  _throttledCalculateCachedStats: any;\n  editData: {\n    annotation: any;\n    viewportIdsToRender: string[];\n    handleIndex?: number;\n    newAnnotation?: boolean;\n    hasMoved?: boolean;\n  } | null;\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        shadow: true,\n        preventHandleOutsideImage: false,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n  }\n\n  /**\n   * Based on the current position of the mouse and the enabledElement it creates\n   * the edit data for the tool.\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  addNewAnnotation = (evt: EventTypes.InteractionEventType) => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    const targetId = this.getTargetId(viewport);\n    let referencedImageId, volumeId;\n\n    if (viewport instanceof StackViewport) {\n      referencedImageId = targetId.split('imageId:')[1];\n    } else {\n      volumeId = targetId.split('volumeId:')[1];\n      const imageVolume = cache.getVolume(volumeId);\n      referencedImageId = csUtils.getClosestImageId(\n        imageVolume,\n        worldPos,\n        viewPlaneNormal\n      );\n    }\n\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n    // Todo: how not to store enabledElement on the annotation, segmentationModule needs the element to\n    // decide on the active segmentIndex, active segmentationIndex etc.\n    const annotation = {\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        enabledElement,\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId,\n        toolName: this.getToolName(),\n        volumeId,\n      },\n      data: {\n        label: '',\n        handles: {\n          // No need a textBox\n          textBox: {\n            hasMoved: false,\n            worldPosition: null,\n            worldBoundingBox: null,\n          },\n          points: [\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n          ],\n          activeHandleIndex: null,\n        },\n        segmentationId: null,\n      },\n    };\n\n    addAnnotation(annotation, element);\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex: 3,\n      newAnnotation: true,\n      hasMoved: false,\n    };\n    this._activateDraw(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  };\n\n  /**\n   * it is used to draw the RectangleROI Threshold annotation in each\n   * request animation frame.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n    const { viewport, renderingEngineId } = enabledElement;\n    const { element } = viewport;\n    let annotations = getAnnotations(this.getToolName(), element);\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    annotations = this.filterInteractableAnnotationsForElement(\n      element,\n      annotations\n    );\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    for (let i = 0; i < annotations.length; i++) {\n      const annotation = annotations[i] as RectangleROIThresholdAnnotation;\n      const { annotationUID, data } = annotation;\n      const { points, activeHandleIndex } = data.handles;\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n\n      styleSpecifier.annotationUID = annotationUID;\n\n      const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n      const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n      const color = this.getStyle('color', styleSpecifier, annotation);\n\n      // If rendering engine has been destroyed while rendering\n      if (!viewport.getRenderingEngine()) {\n        console.warn('Rendering Engine has been destroyed');\n        return renderStatus;\n      }\n\n      // Todo: This is not correct way to add the event trigger,\n      // this will trigger on all mouse hover too. Problem is that we don't\n      // have a cached stats mechanism for this tool yet?\n      const eventType = Events.ANNOTATION_MODIFIED;\n\n      const eventDetail: AnnotationModifiedEventDetail = {\n        annotation,\n        viewportId: viewport.id,\n        renderingEngineId,\n      };\n\n      triggerEvent(eventTarget, eventType, eventDetail);\n\n      let activeHandleCanvasCoords;\n\n      if (!isAnnotationVisible(annotationUID)) {\n        continue;\n      }\n\n      if (\n        !isAnnotationLocked(annotation) &&\n        !this.editData &&\n        activeHandleIndex !== null\n      ) {\n        // Not locked or creating and hovering over handle, so render handle.\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n      }\n\n      if (activeHandleCanvasCoords) {\n        const handleGroupUID = '0';\n\n        drawHandlesSvg(\n          svgDrawingHelper,\n          annotationUID,\n          handleGroupUID,\n          activeHandleCanvasCoords,\n          {\n            color,\n          }\n        );\n      }\n\n      const rectangleUID = '0';\n      drawRectSvg(\n        svgDrawingHelper,\n        annotationUID,\n        rectangleUID,\n        canvasCoordinates[0],\n        canvasCoordinates[3],\n        {\n          color,\n          lineDash,\n          lineWidth,\n        }\n      );\n\n      renderStatus = true;\n    }\n\n    return renderStatus;\n  };\n}\n\nRectangleROIThresholdTool.toolName = 'RectangleROIThreshold';\nexport default RectangleROIThresholdTool;\n","import {\n  getEnabledElement,\n  cache,\n  StackViewport,\n  metaData,\n  triggerEvent,\n  eventTarget,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { vec3 } from 'gl-matrix';\nimport { Events } from '../../enums';\nimport { addAnnotation, getAnnotations } from '../../stateManagement';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport {\n  drawHandles as drawHandlesSvg,\n  drawRect as drawRectSvg,\n} from '../../drawingSvg';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport throttle from '../../utilities/throttle';\nimport { AnnotationModifiedEventDetail } from '../../types/EventTypes';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport { hideElementCursor } from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\n\nimport {\n  PublicToolProps,\n  ToolProps,\n  EventTypes,\n  SVGDrawingHelper,\n} from '../../types';\nimport { RectangleROIStartEndThresholdAnnotation } from '../../types/ToolSpecificAnnotationTypes';\nimport RectangleROITool from '../annotation/RectangleROITool';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\n\nconst { transformWorldToIndex } = csUtils;\n\n/**\n * This tool is similar to the RectangleROIThresholdTool which\n * only draws a rectangle on the image, and by using utility functions\n * such as thresholdByRange and thresholdByROIStat it can be used to\n * create a segmentation. The only difference is that it only acts on the\n * acquisition plane and not the 3D volume, and accepts a start and end\n * slice, and renders a dashed rectangle on the image between the start and end\n * but a solid rectangle on start and end slice. Utility functions should be used\n * to modify the start and end slice.\n * // Todo: right now only the first slice has grabbable handles, need to make\n * // it so that the handles are grabbable on all slices.\n */\nclass RectangleROIStartEndThresholdTool extends RectangleROITool {\n  static toolName;\n  _throttledCalculateCachedStats: any;\n  editData: {\n    annotation: any;\n    viewportIdsToRender: string[];\n    handleIndex?: number;\n    newAnnotation?: boolean;\n    hasMoved?: boolean;\n  } | null;\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      configuration: {\n        numSlicesToPropagate: 10,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n\n    this._throttledCalculateCachedStats = throttle(\n      this._calculateCachedStatsTool,\n      100,\n      { trailing: true }\n    );\n  }\n\n  /**\n   * Based on the current position of the mouse and the enabledElement it creates\n   * the edit data for the tool.\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  addNewAnnotation = (evt: EventTypes.InteractionEventType) => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    let referencedImageId, imageVolume, volumeId;\n    if (viewport instanceof StackViewport) {\n      throw new Error('Stack Viewport Not implemented');\n    } else {\n      const targetId = this.getTargetId(viewport);\n      volumeId = targetId.split('volumeId:')[1];\n      imageVolume = cache.getVolume(volumeId);\n      referencedImageId = csUtils.getClosestImageId(\n        imageVolume,\n        worldPos,\n        viewPlaneNormal\n      );\n    }\n\n    if (!referencedImageId) {\n      throw new Error('This tool does not work on non-acquisition planes');\n    }\n\n    const startIndex = viewport.getCurrentImageIdIndex();\n    const spacingInNormal = csUtils.getSpacingInNormalDirection(\n      imageVolume,\n      viewPlaneNormal\n    );\n\n    // We cannot simply add numSlicesToPropagate to startIndex because\n    // the order of imageIds can be from top to bottom or bottom to top and\n    // we want to make sure it is always propagated in the direction of the\n    // view and also to make sure we don't go out of bounds.\n    const endIndex = this._getEndSliceIndex(\n      imageVolume,\n      worldPos,\n      spacingInNormal,\n      viewPlaneNormal\n    );\n\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n    const annotation = {\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        enabledElement,\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId,\n        toolName: this.getToolName(),\n        volumeId,\n        spacingInNormal,\n      },\n      data: {\n        label: '',\n        startSlice: startIndex,\n        endSlice: endIndex,\n        cachedStats: {\n          projectionPoints: [],\n          projectionPointsImageIds: [referencedImageId],\n        },\n        handles: {\n          // No need a textBox\n          textBox: {\n            hasMoved: false,\n            worldPosition: null,\n            worldBoundingBox: null,\n          },\n          points: [\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n          ],\n          activeHandleIndex: null,\n        },\n        labelmapUID: null,\n      },\n    };\n\n    // update the projection points in 3D space, since we are projecting\n    // the points to the slice plane, we need to make sure the points are\n    // computed for later export\n    this._computeProjectionPoints(annotation, imageVolume);\n\n    addAnnotation(annotation, element);\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex: 3,\n      newAnnotation: true,\n      hasMoved: false,\n    };\n    this._activateDraw(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  };\n\n  // Todo: make it work for planes other than acquisition planes\n  _computeProjectionPoints(\n    annotation: RectangleROIStartEndThresholdAnnotation,\n    imageVolume: Types.IImageVolume\n  ): void {\n    const { data, metadata } = annotation;\n    const { viewPlaneNormal, spacingInNormal } = metadata;\n    const { imageData } = imageVolume;\n    const { startSlice, endSlice } = data;\n    const { points } = data.handles;\n\n    const startIJK = transformWorldToIndex(imageData, points[0]);\n\n    if (startIJK[2] !== startSlice) {\n      throw new Error('Start slice does not match');\n    }\n\n    // substitute the end slice index 2 with startIJK index 2\n    const endIJK = vec3.fromValues(startIJK[0], startIJK[1], endSlice);\n\n    const startWorld = vec3.create();\n    imageData.indexToWorldVec3(startIJK, startWorld);\n\n    const endWorld = vec3.create();\n    imageData.indexToWorldVec3(endIJK, endWorld);\n\n    // distance between start and end slice in the world coordinate\n    const distance = vec3.distance(startWorld, endWorld);\n\n    // for each point inside points, navigate in the direction of the viewPlaneNormal\n    // with amount of spacingInNormal, and calculate the next slice until we reach the distance\n    const newProjectionPoints = [];\n    for (let dist = 0; dist < distance; dist += spacingInNormal) {\n      newProjectionPoints.push(\n        points.map((point) => {\n          const newPoint = vec3.create();\n          vec3.scaleAndAdd(newPoint, point, viewPlaneNormal, dist);\n          return Array.from(newPoint);\n        })\n      );\n    }\n\n    data.cachedStats.projectionPoints = newProjectionPoints;\n\n    // Find the imageIds for the projection points\n    const projectionPointsImageIds = [];\n    for (const RectanglePoints of newProjectionPoints) {\n      const imageId = csUtils.getClosestImageId(\n        imageVolume,\n        RectanglePoints[0],\n        viewPlaneNormal\n      );\n      projectionPointsImageIds.push(imageId);\n    }\n\n    data.cachedStats.projectionPointsImageIds = projectionPointsImageIds;\n  }\n\n  _calculateCachedStatsTool(annotation, enabledElement) {\n    const data = annotation.data;\n    const { viewportId, renderingEngineId, viewport } = enabledElement;\n\n    const { cachedStats } = data;\n    const volumeId = this.getTargetId(viewport);\n    const imageVolume = cache.getVolume(volumeId.split('volumeId:')[1]);\n\n    // Todo: this shouldn't be here, this is a performance issue\n    // Since we are extending the RectangleROI class, we need to\n    // bring the logic for handle to some cachedStats calculation\n    this._computeProjectionPoints(annotation, imageVolume);\n\n    annotation.invalidated = false;\n\n    // Dispatching annotation modified\n    const eventType = Events.ANNOTATION_MODIFIED;\n\n    const eventDetail: AnnotationModifiedEventDetail = {\n      annotation,\n      viewportId,\n      renderingEngineId,\n    };\n    triggerEvent(eventTarget, eventType, eventDetail);\n\n    return cachedStats;\n  }\n\n  /**\n   * it is used to draw the rectangleROIStartEnd annotation in each\n   * request animation frame.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n    const { viewport } = enabledElement;\n\n    const annotations = getAnnotations(this.getToolName(), viewport.element);\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    const sliceIndex = viewport.getCurrentImageIdIndex();\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    for (let i = 0; i < annotations.length; i++) {\n      const annotation = annotations[\n        i\n      ] as RectangleROIStartEndThresholdAnnotation;\n      const { annotationUID, data } = annotation;\n      const { startSlice, endSlice } = data;\n      const { points, activeHandleIndex } = data.handles;\n\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n\n      styleSpecifier.annotationUID = annotationUID;\n\n      const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n      const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n      const color = this.getStyle('color', styleSpecifier, annotation);\n      // range of slices to render based on the start and end slice, like\n      // np.arange\n\n      // if indexIJK is outside the start/end slice, we don't render\n      if (\n        sliceIndex < Math.min(startSlice, endSlice) ||\n        sliceIndex > Math.max(startSlice, endSlice)\n      ) {\n        continue;\n      }\n\n      // WE HAVE TO CACHE STATS BEFORE FETCHING TEXT\n\n      if (annotation.invalidated) {\n        this._throttledCalculateCachedStats(annotation, enabledElement);\n      }\n\n      // if it is inside the start/end slice, but not exactly the first or\n      // last slice, we render the line in dash, but not the handles\n      let firstOrLastSlice = false;\n      if (sliceIndex === startSlice || sliceIndex === endSlice) {\n        firstOrLastSlice = true;\n      }\n\n      // If rendering engine has been destroyed while rendering\n      if (!viewport.getRenderingEngine()) {\n        console.warn('Rendering Engine has been destroyed');\n        return renderStatus;\n      }\n\n      let activeHandleCanvasCoords;\n\n      if (!isAnnotationVisible(annotationUID)) {\n        continue;\n      }\n\n      if (\n        !isAnnotationLocked(annotation) &&\n        !this.editData &&\n        activeHandleIndex !== null &&\n        firstOrLastSlice\n      ) {\n        // Not locked or creating and hovering over handle, so render handle.\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n      }\n\n      if (activeHandleCanvasCoords) {\n        const handleGroupUID = '0';\n\n        drawHandlesSvg(\n          svgDrawingHelper,\n          annotationUID,\n          handleGroupUID,\n          activeHandleCanvasCoords,\n          {\n            color,\n          }\n        );\n      }\n\n      let lineDashToUse = lineDash;\n\n      if (!firstOrLastSlice) {\n        lineDashToUse = 2;\n      }\n\n      const rectangleUID = '0';\n      drawRectSvg(\n        svgDrawingHelper,\n        annotationUID,\n        rectangleUID,\n        canvasCoordinates[0],\n        canvasCoordinates[3],\n        {\n          color,\n          lineDash: lineDashToUse,\n          lineWidth,\n        }\n      );\n\n      renderStatus = true;\n    }\n\n    return renderStatus;\n  };\n\n  _getEndSliceIndex(\n    imageVolume: Types.IImageVolume,\n    worldPos: Types.Point3,\n    spacingInNormal: number,\n    viewPlaneNormal: Types.Point3\n  ): number | undefined {\n    const numSlicesToPropagate = this.configuration.numSlicesToPropagate;\n\n    // get end position by moving from worldPos in the direction of viewplaneNormal\n    // with amount of numSlicesToPropagate * spacingInNormal\n    const endPos = vec3.create();\n    vec3.scaleAndAdd(\n      endPos,\n      worldPos,\n      viewPlaneNormal,\n      numSlicesToPropagate * spacingInNormal\n    );\n\n    const halfSpacingInNormalDirection = spacingInNormal / 2;\n    // Loop through imageIds of the imageVolume and find the one that is closest to endPos\n    const { imageIds } = imageVolume;\n    let imageIdIndex;\n    for (let i = 0; i < imageIds.length; i++) {\n      const imageId = imageIds[i];\n\n      const { imagePositionPatient } = metaData.get(\n        'imagePlaneModule',\n        imageId\n      );\n\n      const dir = vec3.create();\n      vec3.sub(dir, endPos, imagePositionPatient);\n\n      const dot = vec3.dot(dir, viewPlaneNormal);\n\n      if (Math.abs(dot) < halfSpacingInNormalDirection) {\n        imageIdIndex = i;\n      }\n    }\n\n    return imageIdIndex;\n  }\n}\n\nRectangleROIStartEndThresholdTool.toolName = 'RectangleROIStartEndThreshold';\nexport default RectangleROIStartEndThresholdTool;\n","import type { Types } from '@cornerstonejs/core';\n\n/**\n * Uses the current bounds of the 2D rectangle and extends it in the view axis by numSlices\n * It compares min and max of each IJK to find the view axis (for axial, zMin === zMax) and\n * then calculates the extended range. It will assume the slice is relative to the\n * current slice and will add the given slices to the current max of the boundingBox.\n * @param boundsIJK - [[iMin, iMax], [jMin, jMax], [kMin, kMax]]\n * @param slices - number of slices to project before and after\n * @returns extended bounds\n */\nfunction extend2DBoundingBoxInViewAxis(\n  boundsIJK: [Types.Point2, Types.Point2, Types.Point2],\n  numSlicesToProject: number\n): [Types.Point2, Types.Point2, Types.Point2] {\n  // find which index in boundsIJK has the same first and last value\n  const sliceNormalIndex = boundsIJK.findIndex(([min, max]) => min === max);\n\n  if (sliceNormalIndex === -1) {\n    throw new Error('3D bounding boxes not supported in an oblique plane');\n  }\n\n  // get the index and subtract slices from the min and add to the max\n  boundsIJK[sliceNormalIndex][0] -= numSlicesToProject;\n  boundsIJK[sliceNormalIndex][1] += numSlicesToProject;\n  return boundsIJK;\n}\n\nexport default extend2DBoundingBoxInViewAxis;\n","import { utilities as csUtils } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport getBoundingBoxAroundShape from '../boundingBox/getBoundingBoxAroundShape';\nimport extend2DBoundingBoxInViewAxis from '../boundingBox/extend2DBoundingBoxInViewAxis';\n\ntype Options = {\n  numSlicesToProject?: number;\n};\n\nfunction getBoundsIJKFromRectangleAnnotations(\n  annotations,\n  referenceVolume,\n  options = {} as Options\n) {\n  const AllBoundsIJK = [];\n  annotations.forEach((annotation) => {\n    const { data } = annotation;\n    const { points } = data.handles;\n\n    const { imageData, dimensions } = referenceVolume;\n\n    let pointsToUse = points;\n    // If the tool is a 2D tool but has projection points, use them\n    if (data.cachedStats?.projectionPoints) {\n      const { projectionPoints } = data.cachedStats;\n      pointsToUse = [].concat(...projectionPoints); // cannot use flat() because of typescript compiler right now\n    }\n\n    const rectangleCornersIJK = pointsToUse.map(\n      (world) => csUtils.transformWorldToIndex(imageData, world) as Types.Point3\n    );\n    let boundsIJK = getBoundingBoxAroundShape(rectangleCornersIJK, dimensions);\n\n    // If the tool is 2D but it is configured to project to X amount of slices\n    // Don't project the slices if projectionPoints have been used to define the extents\n    if (options.numSlicesToProject && !data.cachedStats?.projectionPoints) {\n      boundsIJK = extend2DBoundingBoxInViewAxis(\n        boundsIJK,\n        options.numSlicesToProject\n      );\n    }\n\n    AllBoundsIJK.push(boundsIJK);\n  });\n\n  if (AllBoundsIJK.length === 1) {\n    return AllBoundsIJK[0];\n  }\n\n  // Get the intersection of all the bounding boxes\n  // This is the bounding box that contains all the ROIs\n  const boundsIJK = AllBoundsIJK.reduce(\n    (accumulator, currentValue) => {\n      return {\n        iMin: Math.min(accumulator.iMin, currentValue.iMin),\n        jMin: Math.min(accumulator.jMin, currentValue.jMin),\n        kMin: Math.min(accumulator.kMin, currentValue.kMin),\n        iMax: Math.max(accumulator.iMax, currentValue.iMax),\n        jMax: Math.max(accumulator.jMax, currentValue.jMax),\n        kMax: Math.max(accumulator.kMax, currentValue.kMax),\n      };\n    },\n    {\n      iMin: Infinity,\n      jMin: Infinity,\n      kMin: Infinity,\n      iMax: -Infinity,\n      jMax: -Infinity,\n      kMax: -Infinity,\n    }\n  );\n\n  return boundsIJK;\n}\n\nexport default getBoundsIJKFromRectangleAnnotations;\n","import type { Types } from '@cornerstonejs/core';\nimport { state } from '../../stateManagement/annotation';\nimport {\n  RectangleROIStartEndThresholdTool,\n  RectangleROIThresholdTool,\n} from '../../tools';\n\nimport thresholdVolumeByRange from './thresholdVolumeByRange';\nimport getBoundsIJKFromRectangleAnnotations from '../rectangleROITool/getBoundsIJKFromRectangleAnnotations';\nimport { ThresholdInformation } from './utilities';\n\nexport type ThresholdOptions = {\n  numSlicesToProject?: number; // number of slices to project before and after current slice\n  overwrite: boolean;\n  overlapType?: number; // type of the voxel overlap\n};\n\nexport type AnnotationForThresholding = {\n  data: {\n    handles: {\n      points: Types.Point3[];\n    };\n    cachedStats?: {\n      projectionPoints?: Types.Point3[][];\n    };\n  };\n};\n\n/**\n * It uses the provided rectangleROI annotations (either RectangleROIThreshold, or\n * RectangleROIStartEndThreshold) to compute an ROI that is the intersection of\n * all the annotations. Then it uses the rectangleROIThreshold utility to threshold\n * the volume.\n * @param annotationUIDs - rectangleROI annotationsUIDs to use for ROI\n * @param segmentationVolume - the segmentation volume\n * @param thresholdVolumeInformation - object array containing the volume data and range threshold values\n * @param options - options for thresholding\n * @returns\n */\nfunction rectangleROIThresholdVolumeByRange(\n  annotationUIDs: string[],\n  segmentationVolume: Types.IImageVolume,\n  thresholdVolumeInformation: ThresholdInformation[],\n  options: ThresholdOptions\n): Types.IImageVolume {\n  const annotations = annotationUIDs.map((annotationUID) => {\n    return state.getAnnotation(annotationUID);\n  });\n\n  _validateAnnotations(annotations);\n\n  let boundsIJK;\n  for (let i = 0; i < thresholdVolumeInformation.length; i++) {\n    // make sure that the boundsIJK are generated by the correct volume\n    const volumeSize =\n      thresholdVolumeInformation[i].volume.getScalarData().length;\n    if (volumeSize === segmentationVolume.getScalarData().length || i === 0) {\n      boundsIJK = getBoundsIJKFromRectangleAnnotations(\n        annotations,\n        thresholdVolumeInformation[i].volume,\n        options\n      );\n    }\n  }\n\n  const outputSegmentationVolume = thresholdVolumeByRange(\n    segmentationVolume,\n    thresholdVolumeInformation,\n    { ...options, boundsIJK }\n  );\n\n  return outputSegmentationVolume;\n}\n\nfunction _validateAnnotations(annotations) {\n  const validToolNames = [\n    RectangleROIThresholdTool.toolName,\n    RectangleROIStartEndThresholdTool.toolName,\n  ];\n\n  for (const annotation of annotations) {\n    const name = annotation.metadata.toolName;\n    if (!validToolNames.includes(name)) {\n      throw new Error(\n        'rectangleROIThresholdVolumeByRange only supports RectangleROIThreshold and RectangleROIStartEndThreshold annotations'\n      );\n    }\n  }\n}\n\nexport default rectangleROIThresholdVolumeByRange;\n","import { Types } from '@cornerstonejs/core';\nimport { volumeLoader, utilities as csUtils } from '@cornerstonejs/core';\n\n/**\n * Given a list of labelmaps (with the possibility of overlapping regions), and\n * a segmentIndex it creates a new labelmap with the same dimensions as the input labelmaps,\n * but merges them into a single labelmap for the segmentIndex. It wipes out\n * all other segment Indices. This is useful for calculating statistics regarding\n * a specific segment when there are overlapping regions between labelmap (e.g. TMTV)\n *\n * @param labelmaps - Array of labelmaps\n * @param segmentIndex - The segment index to merge\n * @returns Merged labelmap\n */\nfunction createMergedLabelmapForIndex(\n  labelmaps: Array<Types.IImageVolume>,\n  segmentIndex = 1,\n  volumeId = 'mergedLabelmap'\n): Types.IImageVolume {\n  labelmaps.forEach(({ direction, dimensions, origin, spacing }) => {\n    if (\n      !csUtils.isEqual(dimensions, labelmaps[0].dimensions) ||\n      !csUtils.isEqual(direction, labelmaps[0].direction) ||\n      !csUtils.isEqual(spacing, labelmaps[0].spacing) ||\n      !csUtils.isEqual(origin, labelmaps[0].origin)\n    ) {\n      throw new Error('labelmaps must have the same size and shape');\n    }\n  });\n\n  const labelmap = labelmaps[0];\n\n  const arrayType = (labelmap.getScalarData() as any).constructor;\n  const outputData = new arrayType(labelmap.getScalarData().length);\n\n  labelmaps.forEach((labelmap) => {\n    const scalarData = labelmap.getScalarData();\n    for (let i = 0; i < scalarData.length; i++) {\n      if (scalarData[i] === segmentIndex) {\n        outputData[i] = segmentIndex;\n      }\n    }\n  });\n\n  const options = {\n    scalarData: outputData,\n    metadata: labelmap.metadata,\n    spacing: labelmap.spacing,\n    origin: labelmap.origin,\n    direction: labelmap.direction,\n    dimensions: labelmap.dimensions,\n  };\n\n  const preventCache = true;\n  // Todo: following should be async\n  const mergedVolume = volumeLoader.createLocalVolume(\n    options,\n    volumeId,\n    preventCache\n  );\n\n  return mergedVolume;\n}\n\nexport default createMergedLabelmapForIndex;\n","import { isValidLabelmapConfig } from '../../tools/displayTools/Labelmap/labelmapConfig';\nimport SegmentationRepresentation from '../../enums/SegmentationRepresentations';\nimport { RepresentationConfig } from '../../types/SegmentationStateTypes';\n\n/**\n * Given a representation type and a configuration, return true if the\n * configuration is valid for that representation type\n * @param representationType - The type of segmentation representation\n * @param config - RepresentationConfig\n * @returns A boolean value.\n */\nexport default function isValidRepresentationConfig(\n  representationType: string,\n  config: RepresentationConfig\n): boolean {\n  switch (representationType) {\n    case SegmentationRepresentation.Labelmap:\n      return isValidLabelmapConfig(config);\n    default:\n      throw new Error(`Unknown representation type: ${representationType}`);\n  }\n}\n","import getDefaultLabelmapConfig from '../../tools/displayTools/Labelmap/labelmapConfig';\nimport SegmentationRepresentation from '../../enums/SegmentationRepresentations';\nimport { Segmentation } from '../../types/SegmentationStateTypes';\n\n/**\n * It returns a configuration object for the given representation type.\n * @param representationType - The type of segmentation representation\n * @returns A representation configuration object.\n */\nexport default function getDefaultRepresentationConfig(\n  segmentation: Segmentation\n) {\n  const { type: representationType } = segmentation;\n  switch (representationType) {\n    case SegmentationRepresentation.Labelmap:\n      return getDefaultLabelmapConfig();\n    default:\n      throw new Error(`Unknown representation type: ${representationType}`);\n  }\n}\n","import { _cloneDeep } from 'lodash.clonedeep';\nimport {\n  getEnabledElementByIds,\n  volumeLoader,\n  VolumeViewport,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\n/**\n * Create a new 3D segmentation volume from the default imageData presented in\n * the first actor of the viewport. It looks at the metadata of the imageData\n * to determine the volume dimensions and spacing if particular options are not provided.\n *\n * @param viewportId - The Id of the viewport from which to derive the volume from.\n * @param renderingEngineId - The Id of the rendering engine the viewport belongs to.\n * @param [segmentationId] - The Id to name the generated segmentation. Autogenerated if not given.\n * @param [options] - LabelmapOptions\n * @returns A promise that resolves to the Id of the new labelmap volume.\n */\nexport default async function createLabelmapVolumeForViewport(input: {\n  viewportId: string;\n  renderingEngineId: string;\n  segmentationId?: string;\n  options?: {\n    volumeId?: string;\n    scalarData?: Float32Array | Uint8Array | Uint16Array | Int16Array;\n    targetBuffer?: {\n      type: 'Float32Array' | 'Uint8Array' | 'Uint16Array' | 'Int8Array';\n    };\n    metadata?: any;\n    dimensions?: Types.Point3;\n    spacing?: Types.Point3;\n    origin?: Types.Point3;\n    direction?: Float32Array;\n  };\n}): Promise<string> {\n  const { viewportId, renderingEngineId, options } = input;\n  let { segmentationId } = input;\n  const enabledElement = getEnabledElementByIds(viewportId, renderingEngineId);\n\n  if (!enabledElement) {\n    throw new Error('element disabled');\n  }\n\n  const { viewport } = enabledElement;\n  if (!(viewport instanceof VolumeViewport)) {\n    throw new Error('Segmentation only supports VolumeViewport');\n  }\n\n  const { uid } = viewport.getDefaultActor();\n\n  if (segmentationId === undefined) {\n    // Name the segmentation volume with the viewport Id\n    segmentationId = `${uid}-based-segmentation-${\n      options?.volumeId ?? csUtils.uuidv4().slice(0, 8)\n    }`;\n  }\n\n  if (options) {\n    // create a new labelmap with its own properties\n    // This allows creation of a higher resolution labelmap vs reference volume\n    const properties = _cloneDeep(options);\n    await volumeLoader.createLocalVolume(properties, segmentationId);\n  } else {\n    // create a labelmap from a reference volume\n    const { uid: volumeId } = viewport.getDefaultActor();\n    await volumeLoader.createAndCacheDerivedVolume(volumeId, {\n      volumeId: segmentationId,\n    });\n  }\n\n  return segmentationId;\n}\n","import type {\n  FloodFillResult,\n  FloodFillGetter,\n  FloodFillOptions,\n} from '../../types';\nimport { Types } from '@cornerstonejs/core';\n\n/**\n * floodFill.js - Taken from MIT OSS lib - https://github.com/tuzz/n-dimensional-flood-fill\n * Refactored to ES6.\n *\n * @param {function} getter The getter to the elements of your data structure,\n *                          e.g. getter(x,y) for a 2D interprettation of your structure.\n * @param {number[]} seed The seed for your fill. The dimensionality is infered\n *                        by the number of dimensions of the seed.\n * @param {function} [options.onFlood] An optional callback to execute when each pixel is flooded.\n *                             e.g. onFlood(x,y).\n * @param {function} [options.onBoundary] An optional callback to execute whenever a boundary is reached.\n *                                a boundary could be another segmentIndex, or the edge of your\n *                                data structure (i.e. when your getter returns undefined).\n * @param {function} [options.equals] An optional equality method for your datastructure.\n *                            Default is simply value1 = value2.\n * @param {boolean} [options.diagonals] Whether you allow flooding through diagonals. Defaults to false.\n *\n * @returns {Object}\n */\nfunction floodFill(\n  getter: FloodFillGetter,\n  seed: Types.Point2 | Types.Point3,\n  options: FloodFillOptions = {}\n): FloodFillResult {\n  const onFlood = options.onFlood;\n  const onBoundary = options.onBoundary;\n  const equals = options.equals || defaultEquals;\n  const diagonals = options.diagonals || false;\n  const startNode = get(seed);\n  const permutations = prunedPermutations();\n  const stack = [];\n  const flooded = [];\n  const visits = {};\n  const bounds = {};\n\n  stack.push({ currentArgs: seed });\n\n  while (stack.length > 0) {\n    flood(stack.pop());\n  }\n\n  return {\n    flooded,\n    boundaries: boundaries(),\n  };\n\n  function flood(job) {\n    const getArgs = job.currentArgs;\n    const prevArgs = job.previousArgs;\n\n    if (visited(getArgs)) {\n      return;\n    }\n    markAsVisited(getArgs);\n\n    if (member(getArgs)) {\n      markAsFlooded(getArgs);\n      pushAdjacent(getArgs);\n    } else {\n      markAsBoundary(prevArgs);\n    }\n  }\n\n  function visited(key) {\n    return visits[key] === true;\n  }\n\n  function markAsVisited(key) {\n    visits[key] = true;\n  }\n\n  function member(getArgs) {\n    const node = safely(get, [getArgs]);\n\n    return safely(equals, [node, startNode]);\n  }\n\n  function markAsFlooded(getArgs) {\n    flooded.push(getArgs);\n    if (onFlood) {\n      //@ts-ignore\n      onFlood(...getArgs);\n    }\n  }\n\n  function markAsBoundary(prevArgs) {\n    bounds[prevArgs] = prevArgs;\n    if (onBoundary) {\n      //@ts-ignore\n      onBoundary(...prevArgs);\n    }\n  }\n\n  function pushAdjacent(getArgs) {\n    for (let i = 0; i < permutations.length; i += 1) {\n      const perm = permutations[i];\n      const nextArgs = getArgs.slice(0);\n\n      for (let j = 0; j < getArgs.length; j += 1) {\n        nextArgs[j] += perm[j];\n      }\n\n      stack.push({\n        currentArgs: nextArgs,\n        previousArgs: getArgs,\n      });\n    }\n  }\n\n  function get(getArgs) {\n    //@ts-ignore\n    return getter(...getArgs);\n  }\n\n  function safely(f, args) {\n    try {\n      return f(...args);\n    } catch (error) {\n      return;\n    }\n  }\n\n  function prunedPermutations() {\n    const permutations = permute(seed.length);\n\n    return permutations.filter(function (perm) {\n      const count = countNonZeroes(perm);\n\n      return count !== 0 && (count === 1 || diagonals);\n    });\n  }\n\n  function permute(length) {\n    const perms = [];\n\n    const permutation = function (string) {\n      return string.split('').map(function (c) {\n        return parseInt(c, 10) - 1;\n      });\n    };\n\n    for (let i = 0; i < Math.pow(3, length); i += 1) {\n      const string = lpad(i.toString(3), '0', length);\n\n      perms.push(permutation(string));\n    }\n\n    return perms;\n  }\n\n  function boundaries() {\n    const array = [];\n\n    for (const key in bounds) {\n      if (bounds[key] !== undefined) {\n        array.unshift(bounds[key]);\n      }\n    }\n\n    return array;\n  }\n}\n\nfunction defaultEquals(a, b) {\n  return a === b;\n}\n\nfunction countNonZeroes(array) {\n  let count = 0;\n\n  for (let i = 0; i < array.length; i += 1) {\n    if (array[i] !== 0) {\n      count += 1;\n    }\n  }\n\n  return count;\n}\n\nfunction lpad(string, character, length) {\n  const array = new Array(length + 1);\n  const pad = array.join(character);\n\n  return (pad + string).slice(-length);\n}\n\nexport default floodFill;\n","import { getToolGroup } from '../../store/ToolGroupManager';\nimport BrushTool from '../../tools/segmentation/BrushTool';\nimport triggerAnnotationRenderForViewportIds from '../triggerAnnotationRenderForViewportIds';\nimport { getRenderingEngine } from '@cornerstonejs/core';\nimport getBrushToolInstances from './utilities';\n\nexport function setBrushSizeForToolGroup(\n  toolGroupId: string,\n  brushSize: number\n): void {\n  const toolGroup = getToolGroup(toolGroupId);\n\n  if (toolGroup === undefined) {\n    return;\n  }\n\n  const brushBasedToolInstances = getBrushToolInstances(toolGroupId);\n\n  brushBasedToolInstances.forEach((tool: BrushTool) => {\n    tool.configuration.brushSize = brushSize;\n\n    // Invalidate the brush being rendered so it can update.\n    tool.invalidateBrushCursor();\n  });\n\n  // Trigger an annotation render for any viewports on the toolgroup\n  const viewportsInfo = toolGroup.getViewportsInfo();\n\n  const viewportsInfoArray = Object.keys(viewportsInfo).map(\n    (key) => viewportsInfo[key]\n  );\n\n  if (!viewportsInfoArray.length) {\n    return;\n  }\n\n  const { renderingEngineId } = viewportsInfoArray[0];\n\n  // Use helper to get array of viewportIds, or we just end up doing this mapping\n  // ourselves here.\n  const viewportIds = toolGroup.getViewportIds();\n\n  const renderingEngine = getRenderingEngine(renderingEngineId);\n\n  triggerAnnotationRenderForViewportIds(renderingEngine, viewportIds);\n}\n\nexport function getBrushSizeForToolGroup(toolGroupId: string): void {\n  const toolGroup = getToolGroup(toolGroupId);\n\n  if (toolGroup === undefined) {\n    return;\n  }\n\n  const toolInstances = toolGroup._toolInstances;\n\n  if (!Object.keys(toolInstances).length) {\n    return;\n  }\n\n  const brushBasedToolInstances = getBrushToolInstances(toolGroupId);\n\n  // one is enough as they share the same brush size\n  const brushToolInstance = brushBasedToolInstances[0];\n\n  if (!brushToolInstance) {\n    return;\n  }\n\n  // TODO -> Assumes the brush sizes are the same and set via these helpers.\n  return brushToolInstance.configuration.brushSize;\n}\n","import type { Types } from '@cornerstonejs/core';\nimport { getToolGroup } from '../../store/ToolGroupManager';\nimport triggerAnnotationRenderForViewportIds from '../triggerAnnotationRenderForViewportIds';\nimport { getRenderingEngine } from '@cornerstonejs/core';\nimport getBrushToolInstances from './utilities';\n\nexport function setBrushThresholdForToolGroup(\n  toolGroupId: string,\n  threshold: Types.Point2\n) {\n  const toolGroup = getToolGroup(toolGroupId);\n\n  if (toolGroup === undefined) {\n    return;\n  }\n\n  const brushBasedToolInstances = getBrushToolInstances(toolGroupId);\n\n  brushBasedToolInstances.forEach((tool) => {\n    tool.configuration.strategySpecificConfiguration.THRESHOLD_INSIDE_CIRCLE.threshold =\n      threshold;\n  });\n\n  // Trigger an annotation render for any viewports on the toolgroup\n  const viewportsInfo = toolGroup.getViewportsInfo();\n\n  if (!viewportsInfo.length) {\n    return;\n  }\n\n  const { renderingEngineId } = viewportsInfo[0];\n\n  // Use helper to get array of viewportIds, or we just end up doing this mapping\n  // ourselves here.\n  const viewportIds = toolGroup.getViewportIds();\n\n  const renderingEngine = getRenderingEngine(renderingEngineId);\n\n  triggerAnnotationRenderForViewportIds(renderingEngine, viewportIds);\n}\n\nexport function getBrushThresholdForToolGroup(toolGroupId: string) {\n  const toolGroup = getToolGroup(toolGroupId);\n\n  if (toolGroup === undefined) {\n    return;\n  }\n\n  const toolInstances = toolGroup._toolInstances;\n\n  if (!Object.keys(toolInstances).length) {\n    return;\n  }\n\n  const brushBasedToolInstances = getBrushToolInstances(toolGroupId);\n  const brushToolInstance = brushBasedToolInstances[0];\n\n  if (!brushToolInstance) {\n    return;\n  }\n\n  // TODO -> Assumes the\n  return brushToolInstance.configuration.strategySpecificConfiguration\n    .THRESHOLD_INSIDE_CIRCLE.threshold;\n}\n","import { Types } from '@cornerstonejs/core';\nimport { pointInShapeCallback } from '../../utilities';\nimport { triggerSegmentationDataModified } from '../../stateManagement/segmentation/triggerSegmentationEvents';\nimport {\n  getVoxelOverlap,\n  processVolumes,\n  ThresholdInformation,\n} from './utilities';\n\n/**\n * It thresholds a segmentation volume based on a set of threshold values with\n * respect to a list of volumes and respective threshold ranges.\n * @param segmentationVolume - the segmentation volume to be modified\n * @param segmentationIndex - the index of the segmentation to modify\n * @param thresholdVolumeInformation - array of objects containing volume data\n * and a range (lower and upper values) to threshold\n * @param overlapType - indicates if the user requires all voxels pass\n * (overlapType = 1) or any voxel pass (overlapType = 0)\n * @returns\n */\nfunction thresholdSegmentationByRange(\n  segmentationVolume: Types.IImageVolume,\n  segmentationIndex: number,\n  thresholdVolumeInformation: ThresholdInformation[],\n  overlapType: number\n): Types.IImageVolume {\n  const scalarData = segmentationVolume.getScalarData();\n\n  // prepare a list of volume information objects for callback functions\n  const { baseVolumeIdx, volumeInfoList } = processVolumes(\n    segmentationVolume,\n    thresholdVolumeInformation\n  );\n\n  /**\n   * This function will test all overlaps between a voxel in base volume\n   * (the reference for segmentation volume creation) and voxels in other\n   * volumes.\n   * If the segmentation volume and the image volume are the same size,\n   * checks if the scalar data at each point is within the threshold values.\n   * If the segmentation volume and the image volume are different sizes,\n   * checks the voxel overlap\n   */\n  volumeInfoList.forEach((volumeInfo) => {\n    const { volumeSize } = volumeInfo;\n\n    if (volumeSize === scalarData.length) {\n      _handleSameSizeVolume(scalarData, segmentationIndex, volumeInfo);\n    } else {\n      _handleDifferentSizeVolume(\n        scalarData,\n        segmentationIndex,\n        volumeInfo,\n        volumeInfoList,\n        baseVolumeIdx,\n        overlapType\n      );\n    }\n  });\n\n  triggerSegmentationDataModified(segmentationVolume.volumeId);\n\n  return segmentationVolume;\n}\n\nfunction _handleDifferentSizeVolume(\n  scalarData: Types.VolumeScalarData,\n  segmentationIndex: number,\n  volumeInfo: any,\n  volumeInfoList: any,\n  baseVolumeIdx: number,\n  overlapType: number\n) {\n  const { imageData, lower, upper, dimensions } = volumeInfo;\n\n  let total, overlaps, range;\n\n  for (let i = 0; i < scalarData.length; i++) {\n    if (scalarData[i] === segmentationIndex) {\n      const overlapBounds = getVoxelOverlap(\n        imageData,\n        dimensions,\n        volumeInfoList[baseVolumeIdx].spacing,\n        volumeInfoList[baseVolumeIdx].imageData.getPoint(i)\n      );\n\n      const callbackOverlap = ({ value }) => {\n        total = total + 1;\n        if (value >= range.lower && value <= range.upper) {\n          overlaps = overlaps + 1;\n        }\n      };\n\n      total = 0;\n      overlaps = 0;\n      range = { lower, upper };\n      let overlapTest = false;\n\n      // check all voxel overlaps\n      pointInShapeCallback(\n        imageData,\n        () => true,\n        callbackOverlap,\n        overlapBounds\n      );\n\n      overlapTest = overlapType === 0 ? overlaps > 0 : overlaps === total;\n      scalarData[i] = overlapTest ? segmentationIndex : 0;\n    }\n  }\n  return { total, range, overlaps };\n}\n\nfunction _handleSameSizeVolume(\n  scalarData: Types.VolumeScalarData,\n  segmentationIndex: number,\n  volumeInfo: any\n) {\n  const { referenceValues, lower, upper } = volumeInfo;\n\n  for (let i = 0; i < scalarData.length; i++) {\n    if (scalarData[i] === segmentationIndex) {\n      const value = referenceValues[i];\n      scalarData[i] = value >= lower && value <= upper ? segmentationIndex : 0;\n    }\n  }\n}\n\nexport default thresholdSegmentationByRange;\n","// Pulled from source: https://github.com/w8r/liang-barsky\n// MIT Licensed.\n\n/**\n * Fast, destructive implementation of Liang-Barsky line clipping algorithm.\n * It clips a 2D segment by a rectangle.\n * @author Alexander Milevski <info@w8r.name>\n * @license MIT\n */\n\nconst EPSILON = 1e-6;\nconst INSIDE = 1;\nconst OUTSIDE = 0;\n\nfunction clipT(num, denom, c) {\n  const [tE, tL] = c;\n  if (Math.abs(denom) < EPSILON) return num < 0;\n  const t = num / denom;\n\n  if (denom > 0) {\n    if (t > tL) return 0;\n    if (t > tE) c[0] = t;\n  } else {\n    if (t < tE) return 0;\n    if (t < tL) c[1] = t;\n  }\n  return 1;\n}\n\n/**\n * @param  {Point} a\n * @param  {Point} b\n * @param  {BoundingBox} box [xmin, ymin, xmax, ymax]\n * @param  {Point?} [da]\n * @param  {Point?} [db]\n * @return {number}\n */\nexport default function clip(a, b, box, da?, db?) {\n  const [x1, y1] = a;\n  const [x2, y2] = b;\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n\n  if (da === undefined || db === undefined) {\n    da = a;\n    db = b;\n  } else {\n    da[0] = a[0];\n    da[1] = a[1];\n    db[0] = b[0];\n    db[1] = b[1];\n  }\n\n  if (\n    Math.abs(dx) < EPSILON &&\n    Math.abs(dy) < EPSILON &&\n    x1 >= box[0] &&\n    x1 <= box[2] &&\n    y1 >= box[1] &&\n    y1 <= box[3]\n  ) {\n    return INSIDE;\n  }\n\n  const c = [0, 1];\n  if (\n    clipT(box[0] - x1, dx, c) &&\n    clipT(x1 - box[2], -dx, c) &&\n    clipT(box[1] - y1, dy, c) &&\n    clipT(y1 - box[3], -dy, c)\n  ) {\n    const [tE, tL] = c;\n    if (tL < 1) {\n      db[0] = x1 + tL * dx;\n      db[1] = y1 + tL * dy;\n    }\n    if (tE > 0) {\n      da[0] += tE * dx;\n      da[1] += tE * dy;\n    }\n    return INSIDE;\n  }\n  return OUTSIDE;\n}\n","import type { Types } from '@cornerstonejs/core';\n\n// Returns sign of number\nfunction sign(x: any) {\n  return typeof x === 'number'\n    ? x\n      ? x < 0\n        ? -1\n        : 1\n      : x === x\n      ? 0\n      : NaN\n    : NaN;\n}\n\n/**\n * Calculates the intersection point between two lines in the 2D plane\n *\n * @param line1Start - x,y coordinates of the start of the first line\n * @param line1End - x,y coordinates of the end of the first line\n * @param line2Start - x,y coordinates of the start of the second line\n * @param line2End - x,y coordinates of the end of the second line\n * @returns [x,y] - point x,y of the point\n */\n\nexport default function intersectLine(\n  line1Start: Types.Point2,\n  line1End: Types.Point2,\n  line2Start: Types.Point2,\n  line2End: Types.Point2\n): number[] {\n  const [x1, y1] = line1Start;\n  const [x2, y2] = line1End;\n  const [x3, y3] = line2Start;\n  const [x4, y4] = line2End;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is \"a1 x  +  b1 y  +  c1  =  0\"\n  const a1 = y2 - y1;\n  const b1 = x1 - x2;\n  const c1 = x2 * y1 - x1 * y2;\n\n  // Compute r3 and r4\n  const r3 = a1 * x3 + b1 * y3 + c1;\n  const r4 = a1 * x4 + b1 * y4 + c1;\n\n  /* Check signs of r3 and r4.  If both point 3 and point 4 lie on\n   * same side of line 1, the line segments do not intersect.\n   */\n\n  if (r3 !== 0 && r4 !== 0 && sign(r3) === sign(r4)) {\n    return;\n  }\n\n  // Compute a2, b2, c2\n  const a2 = y4 - y3;\n  const b2 = x3 - x4;\n  const c2 = x4 * y3 - x3 * y4;\n\n  // Compute r1 and r2\n  const r1 = a2 * x1 + b2 * y1 + c2;\n  const r2 = a2 * x2 + b2 * y2 + c2;\n\n  /* Check signs of r1 and r2.  If both point 1 and point 2 lie\n   * on same side of second line segment, the line segments do\n   * not intersect.\n   */\n\n  if (r1 !== 0 && r2 !== 0 && sign(r1) === sign(r2)) {\n    return;\n  }\n\n  /* Line segments intersect: compute intersection point.\n   */\n\n  const denom = a1 * b2 - a2 * b1;\n  let num;\n\n  /* The denom/2 is to get rounding instead of truncating.  It\n   * is added or subtracted to the numerator, depending upon the\n   * sign of the numerator.\n   */\n\n  num = b1 * c2 - b2 * c1;\n  const x = num / denom;\n\n  num = a2 * c1 - a1 * c2;\n  const y = num / denom;\n\n  const intersectionPoint = [x, y];\n\n  return intersectionPoint;\n}\n","import { vec2 } from 'gl-matrix';\nimport type { Types } from '@cornerstonejs/core';\n\n/**\n * Orientation algoritm to determine if two lines cross.\n * Credit and details: geeksforgeeks.org/check-if-two-given-line-segments-intersect/\n */\n\nfunction getAllIntersectionsWithPolyline(\n  points: Types.Point2[],\n  p1: Types.Point2,\n  q1: Types.Point2,\n  closed = true\n): Types.Point2[] {\n  let initialI;\n  let j;\n  const intersections: Types.Point2[] = [];\n\n  if (closed) {\n    j = points.length - 1;\n    initialI = 0;\n  } else {\n    j = 0;\n    initialI = 1;\n  }\n\n  for (let i = initialI; i < points.length; i++) {\n    const p2 = points[j];\n    const q2 = points[i];\n\n    if (doesIntersect(p1, q1, p2, q2)) {\n      intersections.push([j, i]);\n    }\n\n    j = i;\n  }\n\n  return intersections;\n}\n\n/**\n * Returns all intersections points\n * between a line and a polyline\n */\nfunction getIntersectionCoordinatesWithPolyline(\n  points: Types.Point2[],\n  p1: Types.Point2,\n  q1: Types.Point2,\n  closed = true\n): Types.Point2[] {\n  const result = [];\n  const polylineIndexes = getAllIntersectionsWithPolyline(\n    points,\n    p1,\n    q1,\n    closed\n  );\n\n  for (let i = 0; i < polylineIndexes.length; i++) {\n    const p2 = points[polylineIndexes[i][0]];\n    const q2 = points[polylineIndexes[i][1]];\n    const intersection = getIntersection(p1, q1, p2, q2);\n    result.push(intersection);\n  }\n  return result;\n}\n\n/**\n * Checks whether the line (`p1`,`q1`) intersects any of the other lines in the\n * `points`, and returns the first value.\n */\nfunction getFirstIntersectionWithPolyline(\n  points: Types.Point2[],\n  p1: Types.Point2,\n  q1: Types.Point2,\n  closed = true\n): Types.Point2 | undefined {\n  let initialI;\n  let j;\n\n  if (closed) {\n    j = points.length - 1;\n    initialI = 0;\n  } else {\n    j = 0;\n    initialI = 1;\n  }\n\n  for (let i = initialI; i < points.length; i++) {\n    const p2 = points[j];\n    const q2 = points[i];\n\n    if (doesIntersect(p1, q1, p2, q2)) {\n      return [j, i];\n    }\n\n    j = i;\n  }\n}\n\n/**\n * Checks whether the line (`p1`,`q1`) intersects any of the other lines in the\n * `points`, and returns the closest value.\n */\nfunction getClosestIntersectionWithPolyline(\n  points: Types.Point2[],\n  p1: Types.Point2,\n  q1: Types.Point2,\n  closed = true\n): { segment: Types.Point2; distance: number } | undefined {\n  let initialI;\n  let j;\n\n  if (closed) {\n    j = points.length - 1;\n    initialI = 0;\n  } else {\n    j = 0;\n    initialI = 1;\n  }\n\n  const intersections = [];\n\n  for (let i = initialI; i < points.length; i++) {\n    const p2 = points[j];\n    const q2 = points[i];\n\n    if (doesIntersect(p1, q1, p2, q2)) {\n      intersections.push([j, i]);\n    }\n\n    j = i;\n  }\n\n  if (intersections.length === 0) {\n    return;\n  }\n\n  // Find intersection closest to the start point\n  const distances = [];\n\n  intersections.forEach((intersection) => {\n    const intersectionPoints = [\n      points[intersection[0]],\n      points[intersection[1]],\n    ];\n\n    const midpoint = [\n      (intersectionPoints[0][0] + intersectionPoints[1][0]) / 2,\n      (intersectionPoints[0][1] + intersectionPoints[1][1]) / 2,\n    ];\n\n    distances.push(vec2.distance(<vec2>midpoint, p1));\n  });\n\n  const minDistance = Math.min(...distances);\n  const indexOfMinDistance = distances.indexOf(minDistance);\n\n  return {\n    segment: intersections[indexOfMinDistance],\n    distance: minDistance,\n  };\n}\n\n/**\n * Checks whether the line (`p1`,`q1`) intersects the line (`p2`,`q2`) via an orientation algorithm.\n */\nfunction doesIntersect(\n  p1: Types.Point2,\n  q1: Types.Point2,\n  p2: Types.Point2,\n  q2: Types.Point2\n): boolean {\n  let result = false;\n\n  const orient = [\n    orientation(p1, q1, p2),\n    orientation(p1, q1, q2),\n    orientation(p2, q2, p1),\n    orientation(p2, q2, q1),\n  ];\n\n  // General Case\n  if (orient[0] !== orient[1] && orient[2] !== orient[3]) {\n    return true;\n  }\n\n  // Special Cases\n  if (orient[0] === 0 && onSegment(p1, p2, q1)) {\n    // If p1, q1 and p2 are colinear and p2 lies on segment p1q1\n    result = true;\n  } else if (orient[1] === 0 && onSegment(p1, q2, q1)) {\n    // If p1, q1 and p2 are colinear and q2 lies on segment p1q1\n    result = true;\n  } else if (orient[2] === 0 && onSegment(p2, p1, q2)) {\n    // If p2, q2 and p1 are colinear and p1 lies on segment p2q2\n    result = true;\n  } else if (orient[3] === 0 && onSegment(p2, q1, q2)) {\n    // If p2, q2 and q1 are colinear and q1 lies on segment p2q2\n    result = true;\n  }\n\n  return result;\n}\n\n/**\n * Checks the orientation of 3 points, returns a 0, 1 or 2 based on\n * the orientation of the points.\n */\nfunction orientation(\n  p: Types.Point2,\n  q: Types.Point2,\n  r: Types.Point2\n): number {\n  const orientationValue =\n    (q[1] - p[1]) * (r[0] - q[0]) - (q[0] - p[0]) * (r[1] - q[1]);\n\n  if (orientationValue === 0) {\n    return 0; // Colinear\n  }\n\n  return orientationValue > 0 ? 1 : 2;\n}\n\n/**\n * Checks if point `q` lies on the segment (`p`,`r`).\n */\nfunction onSegment(p: Types.Point2, q: Types.Point2, r: Types.Point2): boolean {\n  if (\n    q[0] <= Math.max(p[0], r[0]) &&\n    q[0] >= Math.min(p[0], r[0]) &&\n    q[1] <= Math.max(p[1], r[1]) &&\n    q[1] >= Math.min(p[1], r[1])\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Gets the intersection between the line (`p1`,`q1`) and the line (`p2`,`q2`)\n * http://jsfiddle.net/justin_c_rounds/Gd2S2/light/\n * https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection#Given_two_points_on_each_line\n */\nfunction getIntersection(\n  p1: Types.Point2,\n  q1: Types.Point2,\n  p2: Types.Point2,\n  q2: Types.Point2\n): Types.Point2 {\n  const denominator =\n    (q2[1] - p2[1]) * (q1[0] - p1[0]) - (q2[0] - p2[0]) * (q1[1] - p1[1]);\n  if (denominator == 0) {\n    return;\n  }\n  let a = p1[1] - p2[1];\n  let b = p1[0] - p2[0];\n  const numerator1 = (q2[0] - p2[0]) * a - (q2[1] - p2[1]) * b;\n  const numerator2 = (q1[0] - p1[0]) * a - (q1[1] - p1[1]) * b;\n  a = numerator1 / denominator;\n  b = numerator2 / denominator;\n\n  const resultX = p1[0] + a * (q1[0] - p1[0]);\n  const resultY = p1[1] + a * (q1[1] - p1[1]);\n\n  return [resultX, resultY];\n}\n\nexport {\n  getAllIntersectionsWithPolyline,\n  getFirstIntersectionWithPolyline,\n  getClosestIntersectionWithPolyline,\n  getIntersectionCoordinatesWithPolyline,\n};\n","import { StackViewport } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\n\nconst EPSILON = 1e-3;\n\n/**\n * Gets the desired spacing for points in the polyline for the\n * `PlanarFreehandROITool` in the x and y canvas directions, as well as\n * returning these canvas directions in world space.\n *\n * @param viewport - The Cornerstone3D `StackViewport` or `VolumeViewport`.\n * @param subPixelResolution - The number to divide the image pixel spacing by\n * to get the sub pixel spacing. E.g. `10` will return spacings 10x smaller than\n * the native image spacing.\n * @returns The spacings of the X and Y directions, and the 3D directions of the\n * x and y directions.\n */\nconst getSubPixelSpacingAndXYDirections = (\n  viewport: Types.IStackViewport | Types.IVolumeViewport,\n  subPixelResolution: number\n): { spacing: Types.Point2; xDir: Types.Point3; yDir: Types.Point3 } => {\n  let spacing;\n  let xDir;\n  let yDir;\n\n  if (viewport instanceof StackViewport) {\n    // Check XY directions\n    const imageData = viewport.getImageData();\n\n    xDir = imageData.direction.slice(0, 3);\n    yDir = imageData.direction.slice(3, 6);\n\n    spacing = imageData.spacing;\n  } else {\n    // Check volume directions\n    const imageData = viewport.getImageData();\n    const { direction, spacing: volumeSpacing } = imageData;\n    const { viewPlaneNormal, viewUp } = viewport.getCamera();\n\n    // Calculate size of spacing vector in normal direction\n    const iVector = direction.slice(0, 3) as Types.Point3;\n    const jVector = direction.slice(3, 6) as Types.Point3;\n    const kVector = direction.slice(6, 9) as Types.Point3;\n\n    const viewRight = vec3.create(); // Get the X direction of the viewport\n\n    vec3.cross(viewRight, <vec3>viewUp, <vec3>viewPlaneNormal);\n\n    const absViewRightDotI = Math.abs(vec3.dot(viewRight, iVector));\n    const absViewRightDotJ = Math.abs(vec3.dot(viewRight, jVector));\n    const absViewRightDotK = Math.abs(vec3.dot(viewRight, kVector));\n\n    // Get X spacing\n    let xSpacing;\n    if (Math.abs(1 - absViewRightDotI) < EPSILON) {\n      xSpacing = volumeSpacing[0];\n      xDir = iVector;\n    } else if (Math.abs(1 - absViewRightDotJ) < EPSILON) {\n      xSpacing = volumeSpacing[1];\n      xDir = jVector;\n    } else if (Math.abs(1 - absViewRightDotK) < EPSILON) {\n      xSpacing = volumeSpacing[2];\n      xDir = kVector;\n    } else {\n      throw new Error('No support yet for oblique plane planar contours');\n    }\n\n    const absViewUpDotI = Math.abs(vec3.dot(viewUp, iVector));\n    const absViewUpDotJ = Math.abs(vec3.dot(viewUp, jVector));\n    const absViewUpDotK = Math.abs(vec3.dot(viewUp, kVector));\n\n    // Get Y spacing\n    let ySpacing;\n    if (Math.abs(1 - absViewUpDotI) < EPSILON) {\n      ySpacing = volumeSpacing[0];\n      yDir = iVector;\n    } else if (Math.abs(1 - absViewUpDotJ) < EPSILON) {\n      ySpacing = volumeSpacing[1];\n      yDir = jVector;\n    } else if (Math.abs(1 - absViewUpDotK) < EPSILON) {\n      ySpacing = volumeSpacing[2];\n      yDir = kVector;\n    } else {\n      throw new Error('No support yet for oblique plane planar contours');\n    }\n\n    spacing = [xSpacing, ySpacing];\n  }\n\n  const subPixelSpacing: Types.Point2 = [\n    spacing[0] / subPixelResolution,\n    spacing[1] / subPixelResolution,\n  ];\n\n  return { spacing: subPixelSpacing, xDir, yDir };\n};\n\nexport default getSubPixelSpacingAndXYDirections;\n","import { vec2 } from 'gl-matrix';\nimport type { Types } from '@cornerstonejs/core';\n\n/**\n * Returns true if points `p1` and `p2` are within `closeContourProximity`.\n */\nconst pointsAreWithinCloseContourProximity = (\n  p1: Types.Point2,\n  p2: Types.Point2,\n  closeContourProximity: number\n): boolean => {\n  return vec2.dist(p1, p2) < closeContourProximity;\n};\n\nexport default pointsAreWithinCloseContourProximity;\n","import { getEnabledElement } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport { vec2, vec3 } from 'gl-matrix';\nimport { PlanarFreehandROICommonData } from './planarFreehandROIInternalTypes';\n\n/**\n * Adds one or more points to the array at a resolution defined by the underlying image.\n */\nconst addCanvasPointsToArray = (\n  element: HTMLDivElement,\n  canvasPoints: Types.Point2[],\n  newCanvasPoint: Types.Point2,\n  commonData: PlanarFreehandROICommonData\n): number => {\n  const { xDir, yDir, spacing } = commonData;\n  const enabledElement = getEnabledElement(element);\n  const { viewport } = enabledElement;\n\n  const lastWorldPos = viewport.canvasToWorld(\n    canvasPoints[canvasPoints.length - 1]\n  );\n  const newWorldPos = viewport.canvasToWorld(newCanvasPoint);\n\n  const worldPosDiff = vec3.create();\n\n  vec3.subtract(worldPosDiff, newWorldPos, lastWorldPos);\n\n  const xDist = Math.abs(vec3.dot(worldPosDiff, xDir));\n  const yDist = Math.abs(vec3.dot(worldPosDiff, yDir));\n\n  const numPointsToAdd = Math.max(\n    Math.floor(xDist / spacing[0]),\n    Math.floor(yDist / spacing[0])\n  );\n\n  if (numPointsToAdd > 1) {\n    const lastCanvasPoint = canvasPoints[canvasPoints.length - 1];\n\n    const canvasDist = vec2.dist(lastCanvasPoint, newCanvasPoint);\n\n    const canvasDir = vec2.create();\n\n    vec2.subtract(canvasDir, newCanvasPoint, lastCanvasPoint);\n\n    vec2.set(canvasDir, canvasDir[0] / canvasDist, canvasDir[1] / canvasDist);\n\n    const distPerPoint = canvasDist / numPointsToAdd;\n\n    for (let i = 1; i <= numPointsToAdd; i++) {\n      canvasPoints.push([\n        lastCanvasPoint[0] + distPerPoint * canvasDir[0] * i,\n        lastCanvasPoint[1] + distPerPoint * canvasDir[1] * i,\n      ]);\n    }\n  } else {\n    canvasPoints.push(newCanvasPoint);\n  }\n\n  return numPointsToAdd;\n};\n\nexport default addCanvasPointsToArray;\n","import type { Types } from '@cornerstonejs/core';\nimport { vec2 } from 'gl-matrix';\n\n/**\n * Returns `true` if the point `p` can project onto point (`p1`, `p2`), and if\n * this projected point is less than `proximity` units away.\n */\nconst pointCanProjectOnLine = (\n  p: Types.Point2,\n  p1: Types.Point2,\n  p2: Types.Point2,\n  proximity: number\n): boolean => {\n  // Perfom checks in order of computational complexity.\n  const p1p = [p[0] - p1[0], p[1] - p1[1]];\n  const p1p2 = [p2[0] - p1[0], p2[1] - p1[1]];\n\n  const dot = p1p[0] * p1p2[0] + p1p[1] * p1p2[1];\n\n  // Dot product needs to be positive to be a candidate for projection onto line segment.\n  if (dot < 0) {\n    return false;\n  }\n\n  const p1p2Mag = Math.sqrt(p1p2[0] * p1p2[0] + p1p2[1] * p1p2[1]);\n\n  if (p1p2Mag === 0) {\n    return false;\n  }\n\n  const projectionVectorMag = dot / p1p2Mag;\n  const p1p2UnitVector = [p1p2[0] / p1p2Mag, p1p2[1] / p1p2Mag];\n  const projectionVector = [\n    p1p2UnitVector[0] * projectionVectorMag,\n    p1p2UnitVector[1] * projectionVectorMag,\n  ];\n  const projectionPoint = <Types.Point2>[\n    p1[0] + projectionVector[0],\n    p1[1] + projectionVector[1],\n  ];\n\n  const distance = vec2.distance(p, projectionPoint);\n\n  if (distance > proximity) {\n    // point is too far away.\n    return false;\n  }\n\n  // Check projects onto line segment.\n  if (vec2.distance(p1, projectionPoint) > vec2.distance(p1, p2)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default pointCanProjectOnLine;\n","import type { Types } from '@cornerstonejs/core';\n\n/**\n * Calculates the area of an array of `Point2` points using the shoelace algorithm.\n *\n * The units of the area are in the same units as the points are in. E.g. if\n * the points are in canvas, then the result is in canvas pixels ^2; If they are\n * in mm, then the result is in mm^2; etc.\n */\nexport default function calculateAreaOfPoints(points: Types.Point2[]): number {\n  // Shoelace algorithm.\n  const n = points.length;\n  let area = 0.0;\n  let j = n - 1;\n\n  for (let i = 0; i < n; i++) {\n    area += (points[j][0] + points[i][0]) * (points[j][1] - points[i][1]);\n    j = i; // j is previous vertex to i\n  }\n\n  // Return absolute value of half the sum (half as summing up traingles).\n  return Math.abs(area / 2.0);\n}\n","import type { Types } from '@cornerstonejs/core';\n\n/**\n * Calculates the distance of a point to another point\n *\n * @param p1 - x,y of the point\n * @param p2 - x,y of the point\n * @returns distance\n */\nexport default function distanceToPoint(\n  p1: Types.Point2,\n  p2: Types.Point2\n): number {\n  if (p1?.length !== 2 || p2?.length !== 2) {\n    throw Error('points should have 2 elements of [x, y]');\n  }\n\n  const [x1, y1] = p1;\n  const [x2, y2] = p2;\n\n  return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n}\n","import vtkMath from '@kitware/vtk.js/Common/Core/Math';\nimport { utilities as csUtils } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n/**\n * Returns a point based on some criteria (e.g., minimum or maximum intensity) in\n * the line of sight (on the line between the passed worldPosition and camera position).\n * It iterated over the points with a step size on the line.\n *\n * @param viewport - Volume viewport\n * @param worldPos - World coordinates of the clicked location\n * @param targetVolumeId - target Volume ID in the viewport\n * @param criteriaFunction - A function that returns the point if it passes a certain\n * written logic, for instance, it can be a maxValue function that keeps the\n * records of all intensity values, and only return the point if its intensity\n * is greater than the maximum intensity of the points passed before.\n * @param stepsSize - Percentage of the spacing in the normal direction, default value\n * is 0.25 which means steps = 1/4 of the spacing in the normal direction.\n * @returns the World pos of the point that passes the criteriaFunction\n */\nexport default function getPointInLineOfSightWithCriteria(\n  viewport: Types.IVolumeViewport,\n  worldPos: Types.Point3,\n  targetVolumeId: string,\n  criteriaFunction: (intensity: number, point: Types.Point3) => Types.Point3,\n  stepSize = 0.25\n): Types.Point3 {\n  // 1. Getting the camera from the event details\n  const camera = viewport.getCamera();\n  const { position: cameraPosition } = camera;\n\n  // 2. Calculating the spacing in the normal direction, this will get\n  // used as the step size for iterating over the points in the line of sight\n  const { spacingInNormalDirection } =\n    csUtils.getTargetVolumeAndSpacingInNormalDir(\n      viewport,\n      camera,\n      targetVolumeId\n    );\n  // 2.1 Making sure, we are not missing any point\n  const step = spacingInNormalDirection * stepSize;\n\n  // 3. Getting the bounds of the viewports. Search for brightest point is\n  // limited to the visible bound\n  // Todo: this might be a problem since bounds will change to spatial bounds.\n  const bounds = viewport.getBounds();\n  const xMin = bounds[0];\n  const xMax = bounds[1];\n\n  // 5. Calculating the line, we use a parametric line definition\n  const vector = <Types.Point3>[0, 0, 0];\n\n  // 5.1 Point coordinate on the line\n  let point = <Types.Point3>[0, 0, 0];\n\n  // 5.2 Calculating the line direction, and storing in vector\n  vtkMath.subtract(worldPos, cameraPosition, vector);\n\n  let pickedPoint;\n\n  // 6. Iterating over the line from the lower bound to the upper bound, with the\n  // specified step size\n  for (let pointT = xMin; pointT <= xMax; pointT = pointT + step) {\n    // 6.1 Calculating the point x location\n    point = [pointT, 0, 0];\n    // 6.2 Calculating the point y,z location based on the line equation\n    const t = (pointT - cameraPosition[0]) / vector[0];\n    point[1] = t * vector[1] + cameraPosition[1];\n    point[2] = t * vector[2] + cameraPosition[2];\n\n    // 6.3 Checking if the points is inside the bounds\n    if (_inBounds(point, bounds)) {\n      // 6.4 Getting the intensity of the point\n      const intensity = viewport.getIntensityFromWorld(point);\n      // 6.5 Passing the intensity to the maximum value functions which decides\n      // whether the current point is of interest based on some criteria\n      const pointToPick = criteriaFunction(intensity, point);\n      if (pointToPick) {\n        pickedPoint = pointToPick;\n      }\n    }\n  }\n\n  return pickedPoint;\n}\n\n/**\n * Returns whether the point in the world is inside the bounds of the viewport\n * @param point - coordinates in the world\n * @returns boolean\n */\nconst _inBounds = function (\n  point: Types.Point3,\n  bounds: Array<number>\n): boolean {\n  const [xMin, xMax, yMin, yMax, zMin, zMax] = bounds;\n  return (\n    point[0] > xMin &&\n    point[0] < xMax &&\n    point[1] > yMin &&\n    point[1] < yMax &&\n    point[2] > zMin &&\n    point[2] < zMax\n  );\n};\n","import filterAnnotationsWithinSlice from './filterAnnotationsWithinSlice';\nimport getWorldWidthAndHeightFromCorners from './getWorldWidthAndHeightFromCorners';\nimport filterAnnotationsForDisplay from './filterAnnotationsForDisplay';\nimport getPointInLineOfSightWithCriteria from './getPointInLineOfSightWithCriteria';\n\nexport default {\n  filterAnnotationsWithinSlice,\n  getWorldWidthAndHeightFromCorners,\n  filterAnnotationsForDisplay,\n  getPointInLineOfSightWithCriteria,\n};\n\nexport {\n  filterAnnotationsWithinSlice,\n  getWorldWidthAndHeightFromCorners,\n  filterAnnotationsForDisplay,\n  getPointInLineOfSightWithCriteria,\n};\n","import { Types } from '@cornerstonejs/core';\n\n/**\n * Returns the orientation of the vector in the patient coordinate system.\n * @public\n *\n * @param vector - Input array\n * @returns The orientation in the patient coordinate system.\n */\nexport default function getOrientationStringLPS(vector: Types.Point3): string {\n  // Thanks to David Clunie\n  // https://sites.google.com/site/dicomnotes/\n\n  let orientation = '';\n  const orientationX = vector[0] < 0 ? 'R' : 'L';\n  const orientationY = vector[1] < 0 ? 'A' : 'P';\n  const orientationZ = vector[2] < 0 ? 'F' : 'H';\n\n  // Should probably make this a function vector3.abs\n  const abs = [Math.abs(vector[0]), Math.abs(vector[1]), Math.abs(vector[2])];\n\n  const MIN = 0.0001;\n\n  for (let i = 0; i < 3; i++) {\n    if (abs[0] > MIN && abs[0] > abs[1] && abs[0] > abs[2]) {\n      orientation += orientationX;\n      abs[0] = 0;\n    } else if (abs[1] > MIN && abs[1] > abs[0] && abs[1] > abs[2]) {\n      orientation += orientationY;\n      abs[1] = 0;\n    } else if (abs[2] > MIN && abs[2] > abs[0] && abs[2] > abs[1]) {\n      orientation += orientationZ;\n      abs[2] = 0;\n    } else if (abs[0] > MIN && abs[1] > MIN && abs[0] === abs[1]) {\n      orientation += orientationX + orientationY;\n      abs[0] = 0;\n      abs[1] = 0;\n    } else if (abs[0] > MIN && abs[2] > MIN && abs[0] === abs[2]) {\n      orientation += orientationX + orientationZ;\n      abs[0] = 0;\n      abs[2] = 0;\n    } else if (abs[1] > MIN && abs[2] > MIN && abs[1] === abs[2]) {\n      orientation += orientationY + orientationZ;\n      abs[1] = 0;\n      abs[2] = 0;\n    } else {\n      break;\n    }\n  }\n\n  return orientation;\n}\n","/**\n * Inverts an orientation string.\n * @public\n *\n * @param orientationString - The orientation.\n * @returns The inverted orientationString.\n */\nexport default function invertOrientationStringLPS(\n  orientationString: string\n): string {\n  let inverted = orientationString.replace('H', 'f');\n\n  inverted = inverted.replace('F', 'h');\n  inverted = inverted.replace('R', 'l');\n  inverted = inverted.replace('L', 'r');\n  inverted = inverted.replace('A', 'p');\n  inverted = inverted.replace('P', 'a');\n  inverted = inverted.toUpperCase();\n\n  return inverted;\n}\n","/**\n * CINE Tool Events\n */\nenum Events {\n  CLIP_STOPPED = 'CORNERSTONE_CINE_TOOL_STOPPED',\n  CLIP_STARTED = 'CORNERSTONE_CINE_TOOL_STARTED',\n}\n\nexport default Events;\n","import { getEnabledElement } from '@cornerstonejs/core';\nimport { CINETypes } from '../../types';\n\nconst state: Record<string, CINETypes.ToolData> = {};\n\nfunction addToolState(element: HTMLDivElement, data: CINETypes.ToolData): void {\n  const enabledElement = getEnabledElement(element);\n  const { viewportId } = enabledElement;\n  state[viewportId] = data;\n}\n\nfunction getToolState(element: HTMLDivElement): CINETypes.ToolData | undefined {\n  const enabledElement = getEnabledElement(element);\n  const { viewportId } = enabledElement;\n  return state[viewportId];\n}\n\nexport { addToolState, getToolState };\n","import { glMatrix, vec3 } from 'gl-matrix';\nimport {\n  utilities as csUtils,\n  getEnabledElement,\n  StackViewport,\n  VolumeViewport,\n  cache,\n  BaseVolumeViewport,\n} from '@cornerstonejs/core';\n\nimport { Types } from '@cornerstonejs/core';\nimport CINE_EVENTS from './events';\nimport { addToolState, getToolState } from './state';\nimport { CINETypes } from '../../types';\nimport scroll from '../scroll';\n\nconst { triggerEvent } = csUtils;\n\nconst debounced = true;\nconst loop = true;\nconst dynamicVolumesPlayingMap = new Map();\n\n/**\n * Starts playing a clip or adjusts the frame rate of an already playing clip.  framesPerSecond is\n * optional and defaults to 30 if not specified.  A negative framesPerSecond will play the clip in reverse.\n * The element must be a stack of images\n * @param element - HTML Element\n * @param framesPerSecond - Number of frames per second\n */\nfunction playClip(\n  element: HTMLDivElement,\n  playClipOptions: CINETypes.PlayClipOptions\n): void {\n  let playClipTimeouts;\n  let playClipIsTimeVarying;\n\n  if (element === undefined) {\n    throw new Error('playClip: element must not be undefined');\n  }\n\n  const enabledElement = getEnabledElement(element);\n\n  if (!enabledElement) {\n    throw new Error(\n      'playClip: element must be a valid Cornerstone enabled element'\n    );\n  }\n\n  // 4D Cine is enabled by default\n  playClipOptions.dynamicCineEnabled =\n    playClipOptions.dynamicCineEnabled ?? true;\n\n  const { viewport } = enabledElement;\n  const volume = _getVolumeFromViewport(viewport);\n  const playClipContext = _createCinePlayContext(viewport, playClipOptions);\n  let playClipData = getToolState(element);\n\n  const isDynamicCinePlaying =\n    playClipOptions.dynamicCineEnabled && volume?.isDynamicVolume();\n\n  // If user is trying to play CINE for a 4D volume it first needs\n  // to stop CINE that has may be playing for any other viewport.\n  if (isDynamicCinePlaying) {\n    _stopDynamicVolumeCine(element);\n  }\n\n  if (!playClipData) {\n    playClipData = {\n      intervalId: undefined,\n      framesPerSecond: 30,\n      lastFrameTimeStamp: undefined,\n      ignoreFrameTimeVector: false,\n      usingFrameTimeVector: false,\n      frameTimeVector: playClipOptions.frameTimeVector ?? undefined,\n      speed: playClipOptions.frameTimeVectorSpeedMultiplier ?? 1,\n      reverse: playClipOptions.reverse ?? false,\n      loop: playClipOptions.loop ?? true,\n    };\n    addToolState(element, playClipData);\n  } else {\n    // Make sure the specified clip is not running before any property update.\n    // If a 3D CINE was playing it passes isDynamicCinePlaying as FALSE to\n    // prevent stopping a 4D CINE in case it is playing on another viewport.\n    _stopClip(element, isDynamicCinePlaying);\n  }\n\n  playClipData.dynamicCineEnabled = playClipOptions.dynamicCineEnabled;\n\n  // If a framesPerSecond is specified and is valid, update the playClipData now\n  if (\n    playClipOptions.framesPerSecond < 0 ||\n    playClipOptions.framesPerSecond > 0\n  ) {\n    playClipData.framesPerSecond = Number(playClipOptions.framesPerSecond);\n    playClipData.reverse = playClipData.framesPerSecond < 0;\n    // If framesPerSecond is given, frameTimeVector will be ignored...\n    playClipData.ignoreFrameTimeVector = true;\n  }\n\n  // Determine if frame time vector should be used instead of a fixed frame rate...\n  if (\n    playClipData.ignoreFrameTimeVector !== true &&\n    playClipData.frameTimeVector &&\n    playClipData.frameTimeVector.length === playClipContext.numScrollSteps &&\n    playClipContext.frameTimeVectorEnabled\n  ) {\n    const { timeouts, isTimeVarying } = _getPlayClipTimeouts(\n      playClipData.frameTimeVector,\n      playClipData.speed\n    );\n\n    playClipTimeouts = timeouts;\n    playClipIsTimeVarying = isTimeVarying;\n  }\n\n  // This function encapsulates the frame rendering logic...\n  const playClipAction = () => {\n    const { numScrollSteps, currentStepIndex } = playClipContext;\n    let newStepIndex = currentStepIndex + (playClipData.reverse ? -1 : 1);\n    const newStepIndexOutOfRange =\n      newStepIndex < 0 || newStepIndex >= numScrollSteps;\n\n    if (!loop && newStepIndexOutOfRange) {\n      // If a 3D CINE was playing it passes isDynamicCinePlaying as FALSE to\n      // prevent stopping a 4D CINE in case it is playing on another viewport.\n      _stopClip(element, isDynamicCinePlaying);\n\n      const eventDetail = { element };\n\n      triggerEvent(element, CINE_EVENTS.CLIP_STOPPED, eventDetail);\n      return;\n    }\n\n    // Loop around if newStepIndex is out of range\n    if (newStepIndex >= numScrollSteps) {\n      newStepIndex = 0;\n    } else if (newStepIndex < 0) {\n      newStepIndex = numScrollSteps - 1;\n    }\n\n    const delta = newStepIndex - currentStepIndex;\n\n    if (delta) {\n      playClipContext.scroll(delta);\n    }\n  };\n\n  if (isDynamicCinePlaying) {\n    dynamicVolumesPlayingMap.set(volume.volumeId, element);\n  }\n\n  // If playClipTimeouts array is available, not empty and its elements are NOT uniform ...\n  // ... (at least one timeout is different from the others), use alternate setTimeout implementation\n  if (\n    playClipTimeouts &&\n    playClipTimeouts.length > 0 &&\n    playClipIsTimeVarying\n  ) {\n    playClipData.usingFrameTimeVector = true;\n    playClipData.intervalId = window.setTimeout(\n      function playClipTimeoutHandler() {\n        playClipData.intervalId = window.setTimeout(\n          playClipTimeoutHandler,\n          playClipTimeouts[playClipContext.currentStepIndex]\n        );\n        playClipAction();\n      },\n      0\n    );\n  } else {\n    // ... otherwise user setInterval implementation which is much more efficient.\n    playClipData.usingFrameTimeVector = false;\n    playClipData.intervalId = window.setInterval(\n      playClipAction,\n      1000 / Math.abs(playClipData.framesPerSecond)\n    );\n  }\n\n  const eventDetail = {\n    element,\n  };\n\n  triggerEvent(element, CINE_EVENTS.CLIP_STARTED, eventDetail);\n}\n\n/**\n * Stops an already playing clip.\n * @param element - HTML Element\n */\nfunction stopClip(element: HTMLDivElement): void {\n  _stopClip(element, true);\n}\n\nfunction _stopClip(element: HTMLDivElement, stopDynamicCine: boolean): void {\n  const enabledElement = getEnabledElement(element);\n  if (!enabledElement) return;\n  const { viewport } = enabledElement;\n  const cineToolData = getToolState(viewport.element);\n\n  if (cineToolData) {\n    _stopClipWithData(cineToolData);\n  }\n\n  if (stopDynamicCine && viewport instanceof BaseVolumeViewport) {\n    _stopDynamicVolumeCine(element);\n  }\n}\n\n/**\n * [private] Stops any CINE playing for the dynamic volume loaded on this viewport\n * @param element - HTML Element\n */\nfunction _stopDynamicVolumeCine(element) {\n  const { viewport } = getEnabledElement(element);\n  const volume = _getVolumeFromViewport(viewport);\n\n  // If the current viewport has a 4D volume loaded it may be playing\n  // if it is also loaded on another viewport and user has started CINE\n  // for that one. This guarantees the other viewport will also be stopped.\n  if (volume?.isDynamicVolume()) {\n    const dynamicCineElement = dynamicVolumesPlayingMap.get(volume.volumeId);\n\n    dynamicVolumesPlayingMap.delete(volume.volumeId);\n\n    if (dynamicCineElement && dynamicCineElement !== element) {\n      stopClip(<HTMLDivElement>dynamicCineElement);\n    }\n  }\n}\n\n/**\n * [private] Turns a Frame Time Vector (0018,1065) array into a normalized array of timeouts. Each element\n * ... of the resulting array represents the amount of time each frame will remain on the screen.\n * @param vector - A Frame Time Vector (0018,1065) as specified in section C.7.6.5.1.2 of DICOM standard.\n * @param speed - A speed factor which will be applied to each element of the resulting array.\n * @returns An array with timeouts for each animation frame.\n */\nfunction _getPlayClipTimeouts(vector: number[], speed: number) {\n  let i;\n  let sample;\n  let delay;\n  let sum = 0;\n  const limit = vector.length;\n  const timeouts = [];\n\n  // Initialize time varying to false\n  let isTimeVarying = false;\n\n  if (typeof speed !== 'number' || speed <= 0) {\n    speed = 1;\n  }\n\n  // First element of a frame time vector must be discarded\n  for (i = 1; i < limit; i++) {\n    // eslint-disable-next-line no-bitwise\n    delay = (Number(vector[i]) / speed) | 0; // Integral part only\n    timeouts.push(delay);\n    if (i === 1) {\n      // Use first item as a sample for comparison\n      sample = delay;\n    } else if (delay !== sample) {\n      isTimeVarying = true;\n    }\n\n    sum += delay;\n  }\n\n  if (timeouts.length > 0) {\n    if (isTimeVarying) {\n      // If it's a time varying vector, make the last item an average...\n      // eslint-disable-next-line no-bitwise\n      delay = (sum / timeouts.length) | 0;\n    } else {\n      delay = timeouts[0];\n    }\n\n    timeouts.push(delay);\n  }\n\n  return { timeouts, isTimeVarying };\n}\n\n/**\n * [private] Performs the heavy lifting of stopping an ongoing animation.\n * @param element - HTML Element\n * @param playClipData - The data from playClip that needs to be stopped.\n */\nfunction _stopClipWithData(playClipData) {\n  const id = playClipData.intervalId;\n\n  if (typeof id !== 'undefined') {\n    playClipData.intervalId = undefined;\n    if (playClipData.usingFrameTimeVector) {\n      clearTimeout(id);\n    } else {\n      clearInterval(id);\n    }\n  }\n}\n\nfunction _getVolumesFromViewport(viewport): Types.IImageVolume[] {\n  return viewport\n    .getActors()\n    .map((actor) => cache.getVolume(actor.uid))\n    .filter((volume) => !!volume);\n}\n\nfunction _getVolumeFromViewport(viewport): Types.IImageVolume {\n  const volumes = _getVolumesFromViewport(viewport);\n  const dynamicVolume = volumes.find((volume) => volume.isDynamicVolume());\n\n  return dynamicVolume ?? volumes[0];\n}\n\nfunction _createStackViewportCinePlayContext(\n  viewport: StackViewport\n): CINETypes.CinePlayContext {\n  const imageIds = viewport.getImageIds();\n\n  return {\n    get numScrollSteps(): number {\n      return imageIds.length;\n    },\n    get currentStepIndex(): number {\n      return viewport.getTargetImageIdIndex();\n    },\n    get frameTimeVectorEnabled(): boolean {\n      // It is always in acquired orientation\n      return true;\n    },\n    scroll(delta: number): void {\n      scroll(viewport, { delta, debounceLoading: debounced });\n    },\n  };\n}\n\nfunction _createVolumeViewportCinePlayContext(\n  viewport: VolumeViewport,\n  volume: Types.IImageVolume\n): CINETypes.CinePlayContext {\n  const { volumeId } = volume;\n  const cachedScrollInfo = {\n    viewPlaneNormal: vec3.create(),\n    scrollInfo: null,\n  };\n\n  const getScrollInfo = () => {\n    const camera = viewport.getCamera();\n    const updateCache =\n      !cachedScrollInfo.scrollInfo ||\n      !vec3.equals(camera.viewPlaneNormal, cachedScrollInfo.viewPlaneNormal);\n\n    // Number of steps would change only after rotating the volume so it\n    // caches the result and recomputes only when necessary. Until it is\n    // rotated the current frame is updated locally\n    if (updateCache) {\n      const scrollInfo = csUtils.getVolumeViewportScrollInfo(\n        viewport,\n        volumeId\n      );\n\n      cachedScrollInfo.viewPlaneNormal = camera.viewPlaneNormal;\n      cachedScrollInfo.scrollInfo = scrollInfo;\n    }\n\n    return cachedScrollInfo.scrollInfo;\n  };\n\n  return {\n    get numScrollSteps(): number {\n      return getScrollInfo().numScrollSteps;\n    },\n    get currentStepIndex(): number {\n      return getScrollInfo().currentStepIndex;\n    },\n    get frameTimeVectorEnabled(): boolean {\n      const camera = viewport.getCamera();\n      const volumeViewPlaneNormal = volume.direction\n        .slice(6, 9)\n        .map((x) => -x) as Types.Point3;\n      const dot = vec3.dot(volumeViewPlaneNormal, camera.viewPlaneNormal);\n\n      // Check if the volume is in acquired orientation\n      // it may be flipped or rotated in plane\n      return glMatrix.equals(dot, 1);\n    },\n    scroll(delta: number): void {\n      getScrollInfo().currentStepIndex += delta;\n      scroll(viewport, { delta });\n    },\n  };\n}\n\nfunction _createDynamicVolumeViewportCinePlayContext(\n  volume: Types.IDynamicImageVolume\n): CINETypes.CinePlayContext {\n  return {\n    get numScrollSteps(): number {\n      return volume.numTimePoints;\n    },\n    get currentStepIndex(): number {\n      return volume.timePointIndex;\n    },\n    get frameTimeVectorEnabled(): boolean {\n      // Looping throught time does not uses frameTimeVector\n      return false;\n    },\n    scroll(delta: number): void {\n      // Updating this property (setter) makes it move to the desired time point\n      volume.timePointIndex += delta;\n    },\n  };\n}\n\nfunction _createCinePlayContext(\n  viewport,\n  playClipOptions: CINETypes.PlayClipOptions\n): CINETypes.CinePlayContext {\n  if (viewport instanceof StackViewport) {\n    return _createStackViewportCinePlayContext(viewport);\n  }\n\n  if (viewport instanceof VolumeViewport) {\n    const volume = _getVolumeFromViewport(viewport);\n\n    if (playClipOptions.dynamicCineEnabled && volume?.isDynamicVolume()) {\n      return _createDynamicVolumeViewportCinePlayContext(\n        <Types.IDynamicImageVolume>volume\n      );\n    }\n\n    return _createVolumeViewportCinePlayContext(viewport, volume);\n  }\n\n  throw new Error('Unknown viewport type');\n}\n\nexport { playClip, stopClip };\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","import min from \"./min.js\";\n\nexport default function transpose(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from \"./transpose.js\";\n\nexport default function zip() {\n  return transpose(arguments);\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","import { Types } from '@cornerstonejs/core';\nimport { interpolatePoints } from './algorithms/bspline';\n\n/**\n * Returns a list of uniform distributed values. This list contains the max amount of values which has at least a minimum distance between two consecutive values.\n * minDistributionDistance means the min distance between two consecutive distributed values.\n * Closed interval contains the min/max values.\n *\n * Formula for reference\n * For given {x ∈ R | x ≥ 0} and {minDis ∈ R | minDis ≥ 0}, ∃ D(x) where D(x) ≥ a and D(x) ≤ b  =>\n *         |\n * D(x)  = |                  (b - a)\n *         |  round( ------------------------ * x  )   + a\n *         |                (b - a + 1)\n *         |        round( -----------  )\n *         |                 minDis\n */\nfunction getContinuousUniformDistributionValues(\n  minDistributionDistance: number,\n  closedInterval: [number, number]\n): number[] {\n  const result = [];\n  const [intervalIni, intervalEnd] = closedInterval;\n\n  const intervalSize = intervalEnd - intervalIni + 1;\n  const intensity = Math.floor(intervalSize / minDistributionDistance);\n\n  let x = 0;\n  let continuosDistributionValue =\n    Math.round(((intervalSize - 1) / (intensity - 1)) * x) + intervalIni;\n\n  while (continuosDistributionValue <= intervalEnd) {\n    result.push(continuosDistributionValue);\n    x++;\n    continuosDistributionValue =\n      Math.round(((intervalSize - 1) / (intensity - 1)) * x) + intervalIni;\n  }\n\n  return result;\n}\n\n/**\n * Interpolates a segment of points from iniIndex until endIndex.\n * The process of interpolation considers the param knotsRatioPercentage as being the percentage of points from Segment that are likely to be considered.\n * By default it uses b-spline algorithm.\n * The result total of points is equal to original points.\n */\nexport default function interpolateSegmentPoints(\n  points: (Types.Point2 | Types.Point3)[],\n  iniIndex: number,\n  endIndex: number,\n  knotsRatioPercentage: number\n): (Types.Point2 | Types.Point3)[] {\n  const segmentSize = endIndex - iniIndex + 1;\n\n  const amountOfKnots =\n    Math.floor((knotsRatioPercentage / 100) * segmentSize) ?? 1;\n  const minKnotDistance = Math.floor(segmentSize / amountOfKnots) ?? 1;\n\n  if (isNaN(segmentSize) || !segmentSize || !minKnotDistance) {\n    return points;\n  }\n\n  // segment should be at least the double of desired minKnot distance. This will ensure at there will enough knots to interpolate.\n  if (segmentSize / minKnotDistance < 2) {\n    return points;\n  }\n\n  const interpolationIniIndex = Math.max(0, iniIndex);\n  const interpolationEndIndex = Math.min(points.length - 1, endIndex);\n  const segmentPointsUnchangedBeg = points.slice(0, interpolationIniIndex);\n\n  const segmentPointsUnchangedEnd = points.slice(\n    interpolationEndIndex + 1,\n    points.length\n  );\n\n  const knotsIndexes = getContinuousUniformDistributionValues(minKnotDistance, [\n    interpolationIniIndex,\n    interpolationEndIndex,\n  ]);\n\n  const interpolatedPoints = interpolatePoints(points, knotsIndexes);\n\n  return [\n    ...segmentPointsUnchangedBeg,\n    ...interpolatedPoints,\n    ...segmentPointsUnchangedEnd,\n  ];\n}\n","import {\n  interpolateBasis as d3InterpolateBasis,\n  quantize as d3Quantize,\n} from 'd3-interpolate';\nimport { zip as d3Zip } from 'd3-array';\nimport { Types } from '@cornerstonejs/core';\n\nfunction isPoints3D(\n  points: (Types.Point2 | Types.Point3)[]\n): points is Types.Point3[] {\n  return (points as Types.Point3[])[0]?.length === 3;\n}\n\n/**\n * Returns an array of the originalPoints length containing the interpolated data.\n * It interpolates a set of points indexed by knotsIndexes.\n * That is, it DISCARDS all points except those in knotsIndexes. Then, a new set of points is created by using a b-spline on the remaining points, in order to re-create a new set of points.\n */\nexport function interpolatePoints(\n  originalPoints: (Types.Point2 | Types.Point3)[],\n  knotsIndexes: number[]\n): (Types.Point2 | Types.Point3)[] {\n  if (\n    !knotsIndexes ||\n    knotsIndexes.length === 0 ||\n    knotsIndexes.length === originalPoints.length\n  ) {\n    return originalPoints;\n  }\n\n  const n = knotsIndexes[knotsIndexes.length - 1] - knotsIndexes[0] + 1;\n  const xInterpolator = d3InterpolateBasis(\n    knotsIndexes.map((k) => originalPoints[k][0])\n  );\n  const yInterpolator = d3InterpolateBasis(\n    knotsIndexes.map((k) => originalPoints[k][1])\n  );\n\n  if (isPoints3D(originalPoints)) {\n    const zInterpolator = d3InterpolateBasis(\n      knotsIndexes.map((k) => originalPoints[k][2])\n    );\n    return <Types.Point3[]>(\n      d3Zip(\n        d3Quantize(xInterpolator, n),\n        d3Quantize(yInterpolator, n),\n        d3Quantize(zInterpolator, n)\n      )\n    );\n  } else {\n    return <Types.Point2[]>(\n      d3Zip(d3Quantize(xInterpolator, n), d3Quantize(yInterpolator, n))\n    );\n  }\n}\n","import { Types } from '@cornerstonejs/core';\nimport { point } from '../math';\nimport interpolateSegmentPoints from './interpolation/interpolateSegmentPoints';\n\nexport function shouldInterpolate(configuration: Record<any, any>): boolean {\n  return (\n    configuration?.interpolation?.interpolateOnAdd === true ||\n    configuration?.interpolation?.interpolateOnEdit === true\n  );\n}\n\n/**\n * Tells whether two points are equal by proximity or not as far as interpolation goes.\n */\nfunction isEqualByProximity(pointA, pointB) {\n  return point.distanceToPoint(pointA, pointB) < 0.001;\n}\n\n/**\n * Tells whether two points are strictly equal or not as far as interpolation goes.\n */\nfunction isEqual(pointA, pointB) {\n  return point.distanceToPoint(pointA, pointB) === 0;\n}\n\n/**\n * Finds the indexes of points list and otherPoints list that points are identical.\n */\nfunction findMatchIndexes(\n  points: Types.Point2[],\n  otherPoints: Types.Point2[]\n): [number, number] | undefined {\n  for (let i = 0; i < points.length; i++) {\n    for (let j = 0; j < otherPoints.length; j++) {\n      if (isEqual(points[i], otherPoints[j])) {\n        return [i, j];\n      }\n    }\n  }\n}\n/**\n * Returns the following index value (on circular basis) of index param on the given direction.\n */\nfunction followingIndex(\n  index: number,\n  size: number,\n  direction: number\n): number {\n  return (index + size + direction) % size;\n}\n/**\n * Array of params to be used on circular find next index.\n * The values respresent start index, indexDelimiter, list of points\n */\ntype ListParamsType = [number, number, Types.Point2[]];\n\n/**\n * Circular finding that returns the next index for two list where the criteria is met.\n *\n * It can compare two lists out of sync considering it does a circular iteration over them.\n *\n * @example\n *\n * ```\n * const pointsA = [[0, 1], [1, 3], [1, 5], [1,2]];\n * const pointsB = [[1, 2], [1, 5], [1, 3], [0,0]];\n * let firstParam = [0, 0, pointsA]\n * let secondParam = [1, 1, pointsB]\n * const criteria = (pointA, pointB) => areSamePosition(pointA, pointB)\n * const direction = 1;\n * let result = circularFindNextIndexBy(firstParam, secondParam, criteria,direction);\n * console.log(result);\n * // prints [1, 2]\n * // use this result and find again\n * firstParam = [result[0]+1, result[0], pointsA]\n * secondParam = [result[1]+1, result[1], pointsB]\n * result = circularFindNextIndexBy(firstParam, secondParam, criteria,direction);\n * * // prints [3, 0]\n *\n */\nfunction circularFindNextIndexBy(\n  listParams: ListParamsType,\n  otherListParams: ListParamsType,\n  criteria: (pointA: Types.Point2, pointB: Types.Point2) => boolean,\n  direction: number\n): [number | undefined, number | undefined] {\n  const [, indexDelimiter, points] = listParams;\n  const [, otherIndexDelimiter, otherPoints] = otherListParams;\n\n  const pointsLength = points.length;\n  const otherPointsLength = otherPoints.length;\n\n  let startIndex = listParams[0];\n  let otherStartIndex = otherListParams[0];\n\n  if (\n    !points[startIndex] ||\n    !otherPoints[otherStartIndex] ||\n    !points[indexDelimiter] ||\n    !otherPoints[otherIndexDelimiter]\n  ) {\n    return [undefined, undefined];\n  }\n\n  while (\n    startIndex !== indexDelimiter &&\n    otherStartIndex !== otherIndexDelimiter\n  ) {\n    if (criteria(otherPoints[otherStartIndex], points[startIndex])) {\n      return [startIndex, otherStartIndex];\n    }\n\n    startIndex = followingIndex(startIndex, pointsLength, direction);\n    otherStartIndex = followingIndex(\n      otherStartIndex,\n      otherPointsLength,\n      direction\n    );\n  }\n\n  return [undefined, undefined];\n}\n\n/**\n * Given two list it will find the first and last index of segment from points that diverges from previousPoints\n */\nfunction findChangedSegment(\n  points: Types.Point2[],\n  previousPoints: Types.Point2[]\n): [number, number] {\n  const [firstMatchIndex, previousFirstMatchIndex] =\n    findMatchIndexes(points, previousPoints) || [];\n\n  const toBeNotEqualCriteria = (pointA, pointB) =>\n    isEqualByProximity(pointA, pointB) === false;\n\n  const [lowDiffIndex, lowOtherDiffIndex] = circularFindNextIndexBy(\n    [\n      followingIndex(firstMatchIndex, points.length, 1),\n      firstMatchIndex,\n      points,\n    ],\n    [\n      followingIndex(previousFirstMatchIndex, previousPoints.length, 1),\n      previousFirstMatchIndex,\n      previousPoints,\n    ],\n    toBeNotEqualCriteria,\n    1\n  );\n\n  const [highIndex] = circularFindNextIndexBy(\n    [followingIndex(lowDiffIndex, points.length, -1), lowDiffIndex, points],\n    [\n      followingIndex(lowOtherDiffIndex, previousPoints.length, -1),\n      lowOtherDiffIndex,\n      previousPoints,\n    ],\n    toBeNotEqualCriteria,\n    -1\n  );\n\n  return [lowDiffIndex, highIndex];\n}\n\n/**\n * Interpolates the given list of points. In case there is a pointsOfReference the interpolation will occur only on segment disjoint of two list. I.e list of points from param points that are not on list of points from param pointsOfReference.\n */\nexport function getInterpolatedPoints(\n  configuration: Record<any, any>,\n  points: Types.Point2[],\n  pointsOfReference?: Types.Point2[]\n): Types.Point2[] {\n  const { interpolation } = configuration;\n\n  const result = points;\n\n  if (interpolation) {\n    const {\n      knotsRatioPercentageOnAdd,\n      knotsRatioPercentageOnEdit,\n      interpolateOnAdd = false,\n      interpolateOnEdit = false,\n    } = interpolation;\n\n    const knotsRatioPercentage = pointsOfReference\n      ? knotsRatioPercentageOnEdit\n      : knotsRatioPercentageOnAdd;\n    const isEnabled = pointsOfReference ? interpolateOnEdit : interpolateOnAdd;\n\n    if (isEnabled) {\n      // partial or total interpolation\n      const [changedIniIndex, changedEndIndex] = pointsOfReference\n        ? findChangedSegment(points, pointsOfReference)\n        : [0, points.length - 1];\n\n      // do not interpolate if there is no valid segment\n      if (!points[changedIniIndex] || !points[changedEndIndex]) {\n        return points;\n      }\n\n      return <Types.Point2[]>(\n        interpolateSegmentPoints(\n          points,\n          changedIniIndex,\n          changedEndIndex,\n          knotsRatioPercentage\n        )\n      );\n    }\n  }\n\n  return result;\n}\n","import type { Types } from '@cornerstonejs/core';\nimport { PlanarFreehandROIAnnotation } from '../../../types/ToolSpecificAnnotationTypes';\nimport { vec2 } from 'gl-matrix';\n\n/**\n * Finds the length of the longest line from the midpoint of the line\n * that joins the start and end of the open contour, to the surface of the\n * open contour.\n */\nexport default function findOpenUShapedContourVectorToPeak(\n  canvasPoints: Types.Point2[],\n  viewport: Types.IStackViewport | Types.IVolumeViewport\n): Types.Point3[] {\n  // Find chord from first to last point.\n  const first = canvasPoints[0];\n  const last = canvasPoints[canvasPoints.length - 1];\n\n  const firstToLastUnitVector = vec2.create();\n\n  vec2.set(firstToLastUnitVector, last[0] - first[0], last[1] - first[1]);\n  vec2.normalize(firstToLastUnitVector, firstToLastUnitVector);\n\n  // Get the two possible normal vector to this vector\n  // Note: Use the identity that the perpendicular line must have a gradient of\n  // 1 / gradient of the line.\n\n  const normalVector1 = vec2.create();\n  const normalVector2 = vec2.create();\n\n  vec2.set(normalVector1, -firstToLastUnitVector[1], firstToLastUnitVector[0]);\n  vec2.set(normalVector2, firstToLastUnitVector[1], -firstToLastUnitVector[0]);\n\n  // Find the center of the chord.\n  const centerOfFirstToLast: Types.Point2 = [\n    (first[0] + last[0]) / 2,\n    (first[1] + last[1]) / 2,\n  ];\n\n  // Get furthest point.\n\n  const furthest = {\n    dist: 0,\n    index: null,\n  };\n\n  for (let i = 0; i < canvasPoints.length; i++) {\n    const canvasPoint = canvasPoints[i];\n\n    const distance = vec2.dist(canvasPoint, <vec2>centerOfFirstToLast);\n\n    if (distance > furthest.dist) {\n      furthest.dist = distance;\n      furthest.index = i;\n    }\n  }\n\n  const toFurthest: [Types.Point2, Types.Point2] = [\n    canvasPoints[furthest.index],\n    centerOfFirstToLast,\n  ];\n  const toFurthestWorld = toFurthest.map(viewport.canvasToWorld);\n\n  return toFurthestWorld;\n}\n\nexport function findOpenUShapedContourVectorToPeakOnRender(\n  enabledElement: Types.IEnabledElement,\n  annotation: PlanarFreehandROIAnnotation\n): Types.Point3[] {\n  const { viewport } = enabledElement;\n  const canvasPoints = annotation.data.polyline.map(viewport.worldToCanvas);\n\n  return findOpenUShapedContourVectorToPeak(canvasPoints, viewport);\n}\n","import { getEnabledElement } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport {\n  resetElementCursor,\n  hideElementCursor,\n} from '../../../cursors/elementCursor';\nimport { Events } from '../../../enums';\nimport { EventTypes } from '../../../types';\nimport { state } from '../../../store';\nimport { vec3 } from 'gl-matrix';\nimport {\n  shouldInterpolate,\n  getInterpolatedPoints,\n} from '../../../utilities/planarFreehandROITool/interpolatePoints';\nimport triggerAnnotationRenderForViewportIds from '../../../utilities/triggerAnnotationRenderForViewportIds';\nimport { PlanarFreehandROIAnnotation } from '../../../types/ToolSpecificAnnotationTypes';\nimport findOpenUShapedContourVectorToPeak from './findOpenUShapedContourVectorToPeak';\nimport { polyline } from '../../../utilities/math';\nimport { removeAnnotation } from '../../../stateManagement/annotation/annotationState';\n\nconst {\n  addCanvasPointsToArray,\n  pointsAreWithinCloseContourProximity,\n  getFirstIntersectionWithPolyline,\n  getSubPixelSpacingAndXYDirections,\n} = polyline;\n\n/**\n * Activates the contour drawing event loop.\n */\nfunction activateDraw(\n  evt: EventTypes.InteractionEventType,\n  annotation: PlanarFreehandROIAnnotation,\n  viewportIdsToRender: string[]\n): void {\n  this.isDrawing = true;\n\n  const eventDetail = evt.detail;\n  const { currentPoints, element } = eventDetail;\n  const canvasPos = currentPoints.canvas;\n  const enabledElement = getEnabledElement(element);\n  const { viewport } = enabledElement;\n\n  const { spacing, xDir, yDir } = getSubPixelSpacingAndXYDirections(\n    viewport,\n    this.configuration.subPixelResolution\n  );\n\n  this.drawData = {\n    canvasPoints: [canvasPos],\n    polylineIndex: 0,\n  };\n\n  this.commonData = {\n    annotation,\n    viewportIdsToRender,\n    spacing,\n    xDir,\n    yDir,\n    movingTextBox: false,\n  };\n\n  state.isInteractingWithTool = true;\n\n  element.addEventListener(Events.MOUSE_UP, this.mouseUpDrawCallback);\n  element.addEventListener(Events.MOUSE_DRAG, this.mouseDragDrawCallback);\n  element.addEventListener(Events.MOUSE_CLICK, this.mouseUpDrawCallback);\n  element.addEventListener(Events.TOUCH_END, this.mouseUpDrawCallback);\n  element.addEventListener(Events.TOUCH_DRAG, this.mouseDragDrawCallback);\n  element.addEventListener(Events.TOUCH_TAP, this.mouseUpDrawCallback);\n\n  hideElementCursor(element);\n}\n/**\n * Dectivates and cleans up the contour drawing event loop.\n */\nfunction deactivateDraw(element: HTMLDivElement): void {\n  state.isInteractingWithTool = false;\n\n  element.removeEventListener(Events.MOUSE_UP, this.mouseUpDrawCallback);\n  element.removeEventListener(Events.MOUSE_DRAG, this.mouseDragDrawCallback);\n  element.removeEventListener(Events.MOUSE_CLICK, this.mouseUpDrawCallback);\n  element.removeEventListener(Events.TOUCH_END, this.mouseUpDrawCallback);\n  element.removeEventListener(Events.TOUCH_DRAG, this.mouseDragDrawCallback);\n  element.removeEventListener(Events.TOUCH_TAP, this.mouseUpDrawCallback);\n\n  resetElementCursor(element);\n}\n\n/**\n * Adds points to a set of preview canvas points of the contour being created.\n * Checks if crossing of lines means early completion and editing needs to be started.\n */\nfunction mouseDragDrawCallback(evt: EventTypes.InteractionEventType): void {\n  const eventDetail = evt.detail;\n  const { currentPoints, element } = eventDetail;\n  const worldPos = currentPoints.world;\n  const canvasPos = currentPoints.canvas;\n  const enabledElement = getEnabledElement(element);\n  const { renderingEngine, viewport } = enabledElement;\n\n  const {\n    annotation,\n    viewportIdsToRender,\n    xDir,\n    yDir,\n    spacing,\n    movingTextBox,\n  } = this.commonData;\n  const { polylineIndex, canvasPoints } = this.drawData;\n\n  const lastCanvasPoint = canvasPoints[canvasPoints.length - 1];\n  const lastWorldPoint = viewport.canvasToWorld(lastCanvasPoint);\n\n  const worldPosDiff = vec3.create();\n\n  vec3.subtract(worldPosDiff, worldPos, lastWorldPoint);\n\n  const xDist = Math.abs(vec3.dot(worldPosDiff, xDir));\n  const yDist = Math.abs(vec3.dot(worldPosDiff, yDir));\n\n  // Check that we have moved at least one voxel in each direction.\n  if (xDist <= spacing[0] && yDist <= spacing[1]) {\n    // Haven't changed world point enough, don't render\n    return;\n  }\n\n  if (movingTextBox) {\n    this.isDrawing = false;\n\n    // Drag mode - Move the text boxes world position\n    const { deltaPoints } = eventDetail as EventTypes.MouseDragEventDetail;\n    const worldPosDelta = deltaPoints.world;\n\n    const { textBox } = annotation.data.handles;\n    const { worldPosition } = textBox;\n\n    worldPosition[0] += worldPosDelta[0];\n    worldPosition[1] += worldPosDelta[1];\n    worldPosition[2] += worldPosDelta[2];\n\n    textBox.hasMoved = true;\n  } else {\n    const crossingIndex = this.findCrossingIndexDuringCreate(evt);\n\n    if (crossingIndex !== undefined) {\n      // If we have crossed our drawing line, create a closed contour and then\n      // start an edit.\n      this.applyCreateOnCross(evt, crossingIndex);\n    } else {\n      const numPointsAdded = addCanvasPointsToArray(\n        element,\n        canvasPoints,\n        canvasPos,\n        this.commonData\n      );\n\n      this.drawData.polylineIndex = polylineIndex + numPointsAdded;\n    }\n  }\n\n  triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n}\n\n/**\n * Completes the contour on mouse up. If the `allowOpenContours` configuration\n * option is `true`, checks if we should create an open or closed contour.\n * If the `allowOpenContours` configuration option is `false`, always creates a\n * closed contour.\n */\nfunction mouseUpDrawCallback(evt: EventTypes.InteractionEventType): void {\n  const { allowOpenContours } = this.configuration;\n  const { canvasPoints } = this.drawData;\n  const firstPoint = canvasPoints[0];\n  const lastPoint = canvasPoints[canvasPoints.length - 1];\n  const eventDetail = evt.detail;\n  const { element } = eventDetail;\n\n  if (\n    allowOpenContours &&\n    !pointsAreWithinCloseContourProximity(\n      firstPoint,\n      lastPoint,\n      this.configuration.closeContourProximity\n    )\n  ) {\n    this.completeDrawOpenContour(element);\n  } else {\n    this.completeDrawClosedContour(element);\n  }\n}\n\n/**\n * Completes the contour being drawn, creating a closed contour annotation. It will return true if contour is completed or false in case contour drawing is halted.\n */\nfunction completeDrawClosedContour(element: HTMLDivElement): boolean {\n  this.removeCrossedLinesOnCompleteDraw();\n  const { canvasPoints } = this.drawData;\n\n  // check and halt if necessary the drawing process, last chance to complete drawing and fire events.\n  if (this.haltDrawing(element, canvasPoints)) {\n    return false;\n  }\n\n  const { annotation, viewportIdsToRender } = this.commonData;\n  const enabledElement = getEnabledElement(element);\n  const { viewport, renderingEngine } = enabledElement;\n\n  // Convert annotation to world coordinates\n  addCanvasPointsToArray(\n    element,\n    canvasPoints,\n    canvasPoints[0],\n    this.commonData\n  );\n  // Remove last point which will be a duplicate now.\n  canvasPoints.pop();\n\n  const updatedPoints = shouldInterpolate(this.configuration)\n    ? getInterpolatedPoints(this.configuration, canvasPoints)\n    : canvasPoints;\n\n  // Note: -> This is pretty expensive and may not scale well with hundreds of\n  // contours. A future optimisation if we use this for segmentation is to re-do\n  // this rendering with the GPU rather than SVG.\n  const worldPoints = updatedPoints.map((canvasPoint) =>\n    viewport.canvasToWorld(canvasPoint)\n  );\n\n  annotation.data.polyline = worldPoints;\n  annotation.data.isOpenContour = false;\n  const { textBox } = annotation.data.handles;\n\n  if (!textBox.hasMoved) {\n    this.triggerAnnotationCompleted(annotation);\n  }\n\n  this.isDrawing = false;\n  this.drawData = undefined;\n  this.commonData = undefined;\n\n  triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n  this.deactivateDraw(element);\n\n  return true;\n}\n\n/**\n * If lines are crossed during the draw loop, remove the points drawn over the\n * crossing.\n */\nfunction removeCrossedLinesOnCompleteDraw(): void {\n  const { canvasPoints } = this.drawData;\n  const numPoints = canvasPoints.length;\n\n  const endToStart = [canvasPoints[0], canvasPoints[numPoints - 1]];\n  const canvasPointsMinusEnds = canvasPoints.slice(0, -1).slice(1);\n\n  const lineSegment = getFirstIntersectionWithPolyline(\n    canvasPointsMinusEnds,\n    endToStart[0],\n    endToStart[1],\n    false\n  );\n\n  if (lineSegment) {\n    const indexToRemoveUpTo = lineSegment[1];\n\n    this.drawData.canvasPoints = canvasPoints.splice(0, indexToRemoveUpTo);\n  }\n}\n\n/**\n * Completes the contour being drawn, creating an open contour annotation. It will return true if contour is completed or false in case contour drawing is halted.\n */\nfunction completeDrawOpenContour(element: HTMLDivElement): boolean {\n  const { canvasPoints } = this.drawData;\n\n  // check and halt if necessary the drawing process, last chance to complete drawing and fire events.\n  if (this.haltDrawing(element, canvasPoints)) {\n    return false;\n  }\n\n  const { annotation, viewportIdsToRender } = this.commonData;\n  const enabledElement = getEnabledElement(element);\n  const { viewport, renderingEngine } = enabledElement;\n\n  const updatedPoints = shouldInterpolate(this.configuration)\n    ? getInterpolatedPoints(this.configuration, canvasPoints)\n    : canvasPoints;\n\n  // Note: -> This is pretty expensive and may not scale well with hundreds of\n  // contours. A future optimisation if we use this for segmentation is to re-do\n  // this rendering with the GPU rather than SVG.\n  const worldPoints = updatedPoints.map((canvasPoint) =>\n    viewport.canvasToWorld(canvasPoint)\n  );\n\n  annotation.data.polyline = worldPoints;\n  annotation.data.isOpenContour = true;\n  const { textBox } = annotation.data.handles;\n\n  // Add the first and last points to the list of handles. These means they\n  // will render handles on mouse hover.\n  annotation.data.handles.points = [\n    worldPoints[0],\n    worldPoints[worldPoints.length - 1],\n  ];\n\n  // If the annotation is an open U-shaped annotation, find the annotation vector.\n  if (annotation.data.isOpenUShapeContour) {\n    annotation.data.openUShapeContourVectorToPeak =\n      findOpenUShapedContourVectorToPeak(canvasPoints, viewport);\n  }\n\n  if (!textBox.hasMoved) {\n    this.triggerAnnotationCompleted(annotation);\n  }\n\n  this.isDrawing = false;\n  this.drawData = undefined;\n  this.commonData = undefined;\n\n  triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n  this.deactivateDraw(element);\n\n  return true;\n}\n\n/**\n * Searches for a crossing of the contour during create. If found, returns the\n * index of the point just before the lines cross.\n */\nfunction findCrossingIndexDuringCreate(\n  evt: EventTypes.InteractionEventType\n): number | undefined {\n  // Note as we super sample the added points, we need to check the whole last mouse move, not the points\n  const eventDetail = evt.detail;\n  const { currentPoints, lastPoints } = eventDetail;\n  const canvasPos = currentPoints.canvas;\n  const lastCanvasPoint = lastPoints.canvas;\n\n  const { canvasPoints } = this.drawData;\n  const pointsLessLastOne = canvasPoints.slice(0, -1);\n\n  const lineSegment = getFirstIntersectionWithPolyline(\n    pointsLessLastOne,\n    canvasPos,\n    lastCanvasPoint,\n    false\n  );\n\n  if (lineSegment === undefined) {\n    return;\n  }\n\n  const crossingIndex = lineSegment[0];\n\n  return crossingIndex;\n}\n\n/**\n * On crossing of the draw line, create a closed contour, and then start an edit\n * since this occurs during a mouse drag.\n */\nfunction applyCreateOnCross(\n  evt: EventTypes.InteractionEventType,\n  crossingIndex: number\n): void {\n  const eventDetail = evt.detail;\n  const { element } = eventDetail;\n  const { canvasPoints } = this.drawData;\n  const { annotation, viewportIdsToRender } = this.commonData;\n\n  // Add points between the end point and crossing point\n  addCanvasPointsToArray(\n    element,\n    canvasPoints,\n    canvasPoints[crossingIndex],\n    this.commonData\n  );\n  // Remove last point which will be a duplicate now.\n  canvasPoints.pop();\n\n  // Remove points up to just before the crossing index\n  for (let i = 0; i < crossingIndex; i++) {\n    canvasPoints.shift();\n  }\n\n  if (this.completeDrawClosedContour(element)) {\n    // pos complete operation\n    this.activateClosedContourEdit(evt, annotation, viewportIdsToRender);\n  }\n}\n\n/**\n * Completes the contour on a cancel method call during the draw loop.\n */\nfunction cancelDrawing(element: HTMLElement) {\n  const { allowOpenContours } = this.configuration;\n  const { canvasPoints } = this.drawData;\n  const firstPoint = canvasPoints[0];\n  const lastPoint = canvasPoints[canvasPoints.length - 1];\n\n  if (\n    allowOpenContours &&\n    !pointsAreWithinCloseContourProximity(\n      firstPoint,\n      lastPoint,\n      this.configuration.closeContourProximity\n    )\n  ) {\n    this.completeDrawOpenContour(element);\n  } else {\n    this.completeDrawClosedContour(element);\n  }\n}\n\n/**\n * Tell whether a drawing should be halted or not. It will be true when canvas points is less than the minimum required.\n */\nfunction shouldHaltDrawing(\n  canvasPoints: any,\n  subPixelResolution: number\n): boolean {\n  const minPoints = Math.max(\n    /**\n     * The number of points to span 3 voxels in length, this is a realistically\n     * smallest open contour one could reasonably define (2 voxels should probably be a line).\n     */\n    subPixelResolution * 3,\n    /**\n     * Minimum 3 points, there are other annotations for one point (probe)\n     * or 2 points (line), so this comes only from a mistake in practice.\n     */\n    3\n  );\n  return canvasPoints.length < minPoints;\n}\n\n/**\n * Check and halt a drawing for a given event. It returns true in case drawing is halted, otherswise false.\n */\nfunction haltDrawing(element: HTMLDivElement, canvasPoints: any): boolean {\n  const { subPixelResolution } = this.configuration;\n\n  if (shouldHaltDrawing(canvasPoints, subPixelResolution)) {\n    // Remove annotation instead of completing it.\n    const { annotation, viewportIdsToRender } = this.commonData;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    removeAnnotation(annotation.annotationUID);\n\n    this.isDrawing = false;\n    this.drawData = undefined;\n    this.commonData = undefined;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    this.deactivateDraw(element);\n\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Registers the contour drawing loop to the tool instance.\n */\nfunction registerDrawLoop(toolInstance): void {\n  toolInstance.activateDraw = activateDraw.bind(toolInstance);\n  toolInstance.deactivateDraw = deactivateDraw.bind(toolInstance);\n\n  toolInstance.applyCreateOnCross = applyCreateOnCross.bind(toolInstance);\n  toolInstance.findCrossingIndexDuringCreate =\n    findCrossingIndexDuringCreate.bind(toolInstance);\n  toolInstance.completeDrawOpenContour =\n    completeDrawOpenContour.bind(toolInstance);\n  toolInstance.removeCrossedLinesOnCompleteDraw =\n    removeCrossedLinesOnCompleteDraw.bind(toolInstance);\n  toolInstance.mouseDragDrawCallback = mouseDragDrawCallback.bind(toolInstance);\n  toolInstance.mouseUpDrawCallback = mouseUpDrawCallback.bind(toolInstance);\n  toolInstance.completeDrawClosedContour =\n    completeDrawClosedContour.bind(toolInstance);\n  toolInstance.cancelDrawing = cancelDrawing.bind(toolInstance);\n  toolInstance.haltDrawing = haltDrawing.bind(toolInstance);\n}\n\nexport default registerDrawLoop;\n","import { Types } from '@cornerstonejs/core';\nimport { vec2 } from 'gl-matrix';\nimport { polyline } from '../../../utilities/math';\nimport { EventTypes } from '../../../types';\n\nconst { addCanvasPointsToArray, getFirstIntersectionWithPolyline } = polyline;\n\n/**\n * Check if the `editCanvasPoints` have crossed the `prevCanvasPoints` during\n * an edit.\n *\n * @privateRemarks The following tricks are required to make the UX smooth and\n * the editing not very picky on exactly where you click:\n * - If we don't cross after 2 points, but projecting the line backwards the\n * proximity distance means we cross, extend the line back.\n * - If we travel the full proximity in canvas points but don't cross a line, we\n * are likely drawing along the line, which is intuitive to the user. At this point\n * snap the start of the edit to the closest place on the `prevCanvasPoints`,\n * so that the edit can be executed in-line.\n */\nfunction checkForFirstCrossing(\n  evt: EventTypes.InteractionEventType,\n  isClosedContour: boolean\n): void {\n  const eventDetail = evt.detail;\n  const { element, currentPoints, lastPoints } = eventDetail;\n  const canvasPos = currentPoints.canvas;\n  const lastCanvasPoint = lastPoints.canvas;\n  const { editCanvasPoints, prevCanvasPoints } = this.editData;\n\n  const crossedLineSegment = getFirstIntersectionWithPolyline(\n    prevCanvasPoints,\n    canvasPos,\n    lastCanvasPoint,\n    isClosedContour\n  );\n\n  if (crossedLineSegment) {\n    this.editData.startCrossingIndex = crossedLineSegment[0];\n\n    // On the first crossing, remove the first lines prior to the crossing\n    this.removePointsUpUntilFirstCrossing(isClosedContour);\n    // prevent continue if there are not the minimum of points for this op.\n  } else if (prevCanvasPoints.length >= 2) {\n    if (\n      editCanvasPoints.length >\n      this.configuration.checkCanvasEditFallbackProximity\n    ) {\n      // At this point, likely we are drawing along the line, we are past the proximity for grabbing.\n      // Search for nearest line segment to the start of the edit.\n      // Set the crossing index to the lower index of the segment.\n\n      const firstEditCanvasPoint = editCanvasPoints[0];\n\n      const distanceIndexPairs = [];\n\n      for (let i = 0; i < prevCanvasPoints.length; i++) {\n        const prevCanvasPoint = prevCanvasPoints[i];\n        const distance = vec2.distance(prevCanvasPoint, firstEditCanvasPoint);\n\n        distanceIndexPairs.push({ distance, index: i });\n      }\n\n      distanceIndexPairs.sort((a, b) => a.distance - b.distance);\n\n      const twoClosestDistanceIndexPairs = [\n        distanceIndexPairs[0],\n        distanceIndexPairs[1],\n      ];\n\n      const lowestIndex = Math.min(\n        twoClosestDistanceIndexPairs[0].index,\n        twoClosestDistanceIndexPairs[1].index\n      );\n\n      this.editData.startCrossingIndex = lowestIndex;\n    } else {\n      // Check if extending a line back 6 (Proximity) canvas pixels would cross a line.\n\n      // Extend point back 6 canvas pixels from first point.\n      const dir = vec2.create();\n\n      vec2.subtract(dir, editCanvasPoints[1], editCanvasPoints[0]);\n      vec2.normalize(dir, dir);\n\n      const proximity = 6;\n\n      const extendedPoint: Types.Point2 = [\n        editCanvasPoints[0][0] - dir[0] * proximity,\n        editCanvasPoints[0][1] - dir[1] * proximity,\n      ];\n\n      const crossedLineSegmentFromExtendedPoint =\n        getFirstIntersectionWithPolyline(\n          prevCanvasPoints,\n          extendedPoint,\n          editCanvasPoints[0],\n          isClosedContour\n        );\n\n      if (crossedLineSegmentFromExtendedPoint) {\n        // Add points.\n        const pointsToPrepend = [extendedPoint];\n\n        addCanvasPointsToArray(\n          element,\n          pointsToPrepend,\n          editCanvasPoints[0],\n          this.commonData\n        );\n\n        editCanvasPoints.unshift(...pointsToPrepend);\n\n        this.removePointsUpUntilFirstCrossing(isClosedContour);\n\n        this.editData.editIndex = editCanvasPoints.length - 1;\n        this.editData.startCrossingIndex =\n          crossedLineSegmentFromExtendedPoint[0];\n      }\n    }\n  }\n}\n\n/**\n * Removes the points from the `editCanvasPoints` up until the first crossing of\n * the `prevCanvasPoints`. This is so we can just insert this line segment\n * into the contour.\n */\nfunction removePointsUpUntilFirstCrossing(isClosedContour: boolean): void {\n  const { editCanvasPoints, prevCanvasPoints } = this.editData;\n  let numPointsToRemove = 0;\n\n  for (let i = 0; i < editCanvasPoints.length - 1; i++) {\n    const firstLine = [editCanvasPoints[i], editCanvasPoints[i + 1]];\n\n    const didCrossLine = !!getFirstIntersectionWithPolyline(\n      prevCanvasPoints,\n      firstLine[0],\n      firstLine[1],\n      isClosedContour\n    );\n\n    // Remove last element\n    numPointsToRemove++;\n\n    if (didCrossLine) {\n      break;\n    }\n  }\n\n  // Remove the points\n  editCanvasPoints.splice(0, numPointsToRemove);\n\n  this.editData.editIndex = editCanvasPoints.length - 1;\n}\n\n/**\n * Returns `true` if the `editCanvasPoints` crosses the `prevCanvasPoints` a\n * second time.\n */\nfunction checkForSecondCrossing(\n  evt: EventTypes.InteractionEventType,\n  isClosedContour: boolean\n): boolean {\n  const eventDetail = evt.detail;\n  const { currentPoints, lastPoints } = eventDetail;\n  const canvasPos = currentPoints.canvas;\n  const lastCanvasPoint = lastPoints.canvas;\n  const { prevCanvasPoints } = this.editData;\n\n  // Note this method is looking for the first corssing found of\n  // *the lines given* to it. The parameters given to it are specified to search\n  // for the second crossing of the prevCanvasPoints, by checking if the last\n  // mouse drag crossed these. This class method is only called if the edit loop\n  // has already has a crossing earlier in the edit.\n  const crossedLineSegment = getFirstIntersectionWithPolyline(\n    prevCanvasPoints,\n    canvasPos,\n    lastCanvasPoint,\n    isClosedContour\n  );\n\n  if (!crossedLineSegment) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Removes the points from the `editCanvasPoints` after the second crossing of\n * the `prevCanvasPoints`. This is so we can just insert this line segment\n * into the contour.\n */\nfunction removePointsAfterSecondCrossing(isClosedContour: boolean): void {\n  const { prevCanvasPoints, editCanvasPoints } = this.editData;\n\n  // Remove points after the crossing\n  for (let i = editCanvasPoints.length - 1; i > 0; i--) {\n    const lastLine = [editCanvasPoints[i], editCanvasPoints[i - 1]];\n\n    const didCrossLine = !!getFirstIntersectionWithPolyline(\n      prevCanvasPoints,\n      lastLine[0],\n      lastLine[1],\n      isClosedContour\n    );\n\n    // Remove last element\n    editCanvasPoints.pop();\n\n    if (didCrossLine) {\n      break;\n    }\n  }\n}\n\n/**\n * During an edit, finds the index on the `prevCanvasPoints` that the\n * `editCanvasPoints` should snap to to create one continuous contour.\n *\n * Returns the index, but returns -1 if there is no index on the\n * `prevCanvasPoints` that can be snapped to with causing a crossing of the\n * `editCanvasPoints`.\n */\nfunction findSnapIndex(): number {\n  const { editCanvasPoints, prevCanvasPoints, startCrossingIndex } =\n    this.editData;\n\n  if (\n    startCrossingIndex === undefined // Haven't crossed line yet\n  ) {\n    return;\n  }\n\n  const lastEditCanvasPoint = editCanvasPoints[editCanvasPoints.length - 1];\n\n  const distanceIndexPairs = [];\n\n  for (let i = 0; i < prevCanvasPoints.length; i++) {\n    const prevCanvasPoint = prevCanvasPoints[i];\n    const distance = vec2.distance(prevCanvasPoint, lastEditCanvasPoint);\n\n    distanceIndexPairs.push({ distance, index: i });\n  }\n\n  distanceIndexPairs.sort((a, b) => a.distance - b.distance);\n\n  // Search through from shortest distance and check which snap line doesn't\n  // Cross the edit line, in most cases the snap index will just be the first one.\n  const editCanvasPointsLessLastOne = editCanvasPoints.slice(0, -1);\n\n  for (let i = 0; i < distanceIndexPairs.length; i++) {\n    const { index } = distanceIndexPairs[i];\n    const snapCanvasPosition = prevCanvasPoints[index];\n    const lastEditCanvasPoint = editCanvasPoints[editCanvasPoints.length - 1];\n\n    const crossedLineSegment = getFirstIntersectionWithPolyline(\n      editCanvasPointsLessLastOne,\n      snapCanvasPosition,\n      lastEditCanvasPoint,\n      false // The edit line is not a closed contour\n    );\n\n    if (!crossedLineSegment) {\n      return index;\n    }\n  }\n\n  // If all of the lines caused a crossing, this means we should start a new edit.\n  // Use -1 to signify this.\n  return -1;\n}\n\n/**\n * Checks if the `editCanvasPoints` cross themselves. If they do, remove the\n * region after the cross index, these removes isolated \"island\" loops that the\n * user can draw which make closed contours no longer simple polygons, or open\n * contours twisted.\n */\nfunction checkAndRemoveCrossesOnEditLine(\n  evt: EventTypes.InteractionEventType\n): number | undefined {\n  const eventDetail = evt.detail;\n  const { currentPoints, lastPoints } = eventDetail;\n  const canvasPos = currentPoints.canvas;\n  const lastCanvasPoint = lastPoints.canvas;\n\n  const { editCanvasPoints } = this.editData;\n\n  const editCanvasPointsLessLastOne = editCanvasPoints.slice(0, -2);\n\n  const crossedLineSegment = getFirstIntersectionWithPolyline(\n    editCanvasPointsLessLastOne,\n    canvasPos,\n    lastCanvasPoint,\n    false\n  );\n\n  if (!crossedLineSegment) {\n    return;\n  }\n\n  // We have found a crossing, remove points after the crossing, cutting off\n  // the \"island\" loop drawn.\n\n  const editIndexCrossed = crossedLineSegment[0];\n  const numPointsToRemove = editCanvasPoints.length - editIndexCrossed;\n\n  for (let i = 0; i < numPointsToRemove; i++) {\n    editCanvasPoints.pop();\n  }\n}\n\n/**\n * Registers the contour drawing loop to the tool instance.\n */\nfunction registerEditLoopCommon(toolInstance) {\n  toolInstance.checkForFirstCrossing = checkForFirstCrossing.bind(toolInstance);\n  toolInstance.removePointsUpUntilFirstCrossing =\n    removePointsUpUntilFirstCrossing.bind(toolInstance);\n  toolInstance.checkForSecondCrossing =\n    checkForSecondCrossing.bind(toolInstance);\n  toolInstance.findSnapIndex = findSnapIndex.bind(toolInstance);\n  toolInstance.removePointsAfterSecondCrossing =\n    removePointsAfterSecondCrossing.bind(toolInstance);\n  toolInstance.checkAndRemoveCrossesOnEditLine =\n    checkAndRemoveCrossesOnEditLine.bind(toolInstance);\n}\n\nexport default registerEditLoopCommon;\n","import { getEnabledElement } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport { state } from '../../../store';\nimport { Events } from '../../../enums';\nimport {\n  resetElementCursor,\n  hideElementCursor,\n} from '../../../cursors/elementCursor';\nimport { EventTypes } from '../../../types';\nimport { polyline } from '../../../utilities/math';\nimport { vec3, vec2 } from 'gl-matrix';\nimport { PlanarFreehandROIAnnotation } from '../../../types/ToolSpecificAnnotationTypes';\nimport {\n  getInterpolatedPoints,\n  shouldInterpolate,\n} from '../../../utilities/planarFreehandROITool/interpolatePoints';\nimport triggerAnnotationRenderForViewportIds from '../../../utilities/triggerAnnotationRenderForViewportIds';\n\nconst {\n  getSubPixelSpacingAndXYDirections,\n  addCanvasPointsToArray,\n  calculateAreaOfPoints,\n} = polyline;\n\n/**\n * Activates the closed contour edit event loop.\n */\nfunction activateClosedContourEdit(\n  evt: EventTypes.InteractionEventType,\n  annotation: PlanarFreehandROIAnnotation,\n  viewportIdsToRender: string[]\n): void {\n  this.isEditingClosed = true;\n\n  const eventDetail = evt.detail;\n  const { currentPoints, element } = eventDetail;\n  const canvasPos = currentPoints.canvas;\n  const enabledElement = getEnabledElement(element);\n  const { viewport } = enabledElement;\n\n  const prevCanvasPoints = annotation.data.polyline.map(viewport.worldToCanvas);\n\n  const { spacing, xDir, yDir } = getSubPixelSpacingAndXYDirections(\n    viewport,\n    this.configuration.subPixelResolution\n  );\n\n  this.editData = {\n    prevCanvasPoints,\n    editCanvasPoints: [canvasPos],\n    startCrossingIndex: undefined,\n    editIndex: 0,\n  };\n\n  this.commonData = {\n    annotation,\n    viewportIdsToRender,\n    spacing,\n    xDir,\n    yDir,\n    movingTextBox: false,\n  };\n\n  state.isInteractingWithTool = true;\n\n  element.addEventListener(\n    Events.MOUSE_UP,\n    this.mouseUpClosedContourEditCallback\n  );\n  element.addEventListener(\n    Events.MOUSE_DRAG,\n    this.mouseDragClosedContourEditCallback\n  );\n  element.addEventListener(\n    Events.MOUSE_CLICK,\n    this.mouseUpClosedContourEditCallback\n  );\n\n  element.addEventListener(\n    Events.TOUCH_END,\n    this.mouseUpClosedContourEditCallback\n  );\n  element.addEventListener(\n    Events.TOUCH_DRAG,\n    this.mouseDragClosedContourEditCallback\n  );\n  element.addEventListener(\n    Events.TOUCH_TAP,\n    this.mouseUpClosedContourEditCallback\n  );\n\n  hideElementCursor(element);\n}\n\n/**\n * Dectivates and cleans up the closed contour edit event loop.\n */\nfunction deactivateClosedContourEdit(element: HTMLDivElement): void {\n  state.isInteractingWithTool = false;\n\n  element.removeEventListener(\n    Events.MOUSE_UP,\n    this.mouseUpClosedContourEditCallback\n  );\n  element.removeEventListener(\n    Events.MOUSE_DRAG,\n    this.mouseDragClosedContourEditCallback\n  );\n  element.removeEventListener(\n    Events.MOUSE_CLICK,\n    this.mouseUpClosedContourEditCallback\n  );\n\n  element.removeEventListener(\n    Events.TOUCH_END,\n    this.mouseUpClosedContourEditCallback\n  );\n  element.removeEventListener(\n    Events.TOUCH_DRAG,\n    this.mouseDragClosedContourEditCallback\n  );\n  element.removeEventListener(\n    Events.TOUCH_TAP,\n    this.mouseUpClosedContourEditCallback\n  );\n\n  resetElementCursor(element);\n}\n\n/**\n * Adds points to the edit line and calculates the preview of the edit to render.\n * Checks if an edit needs to be completed by crossing of lines, or by editing in\n * a way that requires a new edit to keep the contour a simple polygon.\n */\nfunction mouseDragClosedContourEditCallback(\n  evt: EventTypes.InteractionEventType\n): Types.Point2[] {\n  const eventDetail = evt.detail;\n  const { currentPoints, element } = eventDetail;\n  const worldPos = currentPoints.world;\n  const canvasPos = currentPoints.canvas;\n  const enabledElement = getEnabledElement(element);\n  const { renderingEngine, viewport } = enabledElement;\n\n  const { viewportIdsToRender, xDir, yDir, spacing } = this.commonData;\n  const { editIndex, editCanvasPoints, startCrossingIndex } = this.editData;\n\n  const lastCanvasPoint = editCanvasPoints[editCanvasPoints.length - 1];\n  const lastWorldPoint = viewport.canvasToWorld(lastCanvasPoint);\n\n  const worldPosDiff = vec3.create();\n\n  vec3.subtract(worldPosDiff, worldPos, lastWorldPoint);\n\n  const xDist = Math.abs(vec3.dot(worldPosDiff, xDir));\n  const yDist = Math.abs(vec3.dot(worldPosDiff, yDir));\n\n  // Check that we have moved at least one voxel in each direction.\n  if (xDist <= spacing[0] && yDist <= spacing[1]) {\n    // Haven't changed world point enough, don't render\n    return;\n  }\n\n  if (startCrossingIndex !== undefined) {\n    // Edge case: If the edit line itself crosses, remove part of that edit line so we don't\n    // Get isolated regions.\n    this.checkAndRemoveCrossesOnEditLine(evt);\n  }\n\n  const numPointsAdded = addCanvasPointsToArray(\n    element,\n    editCanvasPoints,\n    canvasPos,\n    this.commonData\n  );\n\n  const currentEditIndex = editIndex + numPointsAdded;\n\n  this.editData.editIndex = currentEditIndex;\n\n  if (startCrossingIndex === undefined && editCanvasPoints.length > 1) {\n    // If we haven't found the index of the first crossing yet,\n    // see if we can find it.\n    this.checkForFirstCrossing(evt, true);\n  }\n\n  this.editData.snapIndex = this.findSnapIndex();\n\n  if (this.editData.snapIndex === -1) {\n    // No point on the prevCanvasPoints for the editCanvasPoints line to\n    // snap to. Apply edit, and start a new edit as we've gone back on ourselves.\n    this.finishEditAndStartNewEdit(evt);\n    return;\n  }\n\n  this.editData.fusedCanvasPoints = this.fuseEditPointsWithClosedContour(evt);\n\n  if (\n    startCrossingIndex !== undefined &&\n    this.checkForSecondCrossing(evt, true)\n  ) {\n    // Crossed a second time, apply edit, and start a new edit from the crossing.\n    this.removePointsAfterSecondCrossing(true);\n    this.finishEditAndStartNewEdit(evt);\n  }\n\n  triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n}\n\n/**\n * Finish the current edit, and start a new one.\n */\nfunction finishEditAndStartNewEdit(evt: EventTypes.InteractionEventType): void {\n  const eventDetail = evt.detail;\n  const { element } = eventDetail;\n  const enabledElement = getEnabledElement(element);\n  const { viewport, renderingEngine } = enabledElement;\n\n  const { annotation, viewportIdsToRender } = this.commonData;\n  const { fusedCanvasPoints, editCanvasPoints } = this.editData;\n\n  const worldPoints = fusedCanvasPoints.map((canvasPoint) =>\n    viewport.canvasToWorld(canvasPoint)\n  );\n\n  annotation.data.polyline = worldPoints;\n  annotation.data.isOpenContour = false;\n\n  this.triggerAnnotationModified(annotation, enabledElement);\n\n  const lastEditCanvasPoint = editCanvasPoints.pop();\n\n  this.editData = {\n    prevCanvasPoints: fusedCanvasPoints,\n    editCanvasPoints: [lastEditCanvasPoint],\n    startCrossingIndex: undefined,\n    editIndex: 0,\n    snapIndex: undefined,\n  };\n\n  triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n}\n\n/**\n * This method combines the contour before editing (prevCanvasPoints) with\n * the current edit (editCanvasPoints), to produce a renderable preview of the\n * edit. Upon finishing the contour, the preview generated here is written back\n * into the contour state.\n *\n * @privateRemarks In this method we combine a few tricks to find the optimal\n * contour:\n * - As the contour is closed, our edit might stradle the boundary between the\n * last and 0th point of the contour, e.g. a small edit might go from e.g. index\n * 960 to index 4. We therefore calculate two possible contours, and find the\n * one with the biggest area, which will define the actual edit the user desired.\n * - As the contour and the edit can be drawn with different chiralities, we find if\n * the edit line aligns better with the intended cross points in its current order\n * or reversed. We do this by minimising the distance between its ends and the\n * intended crossing points.\n */\nfunction fuseEditPointsWithClosedContour(\n  evt: EventTypes.InteractionEventType\n): Types.Point2[] {\n  const { prevCanvasPoints, editCanvasPoints, startCrossingIndex, snapIndex } =\n    this.editData;\n\n  if (startCrossingIndex === undefined || snapIndex === undefined) {\n    return;\n  }\n\n  const eventDetail = evt.detail;\n  const { element } = eventDetail;\n\n  // Augment the editCanvasPoints array, between the end of edit and the snap index.\n  const augmentedEditCanvasPoints = [...editCanvasPoints];\n\n  addCanvasPointsToArray(\n    element,\n    augmentedEditCanvasPoints,\n    prevCanvasPoints[snapIndex],\n    this.commonData\n  );\n\n  if (augmentedEditCanvasPoints.length > editCanvasPoints.length) {\n    // If any points added, remove the last point, which will be a clone of the snapIndex\n    augmentedEditCanvasPoints.pop();\n  }\n\n  // Calculate the distances between the first and last edit points and the origin of the\n  // Contour with the snap point. These will be used to see which way around the edit array should be\n  // Placed within the preview.\n  let lowIndex;\n  let highIndex;\n\n  if (startCrossingIndex > snapIndex) {\n    lowIndex = snapIndex;\n    highIndex = startCrossingIndex;\n  } else {\n    lowIndex = startCrossingIndex;\n    highIndex = snapIndex;\n  }\n\n  const distanceBetweenLowAndFirstPoint = vec2.distance(\n    prevCanvasPoints[lowIndex],\n    augmentedEditCanvasPoints[0]\n  );\n\n  const distanceBetweenLowAndLastPoint = vec2.distance(\n    prevCanvasPoints[lowIndex],\n    augmentedEditCanvasPoints[augmentedEditCanvasPoints.length - 1]\n  );\n\n  const distanceBetweenHighAndFirstPoint = vec2.distance(\n    prevCanvasPoints[highIndex],\n    augmentedEditCanvasPoints[0]\n  );\n\n  const distanceBetweenHighAndLastPoint = vec2.distance(\n    prevCanvasPoints[highIndex],\n    augmentedEditCanvasPoints[augmentedEditCanvasPoints.length - 1]\n  );\n\n  // Generate two possible contours that could be intepreted from the edit:\n  //\n  // pointSet1 => 0 -> low -> edit -> high - max.\n  // pointSet2 => low -> high -> edit\n  //\n  // Depending on the placement of the edit and the origin, either of these could be the intended edit.\n  // We'll choose the one with the largest area, as edits are considered to be changes to the original area with\n  // A relative change of much less than unity.\n\n  // Point Set 1\n  const pointSet1 = [];\n\n  // Add points from the orignal contour origin up to the low index.\n  for (let i = 0; i < lowIndex; i++) {\n    const canvasPoint = prevCanvasPoints[i];\n\n    pointSet1.push([canvasPoint[0], canvasPoint[1]]);\n  }\n\n  // Check which orientation of the edit line minimizes the distance between the\n  // origial contour low/high points and the start/end nodes of the edit line.\n\n  let inPlaceDistance =\n    distanceBetweenLowAndFirstPoint + distanceBetweenHighAndLastPoint;\n\n  let reverseDistance =\n    distanceBetweenLowAndLastPoint + distanceBetweenHighAndFirstPoint;\n\n  if (inPlaceDistance < reverseDistance) {\n    for (let i = 0; i < augmentedEditCanvasPoints.length; i++) {\n      const canvasPoint = augmentedEditCanvasPoints[i];\n\n      pointSet1.push([canvasPoint[0], canvasPoint[1]]);\n    }\n  } else {\n    for (let i = augmentedEditCanvasPoints.length - 1; i >= 0; i--) {\n      const canvasPoint = augmentedEditCanvasPoints[i];\n\n      pointSet1.push([canvasPoint[0], canvasPoint[1]]);\n    }\n  }\n\n  // Add points from the orignal contour's high index up to to its end point.\n  for (let i = highIndex; i < prevCanvasPoints.length; i++) {\n    const canvasPoint = prevCanvasPoints[i];\n\n    pointSet1.push([canvasPoint[0], canvasPoint[1]]);\n  }\n\n  // Point Set 2\n  const pointSet2 = [];\n\n  for (let i = lowIndex; i < highIndex; i++) {\n    const canvasPoint = prevCanvasPoints[i];\n\n    pointSet2.push([canvasPoint[0], canvasPoint[1]]);\n  }\n\n  inPlaceDistance =\n    distanceBetweenHighAndFirstPoint + distanceBetweenLowAndLastPoint;\n\n  reverseDistance =\n    distanceBetweenHighAndLastPoint + distanceBetweenLowAndFirstPoint;\n\n  if (inPlaceDistance < reverseDistance) {\n    for (let i = 0; i < augmentedEditCanvasPoints.length; i++) {\n      const canvasPoint = augmentedEditCanvasPoints[i];\n\n      pointSet2.push([canvasPoint[0], canvasPoint[1]]);\n    }\n  } else {\n    for (let i = augmentedEditCanvasPoints.length - 1; i >= 0; i--) {\n      const canvasPoint = augmentedEditCanvasPoints[i];\n\n      pointSet2.push([canvasPoint[0], canvasPoint[1]]);\n    }\n  }\n\n  const areaPointSet1 = calculateAreaOfPoints(pointSet1);\n  const areaPointSet2 = calculateAreaOfPoints(pointSet2);\n\n  const pointsToRender: Types.Point2[] =\n    areaPointSet1 > areaPointSet2 ? pointSet1 : pointSet2;\n\n  return pointsToRender;\n}\n\n/**\n * Completes the edit of the closed contour when the mouse button is released.\n */\nfunction mouseUpClosedContourEditCallback(\n  evt: EventTypes.InteractionEventType\n): void {\n  const eventDetail = evt.detail;\n  const { element } = eventDetail;\n\n  this.completeClosedContourEdit(element);\n}\n\n/**\n * Completes the edit of the closed contour when the mouse button is released.\n */\nfunction completeClosedContourEdit(element: HTMLDivElement) {\n  const enabledElement = getEnabledElement(element);\n  const { viewport, renderingEngine } = enabledElement;\n\n  const { annotation, viewportIdsToRender } = this.commonData;\n  const { fusedCanvasPoints, prevCanvasPoints } = this.editData;\n\n  if (fusedCanvasPoints) {\n    const updatedPoints = shouldInterpolate(this.configuration)\n      ? getInterpolatedPoints(\n          this.configuration,\n          fusedCanvasPoints,\n          prevCanvasPoints\n        )\n      : fusedCanvasPoints;\n\n    const worldPoints = updatedPoints.map((canvasPoint) =>\n      viewport.canvasToWorld(canvasPoint)\n    );\n    annotation.data.polyline = worldPoints;\n    annotation.data.isOpenContour = false;\n\n    annotation.invalidated = true;\n\n    this.triggerAnnotationModified(annotation, enabledElement);\n  }\n\n  this.isEditingClosed = false;\n  this.editData = undefined;\n  this.commonData = undefined;\n\n  triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n  this.deactivateClosedContourEdit(element);\n}\n\n/**\n * Completes the edit on a cancel method call during the closed\n * contour edit loop.\n */\nfunction cancelClosedContourEdit(element: HTMLDivElement) {\n  this.completeClosedContourEdit(element);\n}\n\n/**\n * Registers the closed contour edit loop to the tool instance.\n */\nfunction registerClosedContourEditLoop(toolInstance): void {\n  toolInstance.activateClosedContourEdit =\n    activateClosedContourEdit.bind(toolInstance);\n  toolInstance.deactivateClosedContourEdit =\n    deactivateClosedContourEdit.bind(toolInstance);\n  toolInstance.mouseDragClosedContourEditCallback =\n    mouseDragClosedContourEditCallback.bind(toolInstance);\n  toolInstance.mouseUpClosedContourEditCallback =\n    mouseUpClosedContourEditCallback.bind(toolInstance);\n  toolInstance.finishEditAndStartNewEdit =\n    finishEditAndStartNewEdit.bind(toolInstance);\n  toolInstance.fuseEditPointsWithClosedContour =\n    fuseEditPointsWithClosedContour.bind(toolInstance);\n  toolInstance.cancelClosedContourEdit =\n    cancelClosedContourEdit.bind(toolInstance);\n  toolInstance.completeClosedContourEdit =\n    completeClosedContourEdit.bind(toolInstance);\n}\n\nexport default registerClosedContourEditLoop;\n","import { getEnabledElement } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport { state } from '../../../store';\nimport { Events } from '../../../enums';\nimport {\n  resetElementCursor,\n  hideElementCursor,\n} from '../../../cursors/elementCursor';\nimport type { EventTypes, Annotation } from '../../../types';\nimport { vec3, vec2 } from 'gl-matrix';\nimport { polyline } from '../../../utilities/math';\nimport {\n  shouldInterpolate,\n  getInterpolatedPoints,\n} from '../../../utilities/planarFreehandROITool/interpolatePoints';\nimport triggerAnnotationRenderForViewportIds from '../../../utilities/triggerAnnotationRenderForViewportIds';\nimport findOpenUShapedContourVectorToPeak from './findOpenUShapedContourVectorToPeak';\n\nconst { addCanvasPointsToArray, getSubPixelSpacingAndXYDirections } = polyline;\n\n/**\n * Activates the open contour edit event loop.\n */\nfunction activateOpenContourEdit(\n  evt: EventTypes.InteractionEventType,\n  annotation: Annotation,\n  viewportIdsToRender: string[]\n): void {\n  this.isEditingOpen = true;\n\n  const eventDetail = evt.detail;\n  const { currentPoints, element } = eventDetail;\n  const canvasPos = currentPoints.canvas;\n  const enabledElement = getEnabledElement(element);\n  const { viewport } = enabledElement;\n\n  const prevCanvasPoints = annotation.data.polyline.map(viewport.worldToCanvas);\n\n  const { spacing, xDir, yDir } = getSubPixelSpacingAndXYDirections(\n    viewport,\n    this.configuration.subPixelResolution\n  );\n\n  this.editData = {\n    prevCanvasPoints,\n    editCanvasPoints: [canvasPos],\n    startCrossingIndex: undefined,\n    editIndex: 0,\n  };\n\n  this.commonData = {\n    annotation,\n    viewportIdsToRender,\n    spacing,\n    xDir,\n    yDir,\n    movingTextBox: false,\n  };\n\n  state.isInteractingWithTool = true;\n\n  element.addEventListener(\n    Events.MOUSE_UP,\n    this.mouseUpOpenContourEditCallback\n  );\n  element.addEventListener(\n    Events.MOUSE_DRAG,\n    this.mouseDragOpenContourEditCallback\n  );\n  element.addEventListener(\n    Events.MOUSE_CLICK,\n    this.mouseUpOpenContourEditCallback\n  );\n\n  element.addEventListener(\n    Events.TOUCH_END,\n    this.mouseUpOpenContourEditCallback\n  );\n  element.addEventListener(\n    Events.TOUCH_DRAG,\n    this.mouseDragOpenContourEditCallback\n  );\n  element.addEventListener(\n    Events.TOUCH_TAP,\n    this.mouseUpOpenContourEditCallback\n  );\n  hideElementCursor(element);\n}\n\n/**\n * Deactivates and cleans up the closed contour edit event loop.\n */\nfunction deactivateOpenContourEdit(element: HTMLDivElement) {\n  state.isInteractingWithTool = false;\n\n  element.removeEventListener(\n    Events.MOUSE_UP,\n    this.mouseUpOpenContourEditCallback\n  );\n  element.removeEventListener(\n    Events.MOUSE_DRAG,\n    this.mouseDragOpenContourEditCallback\n  );\n  element.removeEventListener(\n    Events.MOUSE_CLICK,\n    this.mouseUpOpenContourEditCallback\n  );\n\n  element.removeEventListener(\n    Events.TOUCH_END,\n    this.mouseUpOpenContourEditCallback\n  );\n  element.removeEventListener(\n    Events.TOUCH_DRAG,\n    this.mouseDragOpenContourEditCallback\n  );\n  element.removeEventListener(\n    Events.TOUCH_TAP,\n    this.mouseUpOpenContourEditCallback\n  );\n  resetElementCursor(element);\n}\n\n/**\n * Adds points to the edit line and calculates the preview of the edit to render.\n * Checks if an edit needs to be completed by crossing of lines, or by dragging\n * the edit line past the end of the open contour.\n */\nfunction mouseDragOpenContourEditCallback(\n  evt: EventTypes.InteractionEventType\n): boolean {\n  const eventDetail = evt.detail;\n  const { currentPoints, element } = eventDetail;\n  const worldPos = currentPoints.world;\n  const canvasPos = currentPoints.canvas;\n  const enabledElement = getEnabledElement(element);\n  const { renderingEngine, viewport } = enabledElement;\n\n  const { viewportIdsToRender, xDir, yDir, spacing } = this.commonData;\n  const { editIndex, editCanvasPoints, startCrossingIndex } = this.editData;\n\n  const lastCanvasPoint = editCanvasPoints[editCanvasPoints.length - 1];\n  const lastWorldPoint = viewport.canvasToWorld(lastCanvasPoint);\n\n  const worldPosDiff = vec3.create();\n\n  vec3.subtract(worldPosDiff, worldPos, lastWorldPoint);\n\n  const xDist = Math.abs(vec3.dot(worldPosDiff, xDir));\n  const yDist = Math.abs(vec3.dot(worldPosDiff, yDir));\n\n  // Get pixel spacing in the direction.\n  // Check that we have moved at least one voxel in each direction.\n\n  if (xDist <= spacing[0] && yDist <= spacing[1]) {\n    // Haven't changed world point enough, don't render\n    return;\n  }\n\n  if (startCrossingIndex !== undefined) {\n    // Edge case: If the edit line itself crosses, remove part of that edit line so we don't\n    // Get isolated regions.\n    this.checkAndRemoveCrossesOnEditLine(evt);\n  }\n\n  const numPointsAdded = addCanvasPointsToArray(\n    element,\n    editCanvasPoints,\n    canvasPos,\n    this.commonData\n  );\n\n  const currentEditIndex = editIndex + numPointsAdded;\n\n  this.editData.editIndex = currentEditIndex;\n\n  if (startCrossingIndex === undefined && editCanvasPoints.length > 1) {\n    this.checkForFirstCrossing(evt, false);\n  }\n\n  this.editData.snapIndex = this.findSnapIndex();\n\n  this.editData.fusedCanvasPoints = this.fuseEditPointsWithOpenContour(evt);\n\n  if (\n    startCrossingIndex !== undefined &&\n    this.checkForSecondCrossing(evt, false)\n  ) {\n    this.removePointsAfterSecondCrossing(false);\n    this.finishEditOpenOnSecondCrossing(evt);\n  } else if (this.checkIfShouldOverwriteAnEnd(evt)) {\n    this.openContourEditOverwriteEnd(evt);\n  }\n\n  triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n}\n\n/**\n * Overwrite the end of the contour with the edit, and then switch to the\n * open contour end edit loop.\n */\nfunction openContourEditOverwriteEnd(\n  evt: EventTypes.InteractionEventType\n): void {\n  const eventDetail = evt.detail;\n  const { element } = eventDetail;\n  const enabledElement = getEnabledElement(element);\n  const { viewport } = enabledElement;\n  const { annotation, viewportIdsToRender } = this.commonData;\n  const fusedCanvasPoints = this.fuseEditPointsForOpenContourEndEdit();\n\n  const worldPoints = fusedCanvasPoints.map((canvasPoint) =>\n    viewport.canvasToWorld(canvasPoint)\n  );\n\n  annotation.data.polyline = worldPoints;\n  annotation.data.isOpenContour = true;\n  // Note: Contours generate from fusedCanvasPoints will be in the direction\n  // with the last point being the current mouse position\n  annotation.data.handles.points = [\n    worldPoints[0],\n    worldPoints[worldPoints.length - 1],\n  ];\n  annotation.data.handles.activeHandleIndex = 1;\n\n  this.triggerAnnotationModified(annotation, enabledElement);\n\n  this.isEditingOpen = false;\n  this.editData = undefined;\n  this.commonData = undefined;\n\n  // Jump to a normal line edit now.\n  this.deactivateOpenContourEdit(element);\n  this.activateOpenContourEndEdit(evt, annotation, viewportIdsToRender, null);\n}\n\n/**\n * Checks if we are moving the `editCanvasPoints` past the end of one of the\n * open contour's `prevCanvasPoint`s.\n */\nfunction checkIfShouldOverwriteAnEnd(\n  evt: EventTypes.InteractionEventType\n): boolean {\n  const eventDetail = evt.detail;\n  const { currentPoints, lastPoints } = eventDetail;\n  const canvasPos = currentPoints.canvas;\n  const lastCanvasPos = lastPoints.canvas;\n\n  const { snapIndex, prevCanvasPoints, startCrossingIndex } = this.editData;\n\n  if (startCrossingIndex === undefined || snapIndex === undefined) {\n    // Edit not started\n    return false;\n  }\n\n  // No snap index can be found, so contour is being edited away from line.\n  if (snapIndex === -1) {\n    return true;\n  }\n\n  if (snapIndex !== 0 && snapIndex !== prevCanvasPoints.length - 1) {\n    // Not snapping to final index\n    return false;\n  }\n\n  // Work out the angle between the last mouse move and\n  // And the current point to the snapped point.\n  const p1 = canvasPos;\n  const p2 = lastCanvasPos;\n  const p3 = prevCanvasPoints[snapIndex];\n\n  const a = vec2.create();\n  const b = vec2.create();\n\n  vec2.set(a, p1[0] - p2[0], p1[1] - p2[1]);\n  vec2.set(b, p1[0] - p3[0], p1[1] - p3[1]);\n\n  const aDotb = vec2.dot(a, b);\n  const magA = Math.sqrt(a[0] * a[0] + a[1] * a[1]);\n  const magB = Math.sqrt(b[0] * b[0] + b[1] * b[1]);\n\n  const theta = Math.acos(aDotb / (magA * magB));\n\n  if (theta < Math.PI / 2) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * This method combines the contour before editing (prevCanvasPoints) with\n * the current edit (editCanvasPoints), to produce a single contour ready for\n * end editing.\n *\n * @privateRemarks In this method we use the following trick to find the\n * optimal contour:\n * - As the contour and the edit can be drawn with different chiralities, we find if\n * the edit line aligns better with the intended cross points in its current order\n * or reversed. We do this by minimising the distance between its ends and the\n * intended crossing points.\n */\nfunction fuseEditPointsForOpenContourEndEdit(): Types.Point2[] {\n  const { snapIndex, prevCanvasPoints, editCanvasPoints, startCrossingIndex } =\n    this.editData;\n\n  const newCanvasPoints = [];\n\n  // Note: Generated contours will both be in the direction with the\n  // last point being the current mouse position\n\n  if (snapIndex === 0) {\n    // end -> crossingpoint -> edit\n    // Add points from the end of the previous contour, to the crossing point.\n    for (let i = prevCanvasPoints.length - 1; i >= startCrossingIndex; i--) {\n      const canvasPoint = prevCanvasPoints[i];\n\n      newCanvasPoints.push([canvasPoint[0], canvasPoint[1]]);\n    }\n  } else {\n    // start -> crossingpoint -> edit\n    // Add points from the orignal contour origin up to the low index.\n    for (let i = 0; i < startCrossingIndex; i++) {\n      const canvasPoint = prevCanvasPoints[i];\n\n      newCanvasPoints.push([canvasPoint[0], canvasPoint[1]]);\n    }\n  }\n\n  const distanceBetweenCrossingIndexAndFirstPoint = vec2.distance(\n    prevCanvasPoints[startCrossingIndex],\n    editCanvasPoints[0]\n  );\n\n  const distanceBetweenCrossingIndexAndLastPoint = vec2.distance(\n    prevCanvasPoints[startCrossingIndex],\n    editCanvasPoints[editCanvasPoints.length - 1]\n  );\n\n  if (\n    distanceBetweenCrossingIndexAndFirstPoint <\n    distanceBetweenCrossingIndexAndLastPoint\n  ) {\n    // In order\n    for (let i = 0; i < editCanvasPoints.length; i++) {\n      const canvasPoint = editCanvasPoints[i];\n\n      newCanvasPoints.push([canvasPoint[0], canvasPoint[1]]);\n    }\n  } else {\n    // reverse\n    for (let i = editCanvasPoints.length - 1; i >= 0; i--) {\n      const canvasPoint = editCanvasPoints[i];\n\n      newCanvasPoints.push([canvasPoint[0], canvasPoint[1]]);\n    }\n  }\n\n  return newCanvasPoints;\n}\n\n/**\n * This method combines the contour before editing (prevCanvasPoints) with\n * the current edit (editCanvasPoints), to produce a renderable preview of the\n * edit. Upon finishing the contour, the preview generated here is written back\n * into the contour state.\n *\n * @privateRemarks In this method we use the following trick to find the\n * optimal contour:\n * - As the contour and the edit can be drawn with different chiralities, we find if\n * the edit line aligns better with the intended cross points in its current order\n * or reversed. We do this by minimising the distance between its ends and the\n * intended crossing points.\n */\nfunction fuseEditPointsWithOpenContour(\n  evt: EventTypes.InteractionEventType\n): Types.Point2[] {\n  const { prevCanvasPoints, editCanvasPoints, startCrossingIndex, snapIndex } =\n    this.editData;\n\n  if (startCrossingIndex === undefined || snapIndex === undefined) {\n    return undefined;\n  }\n\n  const eventDetail = evt.detail;\n  const { element } = eventDetail;\n\n  // Augment the editCanvasPoints array, between the end of edit and the snap index.\n  const augmentedEditCanvasPoints = [...editCanvasPoints];\n\n  addCanvasPointsToArray(\n    element,\n    augmentedEditCanvasPoints,\n    prevCanvasPoints[snapIndex],\n    this.commonData\n  );\n\n  if (augmentedEditCanvasPoints.length > editCanvasPoints.length) {\n    // If any points added, remove the last point, which will be a clone of the snapIndex\n    augmentedEditCanvasPoints.pop();\n  }\n\n  // Calculate the distances between the first and last edit points and the origin of the\n  // Contour with the snap point. These will be used to see which way around the edit array should be\n  // Placed within the preview.\n\n  let lowIndex;\n  let highIndex;\n\n  if (startCrossingIndex > snapIndex) {\n    lowIndex = snapIndex;\n    highIndex = startCrossingIndex;\n  } else {\n    lowIndex = startCrossingIndex;\n    highIndex = snapIndex;\n  }\n\n  const distanceBetweenLowAndFirstPoint = vec2.distance(\n    prevCanvasPoints[lowIndex],\n    augmentedEditCanvasPoints[0]\n  );\n\n  const distanceBetweenLowAndLastPoint = vec2.distance(\n    prevCanvasPoints[lowIndex],\n    augmentedEditCanvasPoints[augmentedEditCanvasPoints.length - 1]\n  );\n\n  const distanceBetweenHighAndFirstPoint = vec2.distance(\n    prevCanvasPoints[highIndex],\n    augmentedEditCanvasPoints[0]\n  );\n\n  const distanceBetweenHighAndLastPoint = vec2.distance(\n    prevCanvasPoints[highIndex],\n    augmentedEditCanvasPoints[augmentedEditCanvasPoints.length - 1]\n  );\n\n  const pointsToRender = [];\n\n  // Add points from the orignal contour origin up to the low index.\n  for (let i = 0; i < lowIndex; i++) {\n    const canvasPoint = prevCanvasPoints[i];\n\n    pointsToRender.push([canvasPoint[0], canvasPoint[1]]);\n  }\n\n  // Check which orientation of the edit line minimizes the distance between the\n  // origial contour low/high points and the start/end nodes of the edit line.\n\n  const inPlaceDistance =\n    distanceBetweenLowAndFirstPoint + distanceBetweenHighAndLastPoint;\n\n  const reverseDistance =\n    distanceBetweenLowAndLastPoint + distanceBetweenHighAndFirstPoint;\n\n  if (inPlaceDistance < reverseDistance) {\n    for (let i = 0; i < augmentedEditCanvasPoints.length; i++) {\n      const canvasPoint = augmentedEditCanvasPoints[i];\n\n      pointsToRender.push([canvasPoint[0], canvasPoint[1]]);\n    }\n  } else {\n    for (let i = augmentedEditCanvasPoints.length - 1; i >= 0; i--) {\n      const canvasPoint = augmentedEditCanvasPoints[i];\n\n      pointsToRender.push([canvasPoint[0], canvasPoint[1]]);\n    }\n  }\n\n  // Add points from the original contour's high index up to to its end point.\n  for (let i = highIndex; i < prevCanvasPoints.length; i++) {\n    const canvasPoint = prevCanvasPoints[i];\n\n    pointsToRender.push([canvasPoint[0], canvasPoint[1]]);\n  }\n\n  return pointsToRender;\n}\n\n/**\n * On a second crossing, apply edit, and start a new edit from the crossing.\n */\nfunction finishEditOpenOnSecondCrossing(\n  evt: EventTypes.InteractionEventType\n): void {\n  const eventDetail = evt.detail;\n  const { element } = eventDetail;\n  const enabledElement = getEnabledElement(element);\n  const { viewport, renderingEngine } = enabledElement;\n\n  const { annotation, viewportIdsToRender } = this.commonData;\n  const { fusedCanvasPoints, editCanvasPoints } = this.editData;\n\n  const worldPoints = fusedCanvasPoints.map((canvasPoint) =>\n    viewport.canvasToWorld(canvasPoint)\n  );\n\n  annotation.data.polyline = worldPoints;\n  annotation.data.isOpenContour = true;\n  annotation.data.handles.points = [\n    worldPoints[0],\n    worldPoints[worldPoints.length - 1],\n  ];\n\n  this.triggerAnnotationModified(annotation, enabledElement);\n\n  const lastEditCanvasPoint = editCanvasPoints.pop();\n\n  this.editData = {\n    prevCanvasPoints: fusedCanvasPoints,\n    editCanvasPoints: [lastEditCanvasPoint],\n    startCrossingIndex: undefined,\n    editIndex: 0,\n  };\n\n  triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n}\n\n/**\n * Completes the edit of the open contour when the mouse button is released.\n */\nfunction mouseUpOpenContourEditCallback(\n  evt: EventTypes.InteractionEventType\n): void {\n  const eventDetail = evt.detail;\n  const { element } = eventDetail;\n\n  this.completeOpenContourEdit(element);\n}\n\n/**\n * Completes the edit of the open contour.\n */\nfunction completeOpenContourEdit(element: HTMLDivElement) {\n  const enabledElement = getEnabledElement(element);\n  const { viewport, renderingEngine } = enabledElement;\n\n  const { annotation, viewportIdsToRender } = this.commonData;\n  const { fusedCanvasPoints, prevCanvasPoints } = this.editData;\n\n  if (fusedCanvasPoints) {\n    const updatedPoints = shouldInterpolate(this.configuration)\n      ? getInterpolatedPoints(\n          this.configuration,\n          fusedCanvasPoints,\n          prevCanvasPoints\n        )\n      : fusedCanvasPoints;\n\n    const worldPoints = updatedPoints.map((canvasPoint) =>\n      viewport.canvasToWorld(canvasPoint)\n    );\n    annotation.data.polyline = worldPoints;\n    annotation.data.isOpenContour = true;\n    annotation.data.handles.points = [\n      worldPoints[0],\n      worldPoints[worldPoints.length - 1],\n    ];\n\n    // If the annotation is an open U-shaped annotation, find the annotation vector.\n    if (annotation.data.isOpenUShapeContour) {\n      annotation.data.openUShapeContourVectorToPeak =\n        findOpenUShapedContourVectorToPeak(fusedCanvasPoints, viewport);\n    }\n\n    annotation.invalidated = true;\n\n    this.triggerAnnotationModified(annotation, enabledElement);\n  }\n\n  this.isEditingOpen = false;\n  this.editData = undefined;\n  this.commonData = undefined;\n\n  triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n  this.deactivateOpenContourEdit(element);\n}\n\n/**\n * Completes the edit on a cancel method call during the open\n * contour edit loop.\n */\nfunction cancelOpenContourEdit(element: HTMLDivElement) {\n  this.completeOpenContourEdit(element);\n}\n\n/**\n * Registers the open contour edit loop to the tool instance.\n */\nfunction registerOpenContourEditLoop(toolInstance) {\n  toolInstance.activateOpenContourEdit =\n    activateOpenContourEdit.bind(toolInstance);\n  toolInstance.deactivateOpenContourEdit =\n    deactivateOpenContourEdit.bind(toolInstance);\n  toolInstance.mouseDragOpenContourEditCallback =\n    mouseDragOpenContourEditCallback.bind(toolInstance);\n  toolInstance.mouseUpOpenContourEditCallback =\n    mouseUpOpenContourEditCallback.bind(toolInstance);\n  toolInstance.fuseEditPointsWithOpenContour =\n    fuseEditPointsWithOpenContour.bind(toolInstance);\n  toolInstance.finishEditOpenOnSecondCrossing =\n    finishEditOpenOnSecondCrossing.bind(toolInstance);\n  toolInstance.checkIfShouldOverwriteAnEnd =\n    checkIfShouldOverwriteAnEnd.bind(toolInstance);\n  toolInstance.fuseEditPointsForOpenContourEndEdit =\n    fuseEditPointsForOpenContourEndEdit.bind(toolInstance);\n  toolInstance.openContourEditOverwriteEnd =\n    openContourEditOverwriteEnd.bind(toolInstance);\n  toolInstance.cancelOpenContourEdit = cancelOpenContourEdit.bind(toolInstance);\n  toolInstance.completeOpenContourEdit =\n    completeOpenContourEdit.bind(toolInstance);\n}\n\nexport default registerOpenContourEditLoop;\n","import { getEnabledElement } from '@cornerstonejs/core';\nimport { state } from '../../../store';\nimport { Events } from '../../../enums';\nimport { hideElementCursor } from '../../../cursors/elementCursor';\nimport type {\n  EventTypes,\n  Annotation,\n  ToolHandle,\n  TextBoxHandle,\n} from '../../../types';\nimport { polyline } from '../../../utilities/math';\n\nconst { getSubPixelSpacingAndXYDirections } = polyline;\n\n/**\n * Activates the open contour end edit. This actually just sets up the state so\n * that the tool thinks we are mid draw, and then jumps into the drawing loop.\n */\nfunction activateOpenContourEndEdit(\n  evt: EventTypes.InteractionEventType,\n  annotation: Annotation,\n  viewportIdsToRender: string[],\n  handle: ToolHandle | null\n): void {\n  this.isDrawing = true;\n\n  const eventDetail = evt.detail;\n  const { element } = eventDetail;\n  const enabledElement = getEnabledElement(element);\n  const { viewport } = enabledElement;\n\n  const { spacing, xDir, yDir } = getSubPixelSpacingAndXYDirections(\n    viewport,\n    this.configuration.subPixelResolution\n  );\n\n  const canvasPoints = annotation.data.polyline.map(viewport.worldToCanvas);\n  const handleIndexGrabbed = annotation.data.handles.activeHandleIndex;\n\n  // If 0, invert point direction, if 1, keep point direction the same.\n  // This is so we can just jump as into the state as if the annotation was just being drawn.\n  if (handleIndexGrabbed === 0) {\n    canvasPoints.reverse();\n  }\n\n  let movingTextBox = false;\n  if ((handle as TextBoxHandle).worldPosition) {\n    movingTextBox = true;\n  }\n\n  this.drawData = {\n    canvasPoints: canvasPoints,\n    polylineIndex: canvasPoints.length - 1,\n  };\n\n  this.commonData = {\n    annotation,\n    viewportIdsToRender,\n    spacing,\n    xDir,\n    yDir,\n    movingTextBox,\n  };\n\n  state.isInteractingWithTool = true;\n\n  // Jump into drawing loop.\n  element.addEventListener(Events.MOUSE_UP, this.mouseUpDrawCallback);\n  element.addEventListener(Events.MOUSE_DRAG, this.mouseDragDrawCallback);\n  element.addEventListener(Events.MOUSE_CLICK, this.mouseUpDrawCallback);\n  element.addEventListener(Events.TOUCH_END, this.mouseUpDrawCallback);\n  element.addEventListener(Events.TOUCH_DRAG, this.mouseDragDrawCallback);\n  element.addEventListener(Events.TOUCH_TAP, this.mouseUpDrawCallback);\n\n  hideElementCursor(element);\n}\n\n/**\n * Registers the open contour end edit loop to the tool instance.\n */\nfunction registerOpenContourEndEditLoop(toolInstance): void {\n  toolInstance.activateOpenContourEndEdit =\n    activateOpenContourEndEdit.bind(toolInstance);\n}\n\nexport default registerOpenContourEndEditLoop;\n","import type { Types } from '@cornerstonejs/core';\nimport {\n  drawHandles as drawHandlesSvg,\n  drawPolyline as drawPolylineSvg,\n} from '../../../drawingSvg';\nimport { polyline } from '../../../utilities/math';\nimport { findOpenUShapedContourVectorToPeakOnRender } from './findOpenUShapedContourVectorToPeak';\nimport { PlanarFreehandROIAnnotation } from '../../../types/ToolSpecificAnnotationTypes';\nimport { StyleSpecifier } from '../../../types/AnnotationStyle';\nimport { SVGDrawingHelper } from '../../../types';\n\nconst { pointsAreWithinCloseContourProximity } = polyline;\n\ntype PlanarFreehandROIRenderOptions = {\n  color?: string;\n  width?: number;\n  connectFirstToLast?: boolean;\n};\n\nfunction _getRenderingOptions(\n  enabledElement: Types.IEnabledElement,\n  annotation: PlanarFreehandROIAnnotation\n): PlanarFreehandROIRenderOptions {\n  const styleSpecifier: StyleSpecifier = {\n    toolGroupId: this.toolGroupId,\n    toolName: this.getToolName(),\n    viewportId: enabledElement.viewport.id,\n    annotationUID: annotation.annotationUID,\n  };\n\n  const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n  const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n  const color = this.getStyle('color', styleSpecifier, annotation);\n\n  const isOpenContour = annotation.data.isOpenContour;\n\n  const options = {\n    color: color === undefined ? undefined : <string>color,\n    width: lineWidth === undefined ? undefined : <number>lineWidth,\n    lineDash: lineDash === undefined ? undefined : <number[]>lineDash,\n    connectLastToFirst: !isOpenContour,\n  };\n\n  return options;\n}\n\n/**\n * Renders a `PlanarFreehandROIAnnotation` that is not currently being drawn or edited.\n */\nfunction renderContour(\n  enabledElement: Types.IEnabledElement,\n  svgDrawingHelper: SVGDrawingHelper,\n  annotation: PlanarFreehandROIAnnotation\n): void {\n  // prevent drawing or further calculation in case viewport data is not ready yet\n  if (!enabledElement?.viewport?.getImageData()) {\n    return;\n  }\n  // Check if the contour is an open contour\n  if (annotation.data.isOpenContour) {\n    // If its an open contour, check i its a U-shaped contour\n    if (annotation.data.isOpenUShapeContour) {\n      calculateUShapeContourVectorToPeakIfNotPresent(\n        enabledElement,\n        annotation\n      );\n\n      this.renderOpenUShapedContour(\n        enabledElement,\n        svgDrawingHelper,\n        annotation\n      );\n    } else {\n      // If not a U-shaped contour, render standard open contour.\n      this.renderOpenContour(enabledElement, svgDrawingHelper, annotation);\n    }\n  } else {\n    this.renderClosedContour(enabledElement, svgDrawingHelper, annotation);\n  }\n}\n\n/**\n * If the open U-shaped contour does not have a peak.\n */\nfunction calculateUShapeContourVectorToPeakIfNotPresent(\n  enabledElement: Types.IEnabledElement,\n  annotation: PlanarFreehandROIAnnotation\n): void {\n  if (!annotation.data.openUShapeContourVectorToPeak) {\n    // Annotation just been set to be an open U-shaped contour.\n    // calculate its peak vector here.\n    annotation.data.openUShapeContourVectorToPeak =\n      findOpenUShapedContourVectorToPeakOnRender(enabledElement, annotation);\n  }\n}\n\n/**\n * Renders an closed `PlanarFreehandROIAnnotation` annotation.\n */\nfunction renderClosedContour(\n  enabledElement: Types.IEnabledElement,\n  svgDrawingHelper: SVGDrawingHelper,\n  annotation: PlanarFreehandROIAnnotation\n): void {\n  const { viewport } = enabledElement;\n  const options = this._getRenderingOptions(enabledElement, annotation);\n\n  // Its unfortunate that we have to do this for each annotation,\n  // Even if its unchanged. In the future we could cache the canvas points per\n  // element on the tool? That feels very weird also as we'd need to manage\n  // it/clean them up. Its a pre-optimisation for now and we can tackle it if it\n  // becomes a problem.\n  const canvasPoints = annotation.data.polyline.map((worldPos) =>\n    viewport.worldToCanvas(worldPos)\n  );\n\n  const polylineUID = '1';\n\n  drawPolylineSvg(\n    svgDrawingHelper,\n    annotation.annotationUID,\n    polylineUID,\n    canvasPoints,\n    options\n  );\n}\n\n/**\n * Renders an open `PlanarFreehandROIAnnotation` annotation.\n */\nfunction renderOpenContour(\n  enabledElement: Types.IEnabledElement,\n  svgDrawingHelper: SVGDrawingHelper,\n  annotation: PlanarFreehandROIAnnotation\n): void {\n  const { viewport } = enabledElement;\n  const options = this._getRenderingOptions(enabledElement, annotation);\n\n  const canvasPoints = annotation.data.polyline.map((worldPos) =>\n    viewport.worldToCanvas(worldPos)\n  );\n\n  const polylineUID = '1';\n\n  drawPolylineSvg(\n    svgDrawingHelper,\n    annotation.annotationUID,\n    polylineUID,\n    canvasPoints,\n    options\n  );\n\n  const activeHandleIndex = annotation.data.handles.activeHandleIndex;\n\n  if (this.configuration.alwaysRenderOpenContourHandles?.enabled === true) {\n    const radius = this.configuration.alwaysRenderOpenContourHandles.radius;\n\n    // Draw highlighted points\n    const handleGroupUID = '0';\n\n    // We already mapped all the points, so don't do the mapping again.\n    // The activeHandleIndex can only be one of two points.\n    const handlePoints = [\n      canvasPoints[0],\n      canvasPoints[canvasPoints.length - 1],\n    ];\n\n    // Don't render a hovered handle, as this will be rendered larger in\n    // the next block.\n    if (activeHandleIndex === 0) {\n      handlePoints.shift();\n    } else if (activeHandleIndex === 1) {\n      handlePoints.pop();\n    }\n\n    drawHandlesSvg(\n      svgDrawingHelper,\n      annotation.annotationUID,\n      handleGroupUID,\n      handlePoints,\n      {\n        color: options.color,\n        handleRadius: radius,\n      }\n    );\n  }\n\n  if (activeHandleIndex !== null) {\n    // Draw highlighted points\n    const handleGroupUID = '1';\n\n    // We already mapped all the points, so don't do the mapping again.\n    // The activeHandleIndex can only be one of two points.\n    const indexOfCanvasPoints =\n      activeHandleIndex === 0 ? 0 : canvasPoints.length - 1;\n\n    const handlePoint = canvasPoints[indexOfCanvasPoints];\n\n    drawHandlesSvg(\n      svgDrawingHelper,\n      annotation.annotationUID,\n      handleGroupUID,\n      [handlePoint],\n      { color: options.color }\n    );\n  }\n}\n\nfunction renderOpenUShapedContour(\n  enabledElement: Types.IEnabledElement,\n  svgDrawingHelper: SVGDrawingHelper,\n  annotation: PlanarFreehandROIAnnotation\n): void {\n  const { viewport } = enabledElement;\n  const { polyline, openUShapeContourVectorToPeak } = annotation.data;\n\n  this.renderOpenContour(enabledElement, svgDrawingHelper, annotation);\n\n  // prevent rendering u shape in case openUShapeContourVectorToPeak is not set yet\n  if (!openUShapeContourVectorToPeak) {\n    return;\n  }\n\n  const firstCanvasPoint = viewport.worldToCanvas(polyline[0]);\n  const lastCanvasPoint = viewport.worldToCanvas(polyline[polyline.length - 1]);\n\n  const openUShapeContourVectorToPeakCanvas = [\n    viewport.worldToCanvas(openUShapeContourVectorToPeak[0]),\n    viewport.worldToCanvas(openUShapeContourVectorToPeak[1]),\n  ];\n\n  const options = this._getRenderingOptions(enabledElement, annotation);\n\n  // Join first and last points\n  drawPolylineSvg(\n    svgDrawingHelper,\n    annotation.annotationUID,\n    'first-to-last',\n    [firstCanvasPoint, lastCanvasPoint],\n    {\n      color: options.color,\n      width: options.width,\n      connectLastToFirst: false,\n      lineDash: '2,2',\n    }\n  );\n\n  // Render midpoint to open contour surface line\n  drawPolylineSvg(\n    svgDrawingHelper,\n    annotation.annotationUID,\n    'midpoint-to-open-contour',\n    [\n      openUShapeContourVectorToPeakCanvas[0],\n      openUShapeContourVectorToPeakCanvas[1],\n    ],\n    {\n      color: options.color,\n      width: options.width,\n      connectLastToFirst: false,\n      lineDash: '2,2',\n    }\n  );\n}\n\n/**\n * Renders a new `PlanarFreehandROIAnnotation` annotation during\n * creation/drawing.\n */\nfunction renderContourBeingDrawn(\n  enabledElement: Types.IEnabledElement,\n  svgDrawingHelper: SVGDrawingHelper,\n  annotation: PlanarFreehandROIAnnotation\n): void {\n  const options = this._getRenderingOptions(enabledElement, annotation);\n\n  const { allowOpenContours } = this.configuration;\n  const { canvasPoints } = this.drawData;\n\n  // Override rendering whilst drawing the contour, we don't know if its open\n  // or closed yet\n  options.connectLastToFirst = false;\n\n  drawPolylineSvg(\n    svgDrawingHelper,\n    annotation.annotationUID,\n    '1',\n    canvasPoints,\n    options\n  );\n\n  if (allowOpenContours) {\n    const firstPoint = canvasPoints[0];\n    const lastPoint = canvasPoints[canvasPoints.length - 1];\n\n    // Check if start and end are within close proximity\n    if (\n      pointsAreWithinCloseContourProximity(\n        firstPoint,\n        lastPoint,\n        this.configuration.closeContourProximity\n      )\n    ) {\n      // Preview join last points\n      drawPolylineSvg(\n        svgDrawingHelper,\n        annotation.annotationUID,\n        '2',\n        [lastPoint, firstPoint],\n        options\n      );\n    } else {\n      // Draw start point\n      const handleGroupUID = '0';\n\n      drawHandlesSvg(\n        svgDrawingHelper,\n        annotation.annotationUID,\n        handleGroupUID,\n        [firstPoint],\n        { color: options.color, handleRadius: 2 }\n      );\n    }\n  }\n}\n\n/**\n * Renders a closed `PlanarFreehandROIAnnotation` being edited.\n */\nfunction renderClosedContourBeingEdited(\n  enabledElement,\n  svgDrawingHelper,\n  annotation\n): void {\n  const { fusedCanvasPoints } = this.editData;\n\n  if (fusedCanvasPoints === undefined) {\n    // No edit to render yet, render closed contour.\n    this.renderClosedContour(enabledElement, svgDrawingHelper, annotation);\n\n    return;\n  }\n\n  const options = this._getRenderingOptions(enabledElement, annotation);\n\n  const polylineUIDToRender = 'preview-1';\n\n  drawPolylineSvg(\n    svgDrawingHelper,\n    annotation.annotationUID,\n    polylineUIDToRender,\n    fusedCanvasPoints,\n    options\n  );\n}\n\n/**\n * Renders an open `PlanarFreehandROIAnnotation` being edited.\n */\nfunction renderOpenContourBeingEdited(\n  enabledElement: Types.IEnabledElement,\n  svgDrawingHelper: SVGDrawingHelper,\n  annotation: PlanarFreehandROIAnnotation\n): void {\n  const { fusedCanvasPoints } = this.editData;\n\n  if (fusedCanvasPoints === undefined) {\n    // No edit to render yet, render closed contour.\n    this.renderOpenContour(enabledElement, svgDrawingHelper, annotation);\n\n    return;\n  }\n\n  const options = this._getRenderingOptions(enabledElement, annotation);\n\n  const polylineUIDToRender = 'preview-1';\n\n  drawPolylineSvg(\n    svgDrawingHelper,\n    annotation.annotationUID,\n    polylineUIDToRender,\n    fusedCanvasPoints,\n    options\n  );\n}\n\n/**\n * Registers the render methods of various contour states to the tool instance.\n */\nfunction registerRenderMethods(toolInstance) {\n  toolInstance.renderContour = renderContour.bind(toolInstance);\n  toolInstance.renderClosedContour = renderClosedContour.bind(toolInstance);\n  toolInstance.renderOpenContour = renderOpenContour.bind(toolInstance);\n  toolInstance.renderOpenUShapedContour =\n    renderOpenUShapedContour.bind(toolInstance);\n\n  toolInstance.renderContourBeingDrawn =\n    renderContourBeingDrawn.bind(toolInstance);\n\n  toolInstance.renderClosedContourBeingEdited =\n    renderClosedContourBeingEdited.bind(toolInstance);\n  toolInstance.renderOpenContourBeingEdited =\n    renderOpenContourBeingEdited.bind(toolInstance);\n  toolInstance._getRenderingOptions = _getRenderingOptions.bind(toolInstance);\n}\n\nexport default registerRenderMethods;\n","import {\n  CONSTANTS,\n  getEnabledElement,\n  triggerEvent,\n  eventTarget,\n  StackViewport,\n  VolumeViewport,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\n\nimport {\n  getCalibratedAreaUnits,\n  getCalibratedScale,\n} from '../../utilities/getCalibratedUnits';\nimport roundNumber from '../../utilities/roundNumber';\nimport { Events } from '../../enums';\nimport { AnnotationTool } from '../base';\nimport {\n  addAnnotation,\n  getAnnotations,\n} from '../../stateManagement/annotation/annotationState';\nimport { polyline } from '../../utilities/math';\nimport { filterAnnotationsForDisplay } from '../../utilities/planar';\nimport throttle from '../../utilities/throttle';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport registerDrawLoop from './planarFreehandROITool/drawLoop';\nimport registerEditLoopCommon from './planarFreehandROITool/editLoopCommon';\nimport registerClosedContourEditLoop from './planarFreehandROITool/closedContourEditLoop';\nimport registerOpenContourEditLoop from './planarFreehandROITool/openContourEditLoop';\nimport registerOpenContourEndEditLoop from './planarFreehandROITool/openContourEndEditLoop';\nimport registerRenderMethods from './planarFreehandROITool/renderMethods';\nimport {\n  AnnotationCompletedEventDetail,\n  AnnotationModifiedEventDetail,\n} from '../../types/EventTypes';\nimport {\n  EventTypes,\n  ToolHandle,\n  Annotation,\n  Annotations,\n  AnnotationStyle,\n  PublicToolProps,\n  ToolProps,\n  InteractionTypes,\n  SVGDrawingHelper,\n} from '../../types';\nimport { drawLine, drawCircle, drawLinkedTextBox } from '../../drawingSvg';\nimport { PlanarFreehandROIAnnotation } from '../../types/ToolSpecificAnnotationTypes';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport { PlanarFreehandROICommonData } from '../../utilities/math/polyline/planarFreehandROIInternalTypes';\nimport pointInPolyline from '../../utilities/math/polyline/pointInPolyline';\nimport { getIntersectionCoordinatesWithPolyline } from '../../utilities/math/polyline/getIntersectionWithPolyline';\nimport pointInShapeCallback from '../../utilities/pointInShapeCallback';\nimport { isViewportPreScaled } from '../../utilities/viewport/isViewportPreScaled';\nimport {\n  ModalityUnitOptions,\n  getModalityUnit,\n} from '../../utilities/getModalityUnit';\n\nconst { pointCanProjectOnLine } = polyline;\nconst { EPSILON } = CONSTANTS;\n\nconst PARALLEL_THRESHOLD = 1 - EPSILON;\n/**\n * PlanarFreehandROITool lets you draw annotations that define an arbitrarily drawn region.\n * You can use the PlanarFreehandROITool in all perpendicular views (axial, sagittal, coronal),\n * support for oblique views is possible, but not yet supported, due to the implementation of\n * `getSubPixelSpacingAndXYDirections`.\n *\n * The resulting annotation's data and metadata (the\n * state of the viewport while drawing was happening) will get added to the\n * ToolState manager and can be accessed from the ToolState by calling getAnnotations\n * or similar methods.\n *\n * PlanarFreehandROITool annotation can be smoothed on drawing completion. This is a configured based approach.\n * The interpolation process uses b-spline algorithm and consider 4 configurations properties:\n * - interpolation.interpolateOnAdd: to tell whether it should be interpolated or not (for editing it is considered the property interpolateOnEdit) (default: false)\n * - interpolation.interpolateOnEdit: to tell whether it should be interpolated or not when editing (default: false)\n * - interpolation.knotsRatioPercentageOnAdd: percentage of points from Segment that are likely to be considered knots during interpolation (for editing it is considered the property knotsRatioPercentageOnEdit) ( default: 40)\n * - interpolation.knotsRatioPercentageOnEdit: same as knotsRatioPercentageOnAdd but applicable only when editing the tool (default: 40)\n *\n * So, with that said the interpolation might occur when:\n * - drawing is done (i.e mouse is released) and interpolation.interpolateOnAdd is true. Interpolation algorithm uses knotsRatioPercentageOnAdd\n * - edit drawing is done (i.e mouse is released) and interpolation.interpolateOnEdit is true. Interpolation algorithm uses knotsRatioPercentageOnEdit and its only applied to changed segment\n * Interpolation does not occur when:\n * - interpolation.interpolateOnAdd is false and drawing is completed\n * - interpolation.interpolateOnEdit is false and edit is completed\n * - drawing still happening (editing or not)\n *\n * The result of interpolation will be a smoother set of segments.\n * Changing tool configuration (see below) you can fine-tune the interpolation process by changing knotsRatioPercentageOnAdd and knotsRatioPercentageOnEdit value, which smaller values produces a more agressive interpolation.\n * A smaller value of knotsRatioPercentageOnAdd/knotsRatioPercentageOnEdit produces a more agressive interpolation.\n *\n * ```js\n * cornerstoneTools.addTool(PlanarFreehandROITool)\n *\n * const toolGroup = ToolGroupManager.createToolGroup('toolGroupId')\n *\n * toolGroup.addTool(PlanarFreehandROITool.toolName)\n *\n * toolGroup.addViewport('viewportId', 'renderingEngineId')\n *\n * toolGroup.setToolActive(PlanarFreehandROITool.toolName, {\n *   bindings: [\n *    {\n *       mouseButton: MouseBindings.Primary, // Left Click\n *     },\n *   ],\n * })\n *\n * // set interpolation agressiveness while adding new annotation (ps: this does not change if interpolation is ON or OFF)\n * toolGroup.setToolConfiguration(PlanarFreehandROITool.toolName, {\n *   interpolation: { knotsRatioPercentageOnAdd: 30 },\n * });\n *\n * // set interpolation to be ON while editing only\n * toolGroup.setToolConfiguration(PlanarFreehandROITool.toolName, {\n *   interpolation: { interpolateOnAdd: false, interpolateOnEdit: true  },\n * });\n * ```\n *\n * Read more in the Docs section of the website.\n */\nclass PlanarFreehandROITool extends AnnotationTool {\n  static toolName;\n\n  public touchDragCallback: any;\n  public mouseDragCallback: any;\n  _throttledCalculateCachedStats: any;\n  private commonData?: PlanarFreehandROICommonData;\n  isDrawing = false;\n  isEditingClosed = false;\n  isEditingOpen = false;\n\n  private activateDraw: (\n    evt: EventTypes.InteractionEventType,\n    annotation: PlanarFreehandROIAnnotation,\n    viewportIdsToRender: string[]\n  ) => void;\n  private activateClosedContourEdit: (\n    evt: EventTypes.InteractionEventType,\n    annotation: PlanarFreehandROIAnnotation,\n    viewportIdsToRender: string[]\n  ) => void;\n  private activateOpenContourEdit: (\n    evt: EventTypes.InteractionEventType,\n    annotation: PlanarFreehandROIAnnotation,\n    viewportIdsToRender: string[]\n  ) => void;\n  private activateOpenContourEndEdit: (\n    evt: EventTypes.InteractionEventType,\n    annotation: PlanarFreehandROIAnnotation,\n    viewportIdsToRender: string[],\n    handle: ToolHandle | null\n  ) => void;\n  private cancelDrawing: (element: HTMLDivElement) => void;\n  private cancelClosedContourEdit: (element: HTMLDivElement) => void;\n  private cancelOpenContourEdit: (element: HTMLDivElement) => void;\n\n  private renderContour: (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper,\n    annotation: PlanarFreehandROIAnnotation\n  ) => void;\n  private renderContourBeingDrawn: (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper,\n    annotation: PlanarFreehandROIAnnotation\n  ) => void;\n  private renderClosedContourBeingEdited: (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper,\n    annotation: PlanarFreehandROIAnnotation\n  ) => void;\n  private renderOpenContourBeingEdited: (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper,\n    annotation: PlanarFreehandROIAnnotation\n  ) => void;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        shadow: true,\n        preventHandleOutsideImage: false,\n        alwaysRenderOpenContourHandles: {\n          // When true, always render end points when you have an open contour, rather\n          // than just rendering a line.\n          enabled: false,\n          // When enabled, use this radius to draw the endpoints whilst not hovering.\n          radius: 2,\n        },\n        allowOpenContours: true,\n        // Proximity in canvas coordinates used to join contours.\n        closeContourProximity: 10,\n        // The proximity at which we fallback to the simplest grabbing logic for\n        // determining what index of the contour to start editing.\n        checkCanvasEditFallbackProximity: 6,\n        // The relative distance that points should be dropped along the polyline\n        // in units of the image pixel spacing. A value of 1 means that nodes must\n        // be placed no closed than the image spacing apart. A value of 4 means that 4\n        // nodes should be placed within the space of one image pixel size. A higher\n        // value gives more finese to the tool/smoother lines, but the value cannot\n        // be infinite as the lines become very computationally expensive to draw.\n        subPixelResolution: 4,\n        interpolation: {\n          interpolateOnAdd: false,\n          interpolateOnEdit: false, // used for edit only\n          knotsRatioPercentageOnAdd: 40,\n          knotsRatioPercentageOnEdit: 40,\n        },\n        calculateStats: false,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n\n    // Register event loops and rendering logic, which are stored in different\n    // Files due to their complexity/size.\n    registerDrawLoop(this);\n    registerEditLoopCommon(this);\n    registerClosedContourEditLoop(this);\n    registerOpenContourEditLoop(this);\n    registerOpenContourEndEditLoop(this);\n    registerRenderMethods(this);\n\n    this._throttledCalculateCachedStats = throttle(\n      this._calculateCachedStats,\n      100,\n      { trailing: true }\n    );\n  }\n\n  /**\n   * Based on the current position of the mouse and the current image, creates\n   * a `PlanarFreehandROIAnnotation` and stores it in the annotationManager.\n   *\n   * @param evt - `EventTypes.NormalizedMouseEventType`\n   * @returns The `PlanarFreehandROIAnnotation` object.\n   */\n  addNewAnnotation = (\n    evt: EventTypes.InteractionEventType\n  ): PlanarFreehandROIAnnotation => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    const referencedImageId = this.getReferencedImageId(\n      viewport,\n      worldPos,\n      viewPlaneNormal,\n      viewUp\n    );\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n    const annotation: PlanarFreehandROIAnnotation = {\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId,\n        toolName: this.getToolName(),\n      },\n      data: {\n        handles: {\n          points: [], // Handle points for open contours\n          activeHandleIndex: null,\n          textBox: {\n            hasMoved: false,\n            worldPosition: <Types.Point3>[0, 0, 0],\n            worldBoundingBox: {\n              topLeft: <Types.Point3>[0, 0, 0],\n              topRight: <Types.Point3>[0, 0, 0],\n              bottomLeft: <Types.Point3>[0, 0, 0],\n              bottomRight: <Types.Point3>[0, 0, 0],\n            },\n          },\n        },\n        polyline: [<Types.Point3>[...worldPos]], // Polyline coordinates\n        label: '',\n        cachedStats: {},\n      },\n    };\n\n    addAnnotation(annotation, element);\n\n    this.activateDraw(evt, annotation, viewportIdsToRender);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  };\n\n  /**\n   * Begins an edit of an open contour, when the mouse has selected a handle\n   * (end) of the open contour.\n   *\n   * @param evt - `EventTypes.MouseDownEventType`\n   * @param annotation - `PlanarFreehandROIAnnotation` annotation.\n   * @param handle - The handle index, 0 for the start and 1 for the end.\n   * @param interactionType - interaction type (mouse, touch)\n   */\n  handleSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: PlanarFreehandROIAnnotation,\n    handle: ToolHandle\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.activateOpenContourEndEdit(\n      evt,\n      annotation,\n      viewportIdsToRender,\n      handle\n    );\n  };\n\n  /**\n   * Edits the open or closed contour when the line is grabbed and dragged.\n   */\n  toolSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: PlanarFreehandROIAnnotation\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    if (annotation.data.isOpenContour) {\n      this.activateOpenContourEdit(evt, annotation, viewportIdsToRender);\n    } else {\n      this.activateClosedContourEdit(evt, annotation, viewportIdsToRender);\n    }\n  };\n\n  /**\n   * Returns if the canvas point is near the line of the given annotation in the\n   * provided element or not. A proximity is passed to the function to determine the\n   * proximity of the point to the annotation in number of pixels.\n   *\n   * @param element - HTML Element\n   * @param annotation - The `PlanarFreehandROIAnnotation`.\n   * @param canvasCoords - Canvas coordinates\n   * @param proximity - Proximity to tool to consider\n   * @returns Boolean, whether the canvas point is near tool\n   */\n  isPointNearTool = (\n    element: HTMLDivElement,\n    annotation: PlanarFreehandROIAnnotation,\n    canvasCoords: Types.Point2,\n    proximity: number\n  ): boolean => {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    const points = annotation.data.polyline;\n\n    // NOTE: It is implemented this way so that we do not double calculate\n    // points when number crunching adjacent line segments.\n    let previousPoint = viewport.worldToCanvas(points[0]);\n\n    for (let i = 1; i < points.length; i++) {\n      const p1 = previousPoint;\n      const p2 = viewport.worldToCanvas(points[i]);\n\n      const distance = pointCanProjectOnLine(canvasCoords, p1, p2, proximity);\n\n      if (distance === true) {\n        return true;\n      }\n\n      previousPoint = p2;\n    }\n\n    if (annotation.data.isOpenContour) {\n      // Contour is open, don't check last point to first point.\n      return false;\n    }\n\n    // check last point to first point\n    const pStart = viewport.worldToCanvas(points[0]);\n    const pEnd = viewport.worldToCanvas(points[points.length - 1]);\n\n    const distance = pointCanProjectOnLine(\n      canvasCoords,\n      pStart,\n      pEnd,\n      proximity\n    );\n\n    if (distance === true) {\n      return true;\n    }\n\n    return false;\n  };\n\n  cancel = (element: HTMLDivElement): void => {\n    const isDrawing = this.isDrawing;\n    const isEditingOpen = this.isEditingOpen;\n    const isEditingClosed = this.isEditingClosed;\n\n    if (isDrawing) {\n      this.cancelDrawing(element);\n    } else if (isEditingOpen) {\n      this.cancelOpenContourEdit(element);\n    } else if (isEditingClosed) {\n      this.cancelClosedContourEdit(element);\n    }\n  };\n\n  /**\n   * Triggers an annotation modified event.\n   */\n  triggerAnnotationModified = (\n    annotation: PlanarFreehandROIAnnotation,\n    enabledElement: Types.IEnabledElement\n  ): void => {\n    const { viewportId, renderingEngineId } = enabledElement;\n    // Dispatching annotation modified\n    const eventType = Events.ANNOTATION_MODIFIED;\n\n    const eventDetail: AnnotationModifiedEventDetail = {\n      annotation,\n      viewportId,\n      renderingEngineId,\n    };\n    triggerEvent(eventTarget, eventType, eventDetail);\n  };\n\n  /**\n   * Triggers an annotation completed event.\n   */\n  triggerAnnotationCompleted = (\n    annotation: PlanarFreehandROIAnnotation\n  ): void => {\n    const eventType = Events.ANNOTATION_COMPLETED;\n\n    const eventDetail: AnnotationCompletedEventDetail = {\n      annotation,\n    };\n\n    triggerEvent(eventTarget, eventType, eventDetail);\n  };\n\n  /**\n   * @override We need to override this method as the tool doesn't always have\n   * `handles`, which means `filterAnnotationsForDisplay` fails inside\n   * `filterAnnotationsWithinSlice`.\n   */\n  filterInteractableAnnotationsForElement(\n    element: HTMLDivElement,\n    annotations: Annotations\n  ): Annotations | undefined {\n    if (!annotations || !annotations.length) {\n      return;\n    }\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    let annotationsToDisplay;\n\n    if (viewport instanceof StackViewport) {\n      // Use the default `filterAnnotationsForDisplay` utility, as the stack\n      // path doesn't require handles.\n      annotationsToDisplay = filterAnnotationsForDisplay(viewport, annotations);\n    } else if (viewport instanceof VolumeViewport) {\n      const camera = viewport.getCamera();\n\n      const { spacingInNormalDirection } =\n        csUtils.getTargetVolumeAndSpacingInNormalDir(viewport, camera);\n\n      // Get data with same normal and within the same slice\n      annotationsToDisplay = this.filterAnnotationsWithinSlice(\n        annotations,\n        camera,\n        spacingInNormalDirection\n      );\n    } else {\n      throw new Error(`Viewport Type ${viewport.type} not supported`);\n    }\n\n    return annotationsToDisplay;\n  }\n\n  /**\n   * Altered version of the `utilities.planar.filterAnnotationsWithinSlice`,\n   * which uses the polyline position rather than the handle. As the polyline is\n   * always present.\n   */\n  private filterAnnotationsWithinSlice(\n    annotations: Annotations,\n    camera: Types.ICamera,\n    spacingInNormalDirection: number\n  ): Annotations {\n    const { viewPlaneNormal } = camera;\n\n    const annotationsWithParallelNormals = annotations.filter(\n      (td: Annotation) => {\n        const annotationViewPlaneNormal = td.metadata.viewPlaneNormal;\n\n        const isParallel =\n          Math.abs(vec3.dot(viewPlaneNormal, annotationViewPlaneNormal)) >\n          PARALLEL_THRESHOLD;\n\n        return annotationViewPlaneNormal && isParallel;\n      }\n    );\n\n    // No in plane annotations.\n    if (!annotationsWithParallelNormals.length) {\n      return [];\n    }\n\n    // Annotation should be within the slice, which means that it should be between\n    // camera's focalPoint +/- spacingInNormalDirection.\n\n    const halfSpacingInNormalDirection = spacingInNormalDirection / 2;\n    const { focalPoint } = camera;\n\n    const annotationsWithinSlice = [];\n\n    for (const annotation of annotationsWithParallelNormals) {\n      const data = annotation.data;\n      const point = data.polyline[0];\n\n      if (!annotation.isVisible) {\n        continue;\n      }\n\n      // A = point\n      // B = focal point\n      // P = normal\n\n      // B-A dot P  => Distance in the view direction.\n      // this should be less than half the slice distance.\n\n      const dir = vec3.create();\n\n      vec3.sub(dir, focalPoint, point);\n\n      const dot = vec3.dot(dir, viewPlaneNormal);\n\n      if (Math.abs(dot) < halfSpacingInNormalDirection) {\n        annotationsWithinSlice.push(annotation);\n      }\n    }\n\n    return annotationsWithinSlice;\n  }\n\n  /**\n   * Draws the `PlanarFreehandROIAnnotation`s at each request animation frame.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n    const { viewport, renderingEngine } = enabledElement;\n    const { element } = viewport;\n\n    const targetId = this.getTargetId(viewport);\n\n    let annotations = <PlanarFreehandROIAnnotation[]>(\n      getAnnotations(this.getToolName(), element)\n    );\n\n    // Todo: We don't need this anymore, filtering happens in triggerAnnotationRender\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    annotations = this.filterInteractableAnnotationsForElement(\n      element,\n      annotations\n    ) as PlanarFreehandROIAnnotation[];\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    const isDrawing = this.isDrawing;\n    const isEditingOpen = this.isEditingOpen;\n    const isEditingClosed = this.isEditingClosed;\n\n    if (!(isDrawing || isEditingOpen || isEditingClosed)) {\n      // No annotations are currently being modified, so we can just use the\n      // render contour method to render all of them\n      annotations.forEach((annotation) => {\n        this.renderContour(enabledElement, svgDrawingHelper, annotation);\n      });\n    } else {\n      // One of the annotations will need special rendering treatment, render all\n      // other annotations not being interacted with using the standard renderContour\n      // rendering path.\n      const activeAnnotationUID = this.commonData.annotation.annotationUID;\n\n      annotations.forEach((annotation) => {\n        if (annotation.annotationUID === activeAnnotationUID) {\n          if (isDrawing) {\n            this.renderContourBeingDrawn(\n              enabledElement,\n              svgDrawingHelper,\n              annotation\n            );\n          } else if (isEditingClosed) {\n            this.renderClosedContourBeingEdited(\n              enabledElement,\n              svgDrawingHelper,\n              annotation\n            );\n          } else if (isEditingOpen) {\n            this.renderOpenContourBeingEdited(\n              enabledElement,\n              svgDrawingHelper,\n              annotation\n            );\n          } else {\n            throw new Error(\n              `Unknown ${this.getToolName()} annotation rendering state`\n            );\n          }\n        } else {\n          this.renderContour(enabledElement, svgDrawingHelper, annotation);\n        }\n      });\n\n      // Todo: return boolean flag for each rendering route in the planar tool.\n      renderStatus = true;\n    }\n\n    if (!this.configuration.calculateStats) return;\n\n    annotations.forEach((annotation) => {\n      const activeAnnotationUID = this.commonData?.annotation.annotationUID;\n      if (\n        annotation.annotationUID === activeAnnotationUID &&\n        !this.commonData?.movingTextBox\n      )\n        return;\n\n      const modalityUnitOptions = {\n        isPreScaled: isViewportPreScaled(viewport, targetId),\n        isSuvScaled: this.isSuvScaled(\n          viewport,\n          targetId,\n          annotation.metadata.referencedImageId\n        ),\n      };\n\n      if (!this.commonData?.movingTextBox) {\n        const { data } = annotation;\n        if (\n          !data.cachedStats[targetId] ||\n          data.cachedStats[targetId].areaUnit === undefined\n        ) {\n          data.cachedStats[targetId] = {\n            Modality: null,\n            area: null,\n            max: null,\n            mean: null,\n            stdDev: null,\n            areaUnit: null,\n          };\n\n          this._calculateCachedStats(\n            annotation,\n            viewport,\n            renderingEngine,\n            enabledElement,\n            modalityUnitOptions\n          );\n        } else if (annotation.invalidated) {\n          this._throttledCalculateCachedStats(\n            annotation,\n            viewport,\n            renderingEngine,\n            enabledElement,\n            modalityUnitOptions\n          );\n        }\n      }\n\n      this._renderStats(annotation, viewport, enabledElement, svgDrawingHelper);\n    });\n\n    return renderStatus;\n  };\n\n  _calculateCachedStats = (\n    annotation,\n    viewport,\n    renderingEngine,\n    enabledElement,\n    modalityUnitOptions: ModalityUnitOptions\n  ) => {\n    const data = annotation.data;\n    const { cachedStats, polyline: points } = data;\n\n    const targetIds = Object.keys(cachedStats);\n\n    for (let i = 0; i < targetIds.length; i++) {\n      const targetId = targetIds[i];\n      const image = this.getTargetIdImage(targetId, renderingEngine);\n\n      // If image does not exists for the targetId, skip. This can be due\n      // to various reasons such as if the target was a volumeViewport, and\n      // the volumeViewport has been decached in the meantime.\n      if (!image) {\n        continue;\n      }\n\n      const { imageData, metadata } = image;\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n      const scale = getCalibratedScale(image);\n      const area =\n        polyline.calculateAreaOfPoints(canvasCoordinates) / scale / scale;\n\n      const worldPosIndex = csUtils.transformWorldToIndex(imageData, points[0]);\n      worldPosIndex[0] = Math.floor(worldPosIndex[0]);\n      worldPosIndex[1] = Math.floor(worldPosIndex[1]);\n      worldPosIndex[2] = Math.floor(worldPosIndex[2]);\n\n      let iMin = worldPosIndex[0];\n      let iMax = worldPosIndex[0];\n\n      let jMin = worldPosIndex[1];\n      let jMax = worldPosIndex[1];\n\n      let kMin = worldPosIndex[2];\n      let kMax = worldPosIndex[2];\n\n      for (let j = 1; j < points.length; j++) {\n        const worldPosIndex = csUtils.transformWorldToIndex(\n          imageData,\n          points[j]\n        );\n        worldPosIndex[0] = Math.floor(worldPosIndex[0]);\n        worldPosIndex[1] = Math.floor(worldPosIndex[1]);\n        worldPosIndex[2] = Math.floor(worldPosIndex[2]);\n        iMin = Math.min(iMin, worldPosIndex[0]);\n        iMax = Math.max(iMax, worldPosIndex[0]);\n\n        jMin = Math.min(jMin, worldPosIndex[1]);\n        jMax = Math.max(jMax, worldPosIndex[1]);\n\n        kMin = Math.min(kMin, worldPosIndex[2]);\n        kMax = Math.max(kMax, worldPosIndex[2]);\n      }\n\n      // Expand bounding box\n      const iDelta = 0.01 * (iMax - iMin);\n      const jDelta = 0.01 * (jMax - jMin);\n      const kDelta = 0.01 * (kMax - kMin);\n\n      iMin = Math.floor(iMin - iDelta);\n      iMax = Math.ceil(iMax + iDelta);\n      jMin = Math.floor(jMin - jDelta);\n      jMax = Math.ceil(jMax + jDelta);\n      kMin = Math.floor(kMin - kDelta);\n      kMax = Math.ceil(kMax + kDelta);\n\n      const boundsIJK = [\n        [iMin, iMax],\n        [jMin, jMax],\n        [kMin, kMax],\n      ] as [Types.Point2, Types.Point2, Types.Point2];\n\n      const worldPosEnd = imageData.indexToWorld([iMax, jMax, kMax]);\n      const canvasPosEnd = viewport.worldToCanvas(worldPosEnd);\n\n      let count = 0;\n      let sum = 0;\n      let sumSquares = 0;\n      let max = -Infinity;\n\n      const statCalculator = ({ value: newValue }) => {\n        if (newValue > max) {\n          max = newValue;\n        }\n\n        sum += newValue;\n        sumSquares += newValue ** 2;\n        count += 1;\n      };\n\n      let curRow = 0;\n      let intersections = [];\n      let intersectionCounter = 0;\n      pointInShapeCallback(\n        imageData,\n        (pointLPS, pointIJK) => {\n          let result = true;\n          const point = viewport.worldToCanvas(pointLPS);\n          if (point[1] != curRow) {\n            intersectionCounter = 0;\n            curRow = point[1];\n            intersections = getIntersectionCoordinatesWithPolyline(\n              canvasCoordinates,\n              point,\n              [canvasPosEnd[0], point[1]]\n            );\n            intersections.sort(\n              (function (index) {\n                return function (a, b) {\n                  return a[index] === b[index]\n                    ? 0\n                    : a[index] < b[index]\n                    ? -1\n                    : 1;\n                };\n              })(0)\n            );\n          }\n          if (intersections.length && point[0] > intersections[0][0]) {\n            intersections.shift();\n            intersectionCounter++;\n          }\n          if (intersectionCounter % 2 === 0) {\n            result = false;\n          }\n          return result;\n        },\n        statCalculator,\n        boundsIJK\n      );\n\n      const mean = sum / count;\n\n      // https://www.strchr.com/standard_deviation_in_one_pass?allcomments=1\n      let stdDev = sumSquares / count - mean ** 2;\n      stdDev = Math.sqrt(stdDev);\n\n      const modalityUnit = getModalityUnit(\n        metadata.Modality,\n        annotation.metadata.referencedImageId,\n        modalityUnitOptions\n      );\n\n      cachedStats[targetId] = {\n        Modality: metadata.Modality,\n        area,\n        mean,\n        max,\n        stdDev,\n        areaUnit: getCalibratedAreaUnits(null, image),\n        modalityUnit,\n      };\n    }\n\n    this.triggerAnnotationModified(annotation, enabledElement);\n\n    annotation.invalidated = false;\n\n    return cachedStats;\n  };\n\n  _renderStats = (annotation, viewport, enabledElement, svgDrawingHelper) => {\n    const data = annotation.data;\n    const targetId = this.getTargetId(viewport);\n\n    const textLines = this._getTextLines(data, targetId);\n    if (!textLines || textLines.length === 0) return;\n\n    const canvasCoordinates = data.polyline.map((p) =>\n      viewport.worldToCanvas(p)\n    );\n    if (!data.handles.textBox.hasMoved) {\n      const canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCoordinates);\n\n      data.handles.textBox.worldPosition =\n        viewport.canvasToWorld(canvasTextBoxCoords);\n    }\n\n    const textBoxPosition = viewport.worldToCanvas(\n      data.handles.textBox.worldPosition\n    );\n\n    const styleSpecifier: AnnotationStyle.StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    const textBoxUID = '1';\n    const boundingBox = drawLinkedTextBox(\n      svgDrawingHelper,\n      annotation.annotationUID ?? '',\n      textBoxUID,\n      textLines,\n      textBoxPosition,\n      canvasCoordinates,\n      {},\n      this.getLinkedTextBoxStyle(styleSpecifier, annotation)\n    );\n\n    const { x: left, y: top, width, height } = boundingBox;\n\n    data.handles.textBox.worldBoundingBox = {\n      topLeft: viewport.canvasToWorld([left, top]),\n      topRight: viewport.canvasToWorld([left + width, top]),\n      bottomLeft: viewport.canvasToWorld([left, top + height]),\n      bottomRight: viewport.canvasToWorld([left + width, top + height]),\n    };\n  };\n\n  _getTextLines = (data, targetId: string): string[] => {\n    const cachedVolumeStats = data.cachedStats[targetId];\n    const { area, mean, stdDev, max, isEmptyArea, areaUnit, modalityUnit } =\n      cachedVolumeStats;\n\n    const textLines: string[] = [];\n\n    if (area) {\n      const areaLine = isEmptyArea\n        ? `Area: Oblique not supported`\n        : `Area: ${roundNumber(area)} ${areaUnit}`;\n      textLines.push(areaLine);\n    }\n\n    if (mean) {\n      textLines.push(`Mean: ${roundNumber(mean)} ${modalityUnit}`);\n    }\n\n    if (max) {\n      textLines.push(`Max: ${roundNumber(max)} ${modalityUnit}`);\n    }\n\n    if (stdDev) {\n      textLines.push(`Std Dev: ${roundNumber(stdDev)} ${modalityUnit}`);\n    }\n\n    return textLines;\n  };\n}\n\nPlanarFreehandROITool.toolName = 'PlanarFreehandROI';\nexport default PlanarFreehandROITool;\n","import { Types } from '@cornerstonejs/core';\nimport { PlanarFreehandROITool } from '../../tools';\nimport { ToolGroupManager } from '../../store';\nimport { PlanarFreehandROIAnnotation } from '../../types/ToolSpecificAnnotationTypes';\nimport interpolateSegmentPoints from './interpolation/interpolateSegmentPoints';\n\nfunction shouldPreventInterpolation(\n  enabledElement: Types.IEnabledElement,\n  annotation: PlanarFreehandROIAnnotation,\n  knotsRatioPercentage: number\n): boolean {\n  if (!annotation?.data?.polyline || knotsRatioPercentage <= 0) {\n    return true;\n  }\n\n  if (!enabledElement.viewport) {\n    return true;\n  }\n\n  const { renderingEngineId, viewportId, FrameOfReferenceUID } = enabledElement;\n  const toolGroup = ToolGroupManager.getToolGroupForViewport(\n    viewportId,\n    renderingEngineId\n  );\n\n  if (annotation.metadata.FrameOfReferenceUID !== FrameOfReferenceUID) {\n    return true;\n  }\n\n  if (!toolGroup) {\n    return true;\n  }\n\n  const toolInstance = toolGroup.getToolInstance(annotation.metadata.toolName);\n\n  // strategy to prevent non PlanarFreehandTool\n  if (!(toolInstance instanceof PlanarFreehandROITool)) {\n    return true;\n  }\n\n  return (\n    toolInstance.isDrawing ||\n    toolInstance.isEditingOpen ||\n    toolInstance.isEditingClosed\n  );\n}\n/**\n * Interpolates a given annotation from a given enabledElement.\n * It mutates annotation param.\n * The param knotsRatioPercentage defines the percentage of points to be considered as knots on the interpolation process.\n * Interpolation will be skipped in case: annotation is not present in enabledElement (or there is no toolGroup associated with it), related tool is being modified.\n */\nexport default function interpolateAnnotation(\n  enabledElement: Types.IEnabledElement,\n  annotation: PlanarFreehandROIAnnotation,\n  knotsRatioPercentage: number\n): boolean {\n  // prevent running while there is any tool annotation being modified\n  if (\n    shouldPreventInterpolation(enabledElement, annotation, knotsRatioPercentage)\n  ) {\n    return false;\n  }\n\n  const { viewport } = enabledElement;\n  // use only 2 dimensions on interpolation (what visually matters),\n  // otherwise a 3d interpolation might have a totally different output as it consider one more dimension.\n  const canvasPoints = annotation.data.polyline.map(viewport.worldToCanvas);\n  const interpolatedCanvasPoints = <Types.Point2[]>(\n    interpolateSegmentPoints(\n      canvasPoints,\n      0,\n      canvasPoints.length,\n      knotsRatioPercentage\n    )\n  );\n\n  if (interpolatedCanvasPoints === canvasPoints) {\n    return false;\n  }\n\n  annotation.data.polyline = interpolatedCanvasPoints.map(\n    viewport.canvasToWorld\n  );\n\n  return true;\n}\n","import interpolateAnnotation from './interpolateAnnotation';\n\nexport default {\n  interpolateAnnotation,\n};\n\nexport { interpolateAnnotation };\n","import { getEnabledElement } from '@cornerstonejs/core';\n\nconst state: Record<number, any> = {};\n\nfunction addToolState(element: HTMLDivElement, data): void {\n  const enabledElement = getEnabledElement(element);\n  const { viewportId } = enabledElement;\n  state[viewportId] = data;\n}\n\nfunction getToolState(element: HTMLDivElement): any {\n  const enabledElement = getEnabledElement(element);\n  const { viewportId } = enabledElement;\n  return state[viewportId];\n}\n\nexport { addToolState, getToolState };\n","import {\n  getEnabledElement,\n  StackViewport,\n  imageLoader,\n  Enums,\n  eventTarget,\n  imageLoadPoolManager,\n  cache,\n  getConfiguration as getCoreConfiguration,\n} from '@cornerstonejs/core';\nimport { addToolState, getToolState } from './state';\n\nconst requestType = Enums.RequestType.Prefetch;\nconst priority = 0;\nconst addToBeginning = true;\n\nlet configuration = {\n  maxImagesToPrefetch: Infinity,\n  preserveExistingPool: false,\n};\n\nlet resetPrefetchTimeout;\nconst resetPrefetchDelay = 10;\n\nfunction range(lowEnd, highEnd) {\n  // Javascript version of Python's range function\n  // http://stackoverflow.com/questions/3895478/does-javascript-have-a-method-like-range-to-generate-an-array-based-on-suppl\n  lowEnd = Math.round(lowEnd) || 0;\n  highEnd = Math.round(highEnd) || 0;\n\n  const arr = [];\n  let c = highEnd - lowEnd + 1;\n\n  if (c <= 0) {\n    return arr;\n  }\n\n  while (c--) {\n    arr[c] = highEnd--;\n  }\n\n  return arr;\n}\n\nfunction nearestIndex(arr, x) {\n  // Return index of nearest values in array\n  // http://stackoverflow.com/questions/25854212/return-index-of-nearest-values-in-an-array\n  let low = 0;\n  let high = arr.length - 1;\n\n  arr.forEach((v, idx) => {\n    if (v < x) {\n      low = Math.max(idx, low);\n    } else if (v > x) {\n      high = Math.min(idx, high);\n    }\n  });\n\n  return { low, high };\n}\n\nfunction getStackData(element) {\n  const enabledElement = getEnabledElement(element);\n\n  if (!enabledElement) {\n    throw new Error(\n      'stackPrefetch: element must be a valid Cornerstone enabled element'\n    );\n  }\n\n  const { viewport } = enabledElement;\n\n  if (!(viewport instanceof StackViewport)) {\n    throw new Error(\n      'stackPrefetch: element must be a StackViewport, VolumeViewport stackPrefetch not yet implemented'\n    );\n  }\n\n  return {\n    currentImageIdIndex: viewport.getCurrentImageIdIndex(),\n    imageIds: viewport.getImageIds(),\n  };\n}\n\nfunction prefetch(element) {\n  // Get the stackPrefetch tool data\n  const stackPrefetchData = getToolState(element);\n\n  if (!stackPrefetchData) {\n    return;\n  }\n\n  const stackPrefetch = stackPrefetchData || {};\n  const stack = getStackData(element);\n\n  if (!stack || !stack.imageIds || stack.imageIds.length === 0) {\n    console.warn('CornerstoneTools.stackPrefetch: No images in stack.');\n    return;\n  }\n\n  // If all the requests are complete, disable the stackPrefetch tool\n  if (\n    !stackPrefetch.indicesToRequest ||\n    !stackPrefetch.indicesToRequest.length\n  ) {\n    stackPrefetch.enabled = false;\n  }\n\n  // Make sure the tool is still enabled\n  if (stackPrefetch.enabled === false) {\n    return;\n  }\n\n  // Remove an imageIdIndex from the list of indices to request\n  // This fires when the individual image loading deferred is resolved\n  function removeFromList(imageIdIndex) {\n    const index = stackPrefetch.indicesToRequest.indexOf(imageIdIndex);\n\n    if (index > -1) {\n      // Don't remove last element if imageIdIndex not found\n      stackPrefetch.indicesToRequest.splice(index, 1);\n    }\n  }\n\n  // Remove all already cached images from the\n  // IndicesToRequest array\n  stackPrefetchData.indicesToRequest.sort((a, b) => a - b);\n  const indicesToRequestCopy = stackPrefetch.indicesToRequest.slice();\n\n  indicesToRequestCopy.forEach(function (imageIdIndex) {\n    const imageId = stack.imageIds[imageIdIndex];\n\n    if (!imageId) {\n      return;\n    }\n\n    const imageLoadObject = cache.getImageLoadObject(imageId);\n\n    if (imageLoadObject) {\n      removeFromList(imageIdIndex);\n    }\n  });\n\n  // Stop here if there are no images left to request\n  // After those in the cache have been removed\n  if (!stackPrefetch.indicesToRequest.length) {\n    return;\n  }\n\n  // Clear the requestPool of prefetch requests, if needed.\n  if (!configuration.preserveExistingPool) {\n    imageLoadPoolManager.clearRequestStack(requestType);\n  }\n\n  // Identify the nearest imageIdIndex to the currentImageIdIndex\n  const nearest = nearestIndex(\n    stackPrefetch.indicesToRequest,\n    stack.currentImageIdIndex\n  );\n\n  let imageId;\n  let nextImageIdIndex;\n  const preventCache = false;\n\n  function doneCallback(image) {\n    console.log('prefetch done: %s', image.imageId);\n    const imageIdIndex = stack.imageIds.indexOf(image.imageId);\n\n    removeFromList(imageIdIndex);\n\n    // triggerEvent(element, EVENTS.STACK_PREFETCH_IMAGE_LOADED, {\n    //   element,\n    //   imageId: image.imageId,\n    //   imageIndex: imageIdIndex,\n    //   stackPrefetch,\n    //   stack,\n    // });\n\n    // If there are no more images to fetch\n    // if (\n    //   !(\n    //     stackPrefetch.indicesToRequest &&\n    //     stackPrefetch.indicesToRequest.length > 0\n    //   )\n    // ) {\n    //   triggerEvent(element, EVENTS.STACK_PREFETCH_DONE, {\n    //     element,\n    //     stackPrefetch,\n    //     stack,\n    //   });\n    // }\n  }\n\n  // Retrieve the errorLoadingHandler if one exists\n  // const errorLoadingHandler =\n  //   loadHandlerManager.getErrorLoadingHandler(element);\n\n  // function failCallback(error) {\n  //   logger.log('prefetch errored: %o', error);\n  //   if (errorLoadingHandler) {\n  //     errorLoadingHandler(element, imageId, error, 'stackPrefetch');\n  //   }\n  // }\n\n  // Prefetch images around the current image (before and after)\n  let lowerIndex = nearest.low;\n  let higherIndex = nearest.high;\n  const imageIdsToPrefetch = [];\n\n  while (\n    lowerIndex >= 0 ||\n    higherIndex < stackPrefetch.indicesToRequest.length\n  ) {\n    const currentIndex = stack.currentImageIdIndex;\n    const shouldSkipLower =\n      currentIndex - stackPrefetch.indicesToRequest[lowerIndex] >\n      configuration.maxImagesToPrefetch;\n    const shouldSkipHigher =\n      stackPrefetch.indicesToRequest[higherIndex] - currentIndex >\n      configuration.maxImagesToPrefetch;\n\n    const shouldLoadLower = !shouldSkipLower && lowerIndex >= 0;\n    const shouldLoadHigher =\n      !shouldSkipHigher && higherIndex < stackPrefetch.indicesToRequest.length;\n\n    if (!shouldLoadHigher && !shouldLoadLower) {\n      break;\n    }\n\n    if (shouldLoadLower) {\n      nextImageIdIndex = stackPrefetch.indicesToRequest[lowerIndex--];\n      imageId = stack.imageIds[nextImageIdIndex];\n      imageIdsToPrefetch.push(imageId);\n    }\n\n    if (shouldLoadHigher) {\n      nextImageIdIndex = stackPrefetch.indicesToRequest[higherIndex++];\n      imageId = stack.imageIds[nextImageIdIndex];\n      imageIdsToPrefetch.push(imageId);\n    }\n  }\n\n  const requestFn = (imageId, options) =>\n    imageLoader.loadAndCacheImage(imageId, options);\n\n  const { useNorm16Texture } = getCoreConfiguration().rendering;\n\n  imageIdsToPrefetch.forEach((imageId) => {\n    // IMPORTANT: Request type should be passed if not the 'interaction'\n    // highest priority will be used for the request type in the imageRetrievalPool\n    const options = {\n      targetBuffer: {\n        type: useNorm16Texture ? undefined : 'Float32Array',\n      },\n      preScale: {\n        enabled: true,\n      },\n      requestType,\n    };\n\n    imageLoadPoolManager.addRequest(\n      requestFn.bind(null, imageId, options),\n      requestType,\n      // Additional details\n      {\n        imageId,\n      },\n      priority\n      // addToBeginning\n    );\n  });\n}\n\nfunction getPromiseRemovedHandler(element) {\n  return function (e) {\n    const eventData = e.detail;\n\n    // When an imagePromise has been pushed out of the cache, re-add its index\n    // It to the indicesToRequest list so that it will be retrieved later if the\n    // CurrentImageIdIndex is changed to an image nearby\n    let stackData;\n\n    try {\n      // It will throw an exception in some cases (eg: thumbnails)\n      stackData = getStackData(element);\n    } catch (error) {\n      return;\n    }\n\n    if (!stackData || !stackData.imageIds || stackData.imageIds.length === 0) {\n      return;\n    }\n\n    const stack = stackData;\n    const imageIdIndex = stack.imageIds.indexOf(eventData.imageId);\n\n    // Make sure the image that was removed is actually in this stack\n    // Before adding it to the indicesToRequest array\n    if (imageIdIndex < 0) {\n      return;\n    }\n\n    const stackPrefetchData = getToolState(element);\n\n    if (\n      !stackPrefetchData ||\n      !stackPrefetchData.data ||\n      !stackPrefetchData.data.length\n    ) {\n      return;\n    }\n\n    stackPrefetchData.indicesToRequest.push(imageIdIndex);\n  };\n}\n\nfunction onImageUpdated(e) {\n  // Start prefetching again (after a delay)\n  // When the user has scrolled to a new image\n  clearTimeout(resetPrefetchTimeout);\n  resetPrefetchTimeout = setTimeout(function () {\n    const element = e.target;\n\n    // If playClip is enabled and the user loads a different series in the viewport\n    // An exception will be thrown because the element will not be enabled anymore\n    try {\n      prefetch(element);\n    } catch (error) {\n      return;\n    }\n  }, resetPrefetchDelay);\n}\n\nfunction enable(element) {\n  const stack = getStackData(element);\n\n  if (!stack || !stack.imageIds || stack.imageIds.length === 0) {\n    console.warn('CornerstoneTools.stackPrefetch: No images in stack.');\n    return;\n  }\n\n  // Use the currentImageIdIndex from the stack as the initialImageIdIndex\n  const stackPrefetchData = {\n    indicesToRequest: range(0, stack.imageIds.length - 1),\n    enabled: true,\n    direction: 1,\n  };\n\n  // Remove the currentImageIdIndex from the list to request\n  const indexOfCurrentImage = stackPrefetchData.indicesToRequest.indexOf(\n    stack.currentImageIdIndex\n  );\n\n  stackPrefetchData.indicesToRequest.splice(indexOfCurrentImage, 1);\n\n  addToolState(element, stackPrefetchData);\n\n  prefetch(element);\n\n  element.removeEventListener(Enums.Events.STACK_NEW_IMAGE, onImageUpdated);\n  element.addEventListener(Enums.Events.STACK_NEW_IMAGE, onImageUpdated);\n\n  const promiseRemovedHandler = getPromiseRemovedHandler(element);\n\n  eventTarget.removeEventListener(\n    Enums.Events.IMAGE_CACHE_IMAGE_REMOVED,\n    promiseRemovedHandler\n  );\n  eventTarget.addEventListener(\n    Enums.Events.IMAGE_CACHE_IMAGE_REMOVED,\n    promiseRemovedHandler\n  );\n}\n\nfunction disable(element) {\n  clearTimeout(resetPrefetchTimeout);\n  element.removeEventListener(Enums.Events.STACK_NEW_IMAGE, onImageUpdated);\n\n  const promiseRemovedHandler = getPromiseRemovedHandler(element);\n\n  eventTarget.removeEventListener(\n    Enums.Events.IMAGE_CACHE_IMAGE_REMOVED,\n    promiseRemovedHandler\n  );\n\n  const stackPrefetchData = getToolState(element);\n  // If there is actually something to disable, disable it\n\n  if (stackPrefetchData && stackPrefetchData.data.length) {\n    stackPrefetchData.enabled = false;\n\n    // Clear current prefetch requests from the requestPool\n    imageLoadPoolManager.clearRequestStack(requestType);\n  }\n}\n\nfunction getConfiguration() {\n  return configuration;\n}\n\nfunction setConfiguration(config) {\n  configuration = config;\n}\n\nexport { enable, disable, getConfiguration, setConfiguration };\n","import { VolumeViewport } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { vec3 } from 'gl-matrix';\n\n// Todo: merge this utility functionality with Crosshair _jump\n/**\n * Uses the viewport's current camera to jump to a specific world coordinate\n * @param enabledElement - enabled element\n * @param jumpWorld - location in the world to jump to\n * @returns True if successful\n */\nexport default function jumpToWorld(\n  viewport: Types.IVolumeViewport,\n  jumpWorld: Types.Point3\n): true | undefined {\n  // if not instance of volumeViewport, return\n  if (!(viewport instanceof VolumeViewport)) {\n    return;\n  }\n\n  const { focalPoint } = viewport.getCamera();\n\n  const delta: Types.Point3 = [0, 0, 0];\n  vec3.sub(delta, jumpWorld, focalPoint);\n\n  _applyShift(viewport, delta);\n\n  return true;\n}\n\nfunction _applyShift(viewport, delta) {\n  const camera = viewport.getCamera();\n  const normal = camera.viewPlaneNormal;\n\n  const dotProd = vec3.dot(delta, normal);\n  const projectedDelta = vec3.fromValues(normal[0], normal[1], normal[2]);\n\n  vec3.scale(projectedDelta, projectedDelta, dotProd);\n\n  if (\n    Math.abs(projectedDelta[0]) > 1e-3 ||\n    Math.abs(projectedDelta[1]) > 1e-3 ||\n    Math.abs(projectedDelta[2]) > 1e-3\n  ) {\n    const newFocalPoint: Types.Point3 = [0, 0, 0];\n    const newPosition: Types.Point3 = [0, 0, 0];\n\n    vec3.add(newFocalPoint, camera.focalPoint, projectedDelta);\n    vec3.add(newPosition, camera.position, projectedDelta);\n\n    viewport.setCamera({\n      focalPoint: newFocalPoint,\n      position: newPosition,\n    });\n    viewport.render();\n  }\n}\n","import { utilities, cache, Types } from '@cornerstonejs/core';\n\n/**\n * Gets the scalar data for a series of time points for either a single\n * coordinate or a segmentation mask, it will return the an array of scalar\n * data for a single coordinate or an array of arrays for a segmentation.\n *\n * @param dynamicVolume: 4D volume to compute time point data from\n * @param options: frameNumbers: which frames to use as timepoints, if left\n * blank, gets data timepoints over all frames\n * maskVolumeId: segmentationId to get timepoint data of\n * imageCoordinate: world coordinate to get timepoint data of\n * @returns\n */\nfunction getDataInTime(\n  dynamicVolume: Types.IDynamicImageVolume,\n  options: {\n    frameNumbers?;\n    maskVolumeId?;\n    imageCoordinate?;\n  }\n): number[] | number[][] {\n  let dataInTime;\n\n  // if frameNumbers is not provided, all frames are selected\n  const frames = options.frameNumbers || [\n    ...Array(dynamicVolume.numTimePoints).keys(),\n  ];\n\n  // You only need to provide either maskVolumeId OR imageCoordinate.\n  // Throws error if neither maskVolumeId or imageCoordinate is given,\n  // throws error if BOTH maskVolumeId and imageCoordinate is given\n  if (!options.maskVolumeId && !options.imageCoordinate) {\n    throw new Error('No ROI provided');\n  }\n\n  if (options.maskVolumeId && options.imageCoordinate) {\n    throw new Error('Please provide only one ROI');\n  }\n\n  if (options.maskVolumeId) {\n    const segmentationVolume = cache.getVolume(options.maskVolumeId);\n\n    // Get the index of every non-zero voxel in mask by mapping indexes to\n    // new array, then using the array to filter\n    const indexArray = segmentationVolume\n      .getScalarData()\n      .map((_, i) => i)\n      .filter((i) => segmentationVolume.getScalarData()[i] !== 0);\n    const dataInTime = _getTimePointDataMask(frames, indexArray, dynamicVolume);\n\n    return dataInTime;\n  }\n\n  if (options.imageCoordinate) {\n    const dataInTime = _getTimePointDataCoordinate(\n      frames,\n      options.imageCoordinate,\n      dynamicVolume\n    );\n\n    return dataInTime;\n  }\n\n  return dataInTime;\n}\n\nfunction _getTimePointDataCoordinate(frames, coordinate, volume) {\n  const { dimensions, imageData } = volume;\n  const index = imageData.worldToIndex(coordinate);\n\n  index[0] = Math.floor(index[0]);\n  index[1] = Math.floor(index[1]);\n  index[2] = Math.floor(index[2]);\n\n  if (!utilities.indexWithinDimensions(index, dimensions)) {\n    throw new Error('outside bounds');\n  }\n\n  // calculate offset for index\n  const yMultiple = dimensions[0];\n  const zMultiple = dimensions[0] * dimensions[1];\n  const allScalarData = volume.getScalarDataArrays();\n  const value = [];\n\n  frames.forEach((frame) => {\n    const activeScalarData = allScalarData[frame];\n    const scalarIndex = index[2] * zMultiple + index[1] * yMultiple + index[0];\n    value.push(activeScalarData[scalarIndex]);\n  });\n\n  return value;\n}\n\nfunction _getTimePointDataMask(frames, indexArray, volume) {\n  const allScalarData = volume.getScalarDataArrays();\n  const value = [];\n\n  for (let i = 0; i < indexArray.length; i++) {\n    const indexValues = [];\n    frames.forEach((frame) => {\n      const activeScalarData = allScalarData[frame];\n      indexValues.push(activeScalarData[indexArray[i]]);\n    });\n    value.push(indexValues);\n  }\n  return value;\n}\n\nexport default getDataInTime;\n","import { Enums, Types } from '@cornerstonejs/core';\n\n/**\n * Gets the scalar data for a series of time frames from a 4D volume, returns an\n * array of scalar data after performing AVERAGE, SUM or SUBTRACT to be used to\n * create a 3D volume\n *\n * @param dynamicVolume4D: volume to compute time frame data from\n * @param operation: operation to perform on time frame data, operations include\n * SUM, AVERAGE, and SUBTRACT (can only be used with 2 time frames provided)\n * @param frameNumbers: an array of frame indexs to perform the operation on, if\n * left empty, all frames will be used\n * @returns\n */\nfunction generateImageFromTimeData(\n  dynamicVolume: Types.IDynamicImageVolume,\n  operation: string,\n  frameNumbers?: number[]\n) {\n  // If no time frames provided, use all time frames\n  const frames = frameNumbers || [...Array(dynamicVolume.numTimePoints).keys()];\n  const numFrames = frames.length;\n\n  if (frames.length <= 1) {\n    throw new Error('Please provide two or more time points');\n  }\n\n  // Gets scalar data for all time frames\n  const typedArrays = dynamicVolume.getScalarDataArrays();\n\n  const arrayLength = typedArrays[0].length;\n  const finalArray = new Float32Array(arrayLength);\n\n  if (operation === Enums.DynamicOperatorType.SUM) {\n    for (let i = 0; i < numFrames; i++) {\n      const currentArray = typedArrays[frames[i]];\n      for (let j = 0; j < arrayLength; j++) {\n        finalArray[j] += currentArray[j];\n      }\n    }\n    return finalArray;\n  }\n\n  if (operation === Enums.DynamicOperatorType.SUBTRACT) {\n    if (frames.length > 2) {\n      throw new Error('Please provide only 2 time points for subtraction.');\n    }\n    for (let j = 0; j < arrayLength; j++) {\n      finalArray[j] += typedArrays[frames[0]][j] - typedArrays[frames[1]][j];\n    }\n    return finalArray;\n  }\n\n  if (operation === Enums.DynamicOperatorType.AVERAGE) {\n    for (let i = 0; i < numFrames; i++) {\n      const currentArray = typedArrays[frames[i]];\n      for (let j = 0; j < arrayLength; j++) {\n        finalArray[j] += currentArray[j];\n      }\n    }\n    for (let k = 0; k < arrayLength; k++) {\n      finalArray[k] = finalArray[k] / numFrames;\n    }\n    return finalArray;\n  }\n}\n\nexport default generateImageFromTimeData;\n","import { setElementCursor } from './elementCursor';\nimport MouseCursor from './MouseCursor';\nimport SVGMouseCursor from './SVGMouseCursor';\n\n/**\n * Set the cursor for an HTML element. cursorNames can be either\n * cornerstone3DTools cursors or standard cursors.\n *\n * @param element - The element to set the cursor on.\n * @param cursorName - The name of the cursor to set. This can be\n * any cursor name either Cornerstone-specific cursor names or the standard\n * CSS cursor names.\n */\nfunction setCursorForElement(\n  element: HTMLDivElement,\n  cursorName: string\n): void {\n  let cursor = SVGMouseCursor.getDefinedCursor(cursorName, true);\n  if (!cursor) {\n    cursor = MouseCursor.getDefinedCursor(cursorName);\n  }\n\n  if (!cursor) {\n    console.log(\n      `Cursor ${cursorName} is not defined either as SVG or as a standard cursor.`\n    );\n    cursor = MouseCursor.getDefinedCursor(cursorName);\n  }\n\n  setElementCursor(element, cursor);\n}\n\nexport default setCursorForElement;\n","import MouseCursor, { standardCursorNames } from './MouseCursor';\nimport ImageMouseCursor from './ImageMouseCursor';\nimport SVGMouseCursor from './SVGMouseCursor';\nimport * as elementCursor from './elementCursor';\nimport setCursorForElement from './setCursorForElement';\nimport {\n  registerCursor,\n  svgCursorNames,\n  CursorSVG,\n} from './SVGCursorDescriptor';\n\n// Todo: this should be enum\nconst CursorNames = [...svgCursorNames, ...standardCursorNames];\n\nexport {\n  MouseCursor,\n  ImageMouseCursor,\n  SVGMouseCursor,\n  elementCursor,\n  registerCursor,\n  CursorNames,\n  CursorSVG,\n  setCursorForElement,\n};\n","import { ToolModes, AnnotationStyleStates } from '../../../enums';\nimport { getStyleProperty } from './helpers';\nimport { StyleSpecifier } from '../../../types/AnnotationStyle';\n\n/**\n * getFont - Returns a font string of the form \"{fontSize}px fontName\" used by `canvas`.\n * @param styleSpecifier - An object containing the specifications such as viewportId,\n * toolGroupId, toolName and annotationUID which are used to get the style if the level of specificity is\n * met (hierarchy is checked from most specific to least specific which is\n * annotationLevel -> viewportLevel -> toolGroupLevel -> default.\n * @param state - An optional state to determine the final property name\n * @param mode - An optional mode to determine the final property name\n * @returns The font string.\n */\nfunction getFont(\n  styleSpecifier: StyleSpecifier,\n  state?: AnnotationStyleStates,\n  mode?: ToolModes\n): string {\n  const fontSize = getStyleProperty(\n    'textBoxFontSize',\n    styleSpecifier,\n    state,\n    mode\n  );\n  const fontFamily = getStyleProperty(\n    'textBoxFontFamily',\n    styleSpecifier,\n    state,\n    mode\n  );\n\n  return `${fontSize}px ${fontFamily}`;\n}\n\nexport default getFont;\n","import * as Enums from '../../../enums';\nimport { SegmentationPublicInput } from '../../../types/SegmentationStateTypes';\nimport validateLabelmap from '../../../tools/displayTools/Labelmap/validateRepresentationData';\n\n/**\n * Checks if the segmentationInputArray is valid meaning it contains\n * correct representationProps for the representation type that is being used.\n *\n * @param segmentationInputArray - Array of segmentation inputs\n * @internal\n */\nfunction validateSegmentationInput(\n  segmentationInputArray: SegmentationPublicInput[]\n): void {\n  if (!segmentationInputArray || !segmentationInputArray.length) {\n    throw new Error('The segmentationInputArray is undefined or empty array');\n  }\n\n  segmentationInputArray.forEach((segmentationInput) => {\n    if (segmentationInput.segmentationId === undefined) {\n      throw new Error(\n        'The segmentationInput.segmentationId is undefined, please provide a valid segmentationId'\n      );\n    }\n\n    if (segmentationInput.representation === undefined) {\n      throw new Error(\n        'The segmentationInput.representation is undefined, please provide a valid representation'\n      );\n    }\n\n    if (\n      segmentationInput.representation.type ===\n      Enums.SegmentationRepresentations.Labelmap\n    ) {\n      validateLabelmap(segmentationInput);\n    }\n  });\n}\n\nexport default validateSegmentationInput;\n","import { SegmentationPublicInput } from '../../../types/SegmentationStateTypes';\nimport { cache } from '@cornerstonejs/core';\nimport { LabelmapSegmentationData } from '../../../types/LabelmapTypes';\n\nfunction validate(segmentationInput: SegmentationPublicInput): void {\n  if (!segmentationInput.representation.data) {\n    throw new Error(\n      'The segmentationInput.representationData.data is undefined, please provide a valid representationData.data'\n    );\n  }\n\n  const representationData = segmentationInput.representation\n    .data as LabelmapSegmentationData;\n\n  if (!representationData.volumeId) {\n    throw new Error(\n      'The segmentationInput.representationData.volumeId is undefined, please provide a valid representationData.volumeId'\n    );\n  }\n\n  const cachedVolume = cache.getVolume(representationData.volumeId);\n\n  if (!cachedVolume) {\n    throw new Error(\n      `volumeId of ${representationData.volumeId} not found in cache, you should load and cache volume before adding segmentation`\n    );\n  }\n}\n\nexport default validate;\n","import _cloneDeep from 'lodash.clonedeep';\nimport { SegmentationPublicInput } from '../../types/SegmentationStateTypes';\nimport { validateSegmentationInput } from './helpers';\nimport { addSegmentation as addSegmentationToState } from './segmentationState';\n/**\n * Adds the segmentation to the cornerstone3D segmentation state. It should be\n * noted that segmentations are not added to any toolGroup's viewports. In order to\n * do so, you should add a \"representation\" of the segmentation to the toolGroup\n * using addSegmentationRepresentations helper. The reason for this is that there\n * can be multiple representations of the same segmentation (e.g. Labelmap and\n * Contour, etc. - Currently only Labelmap representations is supported).\n * @param segmentationInputArray - The array of segmentation input, each of which\n * defining the segmentationId and the main representation data for the segmentation.\n */\nfunction addSegmentations(\n  segmentationInputArray: SegmentationPublicInput[]\n): void {\n  validateSegmentationInput(segmentationInputArray);\n\n  segmentationInputArray.map((segInput) => {\n    const segmentationInput = _cloneDeep(segInput);\n\n    addSegmentationToState(segmentationInput);\n  });\n}\n\nexport default addSegmentations;\n","import _cloneDeep from 'lodash.clonedeep';\nimport {\n  SegmentationRepresentationConfig,\n  RepresentationPublicInput,\n} from '../../types/SegmentationStateTypes';\nimport Representations from '../../enums/SegmentationRepresentations';\nimport { getToolGroup } from '../../store/ToolGroupManager';\n\nimport { labelmapDisplay } from '../../tools/displayTools/Labelmap';\nimport { contourDisplay } from '../../tools/displayTools/Contour';\n\n/**\n * Set the specified segmentation representations on the viewports of the specified\n * toolGroup. It accepts a second argument which is a toolGroup specific representation\n * configuration.\n *\n * @param toolGroupId - The Id of the toolGroup to add the segmentation representations to\n * @param representationInputArray - An array of segmentation representations to add to the toolGroup\n * @param toolGroupSpecificRepresentationConfig - The toolGroup specific configuration\n * for the segmentation representations\n */\nasync function addSegmentationRepresentations(\n  toolGroupId: string,\n  representationInputArray: RepresentationPublicInput[],\n  toolGroupSpecificRepresentationConfig?: SegmentationRepresentationConfig\n): Promise<string[]> {\n  // Check if there exists a toolGroup with the toolGroupId\n  const toolGroup = getToolGroup(toolGroupId);\n\n  if (!toolGroup) {\n    throw new Error(`No tool group found for toolGroupId: ${toolGroupId}`);\n  }\n\n  const promises = representationInputArray.map((representationInput) => {\n    return _addSegmentationRepresentation(\n      toolGroupId,\n      representationInput,\n      toolGroupSpecificRepresentationConfig\n    );\n  });\n\n  const segmentationRepresentationUIDs = await Promise.all(promises);\n\n  return segmentationRepresentationUIDs;\n}\n\nasync function _addSegmentationRepresentation(\n  toolGroupId: string,\n  representationInput: RepresentationPublicInput,\n  toolGroupSpecificRepresentationConfig?: SegmentationRepresentationConfig\n): Promise<string> {\n  let segmentationRepresentationUID;\n\n  if (representationInput.type === Representations.Labelmap) {\n    segmentationRepresentationUID =\n      await labelmapDisplay.addSegmentationRepresentation(\n        toolGroupId,\n        representationInput,\n        toolGroupSpecificRepresentationConfig\n      );\n  } else if (representationInput.type === Representations.Contour) {\n    segmentationRepresentationUID =\n      await contourDisplay.addSegmentationRepresentation(\n        toolGroupId,\n        representationInput,\n        toolGroupSpecificRepresentationConfig\n      );\n  } else {\n    throw new Error(\n      `The representation type ${representationInput.type} is not supported`\n    );\n  }\n\n  return segmentationRepresentationUID;\n}\n\nexport default addSegmentationRepresentations;\n","import { BaseTool } from './base';\nimport { getEnabledElement } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { EventTypes, PublicToolProps, ToolProps } from '../types';\n\n/**\n * Tool that pans the camera in the plane defined by the viewPlaneNormal and the viewUp.\n */\nclass PanTool extends BaseTool {\n  static toolName;\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n  }\n\n  touchDragCallback(evt: EventTypes.InteractionEventType) {\n    this._dragCallback(evt);\n  }\n\n  mouseDragCallback(evt: EventTypes.InteractionEventType) {\n    this._dragCallback(evt);\n  }\n\n  _dragCallback(evt: EventTypes.InteractionEventType) {\n    const { element, deltaPoints } = evt.detail;\n    const enabledElement = getEnabledElement(element);\n\n    const deltaPointsWorld = deltaPoints.world;\n    const camera = enabledElement.viewport.getCamera();\n    const { focalPoint, position } = camera;\n\n    const updatedPosition = <Types.Point3>[\n      position[0] - deltaPointsWorld[0],\n      position[1] - deltaPointsWorld[1],\n      position[2] - deltaPointsWorld[2],\n    ];\n\n    const updatedFocalPoint = <Types.Point3>[\n      focalPoint[0] - deltaPointsWorld[0],\n      focalPoint[1] - deltaPointsWorld[1],\n      focalPoint[2] - deltaPointsWorld[2],\n    ];\n\n    enabledElement.viewport.setCamera({\n      focalPoint: updatedFocalPoint,\n      position: updatedPosition,\n    });\n    enabledElement.viewport.render();\n  }\n}\n\nPanTool.toolName = 'Pan';\nexport default PanTool;\n","import vtkMath from '@kitware/vtk.js/Common/Core/Math';\n\nimport { getEnabledElement } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport { mat4, vec3 } from 'gl-matrix';\nimport { EventTypes, PublicToolProps, ToolProps } from '../types';\nimport { BaseTool } from './base';\n\n/**\n * Tool that rotates the camera in the plane defined by the viewPlaneNormal and the viewUp.\n */\nclass TrackballRotateTool extends BaseTool {\n  static toolName;\n  touchDragCallback: (evt: EventTypes.InteractionEventType) => void;\n  mouseDragCallback: (evt: EventTypes.InteractionEventType) => void;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        rotateIncrementDegrees: 2,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n\n    this.touchDragCallback = this._dragCallback.bind(this);\n    this.mouseDragCallback = this._dragCallback.bind(this);\n  }\n\n  rotateCamera = (viewport, centerWorld, axis, angle) => {\n    const vtkCamera = viewport.getVtkActiveCamera();\n    const viewUp = vtkCamera.getViewUp();\n    const focalPoint = vtkCamera.getFocalPoint();\n    const position = vtkCamera.getPosition();\n\n    const newPosition: Types.Point3 = [0, 0, 0];\n    const newFocalPoint: Types.Point3 = [0, 0, 0];\n    const newViewUp: Types.Point3 = [0, 0, 0];\n\n    const transform = mat4.identity(new Float32Array(16));\n    mat4.translate(transform, transform, centerWorld);\n    mat4.rotate(transform, transform, angle, axis);\n    mat4.translate(transform, transform, [\n      -centerWorld[0],\n      -centerWorld[1],\n      -centerWorld[2],\n    ]);\n    vec3.transformMat4(newPosition, position, transform);\n    vec3.transformMat4(newFocalPoint, focalPoint, transform);\n\n    mat4.identity(transform);\n    mat4.rotate(transform, transform, angle, axis);\n    vec3.transformMat4(newViewUp, viewUp, transform);\n\n    viewport.setCamera({\n      position: newPosition,\n      viewUp: newViewUp,\n      focalPoint: newFocalPoint,\n    });\n  };\n\n  // pseudocode inspired from\n  // https://github.com/kitware/vtk-js/blob/HEAD/Sources/Interaction/Manipulators/MouseCameraUnicamRotateManipulator/index.js\n  _dragCallback(evt: EventTypes.InteractionEventType): void {\n    const { element, currentPoints, lastPoints } = evt.detail;\n    const currentPointsCanvas = currentPoints.canvas;\n    const lastPointsCanvas = lastPoints.canvas;\n    const { rotateIncrementDegrees } = this.configuration;\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const camera = viewport.getCamera();\n    const width = element.clientWidth;\n    const height = element.clientHeight;\n\n    const normalizedPosition = [\n      currentPointsCanvas[0] / width,\n      currentPointsCanvas[1] / height,\n    ];\n\n    const normalizedPreviousPosition = [\n      lastPointsCanvas[0] / width,\n      lastPointsCanvas[1] / height,\n    ];\n\n    const center: Types.Point2 = [width * 0.5, height * 0.5];\n    // NOTE: centerWorld corresponds to the focal point in cornerstone3D\n    const centerWorld = viewport.canvasToWorld(center);\n    const normalizedCenter = [0.5, 0.5];\n\n    const radsq = (1.0 + Math.abs(normalizedCenter[0])) ** 2.0;\n    const op = [normalizedPreviousPosition[0], 0, 0];\n    const oe = [normalizedPosition[0], 0, 0];\n\n    const opsq = op[0] ** 2;\n    const oesq = oe[0] ** 2;\n\n    const lop = opsq > radsq ? 0 : Math.sqrt(radsq - opsq);\n    const loe = oesq > radsq ? 0 : Math.sqrt(radsq - oesq);\n\n    const nop: Types.Point3 = [op[0], 0, lop];\n    vtkMath.normalize(nop);\n    const noe: Types.Point3 = [oe[0], 0, loe];\n    vtkMath.normalize(noe);\n\n    const dot = vtkMath.dot(nop, noe);\n    if (Math.abs(dot) > 0.0001) {\n      const angleX =\n        -2 *\n        Math.acos(vtkMath.clampValue(dot, -1.0, 1.0)) *\n        Math.sign(normalizedPosition[0] - normalizedPreviousPosition[0]) *\n        rotateIncrementDegrees;\n\n      const upVec = camera.viewUp;\n      const atV = camera.viewPlaneNormal;\n      const rightV: Types.Point3 = [0, 0, 0];\n      const forwardV: Types.Point3 = [0, 0, 0];\n\n      vtkMath.cross(upVec, atV, rightV);\n      vtkMath.normalize(rightV);\n\n      vtkMath.cross(atV, rightV, forwardV);\n      vtkMath.normalize(forwardV);\n      vtkMath.normalize(upVec);\n\n      this.rotateCamera(viewport, centerWorld, forwardV, angleX);\n\n      const angleY =\n        (normalizedPreviousPosition[1] - normalizedPosition[1]) *\n        rotateIncrementDegrees;\n\n      this.rotateCamera(viewport, centerWorld, rightV, angleY);\n\n      viewport.render();\n    }\n  }\n}\n\nTrackballRotateTool.toolName = 'TrackballRotate';\nexport default TrackballRotateTool;\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport { vec2 } from 'gl-matrix';\n\nimport {\n  getEnabledElement,\n  VolumeViewport,\n  triggerEvent,\n  eventTarget,\n  utilities as csUtils,\n  utilities,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { AnnotationTool } from '../base';\nimport {\n  addAnnotation,\n  getAnnotations,\n  removeAnnotation,\n} from '../../stateManagement/annotation/annotationState';\nimport {\n  drawHandles as drawHandlesSvg,\n  drawTextBox as drawTextBoxSvg,\n} from '../../drawingSvg';\nimport { state } from '../../store';\nimport { Events } from '../../enums';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport {\n  resetElementCursor,\n  hideElementCursor,\n} from '../../cursors/elementCursor';\nimport {\n  AnnotationCompletedEventDetail,\n  AnnotationModifiedEventDetail,\n} from '../../types/EventTypes';\n\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\n\nimport {\n  EventTypes,\n  ToolHandle,\n  PublicToolProps,\n  ToolProps,\n  SVGDrawingHelper,\n} from '../../types';\nimport { ProbeAnnotation } from '../../types/ToolSpecificAnnotationTypes';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\nimport {\n  ModalityUnitOptions,\n  getModalityUnit,\n} from '../../utilities/getModalityUnit';\nimport { isViewportPreScaled } from '../../utilities/viewport/isViewportPreScaled';\n\nconst { transformWorldToIndex } = csUtils;\n\n/**\n * ProbeTool let you get the underlying voxel value by putting a probe in that\n * location. It will give index of the location and value of the voxel.\n * You can use ProbeTool in all perpendicular views (axial, sagittal, coronal).\n * Note: annotation tools in cornerstone3DTools exists in the exact location\n * in the physical 3d space, as a result, by default, all annotations that are\n * drawing in the same frameOfReference will get shared between viewports that\n * are in the same frameOfReference. Probe tool's text box are dynamically\n * generated based on the viewport's underlying Modality. For instance, if\n * the viewport is displaying CT, the text box will shown the statistics in Hounsfield units,\n * and if the viewport is displaying PET, the text box will show the statistics in\n * SUV units.\n *\n * The resulting annotation's data (statistics) and metadata (the\n * state of the viewport while drawing was happening) will get added to the\n * ToolState manager and can be accessed from the ToolState by calling getAnnotations\n * or similar methods.\n *\n * To use the ProbeTool, you first need to add it to cornerstoneTools, then create\n * a toolGroup and add the ProbeTool to it. Finally, setToolActive on the toolGroup\n *\n * ```js\n * cornerstoneTools.addTool(ProbeTool)\n *\n * const toolGroup = ToolGroupManager.createToolGroup('toolGroupId')\n *\n * toolGroup.addTool(ProbeTool.toolName)\n *\n * toolGroup.addViewport('viewportId', 'renderingEngineId')\n *\n * toolGroup.setToolActive(ProbeTool.toolName, {\n *   bindings: [\n *    {\n *       mouseButton: MouseBindings.Primary, // Left Click\n *     },\n *   ],\n * })\n * ```\n *\n * Read more in the Docs section of the website.\n *\n */\nclass ProbeTool extends AnnotationTool {\n  static toolName;\n\n  touchDragCallback: any;\n  mouseDragCallback: any;\n  editData: {\n    annotation: any;\n    viewportIdsToRender: string[];\n    newAnnotation?: boolean;\n  } | null;\n  eventDispatchDetail: {\n    viewportId: string;\n    renderingEngineId: string;\n  };\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        shadow: true,\n        preventHandleOutsideImage: false,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n  }\n\n  // Not necessary for this tool but needs to be defined since it's an abstract\n  // method from the parent class.\n  isPointNearTool(): boolean {\n    return false;\n  }\n\n  toolSelectedCallback() {}\n\n  /**\n   * Based on the current position of the mouse and the current imageId to create\n   * a Probe Annotation and stores it in the annotationManager\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  addNewAnnotation = (\n    evt: EventTypes.InteractionEventType\n  ): ProbeAnnotation => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    this.isDrawing = true;\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    const referencedImageId = this.getReferencedImageId(\n      viewport,\n      worldPos,\n      viewPlaneNormal,\n      viewUp\n    );\n\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n    const annotation = {\n      invalidated: true,\n      highlighted: true,\n      metadata: {\n        toolName: this.getToolName(),\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId,\n      },\n      data: {\n        label: '',\n        handles: { points: [<Types.Point3>[...worldPos]] },\n        cachedStats: {},\n      },\n    };\n\n    addAnnotation(annotation, element);\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      newAnnotation: true,\n      viewportIdsToRender,\n    };\n    this._activateModify(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  };\n\n  /**\n   * It checks if the mouse click is near ProveTool, it overwrites the baseAnnotationTool\n   * getHandleNearImagePoint method.\n   *\n   * @param element - The element that the tool is attached to.\n   * @param annotation - The annotation object associated with the annotation\n   * @param canvasCoords - The coordinates of the mouse click on canvas\n   * @param proximity - The distance from the mouse cursor to the point\n   * that is considered \"near\".\n   * @returns The handle that is closest to the cursor, or null if the cursor\n   * is not near any of the handles.\n   */\n  getHandleNearImagePoint(\n    element: HTMLDivElement,\n    annotation: ProbeAnnotation,\n    canvasCoords: Types.Point2,\n    proximity: number\n  ): ToolHandle | undefined {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    const { data } = annotation;\n    const point = data.handles.points[0];\n    const annotationCanvasCoordinate = viewport.worldToCanvas(point);\n\n    const near =\n      vec2.distance(canvasCoords, annotationCanvasCoordinate) < proximity;\n\n    if (near === true) {\n      return point;\n    }\n  }\n\n  handleSelectedCallback(\n    evt: EventTypes.InteractionEventType,\n    annotation: ProbeAnnotation\n  ): void {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    annotation.highlighted = true;\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    // Find viewports to render on drag.\n\n    this.editData = {\n      //handle, // This would be useful for other tools with more than one handle\n      annotation,\n      viewportIdsToRender,\n    };\n    this._activateModify(element);\n\n    hideElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    evt.preventDefault();\n  }\n\n  _endCallback = (evt: EventTypes.InteractionEventType): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    const { viewportId } = enabledElement;\n    this.eventDispatchDetail = {\n      viewportId,\n      renderingEngineId: renderingEngine.id,\n    };\n\n    this._deactivateModify(element);\n\n    resetElementCursor(element);\n\n    this.editData = null;\n    this.isDrawing = false;\n\n    if (\n      this.isHandleOutsideImage &&\n      this.configuration.preventHandleOutsideImage\n    ) {\n      removeAnnotation(annotation.annotationUID);\n    }\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    if (newAnnotation) {\n      const eventType = Events.ANNOTATION_COMPLETED;\n\n      const eventDetail: AnnotationCompletedEventDetail = {\n        annotation,\n      };\n\n      triggerEvent(eventTarget, eventType, eventDetail);\n    }\n  };\n\n  _dragCallback = (evt) => {\n    this.isDrawing = true;\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n\n    const { annotation, viewportIdsToRender } = this.editData;\n    const { data } = annotation;\n\n    data.handles.points[0] = [...worldPos];\n    annotation.invalidated = true;\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  };\n\n  cancel = (element: HTMLDivElement) => {\n    // If it is mid-draw or mid-modify\n    if (this.isDrawing) {\n      this.isDrawing = false;\n      this._deactivateModify(element);\n      resetElementCursor(element);\n\n      const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n      const { data } = annotation;\n\n      annotation.highlighted = false;\n      data.handles.activeHandleIndex = null;\n\n      const enabledElement = getEnabledElement(element);\n      const { renderingEngine } = enabledElement;\n\n      triggerAnnotationRenderForViewportIds(\n        renderingEngine,\n        viewportIdsToRender\n      );\n\n      if (newAnnotation) {\n        const eventType = Events.ANNOTATION_COMPLETED;\n\n        const eventDetail: AnnotationCompletedEventDetail = {\n          annotation,\n        };\n\n        triggerEvent(eventTarget, eventType, eventDetail);\n      }\n\n      this.editData = null;\n      return annotation.annotationUID;\n    }\n  };\n\n  _activateModify = (element) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(Events.MOUSE_UP, this._endCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.addEventListener(Events.TOUCH_END, this._endCallback);\n    element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n    element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n  };\n\n  _deactivateModify = (element) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n    element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n    element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.removeEventListener(Events.TOUCH_END, this._endCallback);\n    element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n    element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n  };\n\n  /**\n   * it is used to draw the probe annotation in each\n   * request animation frame. It calculates the updated cached statistics if\n   * data is invalidated and cache it.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n    const { viewport } = enabledElement;\n    const { element } = viewport;\n\n    let annotations = getAnnotations(this.getToolName(), element);\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    annotations = this.filterInteractableAnnotationsForElement(\n      element,\n      annotations\n    );\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    const targetId = this.getTargetId(viewport);\n    const renderingEngine = viewport.getRenderingEngine();\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    for (let i = 0; i < annotations.length; i++) {\n      const annotation = annotations[i] as ProbeAnnotation;\n      const annotationUID = annotation.annotationUID;\n      const data = annotation.data;\n      const point = data.handles.points[0];\n      const canvasCoordinates = viewport.worldToCanvas(point);\n\n      styleSpecifier.annotationUID = annotationUID;\n\n      const color = this.getStyle('color', styleSpecifier, annotation);\n\n      const modalityUnitOptions = {\n        isPreScaled: isViewportPreScaled(viewport, targetId),\n\n        isSuvScaled: this.isSuvScaled(\n          viewport,\n          targetId,\n          annotation.metadata.referencedImageId\n        ),\n      };\n\n      if (!data.cachedStats[targetId]) {\n        data.cachedStats[targetId] = {\n          Modality: null,\n          index: null,\n          value: null,\n        };\n\n        this._calculateCachedStats(\n          annotation,\n          renderingEngine,\n          enabledElement,\n          modalityUnitOptions\n        );\n      } else if (annotation.invalidated) {\n        this._calculateCachedStats(\n          annotation,\n          renderingEngine,\n          enabledElement,\n          modalityUnitOptions\n        );\n\n        // If the invalidated data is as a result of volumeViewport manipulation\n        // of the tools, we need to invalidate the related stackViewports data if\n        // they are not at the referencedImageId, so that\n        // when scrolling to the related slice in which the tool were manipulated\n        // we re-render the correct tool position. This is due to stackViewport\n        // which doesn't have the full volume at each time, and we are only working\n        // on one slice at a time.\n        if (viewport instanceof VolumeViewport) {\n          const { referencedImageId } = annotation.metadata;\n\n          // invalidate all the relevant stackViewports if they are not\n          // at the referencedImageId\n          for (const targetId in data.cachedStats) {\n            if (targetId.startsWith('imageId')) {\n              const viewports = renderingEngine.getStackViewports();\n\n              const invalidatedStack = viewports.find((vp) => {\n                // The stack viewport that contains the imageId but is not\n                // showing it currently\n                const referencedImageURI =\n                  csUtils.imageIdToURI(referencedImageId);\n                const hasImageURI = vp.hasImageURI(referencedImageURI);\n                const currentImageURI = csUtils.imageIdToURI(\n                  vp.getCurrentImageId()\n                );\n                return hasImageURI && currentImageURI !== referencedImageURI;\n              });\n\n              if (invalidatedStack) {\n                delete data.cachedStats[targetId];\n              }\n            }\n          }\n        }\n      }\n\n      // If rendering engine has been destroyed while rendering\n      if (!viewport.getRenderingEngine()) {\n        console.warn('Rendering Engine has been destroyed');\n        return renderStatus;\n      }\n\n      const handleGroupUID = '0';\n\n      drawHandlesSvg(\n        svgDrawingHelper,\n        annotationUID,\n        handleGroupUID,\n        [canvasCoordinates],\n        { color }\n      );\n\n      renderStatus = true;\n\n      const textLines = this._getTextLines(data, targetId);\n      if (textLines) {\n        const textCanvasCoordinates = [\n          canvasCoordinates[0] + 6,\n          canvasCoordinates[1] - 6,\n        ];\n\n        const textUID = '0';\n        drawTextBoxSvg(\n          svgDrawingHelper,\n          annotationUID,\n          textUID,\n          textLines,\n          [textCanvasCoordinates[0], textCanvasCoordinates[1]],\n          this.getLinkedTextBoxStyle(styleSpecifier, annotation)\n        );\n      }\n    }\n\n    return renderStatus;\n  };\n\n  _getTextLines(data, targetId: string): string[] | undefined {\n    const cachedVolumeStats = data.cachedStats[targetId];\n    const { index, value, modalityUnit } = cachedVolumeStats;\n\n    if (value === undefined) {\n      return;\n    }\n\n    const textLines = [];\n\n    textLines.push(`(${index[0]}, ${index[1]}, ${index[2]})`);\n\n    textLines.push(`${value.toFixed(2)} ${modalityUnit}`);\n\n    return textLines;\n  }\n\n  _calculateCachedStats(\n    annotation,\n    renderingEngine,\n    enabledElement,\n    modalityUnitOptions: ModalityUnitOptions\n  ) {\n    const data = annotation.data;\n    const { viewportId, renderingEngineId } = enabledElement;\n\n    const worldPos = data.handles.points[0];\n    const { cachedStats } = data;\n\n    const targetIds = Object.keys(cachedStats);\n\n    for (let i = 0; i < targetIds.length; i++) {\n      const targetId = targetIds[i];\n\n      const image = this.getTargetIdImage(targetId, renderingEngine);\n\n      // If image does not exists for the targetId, skip. This can be due\n      // to various reasons such as if the target was a volumeViewport, and\n      // the volumeViewport has been decached in the meantime.\n      if (!image) {\n        continue;\n      }\n\n      const { dimensions, imageData, metadata } = image;\n      const scalarData =\n        'getScalarData' in image ? image.getScalarData() : image.scalarData;\n\n      const modality = metadata.Modality;\n      const index = transformWorldToIndex(imageData, worldPos);\n\n      index[0] = Math.round(index[0]);\n      index[1] = Math.round(index[1]);\n      index[2] = Math.round(index[2]);\n\n      if (csUtils.indexWithinDimensions(index, dimensions)) {\n        this.isHandleOutsideImage = false;\n        const yMultiple = dimensions[0];\n        const zMultiple = dimensions[0] * dimensions[1];\n\n        const value =\n          scalarData[index[2] * zMultiple + index[1] * yMultiple + index[0]];\n\n        // Index[2] for stackViewport is always 0, but for visualization\n        // we reset it to be imageId index\n        if (targetId.startsWith('imageId:')) {\n          const imageId = targetId.split('imageId:')[1];\n          const imageURI = csUtils.imageIdToURI(imageId);\n          const viewports = utilities.getViewportsWithImageURI(\n            imageURI,\n            renderingEngineId\n          );\n\n          const viewport = viewports[0];\n\n          index[2] = viewport.getCurrentImageIdIndex();\n        }\n\n        const modalityUnit = getModalityUnit(\n          modality,\n          annotation.metadata.referencedImageId,\n          modalityUnitOptions\n        );\n\n        cachedStats[targetId] = {\n          index,\n          value,\n          Modality: modality,\n          modalityUnit,\n        };\n      } else {\n        this.isHandleOutsideImage = true;\n        cachedStats[targetId] = {\n          index,\n          Modality: modality,\n        };\n      }\n\n      annotation.invalidated = false;\n\n      // Dispatching annotation modified\n      const eventType = Events.ANNOTATION_MODIFIED;\n\n      const eventDetail: AnnotationModifiedEventDetail = {\n        annotation,\n        viewportId,\n        renderingEngineId,\n      };\n\n      triggerEvent(eventTarget, eventType, eventDetail);\n    }\n\n    return cachedStats;\n  }\n}\n\nProbeTool.toolName = 'Probe';\nexport default ProbeTool;\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport { getEnabledElement } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport {\n  drawHandles as drawHandlesSvg,\n  drawTextBox as drawTextBoxSvg,\n} from '../../drawingSvg';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { hideElementCursor } from '../../cursors/elementCursor';\nimport {\n  EventTypes,\n  PublicToolProps,\n  SVGDrawingHelper,\n  ToolProps,\n} from '../../types';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport ProbeTool from './ProbeTool';\nimport { ProbeAnnotation } from '../../types/ToolSpecificAnnotationTypes';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\nimport { isViewportPreScaled } from '../../utilities/viewport/isViewportPreScaled';\n\nclass DragProbeTool extends ProbeTool {\n  static toolName;\n\n  touchDragCallback: any;\n  mouseDragCallback: any;\n  editData: {\n    annotation: any;\n    viewportIdsToRender: string[];\n    newAnnotation?: boolean;\n  } | null;\n  eventDispatchDetail: {\n    viewportId: string;\n    renderingEngineId: string;\n  };\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        shadow: true,\n        preventHandleOutsideImage: false,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n  }\n\n  postMouseDownCallback = (\n    evt: EventTypes.InteractionEventType\n  ): ProbeAnnotation => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    this.isDrawing = true;\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    const referencedImageId = this.getReferencedImageId(\n      viewport,\n      worldPos,\n      viewPlaneNormal,\n      viewUp\n    );\n\n    const annotation: ProbeAnnotation = {\n      invalidated: true,\n      highlighted: true,\n      isVisible: true,\n      metadata: {\n        toolName: this.getToolName(),\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID: viewport.getFrameOfReferenceUID(),\n        referencedImageId,\n      },\n      data: {\n        label: '',\n        handles: { points: [<Types.Point3>[...worldPos]] },\n        cachedStats: {},\n      },\n    };\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      newAnnotation: true,\n      viewportIdsToRender,\n    };\n    this._activateModify(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  };\n\n  postTouchStartCallback = (\n    evt: EventTypes.InteractionEventType\n  ): ProbeAnnotation => {\n    return this.postMouseDownCallback(evt);\n  };\n\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n    const { viewport } = enabledElement;\n\n    if (!this.editData) {\n      return renderStatus;\n    }\n\n    const annotations = this.filterInteractableAnnotationsForElement(\n      viewport.element,\n      [this.editData.annotation]\n    );\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    const targetId = this.getTargetId(viewport);\n    const renderingEngine = viewport.getRenderingEngine();\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    const annotation = this.editData.annotation;\n    const annotationUID = annotation.annotationUID;\n    const data = annotation.data;\n    const point = data.handles.points[0];\n    const canvasCoordinates = viewport.worldToCanvas(point);\n\n    styleSpecifier.annotationUID = annotationUID;\n\n    const color = this.getStyle('color', styleSpecifier, annotation);\n\n    const modalityUnitOptions = {\n      isPreScaled: isViewportPreScaled(viewport, targetId),\n\n      isSuvScaled: this.isSuvScaled(\n        viewport,\n        targetId,\n        annotation.metadata.referencedImageId\n      ),\n    };\n\n    if (!data.cachedStats[targetId]) {\n      data.cachedStats[targetId] = {\n        Modality: null,\n        index: null,\n        value: null,\n      };\n\n      this._calculateCachedStats(\n        annotation,\n        renderingEngine,\n        enabledElement,\n        modalityUnitOptions\n      );\n    } else if (annotation.invalidated) {\n      this._calculateCachedStats(\n        annotation,\n        renderingEngine,\n        enabledElement,\n        modalityUnitOptions\n      );\n    }\n\n    // If rendering engine has been destroyed while rendering\n    if (!viewport.getRenderingEngine()) {\n      console.warn('Rendering Engine has been destroyed');\n      return renderStatus;\n    }\n\n    const handleGroupUID = '0';\n\n    drawHandlesSvg(\n      svgDrawingHelper,\n      annotationUID,\n      handleGroupUID,\n      [canvasCoordinates],\n      { color }\n    );\n\n    renderStatus = true;\n\n    const textLines = this._getTextLines(data, targetId);\n    if (textLines) {\n      const textCanvasCoordinates = [\n        canvasCoordinates[0] + 6,\n        canvasCoordinates[1] - 6,\n      ];\n\n      const textUID = '0';\n      drawTextBoxSvg(\n        svgDrawingHelper,\n        annotationUID,\n        textUID,\n        textLines,\n        [textCanvasCoordinates[0], textCanvasCoordinates[1]],\n        this.getLinkedTextBoxStyle(styleSpecifier, annotation)\n      );\n    }\n\n    return renderStatus;\n  };\n}\n\nDragProbeTool.toolName = 'DragProbe';\nexport default DragProbeTool;\n","import { BaseTool } from './base';\nimport {\n  getEnabledElement,\n  VolumeViewport,\n  StackViewport,\n  utilities,\n  cache,\n  Types,\n} from '@cornerstonejs/core';\nimport { EventTypes } from '../types';\n\n// Todo: should move to configuration\nconst DEFAULT_MULTIPLIER = 4;\nconst DEFAULT_IMAGE_DYNAMIC_RANGE = 1024;\nconst PT = 'PT';\n\n/**\n * WindowLevel tool manipulates the windowLevel applied to a viewport. It\n * provides a way to set the windowCenter and windowWidth of a viewport\n * by dragging mouse over the image.\n *\n */\nclass WindowLevelTool extends BaseTool {\n  static toolName;\n  constructor(\n    toolProps = {},\n    defaultToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n  }\n\n  touchDragCallback(evt: EventTypes.InteractionEventType) {\n    this.mouseDragCallback(evt);\n  }\n\n  mouseDragCallback(evt: EventTypes.InteractionEventType) {\n    const { element, deltaPoints } = evt.detail;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine, viewport } = enabledElement;\n\n    let volumeId,\n      lower,\n      upper,\n      modality,\n      newRange,\n      viewportsContainingVolumeUID;\n    let isPreScaled = false;\n\n    if (viewport instanceof VolumeViewport) {\n      const targetId = this.getTargetId(viewport as Types.IVolumeViewport);\n      volumeId = targetId.split('volumeId:')[1];\n      viewportsContainingVolumeUID = utilities.getViewportsWithVolumeId(\n        volumeId,\n        renderingEngine.id\n      );\n      const properties = viewport.getProperties();\n      ({ lower, upper } = properties.voiRange);\n      const volume = cache.getVolume(volumeId);\n      modality = volume.metadata.Modality;\n      isPreScaled = volume.scaling && Object.keys(volume.scaling).length > 0;\n    } else if (viewport instanceof StackViewport) {\n      const properties = viewport.getProperties();\n      modality = viewport.modality;\n      ({ lower, upper } = properties.voiRange);\n      const { preScale } = viewport.getImageData();\n      isPreScaled =\n        preScale.scaled && preScale.scalingParameters?.suvbw !== undefined;\n    } else {\n      throw new Error('Viewport is not a valid type');\n    }\n\n    // If modality is PT, treat it special to not include the canvas delta in\n    // the x direction. For other modalities, use the canvas delta in both\n    // directions, and if the viewport is a volumeViewport, the multiplier\n    // is calculate using the volume min and max.\n    if (modality === PT) {\n      newRange = this.getPTScaledNewRange({\n        deltaPointsCanvas: deltaPoints.canvas,\n        lower,\n        upper,\n        clientHeight: element.clientHeight,\n        isPreScaled,\n        viewport,\n        volumeId,\n      });\n    } else {\n      newRange = this.getNewRange({\n        viewport,\n        deltaPointsCanvas: deltaPoints.canvas,\n        volumeId,\n        lower,\n        upper,\n      });\n    }\n\n    if (viewport instanceof StackViewport) {\n      viewport.setProperties({\n        voiRange: newRange,\n      });\n\n      viewport.render();\n      return;\n    }\n\n    if (viewport instanceof VolumeViewport) {\n      viewport.setProperties({\n        voiRange: newRange,\n      });\n\n      viewportsContainingVolumeUID.forEach((vp) => {\n        vp.render();\n      });\n      return;\n    }\n  }\n\n  getPTScaledNewRange({\n    deltaPointsCanvas,\n    lower,\n    upper,\n    clientHeight,\n    viewport,\n    volumeId,\n    isPreScaled,\n  }) {\n    let multiplier = DEFAULT_MULTIPLIER;\n\n    if (isPreScaled) {\n      multiplier = 5 / clientHeight;\n    } else {\n      multiplier =\n        this._getMultiplierFromDynamicRange(viewport, volumeId) ||\n        DEFAULT_MULTIPLIER;\n    }\n\n    const deltaY = deltaPointsCanvas[1];\n    const wcDelta = deltaY * multiplier;\n\n    upper -= wcDelta;\n    upper = isPreScaled ? Math.max(upper, 0.1) : upper;\n\n    return { lower, upper };\n  }\n\n  getNewRange({ viewport, deltaPointsCanvas, volumeId, lower, upper }) {\n    const multiplier =\n      this._getMultiplierFromDynamicRange(viewport, volumeId) ||\n      DEFAULT_MULTIPLIER;\n\n    const wwDelta = deltaPointsCanvas[0] * multiplier;\n    const wcDelta = deltaPointsCanvas[1] * multiplier;\n\n    let { windowWidth, windowCenter } = utilities.windowLevel.toWindowLevel(\n      lower,\n      upper\n    );\n\n    windowWidth += wwDelta;\n    windowCenter += wcDelta;\n\n    windowWidth = Math.max(windowWidth, 1);\n\n    // Convert back to range\n    return utilities.windowLevel.toLowHighRange(windowWidth, windowCenter);\n  }\n\n  _getMultiplierFromDynamicRange(viewport, volumeId) {\n    let imageDynamicRange;\n\n    if (volumeId) {\n      const imageVolume = cache.getVolume(volumeId);\n      const { dimensions } = imageVolume;\n      const scalarData = imageVolume.getScalarData();\n      const calculatedDynamicRange = this._getImageDynamicRangeFromMiddleSlice(\n        scalarData,\n        dimensions\n      );\n      const BitsStored = imageVolume?.metadata?.BitsStored;\n      const metadataDynamicRange = BitsStored ? 2 ** BitsStored : Infinity;\n      // Burned in Pixels often use pixel values above the BitsStored.\n      // This results in a multiplier which is way higher than what you would\n      // want in practice. Thus we take the min between the metadata dynamic\n      // range and actual middel slice dynamic range.\n      imageDynamicRange = Math.min(\n        calculatedDynamicRange,\n        metadataDynamicRange\n      );\n    } else {\n      imageDynamicRange = this._getImageDynamicRangeFromViewport(viewport);\n    }\n\n    const ratio = imageDynamicRange / DEFAULT_IMAGE_DYNAMIC_RANGE;\n\n    let multiplier = DEFAULT_MULTIPLIER;\n\n    if (ratio > 1) {\n      multiplier = Math.round(ratio);\n    }\n    return multiplier;\n  }\n\n  _getImageDynamicRangeFromViewport(viewport) {\n    const { imageData } = viewport.getImageData();\n    const dimensions = imageData.getDimensions();\n\n    let scalarData;\n    // if getScalarData is a method on imageData\n    if (imageData.getScalarData) {\n      scalarData = imageData.getScalarData();\n    } else {\n      scalarData = imageData.getPointData().getScalars();\n    }\n\n    if (dimensions[2] !== 1) {\n      return this._getImageDynamicRangeFromMiddleSlice(scalarData, dimensions);\n    }\n\n    let range;\n    if (scalarData.getRange) {\n      range = scalarData.getRange();\n    } else {\n      const { min, max } = this._getMinMax(scalarData, scalarData.length);\n      range = [min, max];\n    }\n\n    return range[1] - range[0];\n  }\n\n  _getImageDynamicRangeFromMiddleSlice = (scalarData, dimensions) => {\n    const middleSliceIndex = Math.floor(dimensions[2] / 2);\n\n    const frameLength = dimensions[0] * dimensions[1];\n    let bytesPerVoxel;\n    let TypedArrayConstructor;\n\n    if (scalarData instanceof Float32Array) {\n      bytesPerVoxel = 4;\n      TypedArrayConstructor = Float32Array;\n    } else if (scalarData instanceof Uint8Array) {\n      bytesPerVoxel = 1;\n      TypedArrayConstructor = Uint8Array;\n    } else if (scalarData instanceof Uint16Array) {\n      bytesPerVoxel = 2;\n      TypedArrayConstructor = Uint16Array;\n    } else if (scalarData instanceof Int16Array) {\n      bytesPerVoxel = 2;\n      TypedArrayConstructor = Int16Array;\n    }\n\n    const buffer = scalarData.buffer;\n    const byteOffset = middleSliceIndex * frameLength * bytesPerVoxel;\n    const frame = new TypedArrayConstructor(buffer, byteOffset, frameLength);\n\n    const { max, min } = this._getMinMax(frame, frameLength);\n\n    return max - min;\n  };\n\n  private _getMinMax(frame: Uint8Array | Float32Array, frameLength: number) {\n    let min = Infinity;\n    let max = -Infinity;\n\n    for (let i = 0; i < frameLength; i++) {\n      const voxel = frame[i];\n\n      if (voxel < min) {\n        min = voxel;\n      }\n\n      if (voxel > max) {\n        max = voxel;\n      }\n    }\n    return { max, min };\n  }\n}\n\nWindowLevelTool.toolName = 'WindowLevel';\nexport default WindowLevelTool;\n","import { vec3 } from 'gl-matrix';\nimport vtkMath from '@kitware/vtk.js/Common/Core/Math';\nimport { getEnabledElement, Types } from '@cornerstonejs/core';\nimport { BaseTool } from './base';\nimport { EventTypes, PublicToolProps, ToolProps } from '../types';\n\n/**\n * ZoomTool tool manipulates the camera zoom applied to a viewport. It\n * provides a way to set the zoom of a viewport by dragging mouse over the image.\n *\n */\nclass ZoomTool extends BaseTool {\n  static toolName;\n  touchDragCallback: (evt: EventTypes.InteractionEventType) => void;\n  mouseDragCallback: (evt: EventTypes.InteractionEventType) => void;\n  initialMousePosWorld: Types.Point3;\n  dirVec: Types.Point3;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        // whether zoom to the center of the image OR zoom to the mouse position\n        zoomToCenter: false,\n        minZoomScale: 0.1,\n        maxZoomScale: 30,\n        pinchToZoom: true,\n        pan: true,\n        invert: false,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n    this.initialMousePosWorld = [0, 0, 0];\n    this.dirVec = [0, 0, 0];\n    if (this.configuration.pinchToZoom) {\n      this.touchDragCallback = this._pinchCallback.bind(this);\n    } else {\n      this.touchDragCallback = this._dragCallback.bind(this);\n    }\n    this.mouseDragCallback = this._dragCallback.bind(this);\n  }\n\n  preMouseDownCallback = (evt: EventTypes.InteractionEventType): boolean => {\n    const eventData = evt.detail;\n    const { element, currentPoints } = eventData;\n    const worldPos = currentPoints.world;\n    const enabledElement = getEnabledElement(element);\n\n    const camera = enabledElement.viewport.getCamera();\n    const { focalPoint } = camera;\n\n    this.initialMousePosWorld = worldPos;\n\n    // The direction vector from the clicked location to the focal point\n    // which would act as the vector to translate the image (if zoomToCenter is false)\n    let dirVec = vec3.fromValues(\n      focalPoint[0] - worldPos[0],\n      focalPoint[1] - worldPos[1],\n      focalPoint[2] - worldPos[2]\n    );\n\n    dirVec = vec3.normalize(vec3.create(), dirVec);\n\n    this.dirVec = dirVec as Types.Point3;\n\n    // we should not return true here, returning true in the preMouseDownCallback\n    // means that the event is handled by the tool and no other methods\n    // can claim the event, which will result in a bug where having Zoom on primary\n    // and clicking on an annotation will not manipulate the annotation, but will\n    // instead zoom the image (which is not what we want), so we return false here\n    return false;\n  };\n\n  preTouchStartCallback = (evt: EventTypes.InteractionEventType): boolean => {\n    if (!this.configuration.pinchToZoom) {\n      return this.preMouseDownCallback(evt);\n    }\n  };\n\n  _pinchCallback(evt: EventTypes.InteractionEventType) {\n    const pointsList = (evt as EventTypes.TouchStartEventType).detail\n      .currentPointsList;\n\n    if (pointsList.length > 1) {\n      const { element, currentPoints } = evt.detail;\n      const enabledElement = getEnabledElement(element);\n      const { viewport } = enabledElement;\n      const camera = viewport.getCamera();\n      const worldPos = currentPoints.world;\n      const { focalPoint } = camera;\n      this.initialMousePosWorld = worldPos;\n      // The direction vector from the clicked location to the focal point\n      // which would act as the vector to translate the image (if zoomToCenter is false)\n      let dirVec = vec3.fromValues(\n        focalPoint[0] - worldPos[0],\n        focalPoint[1] - worldPos[1],\n        focalPoint[2] - worldPos[2]\n      );\n      dirVec = vec3.normalize(vec3.create(), dirVec);\n\n      this.dirVec = dirVec as Types.Point3;\n      if (camera.parallelProjection) {\n        this._dragParallelProjection(evt, viewport, camera, true);\n      } else {\n        this._dragPerspectiveProjection(evt, viewport, camera, true);\n      }\n      viewport.render();\n    }\n\n    if (this.configuration.pan) {\n      this._panCallback(evt);\n    }\n  }\n\n  // Takes ICornerstoneEvent, Mouse or Touch\n  _dragCallback(evt: EventTypes.InteractionEventType) {\n    const { element } = evt.detail;\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    const camera = viewport.getCamera();\n\n    if (camera.parallelProjection) {\n      this._dragParallelProjection(evt, viewport, camera);\n    } else {\n      this._dragPerspectiveProjection(evt, viewport, camera);\n    }\n\n    viewport.render();\n  }\n\n  _dragParallelProjection = (\n    evt: EventTypes.InteractionEventType,\n    viewport: Types.IStackViewport | Types.IVolumeViewport,\n    camera: Types.ICamera,\n    pinch = false\n  ): void => {\n    const { element, deltaPoints } = evt.detail;\n    const deltaY = pinch\n      ? (evt as EventTypes.TouchDragEventType).detail.deltaDistance.canvas\n      : deltaPoints.canvas[1];\n\n    const size = [element.clientWidth, element.clientHeight];\n    const { parallelScale, focalPoint, position } = camera;\n\n    const zoomScale = 1.5 / size[1];\n    const k = deltaY * zoomScale * (this.configuration.invert ? -1 : 1);\n\n    let parallelScaleToSet = (1.0 - k) * parallelScale;\n\n    let focalPointToSet = focalPoint;\n    let positionToSet = position;\n\n    // if we're not zooming to the center, we need to adjust the focal point\n    // and position to set the focal point and position to the value that\n    // would simulate the zoom to the mouse position\n    if (!this.configuration.zoomToCenter) {\n      // Distance of the initial mouse position (world) to the focal point\n      // which is always the center of the canvas.\n      const distanceToCanvasCenter = vec3.distance(\n        focalPoint,\n        this.initialMousePosWorld\n      );\n      // const initialYDistanceBetweenInitialAndFocalPoint;\n\n      // we need to move in the direction of the vector between the focal point\n      // and the initial mouse position by some amount until ultimately we\n      // reach the mouse position at the focal point\n      const zoomScale = 5 / size[1];\n      const k = deltaY * zoomScale * (this.configuration.invert ? -1 : 1);\n      parallelScaleToSet = (1.0 - k) * parallelScale;\n\n      positionToSet = vec3.scaleAndAdd(\n        vec3.create(),\n        position,\n        this.dirVec,\n        -distanceToCanvasCenter * k\n      ) as Types.Point3;\n\n      focalPointToSet = vec3.scaleAndAdd(\n        vec3.create(),\n        focalPoint,\n        this.dirVec,\n        -distanceToCanvasCenter * k\n      ) as Types.Point3;\n    }\n\n    // If it is a regular GPU accelerated viewport, then parallel scale\n    // has a physical meaning and we can use that to determine the threshold\n    // Added spacing preset in case there is no imageData on viewport\n    const imageData = viewport.getImageData();\n    let spacing = [1, 1, 1];\n    if (imageData) {\n      spacing = imageData.spacing;\n    }\n\n    const { minZoomScale, maxZoomScale } = this.configuration;\n\n    const t = element.clientHeight * spacing[1] * 0.5;\n    const scale = t / parallelScaleToSet;\n\n    let cappedParallelScale = parallelScaleToSet;\n    let thresholdExceeded = false;\n\n    if (imageData) {\n      if (scale < minZoomScale) {\n        cappedParallelScale = t / minZoomScale;\n        thresholdExceeded = true;\n      } else if (scale >= maxZoomScale) {\n        cappedParallelScale = t / maxZoomScale;\n        thresholdExceeded = true;\n      }\n    }\n\n    viewport.setCamera({\n      parallelScale: cappedParallelScale,\n      focalPoint: thresholdExceeded ? focalPoint : focalPointToSet,\n      position: thresholdExceeded ? position : positionToSet,\n    });\n  };\n\n  _dragPerspectiveProjection = (\n    evt: EventTypes.InteractionEventType,\n    viewport: Types.IStackViewport | Types.IVolumeViewport,\n    camera: Types.ICamera,\n    pinch = false\n  ): void => {\n    const { element, deltaPoints } = evt.detail;\n    const deltaY = pinch\n      ? (evt as EventTypes.TouchDragEventType).detail.deltaDistance.canvas\n      : deltaPoints.canvas[1];\n\n    const size = [element.clientWidth, element.clientHeight];\n    const { position, focalPoint, viewPlaneNormal } = camera;\n\n    const distance = vtkMath.distance2BetweenPoints(position, focalPoint);\n    const zoomScale = Math.sqrt(distance) / size[1];\n\n    const directionOfProjection = [\n      -viewPlaneNormal[0],\n      -viewPlaneNormal[1],\n      -viewPlaneNormal[2],\n    ];\n\n    const k = this.configuration.invert\n      ? deltaY / zoomScale\n      : deltaY * zoomScale;\n\n    let tmp = k * directionOfProjection[0];\n    position[0] += tmp;\n    focalPoint[0] += tmp;\n\n    tmp = k * directionOfProjection[1];\n    position[1] += tmp;\n    focalPoint[1] += tmp;\n\n    tmp = k * directionOfProjection[2];\n    position[2] += tmp;\n    focalPoint[2] += tmp;\n\n    viewport.setCamera({ position, focalPoint });\n  };\n\n  _panCallback(evt: EventTypes.InteractionEventType) {\n    const { element, deltaPoints } = evt.detail;\n    const enabledElement = getEnabledElement(element);\n\n    const deltaPointsWorld = deltaPoints.world;\n    const camera = enabledElement.viewport.getCamera();\n    const { focalPoint, position } = camera;\n\n    const updatedPosition = <Types.Point3>[\n      position[0] - deltaPointsWorld[0],\n      position[1] - deltaPointsWorld[1],\n      position[2] - deltaPointsWorld[2],\n    ];\n\n    const updatedFocalPoint = <Types.Point3>[\n      focalPoint[0] - deltaPointsWorld[0],\n      focalPoint[1] - deltaPointsWorld[1],\n      focalPoint[2] - deltaPointsWorld[2],\n    ];\n\n    enabledElement.viewport.setCamera({\n      focalPoint: updatedFocalPoint,\n      position: updatedPosition,\n    });\n    enabledElement.viewport.render();\n  }\n}\n\nZoomTool.toolName = 'Zoom';\nexport default ZoomTool;\n","import {\n  getEnabledElementByIds,\n  VolumeViewport,\n  StackViewport,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport { BaseTool } from './base';\nimport { scroll } from '../utilities';\nimport { PublicToolProps, ToolProps, EventTypes } from '../types';\n\n/**\n * The StackScrollTool is a tool that allows the user to scroll through a\n * stack of images by pressing the mouse click and dragging\n */\nclass StackScrollTool extends BaseTool {\n  static toolName;\n  deltaY: number;\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        invert: false,\n        debounceIfNotLoaded: true,\n        loop: false,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n    this.deltaY = 1;\n  }\n\n  mouseDragCallback(evt: EventTypes.InteractionEventType) {\n    this._dragCallback(evt);\n  }\n  touchDragCallback(evt: EventTypes.InteractionEventType) {\n    this._dragCallback(evt);\n  }\n\n  _dragCallback(evt: EventTypes.InteractionEventType) {\n    const { deltaPoints, viewportId, renderingEngineId } = evt.detail;\n    const { viewport } = getEnabledElementByIds(viewportId, renderingEngineId);\n\n    const targetId = this.getTargetId(viewport);\n    const { debounceIfNotLoaded, invert, loop } = this.configuration;\n\n    const deltaPointY = deltaPoints.canvas[1];\n\n    let volumeId;\n    if (viewport instanceof VolumeViewport) {\n      volumeId = targetId.split('volumeId:')[1];\n    }\n\n    const pixelsPerImage = this._getPixelPerImage(viewport);\n    const deltaY = deltaPointY + this.deltaY;\n\n    if (!pixelsPerImage) {\n      return;\n    }\n\n    if (Math.abs(deltaY) >= pixelsPerImage) {\n      const imageIdIndexOffset = Math.round(deltaY / pixelsPerImage);\n\n      scroll(viewport, {\n        delta: invert ? -imageIdIndexOffset : imageIdIndexOffset,\n        volumeId,\n        debounceLoading: debounceIfNotLoaded,\n        loop: loop,\n      });\n\n      this.deltaY = deltaY % pixelsPerImage;\n    } else {\n      this.deltaY = deltaY;\n    }\n  }\n\n  _getPixelPerImage(viewport) {\n    const { element } = viewport;\n    const numberOfSlices = this._getNumberOfSlices(viewport);\n\n    // The Math.max here makes it easier to mouseDrag-scroll small or really large image stacks\n    return Math.max(2, element.offsetHeight / Math.max(numberOfSlices, 8));\n  }\n\n  _getNumberOfSlices(viewport) {\n    if (viewport instanceof VolumeViewport) {\n      const { numberOfSlices } =\n        csUtils.getImageSliceDataForVolumeViewport(viewport);\n      return numberOfSlices;\n    } else if (viewport instanceof StackViewport) {\n      return viewport.getImageIds().length;\n    }\n  }\n}\n\nStackScrollTool.toolName = 'StackScroll';\nexport default StackScrollTool;\n","import type { Types } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\n\ntype Line = [Types.Point3, Types.Point3];\n\n/**\n * It returns the angle between two lines in degrees.\n * The angle measured is that between the vectors\n * line1[1]->line1[0] AND line2[0]->line2[1].\n * @param line1 - Line = [p1, p2]\n * @param line2 - Line = [p3, p4]\n * @returns The angle between two lines in degrees.\n */\nexport default function angleBetweenLines(line1: Line, line2: Line): number {\n  const [p1, p2] = line1;\n  const [p3, p4] = line2;\n\n  const v1 = vec3.sub(vec3.create(), p2, p1);\n  const v2 = vec3.sub(vec3.create(), p3, p4);\n\n  const dot = vec3.dot(v1, v2);\n\n  const v1Length = vec3.length(v1);\n  const v2Length = vec3.length(v2);\n\n  const cos = dot / (v1Length * v2Length);\n\n  const radian = Math.acos(cos);\n\n  return (radian * 180) / Math.PI;\n}\n","import {\n  BaseVolumeViewport,\n  getEnabledElement,\n  Types,\n} from '@cornerstonejs/core';\nimport { mat4, vec3 } from 'gl-matrix';\nimport { BaseTool } from './base';\nimport angleBetweenLines from '../utilities/math/angle/angleBetweenLines';\nimport { PublicToolProps, ToolProps, EventTypes } from '../types';\n\n/**\n * The PlanarRotateTool is a tool that allows the user to rotate\n * the image by pressing the mouse click and dragging\n */\nclass PlanarRotateTool extends BaseTool {\n  static toolName;\n  touchDragCallback: (evt: EventTypes.MouseDragEventType) => void;\n  mouseDragCallback: (evt: EventTypes.MouseDragEventType) => void;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n\n    this.touchDragCallback = this._dragCallback.bind(this);\n    this.mouseDragCallback = this._dragCallback.bind(this);\n  }\n\n  _dragCallback(evt: EventTypes.MouseDragEventType) {\n    const { element, currentPoints, startPoints } = evt.detail;\n    const currentPointWorld = currentPoints.world;\n    const startPointWorld = startPoints.world;\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const camera = viewport.getCamera();\n    const width = element.clientWidth;\n    const height = element.clientHeight;\n\n    const centerCanvas: Types.Point2 = [width * 0.5, height * 0.5];\n    const centerWorld = viewport.canvasToWorld(centerCanvas);\n\n    let angle = angleBetweenLines(\n      [startPointWorld, centerWorld],\n      [centerWorld, currentPointWorld]\n    );\n\n    const { viewPlaneNormal, viewUp } = camera;\n\n    const v1 = vec3.sub(vec3.create(), centerWorld, startPointWorld);\n    const v2 = vec3.sub(vec3.create(), centerWorld, currentPointWorld);\n    const cross = vec3.cross(vec3.create(), v1, v2);\n    if (vec3.dot(viewPlaneNormal, cross) > 0) {\n      angle = -angle;\n    }\n\n    if (Number.isNaN(angle)) return;\n\n    if (viewport instanceof BaseVolumeViewport) {\n      const rotAngle = (angle * Math.PI) / 180;\n      const rotMat = mat4.identity(new Float32Array(16));\n      mat4.rotate(rotMat, rotMat, rotAngle, viewPlaneNormal);\n      const rotatedViewUp = vec3.transformMat4(vec3.create(), viewUp, rotMat);\n      viewport.setCamera({ viewUp: rotatedViewUp as Types.Point3 });\n    } else {\n      const { rotation } = (viewport as Types.IStackViewport).getProperties();\n      viewport.setProperties({ rotation: rotation + angle });\n    }\n\n    viewport.render();\n  }\n}\n\nPlanarRotateTool.toolName = 'PlanarRotate';\nexport default PlanarRotateTool;\n","import { getEnabledElement } from '@cornerstonejs/core';\nimport { BaseTool } from './base';\nimport { MouseWheelEventType } from '../types/EventTypes';\nimport scroll from '../utilities/scroll';\n\n/**\n * The StackScrollMouseWheelTool is a tool that allows the user to scroll through a\n * stack of images using the mouse wheel\n */\nclass StackScrollMouseWheelTool extends BaseTool {\n  static toolName;\n\n  _configuration: any;\n\n  constructor(\n    toolProps = {},\n    defaultToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        invert: false,\n        debounceIfNotLoaded: true,\n        loop: false,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n  }\n\n  mouseWheelCallback(evt: MouseWheelEventType): void {\n    const { wheel, element } = evt.detail;\n    const { direction } = wheel;\n    const { invert } = this.configuration;\n    const { viewport } = getEnabledElement(element);\n    const delta = direction * (invert ? -1 : 1);\n\n    const targetId = this.getTargetId(viewport);\n    const volumeId = targetId.split('volumeId:')[1];\n\n    scroll(viewport, {\n      delta,\n      debounceLoading: this.configuration.debounceIfNotLoaded,\n      loop: this.configuration.loop,\n      volumeId,\n    });\n  }\n}\n\nStackScrollMouseWheelTool.toolName = 'StackScrollMouseWheel';\nexport default StackScrollMouseWheelTool;\n","import { BaseTool } from './base';\nimport { getEnabledElement } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { mat4, vec3 } from 'gl-matrix';\nimport { PublicToolProps, ToolProps } from '../types';\nimport { MouseWheelEventType } from '../types/EventTypes';\n\nconst DIRECTIONS = {\n  X: [1, 0, 0],\n  Y: [0, 1, 0],\n  Z: [0, 0, 1],\n  CUSTOM: [],\n};\n\n/**\n * Tool that rotates the camera on mouse wheel.\n * It rotates the camera around the focal point, and around a defined axis. Default\n * axis is set to be Z axis, but it can be configured to any custom normalized axis.\n *\n */\nclass VolumeRotateMouseWheelTool extends BaseTool {\n  static toolName;\n  _configuration: any;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        direction: DIRECTIONS.Z,\n        rotateIncrementDegrees: 0.5,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n  }\n\n  mouseWheelCallback(evt: MouseWheelEventType) {\n    // https://github.com/kitware/vtk-js/blob/HEAD/Sources/Interaction/Manipulators/MouseCameraUnicamRotateManipulator/index.js#L73\n    const { element, wheel } = evt.detail;\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const { direction, rotateIncrementDegrees } = this.configuration;\n\n    const camera = viewport.getCamera();\n    const { viewUp, position, focalPoint } = camera;\n\n    const { direction: deltaY } = wheel;\n\n    const [cx, cy, cz] = focalPoint;\n    const [ax, ay, az] = direction;\n\n    const angle = deltaY * rotateIncrementDegrees;\n\n    // position[3] = 1.0\n    // focalPoint[3] = 1.0\n    // viewUp[3] = 0.0\n\n    const newPosition: Types.Point3 = [0, 0, 0];\n    const newFocalPoint: Types.Point3 = [0, 0, 0];\n    const newViewUp: Types.Point3 = [0, 0, 0];\n\n    const transform = mat4.identity(new Float32Array(16));\n    mat4.translate(transform, transform, [cx, cy, cz]);\n    mat4.rotate(transform, transform, angle, [ax, ay, az]);\n    mat4.translate(transform, transform, [-cx, -cy, -cz]);\n    vec3.transformMat4(newPosition, position, transform);\n    vec3.transformMat4(newFocalPoint, focalPoint, transform);\n\n    mat4.identity(transform);\n    mat4.rotate(transform, transform, angle, [ax, ay, az]);\n    vec3.transformMat4(<Types.Point3>newViewUp, viewUp, transform);\n\n    viewport.setCamera({\n      position: newPosition,\n      viewUp: newViewUp,\n      focalPoint: newFocalPoint,\n    });\n\n    viewport.render();\n  }\n}\n\nVolumeRotateMouseWheelTool.toolName = 'VolumeRotateMouseWheel';\nexport default VolumeRotateMouseWheelTool;\n","import { BaseTool } from './base';\nimport { getEnabledElement, VolumeViewport } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport { getPointInLineOfSightWithCriteria } from '../utilities/planar';\nimport jumpToWorld from '../utilities/viewport/jumpToWorld';\nimport { PublicToolProps, ToolProps } from '../types';\nimport { getToolGroupForViewport } from '../store/ToolGroupManager';\n\n/**\n * On a Maximum Intensity Projection (MIP) viewport, MIPJumpToClickTool allows the\n * user to click on a point in the MIP and the targetViewportIdS (provided in the\n * tool configuration) will be scrolled (jumped) to the location of the point with\n * the highest intensity value in the MIP.\n */\nclass MIPJumpToClickTool extends BaseTool {\n  static toolName;\n\n  _bounds: any;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        targetViewportIds: [],\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n  }\n\n  /**\n   * Handles the click event, and move the camera's focal point the brightest\n   * point that is in the line of sight of camera. This function 1) search for the\n   * brightest point in the line of sight, 2) move the camera to that point,\n   * this triggers a cameraModified event which then 4) moves all other synced\n   * viewports and their crosshairs.\n   *\n   * @param evt - click event\n   */\n  mouseClickCallback(evt): void {\n    const { element, currentPoints } = evt.detail;\n\n    // 1. Getting the enabled element\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    // 2. Getting the target volume that is clicked on\n    const targetId = this.getTargetId(viewport as Types.IVolumeViewport);\n\n    if (!targetId.startsWith('volumeId')) {\n      throw new Error(\n        `MIPJumpToClickTool: targetId is not a volumeId, you should only use MIPJumpToClickTool with a volumeId as the targetId`\n      );\n    }\n\n    const volumeId = targetId.split('volumeId:')[1];\n\n    // 3. Criteria function to search for the point (maximum intensity)\n    let maxIntensity = -Infinity;\n    const maxFn = (intensity, point) => {\n      if (intensity > maxIntensity) {\n        maxIntensity = intensity;\n        return point;\n      }\n    };\n\n    // 4. Search for the brightest point location in the line of sight\n    const brightestPoint = getPointInLineOfSightWithCriteria(\n      viewport as Types.IVolumeViewport,\n      currentPoints.world,\n      volumeId,\n      maxFn\n    );\n\n    if (!brightestPoint || !brightestPoint.length) {\n      return;\n    }\n\n    const { targetViewportIds, toolGroupId } = this.configuration;\n    // TODO - consider making this a utility\n    const viewports = renderingEngine.getViewports().filter((vp) => {\n      if (targetViewportIds?.indexOf(vp.id) >= 0) return true;\n      const foundToolGroup = getToolGroupForViewport(vp.id, renderingEngine.id);\n      if (toolGroupId && toolGroupId === foundToolGroup?.id) return true;\n      return false;\n    });\n\n    // 6. Update all the targetedViewports to jump\n    viewports.forEach((viewport) => {\n      // Todo: current limitation is that we cannot jump in viewports\n      // that don't belong to the renderingEngine of the source clicked viewport\n      if (viewport instanceof VolumeViewport) {\n        jumpToWorld(viewport, brightestPoint);\n      } else {\n        console.warn(\n          'Cannot jump to specified world coordinates for a viewport that is not a VolumeViewport'\n        );\n      }\n    });\n  }\n}\n\nMIPJumpToClickTool.toolName = 'MIPJumpToClickTool';\nexport default MIPJumpToClickTool;\n","import { Events } from '../../enums';\nimport {\n  getEnabledElement,\n  triggerEvent,\n  eventTarget,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport {\n  getCalibratedLengthUnits,\n  getCalibratedScale,\n} from '../../utilities/getCalibratedUnits';\nimport roundNumber from '../../utilities/roundNumber';\nimport { AnnotationTool } from '../base';\nimport throttle from '../../utilities/throttle';\nimport {\n  addAnnotation,\n  getAnnotations,\n  removeAnnotation,\n} from '../../stateManagement/annotation/annotationState';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport * as lineSegment from '../../utilities/math/line';\n\nimport {\n  drawHandles as drawHandlesSvg,\n  drawLine as drawLineSvg,\n  drawLinkedTextBox as drawLinkedTextBoxSvg,\n} from '../../drawingSvg';\nimport { state } from '../../store';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport {\n  AnnotationCompletedEventDetail,\n  AnnotationModifiedEventDetail,\n} from '../../types/EventTypes';\n\nimport {\n  resetElementCursor,\n  hideElementCursor,\n} from '../../cursors/elementCursor';\n\nimport {\n  EventTypes,\n  ToolHandle,\n  TextBoxHandle,\n  PublicToolProps,\n  ToolProps,\n  SVGDrawingHelper,\n} from '../../types';\nimport { LengthAnnotation } from '../../types/ToolSpecificAnnotationTypes';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\n\nconst { transformWorldToIndex } = csUtils;\n\n/**\n * LengthTool let you draw annotations that measures the length of two drawing\n * points on a slice. You can use the LengthTool in all imaging planes even in oblique\n * reconstructed planes. Note: annotation tools in cornerstone3DTools exists in the exact location\n * in the physical 3d space, as a result, by default, all annotations that are\n * drawing in the same frameOfReference will get shared between viewports that\n * are in the same frameOfReference.\n *\n * The resulting annotation's data (statistics) and metadata (the\n * state of the viewport while drawing was happening) will get added to the\n * ToolState manager and can be accessed from the ToolState by calling getAnnotations\n * or similar methods.\n *\n * ```js\n * cornerstoneTools.addTool(LengthTool)\n *\n * const toolGroup = ToolGroupManager.createToolGroup('toolGroupId')\n *\n * toolGroup.addTool(LengthTool.toolName)\n *\n * toolGroup.addViewport('viewportId', 'renderingEngineId')\n *\n * toolGroup.setToolActive(LengthTool.toolName, {\n *   bindings: [\n *    {\n *       mouseButton: MouseBindings.Primary, // Left Click\n *     },\n *   ],\n * })\n * ```\n *\n * Read more in the Docs section of the website.\n\n */\n\nclass LengthTool extends AnnotationTool {\n  static toolName;\n\n  public touchDragCallback: any;\n  public mouseDragCallback: any;\n  _throttledCalculateCachedStats: any;\n  editData: {\n    annotation: any;\n    viewportIdsToRender: string[];\n    handleIndex?: number;\n    movingTextBox?: boolean;\n    newAnnotation?: boolean;\n    hasMoved?: boolean;\n  } | null;\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        preventHandleOutsideImage: false,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n\n    this._throttledCalculateCachedStats = throttle(\n      this._calculateCachedStats,\n      100,\n      { trailing: true }\n    );\n  }\n\n  /**\n   * Based on the current position of the mouse and the current imageId to create\n   * a Length Annotation and stores it in the annotationManager\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  addNewAnnotation = (\n    evt: EventTypes.InteractionEventType\n  ): LengthAnnotation => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    hideElementCursor(element);\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    const referencedImageId = this.getReferencedImageId(\n      viewport,\n      worldPos,\n      viewPlaneNormal,\n      viewUp\n    );\n\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n    const annotation = {\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        toolName: this.getToolName(),\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId,\n      },\n      data: {\n        handles: {\n          points: [<Types.Point3>[...worldPos], <Types.Point3>[...worldPos]],\n          activeHandleIndex: null,\n          textBox: {\n            hasMoved: false,\n            worldPosition: <Types.Point3>[0, 0, 0],\n            worldBoundingBox: {\n              topLeft: <Types.Point3>[0, 0, 0],\n              topRight: <Types.Point3>[0, 0, 0],\n              bottomLeft: <Types.Point3>[0, 0, 0],\n              bottomRight: <Types.Point3>[0, 0, 0],\n            },\n          },\n        },\n        label: '',\n        cachedStats: {},\n      },\n    };\n\n    addAnnotation(annotation, element);\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex: 1,\n      movingTextBox: false,\n      newAnnotation: true,\n      hasMoved: false,\n    };\n    this._activateDraw(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  };\n\n  /**\n   * It returns if the canvas point is near the provided length annotation in the provided\n   * element or not. A proximity is passed to the function to determine the\n   * proximity of the point to the annotation in number of pixels.\n   *\n   * @param element - HTML Element\n   * @param annotation - Annotation\n   * @param canvasCoords - Canvas coordinates\n   * @param proximity - Proximity to tool to consider\n   * @returns Boolean, whether the canvas point is near tool\n   */\n  isPointNearTool = (\n    element: HTMLDivElement,\n    annotation: LengthAnnotation,\n    canvasCoords: Types.Point2,\n    proximity: number\n  ): boolean => {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const { data } = annotation;\n    const [point1, point2] = data.handles.points;\n    const canvasPoint1 = viewport.worldToCanvas(point1);\n    const canvasPoint2 = viewport.worldToCanvas(point2);\n\n    const line = {\n      start: {\n        x: canvasPoint1[0],\n        y: canvasPoint1[1],\n      },\n      end: {\n        x: canvasPoint2[0],\n        y: canvasPoint2[1],\n      },\n    };\n\n    const distanceToPoint = lineSegment.distanceToPoint(\n      [line.start.x, line.start.y],\n      [line.end.x, line.end.y],\n      [canvasCoords[0], canvasCoords[1]]\n    );\n\n    if (distanceToPoint <= proximity) {\n      return true;\n    }\n\n    return false;\n  };\n\n  toolSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: LengthAnnotation\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    annotation.highlighted = true;\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      movingTextBox: false,\n    };\n\n    this._activateModify(element);\n\n    hideElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    evt.preventDefault();\n  };\n\n  handleSelectedCallback(\n    evt: EventTypes.InteractionEventType,\n    annotation: LengthAnnotation,\n    handle: ToolHandle\n  ): void {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const { data } = annotation;\n\n    annotation.highlighted = true;\n\n    let movingTextBox = false;\n    let handleIndex;\n\n    if ((handle as TextBoxHandle).worldPosition) {\n      movingTextBox = true;\n    } else {\n      handleIndex = data.handles.points.findIndex((p) => p === handle);\n    }\n\n    // Find viewports to render on drag.\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex,\n      movingTextBox,\n    };\n    this._activateModify(element);\n\n    hideElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    evt.preventDefault();\n  }\n\n  _endCallback = (evt: EventTypes.InteractionEventType): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, newAnnotation, hasMoved } =\n      this.editData;\n    const { data } = annotation;\n\n    if (newAnnotation && !hasMoved) {\n      // when user starts the drawing by click, and moving the mouse, instead\n      // of click and drag\n      return;\n    }\n\n    data.handles.activeHandleIndex = null;\n\n    this._deactivateModify(element);\n    this._deactivateDraw(element);\n    resetElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    if (\n      this.isHandleOutsideImage &&\n      this.configuration.preventHandleOutsideImage\n    ) {\n      removeAnnotation(annotation.annotationUID);\n    }\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    if (newAnnotation) {\n      const eventType = Events.ANNOTATION_COMPLETED;\n\n      const eventDetail: AnnotationCompletedEventDetail = {\n        annotation,\n      };\n\n      triggerEvent(eventTarget, eventType, eventDetail);\n    }\n\n    this.editData = null;\n    this.isDrawing = false;\n  };\n\n  _dragCallback = (evt: EventTypes.InteractionEventType): void => {\n    this.isDrawing = true;\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, handleIndex, movingTextBox } =\n      this.editData;\n    const { data } = annotation;\n\n    if (movingTextBox) {\n      // Drag mode - moving text box\n      const { deltaPoints } = eventDetail as EventTypes.MouseDragEventDetail;\n      const worldPosDelta = deltaPoints.world;\n\n      const { textBox } = data.handles;\n      const { worldPosition } = textBox;\n\n      worldPosition[0] += worldPosDelta[0];\n      worldPosition[1] += worldPosDelta[1];\n      worldPosition[2] += worldPosDelta[2];\n\n      textBox.hasMoved = true;\n    } else if (handleIndex === undefined) {\n      // Drag mode - moving handle\n      const { deltaPoints } = eventDetail as EventTypes.MouseDragEventDetail;\n      const worldPosDelta = deltaPoints.world;\n\n      const points = data.handles.points;\n\n      points.forEach((point) => {\n        point[0] += worldPosDelta[0];\n        point[1] += worldPosDelta[1];\n        point[2] += worldPosDelta[2];\n      });\n      annotation.invalidated = true;\n    } else {\n      // Move mode - after double click, and mouse move to draw\n      const { currentPoints } = eventDetail;\n      const worldPos = currentPoints.world;\n\n      data.handles.points[handleIndex] = [...worldPos];\n      annotation.invalidated = true;\n    }\n\n    this.editData.hasMoved = true;\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  };\n\n  cancel = (element: HTMLDivElement) => {\n    // If it is mid-draw or mid-modify\n    if (this.isDrawing) {\n      this.isDrawing = false;\n      this._deactivateDraw(element);\n      this._deactivateModify(element);\n      resetElementCursor(element);\n\n      const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n      const { data } = annotation;\n\n      annotation.highlighted = false;\n      data.handles.activeHandleIndex = null;\n\n      const enabledElement = getEnabledElement(element);\n      const { renderingEngine } = enabledElement;\n\n      triggerAnnotationRenderForViewportIds(\n        renderingEngine,\n        viewportIdsToRender\n      );\n\n      if (newAnnotation) {\n        const eventType = Events.ANNOTATION_COMPLETED;\n\n        const eventDetail: AnnotationCompletedEventDetail = {\n          annotation,\n        };\n\n        triggerEvent(eventTarget, eventType, eventDetail);\n      }\n\n      this.editData = null;\n      return annotation.annotationUID;\n    }\n  };\n\n  _activateModify = (element: HTMLDivElement) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(\n      Events.MOUSE_UP,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_DRAG,\n      this._dragCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_CLICK,\n      this._endCallback as EventListener\n    );\n\n    element.addEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_DRAG,\n      this._dragCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n  };\n\n  _deactivateModify = (element: HTMLDivElement) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(\n      Events.MOUSE_UP,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_DRAG,\n      this._dragCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_CLICK,\n      this._endCallback as EventListener\n    );\n\n    element.removeEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_DRAG,\n      this._dragCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n  };\n\n  _activateDraw = (element: HTMLDivElement) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(\n      Events.MOUSE_UP,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_DRAG,\n      this._dragCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_MOVE,\n      this._dragCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_CLICK,\n      this._endCallback as EventListener\n    );\n\n    element.addEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_DRAG,\n      this._dragCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n  };\n\n  _deactivateDraw = (element: HTMLDivElement) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(\n      Events.MOUSE_UP,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_DRAG,\n      this._dragCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_MOVE,\n      this._dragCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_CLICK,\n      this._endCallback as EventListener\n    );\n\n    element.removeEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_DRAG,\n      this._dragCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n  };\n\n  /**\n   * it is used to draw the length annotation in each\n   * request animation frame. It calculates the updated cached statistics if\n   * data is invalidated and cache it.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n    const { viewport } = enabledElement;\n    const { element } = viewport;\n\n    let annotations = getAnnotations(this.getToolName(), element);\n\n    // Todo: We don't need this anymore, filtering happens in triggerAnnotationRender\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    annotations = this.filterInteractableAnnotationsForElement(\n      element,\n      annotations\n    );\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    const targetId = this.getTargetId(viewport);\n    const renderingEngine = viewport.getRenderingEngine();\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    // Draw SVG\n    for (let i = 0; i < annotations.length; i++) {\n      const annotation = annotations[i] as LengthAnnotation;\n      const { annotationUID, data } = annotation;\n      const { points, activeHandleIndex } = data.handles;\n\n      styleSpecifier.annotationUID = annotationUID;\n\n      // Todo: move these into annotationTool class\n      const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n      const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n      const color = this.getStyle('color', styleSpecifier, annotation);\n      const shadow = this.getStyle('shadow', styleSpecifier, annotation);\n\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n\n      let activeHandleCanvasCoords;\n\n      // If cachedStats does not exist, or the unit is missing (as part of import/hydration etc.),\n      // force to recalculate the stats from the points\n      if (\n        !data.cachedStats[targetId] ||\n        data.cachedStats[targetId].unit === undefined\n      ) {\n        data.cachedStats[targetId] = {\n          length: null,\n          unit: null,\n        };\n\n        this._calculateCachedStats(annotation, renderingEngine, enabledElement);\n      } else if (annotation.invalidated) {\n        this._throttledCalculateCachedStats(\n          annotation,\n          renderingEngine,\n          enabledElement\n        );\n      }\n\n      if (!isAnnotationVisible(annotationUID)) {\n        continue;\n      }\n\n      if (\n        !isAnnotationLocked(annotation) &&\n        !this.editData &&\n        activeHandleIndex !== null\n      ) {\n        // Not locked or creating and hovering over handle, so render handle.\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n      }\n\n      if (activeHandleCanvasCoords) {\n        const handleGroupUID = '0';\n\n        drawHandlesSvg(\n          svgDrawingHelper,\n          annotationUID,\n          handleGroupUID,\n          canvasCoordinates,\n          {\n            color,\n            lineDash,\n            lineWidth,\n          }\n        );\n      }\n\n      const dataId = `${annotationUID}-line`;\n      const lineUID = '1';\n      drawLineSvg(\n        svgDrawingHelper,\n        annotationUID,\n        lineUID,\n        canvasCoordinates[0],\n        canvasCoordinates[1],\n        {\n          color,\n          width: lineWidth,\n          lineDash,\n          shadow,\n        },\n        dataId\n      );\n\n      renderStatus = true;\n\n      // If rendering engine has been destroyed while rendering\n      if (!viewport.getRenderingEngine()) {\n        console.warn('Rendering Engine has been destroyed');\n        return renderStatus;\n      }\n\n      const textLines = this._getTextLines(data, targetId);\n\n      // Need to update to sync with annotation while unlinked/not moved\n      if (!data.handles.textBox.hasMoved) {\n        const canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCoordinates);\n\n        data.handles.textBox.worldPosition =\n          viewport.canvasToWorld(canvasTextBoxCoords);\n      }\n\n      const textBoxPosition = viewport.worldToCanvas(\n        data.handles.textBox.worldPosition\n      );\n\n      const textBoxUID = '1';\n      const boundingBox = drawLinkedTextBoxSvg(\n        svgDrawingHelper,\n        annotationUID,\n        textBoxUID,\n        textLines,\n        textBoxPosition,\n        canvasCoordinates,\n        {},\n        this.getLinkedTextBoxStyle(styleSpecifier, annotation)\n      );\n\n      const { x: left, y: top, width, height } = boundingBox;\n\n      data.handles.textBox.worldBoundingBox = {\n        topLeft: viewport.canvasToWorld([left, top]),\n        topRight: viewport.canvasToWorld([left + width, top]),\n        bottomLeft: viewport.canvasToWorld([left, top + height]),\n        bottomRight: viewport.canvasToWorld([left + width, top + height]),\n      };\n    }\n\n    return renderStatus;\n  };\n\n  // text line for the current active length annotation\n  _getTextLines(data, targetId) {\n    const cachedVolumeStats = data.cachedStats[targetId];\n    const { length, unit } = cachedVolumeStats;\n\n    // Can be null on load\n    if (length === undefined || length === null || isNaN(length)) {\n      return;\n    }\n\n    const textLines = [`${roundNumber(length)} ${unit}`];\n\n    return textLines;\n  }\n\n  _calculateLength(pos1, pos2) {\n    const dx = pos1[0] - pos2[0];\n    const dy = pos1[1] - pos2[1];\n    const dz = pos1[2] - pos2[2];\n\n    return Math.sqrt(dx * dx + dy * dy + dz * dz);\n  }\n\n  _calculateCachedStats(annotation, renderingEngine, enabledElement) {\n    const data = annotation.data;\n    const { viewportId, renderingEngineId } = enabledElement;\n\n    const worldPos1 = data.handles.points[0];\n    const worldPos2 = data.handles.points[1];\n    const { cachedStats } = data;\n    const targetIds = Object.keys(cachedStats);\n\n    // TODO clean up, this doesn't need a length per volume, it has no stats derived from volumes.\n\n    for (let i = 0; i < targetIds.length; i++) {\n      const targetId = targetIds[i];\n\n      const image = this.getTargetIdImage(targetId, renderingEngine);\n\n      // If image does not exists for the targetId, skip. This can be due\n      // to various reasons such as if the target was a volumeViewport, and\n      // the volumeViewport has been decached in the meantime.\n      if (!image) {\n        continue;\n      }\n\n      const { imageData, dimensions } = image;\n      const scale = getCalibratedScale(image);\n\n      const length = this._calculateLength(worldPos1, worldPos2) / scale;\n\n      const index1 = transformWorldToIndex(imageData, worldPos1);\n      const index2 = transformWorldToIndex(imageData, worldPos2);\n\n      this._isInsideVolume(index1, index2, dimensions)\n        ? (this.isHandleOutsideImage = false)\n        : (this.isHandleOutsideImage = true);\n\n      // TODO -> Do we instead want to clip to the bounds of the volume and only include that portion?\n      // Seems like a lot of work for an unrealistic case. At the moment bail out of stat calculation if either\n      // corner is off the canvas.\n\n      // todo: add insideVolume calculation, for removing tool if outside\n      cachedStats[targetId] = {\n        length,\n        unit: getCalibratedLengthUnits(null, image),\n      };\n    }\n\n    annotation.invalidated = false;\n\n    // Dispatching annotation modified\n    const eventType = Events.ANNOTATION_MODIFIED;\n\n    const eventDetail: AnnotationModifiedEventDetail = {\n      annotation,\n      viewportId,\n      renderingEngineId,\n    };\n    triggerEvent(eventTarget, eventType, eventDetail);\n\n    return cachedStats;\n  }\n\n  _isInsideVolume(index1, index2, dimensions) {\n    return (\n      csUtils.indexWithinDimensions(index1, dimensions) &&\n      csUtils.indexWithinDimensions(index2, dimensions)\n    );\n  }\n}\n\nLengthTool.toolName = 'Length';\nexport default LengthTool;\n","import { vec2, vec3 } from 'gl-matrix';\nimport vtkMath from '@kitware/vtk.js/Common/Core/Math';\nimport vtkMatrixBuilder from '@kitware/vtk.js/Common/Core/MatrixBuilder';\n\nimport { AnnotationTool } from './base';\n\nimport {\n  getEnabledElementByIds,\n  getEnabledElement,\n  utilities as csUtils,\n  Enums,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport {\n  getToolGroup,\n  getToolGroupForViewport,\n} from '../store/ToolGroupManager';\n\nimport {\n  addAnnotation,\n  getAnnotations,\n  removeAnnotation,\n} from '../stateManagement/annotation/annotationState';\n\nimport {\n  drawCircle as drawCircleSvg,\n  drawHandles as drawHandlesSvg,\n  drawLine as drawLineSvg,\n} from '../drawingSvg';\nimport { state } from '../store';\nimport { Events } from '../enums';\nimport { getViewportIdsWithToolToRender } from '../utilities/viewportFilters';\nimport {\n  resetElementCursor,\n  hideElementCursor,\n} from '../cursors/elementCursor';\nimport liangBarksyClip from '../utilities/math/vec2/liangBarksyClip';\n\nimport * as lineSegment from '../utilities/math/line';\nimport {\n  Annotation,\n  Annotations,\n  EventTypes,\n  ToolHandle,\n  PublicToolProps,\n  ToolProps,\n  InteractionTypes,\n  SVGDrawingHelper,\n} from '../types';\nimport { isAnnotationLocked } from '../stateManagement/annotation/annotationLocking';\nimport triggerAnnotationRenderForViewportIds from '../utilities/triggerAnnotationRenderForViewportIds';\nimport { CONSTANTS } from '@cornerstonejs/core';\n\nconst { RENDERING_DEFAULTS } = CONSTANTS;\n\n// TODO: nested config is weird\ninterface ToolConfiguration {\n  configuration?: {\n    getReferenceLineColor?: (viewportId: string) => string;\n    getReferenceLineControllable?: (viewportId: string) => boolean;\n    getReferenceLineDraggableRotatable?: (viewportId: string) => boolean;\n    getReferenceLineSlabThicknessControlsOn?: (viewportId: string) => boolean;\n    referenceLinesCenterGapRadius?: number;\n    shadow?: boolean;\n    autopan?: {\n      enabled: boolean;\n      panSize: number;\n    };\n    mobile?: {\n      enabled: boolean;\n      opacity: number;\n      handleRadius: number;\n    };\n  };\n}\n\ninterface CrosshairsAnnotation extends Annotation {\n  data: {\n    handles: {\n      rotationPoints: any[]; // rotation handles, used for rotation interactions\n      slabThicknessPoints: any[]; // slab thickness handles, used for setting the slab thickness\n      activeOperation: number | null; // 0 translation, 1 rotation handles, 2 slab thickness handles\n      toolCenter: Types.Point3;\n    };\n    activeViewportIds: string[]; // a list of the viewport ids connected to the reference lines being translated\n    viewportId: string;\n  };\n}\n\nfunction defaultReferenceLineColor() {\n  return 'rgb(0, 200, 0)';\n}\n\nfunction defaultReferenceLineControllable() {\n  return true;\n}\n\nfunction defaultReferenceLineDraggableRotatable() {\n  return true;\n}\n\nfunction defaultReferenceLineSlabThicknessControlsOn() {\n  return true;\n}\n\nconst OPERATION = {\n  DRAG: 1,\n  ROTATE: 2,\n  SLAB: 3,\n};\n\nconst EPSILON = 1e-3;\n\n/**\n * CrosshairsTool is a tool that provides reference lines between different viewports\n * of a toolGroup. Using crosshairs, you can jump to a specific location in one\n * viewport and the rest of the viewports in the toolGroup will be aligned to that location.\n * Crosshairs have grababble handles that can be used to rotate and translate the\n * reference lines. They can also be used to set the slab thickness of the viewports\n * by modifying the slab thickness handles.\n *\n */\nclass CrosshairsTool extends AnnotationTool {\n  static toolName;\n\n  toolCenter: Types.Point3 = [0, 0, 0]; // NOTE: it is assumed that all the active/linked viewports share the same crosshair center.\n  // This because the rotation operation rotates also all the other active/intersecting reference lines of the same angle\n  _getReferenceLineColor?: (viewportId: string) => string;\n  _getReferenceLineControllable?: (viewportId: string) => boolean;\n  _getReferenceLineDraggableRotatable?: (viewportId: string) => boolean;\n  _getReferenceLineSlabThicknessControlsOn?: (viewportId: string) => boolean;\n  editData: {\n    annotation: any;\n  } | null;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse'],\n      configuration: {\n        shadow: true,\n        // renders a colored circle on top right of the viewports whose color\n        // matches the color of the reference line\n        viewportIndicators: true,\n        // Auto pan is a configuration which will update pan\n        // other viewports in the toolGroup if the center of the crosshairs\n        // is outside of the viewport. This might be useful for the case\n        // when the user is scrolling through an image (usually in the zoomed view)\n        // and the crosshairs will eventually get outside of the viewport for\n        // the other viewports.\n        autoPan: {\n          enabled: false,\n          panSize: 10,\n        },\n        // radius of the area around the intersection of the planes, in which\n        // the reference lines will not be rendered. This is only used when\n        // having 3 viewports in the toolGroup.\n        referenceLinesCenterGapRadius: 20,\n        // actorUIDs for slabThickness application, if not defined, the slab thickness\n        // will be applied to all actors of the viewport\n        filterActorUIDsToSetSlabThickness: [],\n        // blend mode for slabThickness modifications\n        slabThicknessBlendMode: Enums.BlendModes.MAXIMUM_INTENSITY_BLEND,\n        mobile: {\n          enabled: false,\n          opacity: 0.8,\n          handleRadius: 9,\n        },\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n\n    this._getReferenceLineColor =\n      toolProps.configuration?.getReferenceLineColor ||\n      defaultReferenceLineColor;\n    this._getReferenceLineControllable =\n      toolProps.configuration?.getReferenceLineControllable ||\n      defaultReferenceLineControllable;\n    this._getReferenceLineDraggableRotatable =\n      toolProps.configuration?.getReferenceLineDraggableRotatable ||\n      defaultReferenceLineDraggableRotatable;\n    this._getReferenceLineSlabThicknessControlsOn =\n      toolProps.configuration?.getReferenceLineSlabThicknessControlsOn ||\n      defaultReferenceLineSlabThicknessControlsOn;\n  }\n\n  /**\n   * Gets the camera from the viewport, and adds crosshairs annotation for the viewport\n   * to the annotationManager. If any annotation is found in the annotationManager, it\n   * overwrites it.\n   * @param viewportInfo - The viewportInfo for the viewport to add the crosshairs\n   * @returns viewPlaneNormal and center of viewport canvas in world space\n   */\n  initializeViewport = ({\n    renderingEngineId,\n    viewportId,\n  }: Types.IViewportId): {\n    normal: Types.Point3;\n    point: Types.Point3;\n  } => {\n    const enabledElement = getEnabledElementByIds(\n      viewportId,\n      renderingEngineId\n    );\n    const { FrameOfReferenceUID, viewport } = enabledElement;\n    const { element } = viewport;\n    const { position, focalPoint, viewPlaneNormal } = viewport.getCamera();\n\n    // Check if there is already annotation for this viewport\n    let annotations = this._getAnnotations(enabledElement);\n    annotations = this.filterInteractableAnnotationsForElement(\n      element,\n      annotations\n    );\n\n    if (annotations.length) {\n      // If found, it will override it by removing the annotation and adding it later\n      removeAnnotation(annotations[0].annotationUID);\n    }\n\n    const annotation = {\n      highlighted: false,\n      metadata: {\n        cameraPosition: <Types.Point3>[...position],\n        cameraFocalPoint: <Types.Point3>[...focalPoint],\n        FrameOfReferenceUID,\n        toolName: this.getToolName(),\n      },\n      data: {\n        handles: {\n          rotationPoints: [], // rotation handles, used for rotation interactions\n          slabThicknessPoints: [], // slab thickness handles, used for setting the slab thickness\n          toolCenter: this.toolCenter,\n        },\n        activeOperation: null, // 0 translation, 1 rotation handles, 2 slab thickness handles\n        activeViewportIds: [], // a list of the viewport ids connected to the reference lines being translated\n        viewportId,\n      },\n    };\n\n    addAnnotation(annotation, element);\n\n    return {\n      normal: viewPlaneNormal,\n      point: viewport.canvasToWorld([\n        viewport.canvas.clientWidth / 2,\n        viewport.canvas.clientHeight / 2,\n      ]),\n    };\n  };\n\n  _getViewportsInfo = () => {\n    const viewports = getToolGroup(this.toolGroupId).viewportsInfo;\n\n    return viewports;\n  };\n\n  onSetToolActive() {\n    const viewportsInfo = this._getViewportsInfo();\n\n    // Upon new setVolumes on viewports we need to update the crosshairs\n    // reference points in the new space, so we subscribe to the event\n    // and update the reference points accordingly.\n    this._unsubscribeToViewportNewVolumeSet(viewportsInfo);\n    this._subscribeToViewportNewVolumeSet(viewportsInfo);\n\n    this.computeToolCenter(viewportsInfo);\n  }\n\n  onSetToolPassive() {\n    const viewportsInfo = this._getViewportsInfo();\n\n    this.computeToolCenter(viewportsInfo);\n  }\n\n  onSetToolEnabled() {\n    const viewportsInfo = this._getViewportsInfo();\n\n    this.computeToolCenter(viewportsInfo);\n  }\n\n  onSetToolDisabled() {\n    const viewportsInfo = this._getViewportsInfo();\n\n    this._unsubscribeToViewportNewVolumeSet(viewportsInfo);\n\n    // Crosshairs annotations in the state\n    // has no value when the tool is disabled\n    // since viewports can change (zoom, pan, scroll)\n    // between disabled and enabled/active states.\n    // so we just remove the annotations from the state\n    viewportsInfo.forEach(({ renderingEngineId, viewportId }) => {\n      const enabledElement = getEnabledElementByIds(\n        viewportId,\n        renderingEngineId\n      );\n\n      if (!enabledElement) {\n        return;\n      }\n\n      const annotations = this._getAnnotations(enabledElement);\n\n      if (annotations?.length) {\n        annotations.forEach((annotation) => {\n          removeAnnotation(annotation.annotationUID);\n        });\n      }\n    });\n  }\n\n  /**\n   * When activated, it initializes the crosshairs. It begins by computing\n   * the intersection of viewports associated with the crosshairs instance.\n   * When all three views are accessible, the intersection (e.g., crosshairs tool centre)\n   * will be an exact point in space; however, with two viewports, because the\n   * intersection of two planes is a line, it assumes the last view is between the centre\n   * of the two rendering viewports.\n   * @param viewportsInfo Array of viewportInputs which each item containing {viewportId, renderingEngineId}\n   */\n  computeToolCenter = (viewportsInfo): void => {\n    if (!viewportsInfo.length || viewportsInfo.length === 1) {\n      throw new Error(\n        'For crosshairs to operate, at least two viewports must be given.'\n      );\n    }\n\n    // Todo: handle two same view viewport, or more than 3 viewports\n    const [firstViewport, secondViewport, thirdViewport] = viewportsInfo;\n\n    // Initialize first viewport\n    const { normal: normal1, point: point1 } =\n      this.initializeViewport(firstViewport);\n\n    // Initialize second viewport\n    const { normal: normal2, point: point2 } =\n      this.initializeViewport(secondViewport);\n\n    let normal3 = <Types.Point3>[0, 0, 0];\n    let point3 = vec3.create();\n\n    // If there are three viewports\n    if (thirdViewport) {\n      ({ normal: normal3, point: point3 } =\n        this.initializeViewport(thirdViewport));\n    } else {\n      // If there are only two views (viewport) associated with the crosshairs:\n      // In this situation, we don't have a third information to find the\n      // exact intersection, and we \"assume\" the third view is looking at\n      // a location in between the first and second view centers\n      vec3.add(point3, point1, point2);\n      vec3.scale(point3, point3, 0.5);\n      vec3.cross(normal3, normal1, normal2);\n    }\n\n    // Planes of each viewport\n    const firstPlane = csUtils.planar.planeEquation(normal1, point1);\n    const secondPlane = csUtils.planar.planeEquation(normal2, point2);\n    const thirdPlane = csUtils.planar.planeEquation(normal3, point3);\n\n    // Calculating the intersection of 3 planes\n    // prettier-ignore\n    this.toolCenter = csUtils.planar.threePlaneIntersection(firstPlane, secondPlane, thirdPlane)\n\n    // assuming all viewports are in the same rendering engine\n    const { renderingEngine } = getEnabledElementByIds(\n      viewportsInfo[0].viewportId,\n      viewportsInfo[0].renderingEngineId\n    );\n\n    triggerAnnotationRenderForViewportIds(\n      renderingEngine,\n      viewportsInfo.map(({ viewportId }) => viewportId)\n    );\n  };\n\n  /**\n   * addNewAnnotation acts as jump for the crosshairs tool. It is called when\n   * the user clicks on the image. It does not store the annotation in the stateManager though.\n   *\n   * @param evt - The mouse event\n   * @param interactionType - The type of interaction (e.g., mouse, touch, etc.)\n   * @returns Crosshairs annotation\n   */\n  addNewAnnotation = (\n    evt: EventTypes.InteractionEventType\n  ): CrosshairsAnnotation => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { currentPoints } = eventDetail;\n    const jumpWorld = currentPoints.world;\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    this._jump(enabledElement, jumpWorld);\n\n    const annotations = this._getAnnotations(enabledElement);\n    const filteredAnnotations = this.filterInteractableAnnotationsForElement(\n      viewport.element,\n      annotations\n    );\n\n    // viewport Annotation\n    const { data } = filteredAnnotations[0];\n\n    const { rotationPoints } = data.handles;\n    const viewportIdArray = [];\n    // put all the draggable reference lines in the viewportIdArray\n    for (let i = 0; i < rotationPoints.length - 1; ++i) {\n      const otherViewport = rotationPoints[i][1];\n      const viewportControllable = this._getReferenceLineControllable(\n        otherViewport.id\n      );\n      const viewportDraggableRotatable =\n        this._getReferenceLineDraggableRotatable(otherViewport.id);\n      if (!viewportControllable || !viewportDraggableRotatable) {\n        continue;\n      }\n      viewportIdArray.push(otherViewport.id);\n      // rotation handles are two per viewport\n      i++;\n    }\n\n    data.activeViewportIds = [...viewportIdArray];\n    // set translation operation\n    data.handles.activeOperation = OPERATION.DRAG;\n\n    evt.preventDefault();\n\n    hideElementCursor(element);\n\n    this._activateModify(element);\n    return filteredAnnotations[0];\n  };\n\n  cancel = () => {\n    console.log('Not implemented yet');\n  };\n\n  /**\n   * It checks if the mouse click is near crosshairs handles, if yes\n   * it returns the handle location. If the mouse click is not near any\n   * of the handles, it does not return anything.\n   *\n   * @param element - The element that the tool is attached to.\n   * @param annotation - The annotation object associated with the annotation\n   * @param canvasCoords - The coordinates of the mouse click on canvas\n   * @param proximity - The distance from the mouse cursor to the point\n   * that is considered \"near\".\n   * @returns The handle that is closest to the cursor, or null if the cursor\n   * is not near any of the handles.\n   */\n  getHandleNearImagePoint(\n    element: HTMLDivElement,\n    annotation: Annotation,\n    canvasCoords: Types.Point2,\n    proximity: number\n  ): ToolHandle | undefined {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    let point = this._getRotationHandleNearImagePoint(\n      viewport,\n      annotation,\n      canvasCoords,\n      proximity\n    );\n\n    if (point !== null) {\n      return point;\n    }\n\n    point = this._getSlabThicknessHandleNearImagePoint(\n      viewport,\n      annotation,\n      canvasCoords,\n      proximity\n    );\n\n    if (point !== null) {\n      return point;\n    }\n  }\n\n  handleSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: Annotation\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    annotation.highlighted = true;\n\n    // NOTE: handle index or coordinates are not used when dragging.\n    // This because the handle points are actually generated in the renderTool and they are a derivative\n    // from the camera variables of the viewports and of the slab thickness variable.\n    // Remember that the translation and rotation operations operate on the camera\n    // variables and not really on the handles. Similar for the slab thickness.\n    this._activateModify(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n  };\n\n  /**\n   * It returns if the canvas point is near the provided crosshairs annotation in the\n   * provided element or not. A proximity is passed to the function to determine the\n   * proximity of the point to the annotation in number of pixels.\n   *\n   * @param element - HTML Element\n   * @param annotation - Annotation\n   * @param canvasCoords - Canvas coordinates\n   * @param proximity - Proximity to tool to consider\n   * @returns Boolean, whether the canvas point is near tool\n   */\n  isPointNearTool = (\n    element: HTMLDivElement,\n    annotation: CrosshairsAnnotation,\n    canvasCoords: Types.Point2,\n    proximity: number\n  ): boolean => {\n    if (this._pointNearTool(element, annotation, canvasCoords, 6)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  toolSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: Annotation,\n    interactionType: InteractionTypes\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    annotation.highlighted = true;\n    this._activateModify(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n  };\n\n  onCameraModified = (evt) => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n    const viewport = enabledElement.viewport as Types.IVolumeViewport;\n\n    const annotations = this._getAnnotations(enabledElement);\n    const filteredToolAnnotations =\n      this.filterInteractableAnnotationsForElement(element, annotations);\n\n    // viewport that the camera modified is originating from\n    const viewportAnnotation =\n      filteredToolAnnotations[0] as CrosshairsAnnotation;\n\n    if (!viewportAnnotation) {\n      return;\n    }\n\n    // -- Update the camera of other linked viewports containing the same volumeId that\n    //    have the same camera in case of translation\n    // -- Update the crosshair center in world coordinates in annotation.\n    // This is necessary because other tools can modify the position of the slices,\n    // e.g. stackScroll tool at wheel scroll. So we update the coordinates of the center always here.\n    // NOTE: rotation and slab thickness handles are created/updated in renderTool.\n    const currentCamera = viewport.getCamera();\n    const oldCameraPosition = viewportAnnotation.metadata.cameraPosition;\n    const deltaCameraPosition: Types.Point3 = [0, 0, 0];\n    vtkMath.subtract(\n      currentCamera.position,\n      oldCameraPosition,\n      deltaCameraPosition\n    );\n\n    const oldCameraFocalPoint = viewportAnnotation.metadata.cameraFocalPoint;\n    const deltaCameraFocalPoint: Types.Point3 = [0, 0, 0];\n    vtkMath.subtract(\n      currentCamera.focalPoint,\n      oldCameraFocalPoint,\n      deltaCameraFocalPoint\n    );\n\n    // updated cached \"previous\" camera position and focal point\n    viewportAnnotation.metadata.cameraPosition = [...currentCamera.position];\n    viewportAnnotation.metadata.cameraFocalPoint = [\n      ...currentCamera.focalPoint,\n    ];\n\n    const viewportControllable = this._getReferenceLineControllable(\n      viewport.id\n    );\n    const viewportDraggableRotatable = this._getReferenceLineDraggableRotatable(\n      viewport.id\n    );\n    if (\n      !csUtils.isEqual(currentCamera.position, oldCameraPosition, 1e-3) &&\n      viewportControllable &&\n      viewportDraggableRotatable\n    ) {\n      // Is camera Modified a TRANSLATION or ROTATION?\n      let isRotation = false;\n\n      // This is guaranteed to be the same diff for both position and focal point\n      // if the camera is modified by pan, zoom, or scroll BUT for rotation of\n      // crosshairs handles it will be different.\n      const cameraModifiedSameForPosAndFocalPoint = csUtils.isEqual(\n        deltaCameraPosition,\n        deltaCameraFocalPoint,\n        1e-3\n      );\n\n      // NOTE: it is a translation if the the focal point and camera position shifts are the same\n      if (!cameraModifiedSameForPosAndFocalPoint) {\n        isRotation = true;\n      }\n\n      const cameraModifiedInPlane =\n        Math.abs(\n          vtkMath.dot(deltaCameraPosition, currentCamera.viewPlaneNormal)\n        ) < 1e-2;\n\n      // TRANSLATION\n      // NOTE1: if the camera modified is a result of a pan or zoom don't update the crosshair center\n      // NOTE2: rotation handles are updates in renderTool\n      if (!isRotation && !cameraModifiedInPlane) {\n        this.toolCenter[0] += deltaCameraPosition[0];\n        this.toolCenter[1] += deltaCameraPosition[1];\n        this.toolCenter[2] += deltaCameraPosition[2];\n      }\n    }\n\n    // AutoPan modification\n    if (this.configuration.autoPan?.enabled) {\n      const toolGroup = getToolGroupForViewport(\n        viewport.id,\n        renderingEngine.id\n      );\n\n      const otherViewportIds = toolGroup\n        .getViewportIds()\n        .filter((id) => id !== viewport.id);\n\n      otherViewportIds.forEach((viewportId) => {\n        this._autoPanViewportIfNecessary(viewportId, renderingEngine);\n      });\n    }\n\n    const requireSameOrientation = false;\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName(),\n      requireSameOrientation\n    );\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  };\n\n  mouseMoveCallback = (\n    evt: EventTypes.MouseMoveEventType,\n    filteredToolAnnotations: Annotations\n  ): boolean => {\n    const { element, currentPoints } = evt.detail;\n    const canvasCoords = currentPoints.canvas;\n    let imageNeedsUpdate = false;\n\n    for (let i = 0; i < filteredToolAnnotations.length; i++) {\n      const annotation = filteredToolAnnotations[i] as CrosshairsAnnotation;\n\n      if (isAnnotationLocked(annotation)) {\n        continue;\n      }\n\n      const { data, highlighted } = annotation;\n      if (!data.handles) {\n        continue;\n      }\n\n      const previousActiveOperation = data.handles.activeOperation;\n      const previousActiveViewportIds =\n        data.activeViewportIds && data.activeViewportIds.length > 0\n          ? [...data.activeViewportIds]\n          : [];\n\n      // This init are necessary, because when we move the mouse they are not cleaned by _endCallback\n      data.activeViewportIds = [];\n      data.handles.activeOperation = null;\n\n      const handleNearImagePoint = this.getHandleNearImagePoint(\n        element,\n        annotation,\n        canvasCoords,\n        6\n      );\n\n      let near = false;\n      if (handleNearImagePoint) {\n        near = true;\n      } else {\n        near = this._pointNearTool(element, annotation, canvasCoords, 6);\n      }\n\n      const nearToolAndNotMarkedActive = near && !highlighted;\n      const notNearToolAndMarkedActive = !near && highlighted;\n      if (nearToolAndNotMarkedActive || notNearToolAndMarkedActive) {\n        annotation.highlighted = !highlighted;\n        imageNeedsUpdate = true;\n      } else if (\n        data.handles.activeOperation !== previousActiveOperation ||\n        !this._areViewportIdArraysEqual(\n          data.activeViewportIds,\n          previousActiveViewportIds\n        )\n      ) {\n        imageNeedsUpdate = true;\n      }\n    }\n\n    return imageNeedsUpdate;\n  };\n\n  filterInteractableAnnotationsForElement = (element, annotations) => {\n    if (!annotations || !annotations.length) {\n      return [];\n    }\n\n    const enabledElement = getEnabledElement(element);\n    const { viewportId } = enabledElement;\n\n    const viewportUIDSpecificCrosshairs = annotations.filter(\n      (annotation) => annotation.data.viewportId === viewportId\n    );\n\n    return viewportUIDSpecificCrosshairs;\n  };\n\n  /**\n   * renders the crosshairs lines and handles in the requestAnimationFrame callback\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n    const { viewport, renderingEngine } = enabledElement;\n    const { element } = viewport;\n    const annotations = this._getAnnotations(enabledElement);\n    const camera = viewport.getCamera();\n    const filteredToolAnnotations =\n      this.filterInteractableAnnotationsForElement(element, annotations);\n\n    // viewport Annotation\n    const viewportAnnotation = filteredToolAnnotations[0];\n    if (!annotations?.length || !viewportAnnotation?.data) {\n      // No annotations yet, and didn't just create it as we likely don't have a FrameOfReference/any data loaded yet.\n      return renderStatus;\n    }\n\n    const annotationUID = viewportAnnotation.annotationUID;\n\n    // Get cameras/canvases for each of these.\n    // -- Get two world positions for this canvas in this line (e.g. the diagonal)\n    // -- Convert these world positions to this canvas.\n    // -- Extend/confine this line to fit in this canvas.\n    // -- Render this line.\n    const { clientWidth, clientHeight } = viewport.canvas;\n    const canvasDiagonalLength = Math.sqrt(\n      clientWidth * clientWidth + clientHeight * clientHeight\n    );\n    const canvasMinDimensionLength = Math.min(clientWidth, clientHeight);\n\n    const data = viewportAnnotation.data;\n    const crosshairCenterCanvas = viewport.worldToCanvas(this.toolCenter);\n\n    const otherViewportAnnotations =\n      this._filterAnnotationsByUniqueViewportOrientations(\n        enabledElement,\n        annotations\n      );\n\n    const referenceLines = [];\n\n    // get canvas information for points and lines (canvas box, canvas horizontal distances)\n    const canvasBox = [0, 0, clientWidth, clientHeight];\n\n    otherViewportAnnotations.forEach((annotation) => {\n      const { data } = annotation;\n\n      data.handles.toolCenter = this.toolCenter;\n\n      const otherViewport = renderingEngine.getViewport(\n        data.viewportId\n      ) as Types.IVolumeViewport;\n\n      const otherCamera = otherViewport.getCamera();\n\n      const otherViewportControllable = this._getReferenceLineControllable(\n        otherViewport.id\n      );\n      const otherViewportDraggableRotatable =\n        this._getReferenceLineDraggableRotatable(otherViewport.id);\n      const otherViewportSlabThicknessControlsOn =\n        this._getReferenceLineSlabThicknessControlsOn(otherViewport.id);\n\n      // get coordinates for the reference line\n      const { clientWidth, clientHeight } = otherViewport.canvas;\n      const otherCanvasDiagonalLength = Math.sqrt(\n        clientWidth * clientWidth + clientHeight * clientHeight\n      );\n      const otherCanvasCenter: Types.Point2 = [\n        clientWidth * 0.5,\n        clientHeight * 0.5,\n      ];\n      const otherViewportCenterWorld =\n        otherViewport.canvasToWorld(otherCanvasCenter);\n\n      const direction: Types.Point3 = [0, 0, 0];\n      vtkMath.cross(\n        camera.viewPlaneNormal,\n        otherCamera.viewPlaneNormal,\n        direction\n      );\n      vtkMath.normalize(direction);\n      vtkMath.multiplyScalar(\n        <Types.Point3>direction,\n        otherCanvasDiagonalLength\n      );\n\n      const pointWorld0: Types.Point3 = [0, 0, 0];\n      vtkMath.add(otherViewportCenterWorld, direction, pointWorld0);\n\n      const pointWorld1: Types.Point3 = [0, 0, 0];\n      vtkMath.subtract(otherViewportCenterWorld, direction, pointWorld1);\n\n      const pointCanvas0 = viewport.worldToCanvas(pointWorld0);\n\n      const otherViewportCenterCanvas = viewport.worldToCanvas(\n        otherViewportCenterWorld\n      );\n\n      const canvasUnitVectorFromCenter = vec2.create();\n      vec2.subtract(\n        canvasUnitVectorFromCenter,\n        pointCanvas0,\n        otherViewportCenterCanvas\n      );\n      vec2.normalize(canvasUnitVectorFromCenter, canvasUnitVectorFromCenter);\n\n      // Graphic:\n      // Mid -> SlabThickness handle\n      // Short -> Rotation handle\n      //                           Long\n      //                            |\n      //                            |\n      //                            |\n      //                           Mid\n      //                            |\n      //                            |\n      //                            |\n      //                          Short\n      //                            |\n      //                            |\n      //                            |\n      // Long --- Mid--- Short--- Center --- Short --- Mid --- Long\n      //                            |\n      //                            |\n      //                            |\n      //                          Short\n      //                            |\n      //                            |\n      //                            |\n      //                           Mid\n      //                            |\n      //                            |\n      //                            |\n      //                           Long\n      const canvasVectorFromCenterLong = vec2.create();\n\n      vec2.scale(\n        canvasVectorFromCenterLong,\n        canvasUnitVectorFromCenter,\n        canvasDiagonalLength * 100\n      );\n      const canvasVectorFromCenterMid = vec2.create();\n      vec2.scale(\n        canvasVectorFromCenterMid,\n        canvasUnitVectorFromCenter,\n        // to maximize the visibility of the controls, they need to be\n        // placed at most at half the length of the shortest side of the canvas.\n        // Chosen 0.4 to have some margin to the edge.\n        canvasMinDimensionLength * 0.4\n      );\n      const canvasVectorFromCenterShort = vec2.create();\n      vec2.scale(\n        canvasVectorFromCenterShort,\n        canvasUnitVectorFromCenter,\n        // Chosen 0.2 because is half of 0.4.\n        canvasMinDimensionLength * 0.2\n      );\n      const canvasVectorFromCenterStart = vec2.create();\n      const centerGap = this.configuration.referenceLinesCenterGapRadius;\n      vec2.scale(\n        canvasVectorFromCenterStart,\n        canvasUnitVectorFromCenter,\n        // Don't put a gap if the the third view is missing\n        otherViewportAnnotations.length === 2 ? centerGap : 0\n      );\n\n      // Computing Reference start and end (4 lines per viewport in case of 3 view MPR)\n      const refLinePointOne = vec2.create();\n      const refLinePointTwo = vec2.create();\n      const refLinePointThree = vec2.create();\n      const refLinePointFour = vec2.create();\n\n      let refLinesCenter = vec2.clone(crosshairCenterCanvas);\n      if (!otherViewportDraggableRotatable || !otherViewportControllable) {\n        refLinesCenter = vec2.clone(otherViewportCenterCanvas);\n      }\n\n      vec2.add(refLinePointOne, refLinesCenter, canvasVectorFromCenterStart);\n      vec2.add(refLinePointTwo, refLinesCenter, canvasVectorFromCenterLong);\n      vec2.subtract(\n        refLinePointThree,\n        refLinesCenter,\n        canvasVectorFromCenterStart\n      );\n      vec2.subtract(\n        refLinePointFour,\n        refLinesCenter,\n        canvasVectorFromCenterLong\n      );\n\n      // Clipping lines to be only included in a box (canvas), we don't want\n      // the lines goes beyond canvas\n      liangBarksyClip(refLinePointOne, refLinePointTwo, canvasBox);\n      liangBarksyClip(refLinePointThree, refLinePointFour, canvasBox);\n\n      // Computing rotation handle positions\n      const rotHandleOne = vec2.create();\n      vec2.subtract(\n        rotHandleOne,\n        crosshairCenterCanvas,\n        canvasVectorFromCenterMid\n      );\n\n      const rotHandleTwo = vec2.create();\n      vec2.add(rotHandleTwo, crosshairCenterCanvas, canvasVectorFromCenterMid);\n\n      // Computing SlabThickness (st below) position\n\n      // SlabThickness center in canvas\n      let stHandlesCenterCanvas = vec2.clone(crosshairCenterCanvas);\n      if (\n        !otherViewportDraggableRotatable &&\n        otherViewportSlabThicknessControlsOn\n      ) {\n        stHandlesCenterCanvas = vec2.clone(otherViewportCenterCanvas);\n      }\n\n      // SlabThickness center in world\n      let stHandlesCenterWorld: Types.Point3 = [...this.toolCenter];\n      if (\n        !otherViewportDraggableRotatable &&\n        otherViewportSlabThicknessControlsOn\n      ) {\n        stHandlesCenterWorld = [...otherViewportCenterWorld];\n      }\n\n      const worldUnitVectorFromCenter: Types.Point3 = [0, 0, 0];\n      vtkMath.subtract(pointWorld0, pointWorld1, worldUnitVectorFromCenter);\n      vtkMath.normalize(worldUnitVectorFromCenter);\n\n      const { viewPlaneNormal } = camera;\n      // @ts-ignore // Todo: fix after vtk pr merged\n      const { matrix } = vtkMatrixBuilder\n        .buildFromDegree()\n        // @ts-ignore fix after vtk pr merged\n        .rotate(90, viewPlaneNormal);\n\n      const worldUnitOrthoVectorFromCenter: Types.Point3 = [0, 0, 0];\n      vec3.transformMat4(\n        worldUnitOrthoVectorFromCenter,\n        worldUnitVectorFromCenter,\n        matrix\n      );\n\n      const slabThicknessValue = otherViewport.getSlabThickness();\n      const worldOrthoVectorFromCenter: Types.Point3 = [\n        ...worldUnitOrthoVectorFromCenter,\n      ];\n      vtkMath.multiplyScalar(worldOrthoVectorFromCenter, slabThicknessValue);\n\n      const worldVerticalRefPoint: Types.Point3 = [0, 0, 0];\n      vtkMath.add(\n        stHandlesCenterWorld,\n        worldOrthoVectorFromCenter,\n        worldVerticalRefPoint\n      );\n\n      // convert vertical world distances in canvas coordinates\n      const canvasVerticalRefPoint = viewport.worldToCanvas(\n        worldVerticalRefPoint\n      );\n\n      // points for slab thickness lines\n      const canvasOrthoVectorFromCenter = vec2.create();\n      vec2.subtract(\n        canvasOrthoVectorFromCenter,\n        stHandlesCenterCanvas,\n        canvasVerticalRefPoint\n      );\n\n      const stLinePointOne = vec2.create();\n      vec2.subtract(\n        stLinePointOne,\n        stHandlesCenterCanvas,\n        canvasVectorFromCenterLong\n      );\n      vec2.add(stLinePointOne, stLinePointOne, canvasOrthoVectorFromCenter);\n\n      const stLinePointTwo = vec2.create();\n      vec2.add(\n        stLinePointTwo,\n        stHandlesCenterCanvas,\n        canvasVectorFromCenterLong\n      );\n      vec2.add(stLinePointTwo, stLinePointTwo, canvasOrthoVectorFromCenter);\n\n      liangBarksyClip(stLinePointOne, stLinePointTwo, canvasBox);\n\n      const stLinePointThree = vec2.create();\n      vec2.add(\n        stLinePointThree,\n        stHandlesCenterCanvas,\n        canvasVectorFromCenterLong\n      );\n      vec2.subtract(\n        stLinePointThree,\n        stLinePointThree,\n        canvasOrthoVectorFromCenter\n      );\n\n      const stLinePointFour = vec2.create();\n      vec2.subtract(\n        stLinePointFour,\n        stHandlesCenterCanvas,\n        canvasVectorFromCenterLong\n      );\n      vec2.subtract(\n        stLinePointFour,\n        stLinePointFour,\n        canvasOrthoVectorFromCenter\n      );\n\n      liangBarksyClip(stLinePointThree, stLinePointFour, canvasBox);\n\n      // points for slab thickness handles\n      const stHandleOne = vec2.create();\n      const stHandleTwo = vec2.create();\n      const stHandleThree = vec2.create();\n      const stHandleFour = vec2.create();\n\n      vec2.subtract(\n        stHandleOne,\n        stHandlesCenterCanvas,\n        canvasVectorFromCenterShort\n      );\n      vec2.add(stHandleOne, stHandleOne, canvasOrthoVectorFromCenter);\n      vec2.add(stHandleTwo, stHandlesCenterCanvas, canvasVectorFromCenterShort);\n      vec2.add(stHandleTwo, stHandleTwo, canvasOrthoVectorFromCenter);\n      vec2.subtract(\n        stHandleThree,\n        stHandlesCenterCanvas,\n        canvasVectorFromCenterShort\n      );\n      vec2.subtract(stHandleThree, stHandleThree, canvasOrthoVectorFromCenter);\n      vec2.add(\n        stHandleFour,\n        stHandlesCenterCanvas,\n        canvasVectorFromCenterShort\n      );\n      vec2.subtract(stHandleFour, stHandleFour, canvasOrthoVectorFromCenter);\n\n      referenceLines.push([\n        otherViewport,\n        refLinePointOne,\n        refLinePointTwo,\n        refLinePointThree,\n        refLinePointFour,\n        stLinePointOne,\n        stLinePointTwo,\n        stLinePointThree,\n        stLinePointFour,\n        rotHandleOne,\n        rotHandleTwo,\n        stHandleOne,\n        stHandleTwo,\n        stHandleThree,\n        stHandleFour,\n      ]);\n    });\n\n    const newRtpoints = [];\n    const newStpoints = [];\n    const viewportColor = this._getReferenceLineColor(viewport.id);\n    const color =\n      viewportColor !== undefined ? viewportColor : 'rgb(200, 200, 200)';\n\n    referenceLines.forEach((line, lineIndex) => {\n      // get color for the reference line\n      const otherViewport = line[0];\n      const viewportColor = this._getReferenceLineColor(otherViewport.id);\n      const viewportControllable = this._getReferenceLineControllable(\n        otherViewport.id\n      );\n      const viewportDraggableRotatable =\n        this._getReferenceLineDraggableRotatable(otherViewport.id) ||\n        this.configuration.mobile?.enabled;\n      const viewportSlabThicknessControlsOn =\n        this._getReferenceLineSlabThicknessControlsOn(otherViewport.id) ||\n        this.configuration.mobile?.enabled;\n      const selectedViewportId = data.activeViewportIds.find(\n        (id) => id === otherViewport.id\n      );\n\n      let color =\n        viewportColor !== undefined ? viewportColor : 'rgb(200, 200, 200)';\n\n      let lineWidth = 1;\n\n      const lineActive =\n        data.handles.activeOperation !== null &&\n        data.handles.activeOperation === OPERATION.DRAG &&\n        selectedViewportId;\n\n      if (lineActive) {\n        lineWidth = 2.5;\n      }\n\n      let lineUID = `${lineIndex}`;\n      if (viewportControllable && viewportDraggableRotatable) {\n        lineUID = `${lineIndex}One`;\n        drawLineSvg(\n          svgDrawingHelper,\n          annotationUID,\n          lineUID,\n          line[1],\n          line[2],\n          {\n            color,\n            lineWidth,\n          }\n        );\n\n        lineUID = `${lineIndex}Two`;\n        drawLineSvg(\n          svgDrawingHelper,\n          annotationUID,\n          lineUID,\n          line[3],\n          line[4],\n          {\n            color,\n            lineWidth,\n          }\n        );\n      } else {\n        drawLineSvg(\n          svgDrawingHelper,\n          annotationUID,\n          lineUID,\n          line[2],\n          line[4],\n          {\n            color,\n            lineWidth,\n          }\n        );\n      }\n\n      if (viewportControllable) {\n        color =\n          viewportColor !== undefined ? viewportColor : 'rgb(200, 200, 200)';\n\n        const rotHandlesActive =\n          data.handles.activeOperation === OPERATION.ROTATE;\n        const rotationHandles = [line[9], line[10]];\n\n        const rotHandleWorldOne = [\n          viewport.canvasToWorld(line[9]),\n          otherViewport,\n          line[1],\n          line[2],\n        ];\n        const rotHandleWorldTwo = [\n          viewport.canvasToWorld(line[10]),\n          otherViewport,\n          line[3],\n          line[4],\n        ];\n        newRtpoints.push(rotHandleWorldOne, rotHandleWorldTwo);\n\n        const slabThicknessHandlesActive =\n          data.handles.activeOperation === OPERATION.SLAB;\n        const slabThicknessHandles = [line[11], line[12], line[13], line[14]];\n\n        const slabThicknessHandleWorldOne = [\n          viewport.canvasToWorld(line[11]),\n          otherViewport,\n          line[5],\n          line[6],\n        ];\n        const slabThicknessHandleWorldTwo = [\n          viewport.canvasToWorld(line[12]),\n          otherViewport,\n          line[5],\n          line[6],\n        ];\n        const slabThicknessHandleWorldThree = [\n          viewport.canvasToWorld(line[13]),\n          otherViewport,\n          line[7],\n          line[8],\n        ];\n        const slabThicknessHandleWorldFour = [\n          viewport.canvasToWorld(line[14]),\n          otherViewport,\n          line[7],\n          line[8],\n        ];\n        newStpoints.push(\n          slabThicknessHandleWorldOne,\n          slabThicknessHandleWorldTwo,\n          slabThicknessHandleWorldThree,\n          slabThicknessHandleWorldFour\n        );\n\n        if (\n          (lineActive || this.configuration.mobile?.enabled) &&\n          !rotHandlesActive &&\n          !slabThicknessHandlesActive &&\n          viewportDraggableRotatable &&\n          viewportSlabThicknessControlsOn\n        ) {\n          // draw all handles inactive (rotation and slab thickness)\n          let handleUID = `${lineIndex}One`;\n          drawHandlesSvg(\n            svgDrawingHelper,\n            annotationUID,\n            handleUID,\n            rotationHandles,\n            {\n              color,\n              handleRadius: this.configuration.mobile?.enabled\n                ? this.configuration.mobile?.handleRadius\n                : 3,\n              opacity: this.configuration.mobile?.enabled\n                ? this.configuration.mobile?.opacity\n                : 1,\n              type: 'circle',\n            }\n          );\n          handleUID = `${lineIndex}Two`;\n          drawHandlesSvg(\n            svgDrawingHelper,\n            annotationUID,\n            handleUID,\n            slabThicknessHandles,\n            {\n              color,\n              handleRadius: this.configuration.mobile?.enabled\n                ? this.configuration.mobile?.handleRadius\n                : 3,\n              opacity: this.configuration.mobile?.enabled\n                ? this.configuration.mobile?.opacity\n                : 1,\n              type: 'rect',\n            }\n          );\n        } else if (\n          lineActive &&\n          !rotHandlesActive &&\n          !slabThicknessHandlesActive &&\n          viewportDraggableRotatable\n        ) {\n          const handleUID = `${lineIndex}`;\n          // draw rotation handles inactive\n          drawHandlesSvg(\n            svgDrawingHelper,\n            annotationUID,\n            handleUID,\n            rotationHandles,\n            {\n              color,\n              handleRadius: this.configuration.mobile?.enabled\n                ? this.configuration.mobile?.handleRadius\n                : 3,\n              opacity: this.configuration.mobile?.enabled\n                ? this.configuration.mobile?.opacity\n                : 1,\n              type: 'circle',\n            }\n          );\n        } else if (\n          selectedViewportId &&\n          !rotHandlesActive &&\n          !slabThicknessHandlesActive &&\n          viewportSlabThicknessControlsOn\n        ) {\n          const handleUID = `${lineIndex}`;\n          // draw slab thickness handles inactive\n          drawHandlesSvg(\n            svgDrawingHelper,\n            annotationUID,\n            handleUID,\n            slabThicknessHandles,\n            {\n              color,\n              handleRadius: this.configuration.mobile?.enabled\n                ? this.configuration.mobile?.handleRadius\n                : 3,\n              opacity: this.configuration.mobile?.enabled\n                ? this.configuration.mobile?.opacity\n                : 1,\n              type: 'rect',\n            }\n          );\n        } else if (rotHandlesActive && viewportDraggableRotatable) {\n          const handleUID = `${lineIndex}`;\n          // draw all rotation handles as active\n          drawHandlesSvg(\n            svgDrawingHelper,\n            annotationUID,\n            handleUID,\n            rotationHandles,\n            {\n              color,\n              handleRadius: 2,\n              fill: color,\n              type: 'circle',\n            }\n          );\n        } else if (\n          slabThicknessHandlesActive &&\n          selectedViewportId &&\n          viewportSlabThicknessControlsOn\n        ) {\n          // draw only the slab thickness handles for the active viewport as active\n          drawHandlesSvg(\n            svgDrawingHelper,\n            annotationUID,\n            lineUID,\n            slabThicknessHandles,\n            {\n              color,\n              handleRadius: 2,\n              fill: color,\n              type: 'rect',\n            }\n          );\n        }\n        const slabThicknessValue = otherViewport.getSlabThickness();\n        if (slabThicknessValue > 0.5 && viewportSlabThicknessControlsOn) {\n          // draw slab thickness reference lines\n          lineUID = `${lineIndex}STOne`;\n          drawLineSvg(\n            svgDrawingHelper,\n            annotationUID,\n            lineUID,\n            line[5],\n            line[6],\n            {\n              color,\n              width: 1,\n              lineDash: [2, 3],\n            }\n          );\n\n          lineUID = `${lineIndex}STTwo`;\n          drawLineSvg(\n            svgDrawingHelper,\n            annotationUID,\n            lineUID,\n            line[7],\n            line[8],\n            {\n              color,\n              width: line,\n              lineDash: [2, 3],\n            }\n          );\n        }\n      }\n    });\n\n    renderStatus = true;\n\n    // Save new handles points in annotation\n    data.handles.rotationPoints = newRtpoints;\n    data.handles.slabThicknessPoints = newStpoints;\n\n    if (this.configuration.viewportIndicators) {\n      // render a circle to pin point the viewport color\n      // TODO: This should not be part of the tool, and definitely not part of the renderAnnotation loop\n      const referenceColorCoordinates = [\n        clientWidth * 0.95,\n        clientHeight * 0.05,\n      ] as Types.Point2;\n      const circleRadius = canvasDiagonalLength * 0.01;\n\n      const circleUID = '0';\n      drawCircleSvg(\n        svgDrawingHelper,\n        annotationUID,\n        circleUID,\n        referenceColorCoordinates,\n        circleRadius,\n        { color, fill: color }\n      );\n    }\n\n    return renderStatus;\n  };\n\n  _getAnnotations = (enabledElement: Types.IEnabledElement) => {\n    const { viewport } = enabledElement;\n    return getAnnotations(this.getToolName(), viewport.element);\n  };\n\n  _onNewVolume = (e: any) => {\n    const viewportsInfo = this._getViewportsInfo();\n    this.computeToolCenter(viewportsInfo);\n  };\n\n  _unsubscribeToViewportNewVolumeSet(viewportsInfo) {\n    viewportsInfo.forEach(({ viewportId, renderingEngineId }) => {\n      const { viewport } = getEnabledElementByIds(\n        viewportId,\n        renderingEngineId\n      );\n      const { element } = viewport;\n\n      element.removeEventListener(\n        Enums.Events.VOLUME_VIEWPORT_NEW_VOLUME,\n        this._onNewVolume\n      );\n    });\n  }\n\n  _subscribeToViewportNewVolumeSet(viewports) {\n    viewports.forEach(({ viewportId, renderingEngineId }) => {\n      const { viewport } = getEnabledElementByIds(\n        viewportId,\n        renderingEngineId\n      );\n      const { element } = viewport;\n\n      element.addEventListener(\n        Enums.Events.VOLUME_VIEWPORT_NEW_VOLUME,\n        this._onNewVolume\n      );\n    });\n  }\n\n  _autoPanViewportIfNecessary(\n    viewportId: string,\n    renderingEngine: Types.IRenderingEngine\n  ): void {\n    // 1. Check if the toolCenter is outside the viewport\n    // 2. If it is outside, pan the viewport to fit in the toolCenter\n\n    const viewport = renderingEngine.getViewport(viewportId);\n    const { clientWidth, clientHeight } = viewport.canvas;\n\n    const toolCenterCanvas = viewport.worldToCanvas(this.toolCenter);\n\n    // pan the viewport to fit the toolCenter in the direction\n    // that is out of bounds\n    const pan = this.configuration.autoPan.panSize;\n\n    const visiblePointCanvas = <Types.Point2>[\n      toolCenterCanvas[0],\n      toolCenterCanvas[1],\n    ];\n\n    if (toolCenterCanvas[0] < 0) {\n      visiblePointCanvas[0] = pan;\n    } else if (toolCenterCanvas[0] > clientWidth) {\n      visiblePointCanvas[0] = clientWidth - pan;\n    }\n\n    if (toolCenterCanvas[1] < 0) {\n      visiblePointCanvas[1] = pan;\n    } else if (toolCenterCanvas[1] > clientHeight) {\n      visiblePointCanvas[1] = clientHeight - pan;\n    }\n\n    if (\n      visiblePointCanvas[0] === toolCenterCanvas[0] &&\n      visiblePointCanvas[1] === toolCenterCanvas[1]\n    ) {\n      return;\n    }\n\n    const visiblePointWorld = viewport.canvasToWorld(visiblePointCanvas);\n\n    const deltaPointsWorld = [\n      visiblePointWorld[0] - this.toolCenter[0],\n      visiblePointWorld[1] - this.toolCenter[1],\n      visiblePointWorld[2] - this.toolCenter[2],\n    ];\n\n    const camera = viewport.getCamera();\n    const { focalPoint, position } = camera;\n\n    const updatedPosition = <Types.Point3>[\n      position[0] - deltaPointsWorld[0],\n      position[1] - deltaPointsWorld[1],\n      position[2] - deltaPointsWorld[2],\n    ];\n\n    const updatedFocalPoint = <Types.Point3>[\n      focalPoint[0] - deltaPointsWorld[0],\n      focalPoint[1] - deltaPointsWorld[1],\n      focalPoint[2] - deltaPointsWorld[2],\n    ];\n\n    viewport.setCamera({\n      focalPoint: updatedFocalPoint,\n      position: updatedPosition,\n    });\n\n    viewport.render();\n  }\n\n  _areViewportIdArraysEqual = (viewportIdArrayOne, viewportIdArrayTwo) => {\n    if (viewportIdArrayOne.length !== viewportIdArrayTwo.length) {\n      return false;\n    }\n\n    viewportIdArrayOne.forEach((id) => {\n      let itemFound = false;\n      for (let i = 0; i < viewportIdArrayTwo.length; ++i) {\n        if (id === viewportIdArrayTwo[i]) {\n          itemFound = true;\n          break;\n        }\n      }\n      if (itemFound === false) {\n        return false;\n      }\n    });\n\n    return true;\n  };\n\n  // It filters the viewports with crosshairs and only return viewports\n  // that have different camera.\n  _getAnnotationsForViewportsWithDifferentCameras = (\n    enabledElement,\n    annotations\n  ) => {\n    const { viewportId, renderingEngine, viewport } = enabledElement;\n\n    const otherViewportAnnotations = annotations.filter(\n      (annotation) => annotation.data.viewportId !== viewportId\n    );\n\n    if (!otherViewportAnnotations || !otherViewportAnnotations.length) {\n      return [];\n    }\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, position } = camera;\n\n    const viewportsWithDifferentCameras = otherViewportAnnotations.filter(\n      (annotation) => {\n        const { viewportId } = annotation.data;\n        const targetViewport = renderingEngine.getViewport(viewportId);\n        const cameraOfTarget = targetViewport.getCamera();\n\n        return !(\n          csUtils.isEqual(\n            cameraOfTarget.viewPlaneNormal,\n            viewPlaneNormal,\n            1e-2\n          ) && csUtils.isEqual(cameraOfTarget.position, position, 1)\n        );\n      }\n    );\n\n    return viewportsWithDifferentCameras;\n  };\n\n  _filterViewportWithSameOrientation = (\n    enabledElement,\n    referenceAnnotation,\n    annotations\n  ) => {\n    const { renderingEngine } = enabledElement;\n    const { data } = referenceAnnotation;\n    const viewport = renderingEngine.getViewport(data.viewportId);\n\n    const linkedViewportAnnotations = annotations.filter((annotation) => {\n      const { data } = annotation;\n      const otherViewport = renderingEngine.getViewport(data.viewportId);\n      const otherViewportControllable = this._getReferenceLineControllable(\n        otherViewport.id\n      );\n\n      return otherViewportControllable === true;\n    });\n\n    if (!linkedViewportAnnotations || !linkedViewportAnnotations.length) {\n      return [];\n    }\n\n    const camera = viewport.getCamera();\n    const viewPlaneNormal = camera.viewPlaneNormal;\n    vtkMath.normalize(viewPlaneNormal);\n\n    const otherViewportsAnnotationsWithSameCameraDirection =\n      linkedViewportAnnotations.filter((annotation) => {\n        const { viewportId } = annotation.data;\n        const otherViewport = renderingEngine.getViewport(viewportId);\n        const otherCamera = otherViewport.getCamera();\n        const otherViewPlaneNormal = otherCamera.viewPlaneNormal;\n        vtkMath.normalize(otherViewPlaneNormal);\n\n        return (\n          csUtils.isEqual(viewPlaneNormal, otherViewPlaneNormal, 1e-2) &&\n          csUtils.isEqual(camera.viewUp, otherCamera.viewUp, 1e-2)\n        );\n      });\n\n    return otherViewportsAnnotationsWithSameCameraDirection;\n  };\n\n  _filterAnnotationsByUniqueViewportOrientations = (\n    enabledElement,\n    annotations\n  ) => {\n    const { renderingEngine, viewport } = enabledElement;\n    const camera = viewport.getCamera();\n    const viewPlaneNormal = camera.viewPlaneNormal;\n    vtkMath.normalize(viewPlaneNormal);\n\n    const otherLinkedViewportAnnotationsFromSameScene = annotations.filter(\n      (annotation) => {\n        const { data } = annotation;\n        const otherViewport = renderingEngine.getViewport(data.viewportId);\n        const otherViewportControllable = this._getReferenceLineControllable(\n          otherViewport.id\n        );\n\n        return (\n          viewport !== otherViewport &&\n          // scene === otherScene &&\n          otherViewportControllable === true\n        );\n      }\n    );\n\n    const otherViewportsAnnotationsWithUniqueCameras = [];\n    // Iterate first on other viewport from the same scene linked\n    for (\n      let i = 0;\n      i < otherLinkedViewportAnnotationsFromSameScene.length;\n      ++i\n    ) {\n      const annotation = otherLinkedViewportAnnotationsFromSameScene[i];\n      const { viewportId } = annotation.data;\n      const otherViewport = renderingEngine.getViewport(viewportId);\n      const otherCamera = otherViewport.getCamera();\n      const otherViewPlaneNormal = otherCamera.viewPlaneNormal;\n      vtkMath.normalize(otherViewPlaneNormal);\n\n      if (\n        csUtils.isEqual(viewPlaneNormal, otherViewPlaneNormal, 1e-2) ||\n        csUtils.isOpposite(viewPlaneNormal, otherViewPlaneNormal, 1e-2)\n      ) {\n        continue;\n      }\n\n      let cameraFound = false;\n      for (\n        let jj = 0;\n        jj < otherViewportsAnnotationsWithUniqueCameras.length;\n        ++jj\n      ) {\n        const annotation = otherViewportsAnnotationsWithUniqueCameras[jj];\n        const { viewportId } = annotation.data;\n        const stockedViewport = renderingEngine.getViewport(viewportId);\n        const cameraOfStocked = stockedViewport.getCamera();\n\n        if (\n          csUtils.isEqual(\n            cameraOfStocked.viewPlaneNormal,\n            otherCamera.viewPlaneNormal,\n            1e-2\n          ) &&\n          csUtils.isEqual(cameraOfStocked.position, otherCamera.position, 1)\n        ) {\n          cameraFound = true;\n        }\n      }\n\n      if (!cameraFound) {\n        otherViewportsAnnotationsWithUniqueCameras.push(annotation);\n      }\n    }\n\n    const otherNonLinkedViewportAnnotationsFromSameScene = annotations.filter(\n      (annotation) => {\n        const { data } = annotation;\n        const otherViewport = renderingEngine.getViewport(data.viewportId);\n        const otherViewportControllable = this._getReferenceLineControllable(\n          otherViewport.id\n        );\n\n        return (\n          viewport !== otherViewport &&\n          // scene === otherScene &&\n          otherViewportControllable !== true\n        );\n      }\n    );\n\n    // Iterate second on other viewport from the same scene non linked\n    for (\n      let i = 0;\n      i < otherNonLinkedViewportAnnotationsFromSameScene.length;\n      ++i\n    ) {\n      const annotation = otherNonLinkedViewportAnnotationsFromSameScene[i];\n      const { viewportId } = annotation.data;\n      const otherViewport = renderingEngine.getViewport(viewportId);\n\n      const otherCamera = otherViewport.getCamera();\n      const otherViewPlaneNormal = otherCamera.viewPlaneNormal;\n      vtkMath.normalize(otherViewPlaneNormal);\n\n      if (\n        csUtils.isEqual(viewPlaneNormal, otherViewPlaneNormal, 1e-2) ||\n        csUtils.isOpposite(viewPlaneNormal, otherViewPlaneNormal, 1e-2)\n      ) {\n        continue;\n      }\n\n      let cameraFound = false;\n      for (\n        let jj = 0;\n        jj < otherViewportsAnnotationsWithUniqueCameras.length;\n        ++jj\n      ) {\n        const annotation = otherViewportsAnnotationsWithUniqueCameras[jj];\n        const { viewportId } = annotation.data;\n        const stockedViewport = renderingEngine.getViewport(viewportId);\n        const cameraOfStocked = stockedViewport.getCamera();\n\n        if (\n          csUtils.isEqual(\n            cameraOfStocked.viewPlaneNormal,\n            otherCamera.viewPlaneNormal,\n            1e-2\n          ) &&\n          csUtils.isEqual(cameraOfStocked.position, otherCamera.position, 1)\n        ) {\n          cameraFound = true;\n        }\n      }\n\n      if (!cameraFound) {\n        otherViewportsAnnotationsWithUniqueCameras.push(annotation);\n      }\n    }\n\n    // Iterate on all the viewport\n    const otherViewportAnnotations =\n      this._getAnnotationsForViewportsWithDifferentCameras(\n        enabledElement,\n        annotations\n      );\n\n    for (let i = 0; i < otherViewportAnnotations.length; ++i) {\n      const annotation = otherViewportAnnotations[i];\n      if (\n        otherViewportsAnnotationsWithUniqueCameras.some(\n          (element) => element === annotation\n        )\n      ) {\n        continue;\n      }\n\n      const { viewportId } = annotation.data;\n      const otherViewport = renderingEngine.getViewport(viewportId);\n      const otherCamera = otherViewport.getCamera();\n      const otherViewPlaneNormal = otherCamera.viewPlaneNormal;\n      vtkMath.normalize(otherViewPlaneNormal);\n\n      if (\n        csUtils.isEqual(viewPlaneNormal, otherViewPlaneNormal, 1e-2) ||\n        csUtils.isOpposite(viewPlaneNormal, otherViewPlaneNormal, 1e-2)\n      ) {\n        continue;\n      }\n\n      let cameraFound = false;\n      for (\n        let jj = 0;\n        jj < otherViewportsAnnotationsWithUniqueCameras.length;\n        ++jj\n      ) {\n        const annotation = otherViewportsAnnotationsWithUniqueCameras[jj];\n        const { viewportId } = annotation.data;\n        const stockedViewport = renderingEngine.getViewport(viewportId);\n        const cameraOfStocked = stockedViewport.getCamera();\n\n        if (\n          csUtils.isEqual(\n            cameraOfStocked.viewPlaneNormal,\n            otherCamera.viewPlaneNormal,\n            1e-2\n          ) &&\n          csUtils.isEqual(cameraOfStocked.position, otherCamera.position, 1)\n        ) {\n          cameraFound = true;\n        }\n      }\n\n      if (!cameraFound) {\n        otherViewportsAnnotationsWithUniqueCameras.push(annotation);\n      }\n    }\n\n    return otherViewportsAnnotationsWithUniqueCameras;\n  };\n\n  _checkIfViewportsRenderingSameScene = (viewport, otherViewport) => {\n    const actors = viewport.getActors();\n    const otherViewportActors = otherViewport.getActors();\n\n    let sameScene = true;\n\n    actors.forEach((actor) => {\n      if (\n        actors.length !== otherViewportActors.length ||\n        otherViewportActors.find(({ uid }) => uid === actor.uid) === undefined\n      ) {\n        sameScene = false;\n      }\n    });\n\n    return sameScene;\n  };\n\n  _jump = (enabledElement, jumpWorld) => {\n    state.isInteractingWithTool = true;\n    const { viewport, renderingEngine } = enabledElement;\n\n    const annotations = this._getAnnotations(enabledElement);\n\n    const delta: Types.Point3 = [0, 0, 0];\n    vtkMath.subtract(jumpWorld, this.toolCenter, delta);\n\n    // TRANSLATION\n    // get the annotation of the other viewport which are parallel to the delta shift and are of the same scene\n    const otherViewportAnnotations =\n      this._getAnnotationsForViewportsWithDifferentCameras(\n        enabledElement,\n        annotations\n      );\n\n    const viewportsAnnotationsToUpdate = otherViewportAnnotations.filter(\n      (annotation) => {\n        const { data } = annotation;\n        const otherViewport = renderingEngine.getViewport(data.viewportId);\n\n        const sameScene = this._checkIfViewportsRenderingSameScene(\n          viewport,\n          otherViewport\n        );\n\n        return (\n          this._getReferenceLineControllable(otherViewport.id) &&\n          this._getReferenceLineDraggableRotatable(otherViewport.id) &&\n          sameScene\n        );\n      }\n    );\n\n    if (viewportsAnnotationsToUpdate.length === 0) {\n      state.isInteractingWithTool = false;\n      return false;\n    }\n\n    this._applyDeltaShiftToSelectedViewportCameras(\n      renderingEngine,\n      viewportsAnnotationsToUpdate,\n      delta\n    );\n\n    state.isInteractingWithTool = false;\n\n    return true;\n  };\n\n  _activateModify = (element) => {\n    // mobile sometimes has lingering interaction even when touchEnd triggers\n    // this check allows for multiple handles to be active which doesn't affect\n    // tool usage.\n    state.isInteractingWithTool = !this.configuration.mobile?.enabled;\n\n    element.addEventListener(Events.MOUSE_UP, this._endCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.addEventListener(Events.TOUCH_END, this._endCallback);\n    element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n    element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n  };\n\n  _deactivateModify = (element) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n    element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n    element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.removeEventListener(Events.TOUCH_END, this._endCallback);\n    element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n    element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n  };\n\n  _endCallback = (evt: EventTypes.InteractionEventType) => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    this.editData.annotation.data.handles.activeOperation = null;\n    this.editData.annotation.data.activeViewportIds = [];\n\n    this._deactivateModify(element);\n\n    resetElementCursor(element);\n\n    this.editData = null;\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    const requireSameOrientation = false;\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName(),\n      requireSameOrientation\n    );\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  };\n\n  _dragCallback = (evt: EventTypes.InteractionEventType) => {\n    const eventDetail = evt.detail;\n    const delta = eventDetail.deltaPoints.world;\n\n    if (\n      Math.abs(delta[0]) < 1e-3 &&\n      Math.abs(delta[1]) < 1e-3 &&\n      Math.abs(delta[2]) < 1e-3\n    ) {\n      return;\n    }\n\n    const { element } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine, viewport } = enabledElement;\n    const annotations = this._getAnnotations(\n      enabledElement\n    ) as CrosshairsAnnotation[];\n    const filteredToolAnnotations =\n      this.filterInteractableAnnotationsForElement(element, annotations);\n\n    // viewport Annotation\n    const viewportAnnotation = filteredToolAnnotations[0];\n    if (!viewportAnnotation) {\n      return;\n    }\n\n    const { handles } = viewportAnnotation.data;\n    const { currentPoints } = evt.detail;\n    const canvasCoords = currentPoints.canvas;\n\n    if (handles.activeOperation === OPERATION.DRAG) {\n      // TRANSLATION\n      // get the annotation of the other viewport which are parallel to the delta shift and are of the same scene\n      const otherViewportAnnotations =\n        this._getAnnotationsForViewportsWithDifferentCameras(\n          enabledElement,\n          annotations\n        );\n\n      const viewportsAnnotationsToUpdate = otherViewportAnnotations.filter(\n        (annotation) => {\n          const { data } = annotation;\n          const otherViewport = renderingEngine.getViewport(data.viewportId);\n          const otherViewportControllable = this._getReferenceLineControllable(\n            otherViewport.id\n          );\n          const otherViewportDraggableRotatable =\n            this._getReferenceLineDraggableRotatable(otherViewport.id);\n\n          return (\n            otherViewportControllable === true &&\n            otherViewportDraggableRotatable === true &&\n            viewportAnnotation.data.activeViewportIds.find(\n              (id) => id === otherViewport.id\n            )\n          );\n        }\n      );\n\n      this._applyDeltaShiftToSelectedViewportCameras(\n        renderingEngine,\n        viewportsAnnotationsToUpdate,\n        delta\n      );\n    } else if (handles.activeOperation === OPERATION.ROTATE) {\n      // ROTATION\n      const otherViewportAnnotations =\n        this._getAnnotationsForViewportsWithDifferentCameras(\n          enabledElement,\n          annotations\n        );\n\n      const viewportsAnnotationsToUpdate = otherViewportAnnotations.filter(\n        (annotation) => {\n          const { data } = annotation;\n          const otherViewport = renderingEngine.getViewport(data.viewportId);\n          const otherViewportControllable = this._getReferenceLineControllable(\n            otherViewport.id\n          );\n          const otherViewportDraggableRotatable =\n            this._getReferenceLineDraggableRotatable(otherViewport.id);\n\n          return (\n            otherViewportControllable === true &&\n            otherViewportDraggableRotatable === true\n          );\n        }\n      );\n\n      const dir1 = vec2.create();\n      const dir2 = vec2.create();\n\n      const center: Types.Point3 = [\n        this.toolCenter[0],\n        this.toolCenter[1],\n        this.toolCenter[2],\n      ];\n\n      const centerCanvas = viewport.worldToCanvas(center);\n\n      const finalPointCanvas = eventDetail.currentPoints.canvas;\n      const originalPointCanvas = vec2.create();\n      vec2.sub(\n        originalPointCanvas,\n        finalPointCanvas,\n        eventDetail.deltaPoints.canvas\n      );\n      vec2.sub(dir1, originalPointCanvas, <vec2>centerCanvas);\n      vec2.sub(dir2, finalPointCanvas, <vec2>centerCanvas);\n\n      let angle = vec2.angle(dir1, dir2);\n\n      if (\n        this._isClockWise(centerCanvas, originalPointCanvas, finalPointCanvas)\n      ) {\n        angle *= -1;\n      }\n\n      // Rounding the angle to allow rotated handles to be undone\n      // If we don't round and rotate handles clockwise by 0.0131233 radians,\n      // there's no assurance that the counter-clockwise rotation occurs at\n      // precisely -0.0131233, resulting in the drawn annotations being lost.\n      angle = Math.round(angle * 100) / 100;\n\n      const rotationAxis = viewport.getCamera().viewPlaneNormal;\n      // @ts-ignore : vtkjs incorrect typing\n      const { matrix } = vtkMatrixBuilder\n        .buildFromRadian()\n        .translate(center[0], center[1], center[2])\n        // @ts-ignore\n        .rotate(angle, rotationAxis) //todo: why we are passing\n        .translate(-center[0], -center[1], -center[2]);\n\n      const otherViewportsIds = [];\n      // update camera for the other viewports.\n      // NOTE: The lines then are rendered by the onCameraModified\n      viewportsAnnotationsToUpdate.forEach((annotation) => {\n        const { data } = annotation;\n        data.handles.toolCenter = center;\n\n        const otherViewport = renderingEngine.getViewport(data.viewportId);\n        const camera = otherViewport.getCamera();\n        const { viewUp, position, focalPoint } = camera;\n\n        viewUp[0] += position[0];\n        viewUp[1] += position[1];\n        viewUp[2] += position[2];\n\n        vec3.transformMat4(focalPoint, focalPoint, matrix);\n        vec3.transformMat4(position, position, matrix);\n        vec3.transformMat4(viewUp, viewUp, matrix);\n\n        viewUp[0] -= position[0];\n        viewUp[1] -= position[1];\n        viewUp[2] -= position[2];\n\n        otherViewport.setCamera({\n          position,\n          viewUp,\n          focalPoint,\n        });\n        otherViewportsIds.push(otherViewport.id);\n      });\n      renderingEngine.renderViewports(otherViewportsIds);\n    } else if (handles.activeOperation === OPERATION.SLAB) {\n      // SLAB THICKNESS\n      // this should be just the active one under the mouse,\n      const otherViewportAnnotations =\n        this._getAnnotationsForViewportsWithDifferentCameras(\n          enabledElement,\n          annotations\n        );\n\n      const referenceAnnotations = otherViewportAnnotations.filter(\n        (annotation) => {\n          const { data } = annotation;\n          const otherViewport = renderingEngine.getViewport(data.viewportId);\n          const otherViewportControllable = this._getReferenceLineControllable(\n            otherViewport.id\n          );\n          const otherViewportSlabThicknessControlsOn =\n            this._getReferenceLineSlabThicknessControlsOn(otherViewport.id);\n\n          return (\n            otherViewportControllable === true &&\n            otherViewportSlabThicknessControlsOn === true &&\n            viewportAnnotation.data.activeViewportIds.find(\n              (id) => id === otherViewport.id\n            )\n          );\n        }\n      );\n\n      if (referenceAnnotations.length === 0) {\n        return;\n      }\n      const viewportsAnnotationsToUpdate =\n        this._filterViewportWithSameOrientation(\n          enabledElement,\n          referenceAnnotations[0],\n          annotations\n        );\n\n      const viewportsIds = [];\n      viewportsIds.push(viewport.id);\n      viewportsAnnotationsToUpdate.forEach(\n        (annotation: CrosshairsAnnotation) => {\n          const { data } = annotation;\n\n          const otherViewport = renderingEngine.getViewport(\n            data.viewportId\n          ) as Types.IVolumeViewport;\n          const camera = otherViewport.getCamera();\n          const normal = camera.viewPlaneNormal;\n\n          const dotProd = vtkMath.dot(delta, normal);\n          const projectedDelta: Types.Point3 = [...normal];\n          vtkMath.multiplyScalar(projectedDelta, dotProd);\n\n          if (\n            Math.abs(projectedDelta[0]) > 1e-3 ||\n            Math.abs(projectedDelta[1]) > 1e-3 ||\n            Math.abs(projectedDelta[2]) > 1e-3\n          ) {\n            const mod = Math.sqrt(\n              projectedDelta[0] * projectedDelta[0] +\n                projectedDelta[1] * projectedDelta[1] +\n                projectedDelta[2] * projectedDelta[2]\n            );\n\n            const currentPoint = eventDetail.lastPoints.world;\n            const direction: Types.Point3 = [0, 0, 0];\n\n            const currentCenter: Types.Point3 = [\n              this.toolCenter[0],\n              this.toolCenter[1],\n              this.toolCenter[2],\n            ];\n\n            // use this.toolCenter only if viewportDraggableRotatable\n            const viewportDraggableRotatable =\n              this._getReferenceLineDraggableRotatable(otherViewport.id);\n            if (!viewportDraggableRotatable) {\n              const { rotationPoints } = this.editData.annotation.data.handles;\n              // Todo: what is a point uid?\n              const otherViewportRotationPoints = rotationPoints.filter(\n                (point) => point[1].uid === otherViewport.id\n              );\n              if (otherViewportRotationPoints.length === 2) {\n                const point1 = viewport.canvasToWorld(\n                  otherViewportRotationPoints[0][3]\n                );\n                const point2 = viewport.canvasToWorld(\n                  otherViewportRotationPoints[1][3]\n                );\n                vtkMath.add(point1, point2, currentCenter);\n                vtkMath.multiplyScalar(<Types.Point3>currentCenter, 0.5);\n              }\n            }\n\n            vtkMath.subtract(currentPoint, currentCenter, direction);\n            const dotProdDirection = vtkMath.dot(direction, normal);\n            const projectedDirection: Types.Point3 = [...normal];\n            vtkMath.multiplyScalar(projectedDirection, dotProdDirection);\n            const normalizedProjectedDirection: Types.Point3 = [\n              projectedDirection[0],\n              projectedDirection[1],\n              projectedDirection[2],\n            ];\n            vec3.normalize(\n              normalizedProjectedDirection,\n              normalizedProjectedDirection\n            );\n            const normalizedProjectedDelta: Types.Point3 = [\n              projectedDelta[0],\n              projectedDelta[1],\n              projectedDelta[2],\n            ];\n            vec3.normalize(normalizedProjectedDelta, normalizedProjectedDelta);\n\n            let slabThicknessValue = otherViewport.getSlabThickness();\n            if (\n              csUtils.isOpposite(\n                normalizedProjectedDirection,\n                normalizedProjectedDelta,\n                1e-3\n              )\n            ) {\n              slabThicknessValue -= mod;\n            } else {\n              slabThicknessValue += mod;\n            }\n\n            slabThicknessValue = Math.abs(slabThicknessValue);\n            slabThicknessValue = Math.max(\n              RENDERING_DEFAULTS.MINIMUM_SLAB_THICKNESS,\n              slabThicknessValue\n            );\n\n            const near = this._pointNearReferenceLine(\n              viewportAnnotation,\n              canvasCoords,\n              6,\n              otherViewport\n            );\n\n            if (near) {\n              slabThicknessValue = RENDERING_DEFAULTS.MINIMUM_SLAB_THICKNESS;\n            }\n\n            // We want to set the slabThickness for the viewport's actors but\n            // since the crosshairs tool instance has configuration regarding which\n            // actorUIDs (in case of volume -> actorUID = volumeIds) to set the\n            // slabThickness for, we need to delegate the slabThickness setting\n            // to the crosshairs tool instance of the toolGroup since configurations\n            // exist on the toolInstance and each toolGroup has its own crosshairs\n            // tool instance (Otherwise, we would need to set this filterActorUIDsToSetSlabThickness at\n            // the viewport level which makes tool and viewport state convoluted).\n            const toolGroup = getToolGroupForViewport(\n              otherViewport.id,\n              renderingEngine.id\n            );\n            const crosshairsInstance = toolGroup.getToolInstance(\n              this.getToolName()\n            );\n            crosshairsInstance.setSlabThickness(\n              otherViewport,\n              slabThicknessValue\n            );\n\n            viewportsIds.push(otherViewport.id);\n          }\n        }\n      );\n      renderingEngine.renderViewports(viewportsIds);\n    }\n  };\n\n  setSlabThickness(viewport, slabThickness) {\n    let actorUIDs;\n    const { filterActorUIDsToSetSlabThickness } = this.configuration;\n    if (\n      filterActorUIDsToSetSlabThickness &&\n      filterActorUIDsToSetSlabThickness.length > 0\n    ) {\n      actorUIDs = filterActorUIDsToSetSlabThickness;\n    }\n\n    let blendModeToUse = this.configuration.slabThicknessBlendMode;\n    if (slabThickness === RENDERING_DEFAULTS.MINIMUM_SLAB_THICKNESS) {\n      blendModeToUse = Enums.BlendModes.COMPOSITE;\n    }\n\n    const immediate = false;\n    viewport.setBlendMode(blendModeToUse, actorUIDs, immediate);\n    viewport.setSlabThickness(slabThickness, actorUIDs);\n  }\n\n  _isClockWise(a, b, c) {\n    // return true if the rotation is clockwise\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]) > 0;\n  }\n\n  _applyDeltaShiftToSelectedViewportCameras(\n    renderingEngine,\n    viewportsAnnotationsToUpdate,\n    delta\n  ) {\n    // update camera for the other viewports.\n    // NOTE1: The lines then are rendered by the onCameraModified\n    // NOTE2: crosshair center are automatically updated in the onCameraModified event\n    viewportsAnnotationsToUpdate.forEach((annotation) => {\n      this._applyDeltaShiftToViewportCamera(renderingEngine, annotation, delta);\n    });\n  }\n\n  _applyDeltaShiftToViewportCamera(\n    renderingEngine: Types.IRenderingEngine,\n    annotation,\n    delta\n  ) {\n    // update camera for the other viewports.\n    // NOTE1: The lines then are rendered by the onCameraModified\n    // NOTE2: crosshair center are automatically updated in the onCameraModified event\n    const { data } = annotation;\n\n    const viewport = renderingEngine.getViewport(data.viewportId);\n    const camera = viewport.getCamera();\n    const normal = camera.viewPlaneNormal;\n\n    // Project delta over camera normal\n    // (we don't need to pan, we need only to scroll the camera as in the wheel stack scroll tool)\n    const dotProd = vtkMath.dot(delta, normal);\n    const projectedDelta: Types.Point3 = [...normal];\n    vtkMath.multiplyScalar(projectedDelta, dotProd);\n\n    if (\n      Math.abs(projectedDelta[0]) > 1e-3 ||\n      Math.abs(projectedDelta[1]) > 1e-3 ||\n      Math.abs(projectedDelta[2]) > 1e-3\n    ) {\n      const newFocalPoint: Types.Point3 = [0, 0, 0];\n      const newPosition: Types.Point3 = [0, 0, 0];\n\n      vtkMath.add(camera.focalPoint, projectedDelta, newFocalPoint);\n      vtkMath.add(camera.position, projectedDelta, newPosition);\n\n      viewport.setCamera({\n        focalPoint: newFocalPoint,\n        position: newPosition,\n      });\n      viewport.render();\n    }\n  }\n\n  _pointNearReferenceLine = (\n    annotation,\n    canvasCoords,\n    proximity,\n    lineViewport\n  ) => {\n    const { data } = annotation;\n    const { rotationPoints } = data.handles;\n\n    for (let i = 0; i < rotationPoints.length - 1; ++i) {\n      const otherViewport = rotationPoints[i][1];\n      if (otherViewport.id !== lineViewport.id) {\n        continue;\n      }\n\n      const viewportControllable = this._getReferenceLineControllable(\n        otherViewport.id\n      );\n      if (!viewportControllable) {\n        continue;\n      }\n\n      const lineSegment1 = {\n        start: {\n          x: rotationPoints[i][2][0],\n          y: rotationPoints[i][2][1],\n        },\n        end: {\n          x: rotationPoints[i][3][0],\n          y: rotationPoints[i][3][1],\n        },\n      };\n\n      const distanceToPoint1 = lineSegment.distanceToPoint(\n        [lineSegment1.start.x, lineSegment1.start.y],\n        [lineSegment1.end.x, lineSegment1.end.y],\n        [canvasCoords[0], canvasCoords[1]]\n      );\n\n      const lineSegment2 = {\n        start: {\n          x: rotationPoints[i + 1][2][0],\n          y: rotationPoints[i + 1][2][1],\n        },\n        end: {\n          x: rotationPoints[i + 1][3][0],\n          y: rotationPoints[i + 1][3][1],\n        },\n      };\n\n      const distanceToPoint2 = lineSegment.distanceToPoint(\n        [lineSegment2.start.x, lineSegment2.start.y],\n        [lineSegment2.end.x, lineSegment2.end.y],\n        [canvasCoords[0], canvasCoords[1]]\n      );\n\n      if (distanceToPoint1 <= proximity || distanceToPoint2 <= proximity) {\n        return true;\n      }\n\n      // rotation handles are two for viewport\n      i++;\n    }\n\n    return false;\n  };\n\n  _getRotationHandleNearImagePoint(\n    viewport,\n    annotation,\n    canvasCoords,\n    proximity\n  ) {\n    const { data } = annotation;\n    const { rotationPoints } = data.handles;\n\n    for (let i = 0; i < rotationPoints.length; i++) {\n      const point = rotationPoints[i][0];\n      const otherViewport = rotationPoints[i][1];\n      const viewportControllable = this._getReferenceLineControllable(\n        otherViewport.id\n      );\n      if (!viewportControllable) {\n        continue;\n      }\n\n      const viewportDraggableRotatable =\n        this._getReferenceLineDraggableRotatable(otherViewport.id);\n      if (!viewportDraggableRotatable) {\n        continue;\n      }\n\n      const annotationCanvasCoordinate = viewport.worldToCanvas(point);\n      if (vec2.distance(canvasCoords, annotationCanvasCoordinate) < proximity) {\n        data.handles.activeOperation = OPERATION.ROTATE;\n\n        this.editData = {\n          annotation,\n        };\n\n        return point;\n      }\n    }\n\n    return null;\n  }\n\n  _getSlabThicknessHandleNearImagePoint(\n    viewport,\n    annotation,\n    canvasCoords,\n    proximity\n  ) {\n    const { data } = annotation;\n    const { slabThicknessPoints } = data.handles;\n\n    for (let i = 0; i < slabThicknessPoints.length; i++) {\n      const point = slabThicknessPoints[i][0];\n      const otherViewport = slabThicknessPoints[i][1];\n      const viewportControllable = this._getReferenceLineControllable(\n        otherViewport.id\n      );\n      if (!viewportControllable) {\n        continue;\n      }\n\n      const viewportSlabThicknessControlsOn =\n        this._getReferenceLineSlabThicknessControlsOn(otherViewport.id);\n      if (!viewportSlabThicknessControlsOn) {\n        continue;\n      }\n\n      const annotationCanvasCoordinate = viewport.worldToCanvas(point);\n      if (vec2.distance(canvasCoords, annotationCanvasCoordinate) < proximity) {\n        data.handles.activeOperation = OPERATION.SLAB;\n\n        data.activeViewportIds = [otherViewport.id];\n\n        this.editData = {\n          annotation,\n        };\n\n        return point;\n      }\n    }\n\n    return null;\n  }\n\n  _pointNearTool(element, annotation, canvasCoords, proximity) {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const { clientWidth, clientHeight } = viewport.canvas;\n    const canvasDiagonalLength = Math.sqrt(\n      clientWidth * clientWidth + clientHeight * clientHeight\n    );\n    const { data } = annotation;\n\n    const { rotationPoints } = data.handles;\n    const { slabThicknessPoints } = data.handles;\n    const viewportIdArray = [];\n\n    for (let i = 0; i < rotationPoints.length - 1; ++i) {\n      const otherViewport = rotationPoints[i][1];\n      const viewportControllable = this._getReferenceLineControllable(\n        otherViewport.id\n      );\n      const viewportDraggableRotatable =\n        this._getReferenceLineDraggableRotatable(otherViewport.id);\n\n      if (!viewportControllable || !viewportDraggableRotatable) {\n        continue;\n      }\n\n      const lineSegment1 = {\n        start: {\n          x: rotationPoints[i][2][0],\n          y: rotationPoints[i][2][1],\n        },\n        end: {\n          x: rotationPoints[i][3][0],\n          y: rotationPoints[i][3][1],\n        },\n      };\n\n      const distanceToPoint1 = lineSegment.distanceToPoint(\n        [lineSegment1.start.x, lineSegment1.start.y],\n        [lineSegment1.end.x, lineSegment1.end.y],\n        [canvasCoords[0], canvasCoords[1]]\n      );\n\n      const lineSegment2 = {\n        start: {\n          x: rotationPoints[i + 1][2][0],\n          y: rotationPoints[i + 1][2][1],\n        },\n        end: {\n          x: rotationPoints[i + 1][3][0],\n          y: rotationPoints[i + 1][3][1],\n        },\n      };\n\n      const distanceToPoint2 = lineSegment.distanceToPoint(\n        [lineSegment2.start.x, lineSegment2.start.y],\n        [lineSegment2.end.x, lineSegment2.end.y],\n        [canvasCoords[0], canvasCoords[1]]\n      );\n\n      if (distanceToPoint1 <= proximity || distanceToPoint2 <= proximity) {\n        viewportIdArray.push(otherViewport.id);\n        data.handles.activeOperation = OPERATION.DRAG;\n      }\n\n      // rotation handles are two for viewport\n      i++;\n    }\n\n    for (let i = 0; i < slabThicknessPoints.length - 1; ++i) {\n      const otherViewport = slabThicknessPoints[i][1];\n      if (viewportIdArray.find((id) => id === otherViewport.id)) {\n        continue;\n      }\n\n      const viewportControllable = this._getReferenceLineControllable(\n        otherViewport.id\n      );\n      const viewportSlabThicknessControlsOn =\n        this._getReferenceLineSlabThicknessControlsOn(otherViewport.id);\n\n      if (!viewportControllable || !viewportSlabThicknessControlsOn) {\n        continue;\n      }\n\n      const stPointLineCanvas1 = slabThicknessPoints[i][2];\n      const stPointLineCanvas2 = slabThicknessPoints[i][3];\n\n      const centerCanvas = vec2.create();\n      vec2.add(centerCanvas, stPointLineCanvas1, stPointLineCanvas2);\n      vec2.scale(centerCanvas, centerCanvas, 0.5);\n\n      const canvasUnitVectorFromCenter = vec2.create();\n      vec2.subtract(\n        canvasUnitVectorFromCenter,\n        stPointLineCanvas1,\n        centerCanvas\n      );\n      vec2.normalize(canvasUnitVectorFromCenter, canvasUnitVectorFromCenter);\n\n      const canvasVectorFromCenterStart = vec2.create();\n      vec2.scale(\n        canvasVectorFromCenterStart,\n        canvasUnitVectorFromCenter,\n        canvasDiagonalLength * 0.05\n      );\n\n      const stPointLineCanvas1Start = vec2.create();\n      const stPointLineCanvas2Start = vec2.create();\n      vec2.add(\n        stPointLineCanvas1Start,\n        centerCanvas,\n        canvasVectorFromCenterStart\n      );\n      vec2.subtract(\n        stPointLineCanvas2Start,\n        centerCanvas,\n        canvasVectorFromCenterStart\n      );\n\n      const lineSegment1 = {\n        start: {\n          x: stPointLineCanvas1Start[0],\n          y: stPointLineCanvas1Start[1],\n        },\n        end: {\n          x: stPointLineCanvas1[0],\n          y: stPointLineCanvas1[1],\n        },\n      };\n\n      const distanceToPoint1 = lineSegment.distanceToPoint(\n        [lineSegment1.start.x, lineSegment1.start.y],\n        [lineSegment1.end.x, lineSegment1.end.y],\n        [canvasCoords[0], canvasCoords[1]]\n      );\n\n      const lineSegment2 = {\n        start: {\n          x: stPointLineCanvas2Start[0],\n          y: stPointLineCanvas2Start[1],\n        },\n        end: {\n          x: stPointLineCanvas2[0],\n          y: stPointLineCanvas2[1],\n        },\n      };\n\n      const distanceToPoint2 = lineSegment.distanceToPoint(\n        [lineSegment2.start.x, lineSegment2.start.y],\n        [lineSegment2.end.x, lineSegment2.end.y],\n        [canvasCoords[0], canvasCoords[1]]\n      );\n\n      if (distanceToPoint1 <= proximity || distanceToPoint2 <= proximity) {\n        viewportIdArray.push(otherViewport.id); // we still need this to draw inactive slab thickness handles\n        data.handles.activeOperation = null; // no operation\n      }\n\n      // slab thickness handles are in couples\n      i++;\n    }\n\n    data.activeViewportIds = [...viewportIdArray];\n\n    this.editData = {\n      annotation,\n    };\n\n    return data.handles.activeOperation === OPERATION.DRAG ? true : false;\n  }\n}\n\nCrosshairsTool.toolName = 'Crosshairs';\nexport default CrosshairsTool;\n","import { vec3 } from 'gl-matrix';\nimport {\n  getRenderingEngines,\n  CONSTANTS,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { addAnnotation } from '../stateManagement/annotation/annotationState';\n\nimport { drawLine as drawLineSvg } from '../drawingSvg';\nimport { filterViewportsWithToolEnabled } from '../utilities/viewportFilters';\nimport triggerAnnotationRenderForViewportIds from '../utilities/triggerAnnotationRenderForViewportIds';\n\nimport { PublicToolProps, ToolProps, SVGDrawingHelper } from '../types';\nimport { ReferenceLineAnnotation } from '../types/ToolSpecificAnnotationTypes';\nimport { StyleSpecifier } from '../types/AnnotationStyle';\nimport AnnotationDisplayTool from './base/AnnotationDisplayTool';\n\nconst { EPSILON } = CONSTANTS;\n\n/**\n * @public\n */\n\nclass ReferenceLines extends AnnotationDisplayTool {\n  static toolName;\n\n  public touchDragCallback: any;\n  public mouseDragCallback: any;\n  _throttledCalculateCachedStats: any;\n  editData: {\n    renderingEngine: any;\n    sourceViewport: any;\n    annotation: ReferenceLineAnnotation;\n  } | null = {} as any;\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        sourceViewportId: '',\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n\n    // this._throttledCalculateCachedStats = throttle(\n    //   this._calculateCachedStats,\n    //   100,\n    //   { trailing: true }\n    // );\n  }\n\n  _init = (): void => {\n    const renderingEngines = getRenderingEngines();\n    const renderingEngine = renderingEngines[0];\n\n    // Todo: handle this case where it is too soon to get the rendering engine\n    if (!renderingEngine) {\n      return;\n    }\n\n    let viewports = renderingEngine.getViewports();\n    viewports = filterViewportsWithToolEnabled(viewports, this.getToolName());\n\n    const sourceViewport = renderingEngine.getViewport(\n      this.configuration.sourceViewportId\n    ) as Types.IVolumeViewport;\n\n    if (!sourceViewport || !sourceViewport.getImageData()) {\n      return;\n    }\n\n    const { element } = sourceViewport;\n    const { viewUp, viewPlaneNormal } = sourceViewport.getCamera();\n\n    const sourceViewportCanvasCornersInWorld =\n      csUtils.getViewportImageCornersInWorld(sourceViewport);\n\n    let annotation = this.editData.annotation;\n    const FrameOfReferenceUID = sourceViewport.getFrameOfReferenceUID();\n\n    if (!annotation) {\n      const newAnnotation: ReferenceLineAnnotation = {\n        highlighted: true,\n        invalidated: true,\n        metadata: {\n          toolName: this.getToolName(),\n          viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n          viewUp: <Types.Point3>[...viewUp],\n          FrameOfReferenceUID,\n          referencedImageId: null,\n        },\n        data: {\n          handles: {\n            points: sourceViewportCanvasCornersInWorld,\n          },\n        },\n      };\n\n      addAnnotation(newAnnotation, element);\n      annotation = newAnnotation;\n    } else {\n      this.editData.annotation.data.handles.points =\n        sourceViewportCanvasCornersInWorld;\n    }\n\n    this.editData = {\n      sourceViewport,\n      renderingEngine,\n      annotation,\n    };\n\n    triggerAnnotationRenderForViewportIds(\n      renderingEngine,\n      viewports\n        .filter((viewport) => viewport.id !== sourceViewport.id)\n        .map((viewport) => viewport.id)\n    );\n  };\n\n  onSetToolEnabled = (): void => {\n    this._init();\n  };\n\n  onCameraModified = (evt: Types.EventTypes.CameraModifiedEvent): void => {\n    // If the camera is modified, we need to update the reference lines\n    // we really don't care which viewport triggered the\n    // camera modification, since we want to update all of them\n    // with respect to the targetViewport\n    this._init();\n  };\n\n  /**\n   * it is used to draw the length annotation in each\n   * request animation frame. It calculates the updated cached statistics if\n   * data is invalidated and cache it.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    const { viewport: targetViewport } = enabledElement;\n    const { annotation, sourceViewport } = this.editData;\n\n    let renderStatus = false;\n\n    if (!sourceViewport) {\n      return renderStatus;\n    }\n\n    if (sourceViewport.id === targetViewport.id) {\n      // If the source viewport is the same as the current viewport, we don't need to render\n      return renderStatus;\n    }\n\n    if (!annotation || !annotation?.data?.handles?.points) {\n      return renderStatus;\n    }\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    // top left world, top right world, bottom right world, bottom left world\n    const topLeft = annotation.data.handles.points[0];\n    const topRight = annotation.data.handles.points[1];\n    const bottomLeft = annotation.data.handles.points[2];\n    const bottomRight = annotation.data.handles.points[3];\n\n    const { focalPoint, viewPlaneNormal } = targetViewport.getCamera();\n    const { viewPlaneNormal: sourceViewPlaneNormal } =\n      sourceViewport.getCamera();\n\n    if (this.isParallel(viewPlaneNormal, sourceViewPlaneNormal)) {\n      // If the source and target viewports are parallel, we don't need to render\n      return renderStatus;\n    }\n\n    const targetViewportPlane = csUtils.planar.planeEquation(\n      viewPlaneNormal,\n      focalPoint\n    );\n\n    // check if the topLeft and bottomLeft line is parallel to the viewUp\n    const pointSet1 = [topLeft, bottomLeft, topRight, bottomRight];\n    const pointSet2 = [topLeft, topRight, bottomLeft, bottomRight];\n\n    let pointSetToUse = pointSet1;\n\n    let topBottomVec = vec3.subtract(vec3.create(), pointSet1[0], pointSet1[1]);\n    topBottomVec = vec3.normalize(vec3.create(), topBottomVec) as Types.Point3;\n\n    let topRightVec = vec3.subtract(vec3.create(), pointSet1[2], pointSet1[0]);\n    topRightVec = vec3.normalize(vec3.create(), topRightVec);\n\n    const newNormal = vec3.cross(\n      vec3.create(),\n      topBottomVec,\n      topRightVec\n    ) as Types.Point3;\n\n    if (this.isParallel(newNormal, viewPlaneNormal)) {\n      return renderStatus;\n    }\n\n    // check if it is perpendicular to the viewPlaneNormal which means\n    // the line does not intersect the viewPlaneNormal\n    if (this.isPerpendicular(topBottomVec, viewPlaneNormal)) {\n      // 'use pointSet2';\n      pointSetToUse = pointSet2;\n    }\n\n    const lineStartWorld = csUtils.planar.linePlaneIntersection(\n      pointSetToUse[0],\n      pointSetToUse[1],\n      targetViewportPlane\n    );\n\n    const lineEndWorld = csUtils.planar.linePlaneIntersection(\n      pointSetToUse[2],\n      pointSetToUse[3],\n      targetViewportPlane\n    );\n    const { annotationUID } = annotation;\n\n    styleSpecifier.annotationUID = annotationUID;\n    const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n    const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n    const color = this.getStyle('color', styleSpecifier, annotation);\n    const shadow = this.getStyle('shadow', styleSpecifier, annotation);\n\n    const canvasCoordinates = [lineStartWorld, lineEndWorld].map((world) =>\n      targetViewport.worldToCanvas(world)\n    );\n\n    const dataId = `${annotationUID}-line`;\n    const lineUID = '1';\n    drawLineSvg(\n      svgDrawingHelper,\n      annotationUID,\n      lineUID,\n      canvasCoordinates[0],\n      canvasCoordinates[1],\n      {\n        color,\n        width: lineWidth,\n        lineDash,\n        shadow,\n      },\n      dataId\n    );\n\n    renderStatus = true;\n\n    return renderStatus;\n  };\n\n  isPerpendicular = (vec1: Types.Point3, vec2: Types.Point3): boolean => {\n    const dot = vec3.dot(vec1, vec2);\n    return Math.abs(dot) < EPSILON;\n  };\n\n  isParallel(vec1: Types.Point3, vec2: Types.Point3): boolean {\n    return Math.abs(vec3.dot(vec1, vec2)) > 1 - EPSILON;\n  }\n}\n\nReferenceLines.toolName = 'ReferenceLines';\nexport default ReferenceLines;\n","import { vec3 } from 'gl-matrix';\nimport type { Types } from '@cornerstonejs/core';\n\n/**\n * Given two world positions and an orthogonal view to an `imageVolume` defined by\n * a `viewPlaneNormal` and a `viewUp`, get the width and height in world coordinates of the rectangle\n * defined by the two points. The implementation works both with orthogonal\n * non-orthogonal rectangles.\n *\n * @param viewPlaneNormal - The normal of the view.\n * @param viewUp - The up direction of the view.\n * @param imageVolume - The imageVolume to use to measure.\n * @param worldPos1 - The first world position.\n * @param worldPos2 - The second world position.\n *\n * @returns The `worldWidth` and `worldHeight`.\n */\nexport default function getWorldWidthAndHeightFromTwoPoints(\n  viewPlaneNormal: Types.Point3,\n  viewUp: Types.Point3,\n  worldPos1: Types.Point3,\n  worldPos2: Types.Point3\n): { worldWidth: number; worldHeight: number } {\n  const viewRight = vec3.create();\n\n  vec3.cross(viewRight, <vec3>viewUp, <vec3>viewPlaneNormal);\n\n  const pos1 = vec3.fromValues(...worldPos1);\n  const pos2 = vec3.fromValues(...worldPos2);\n\n  const diagonal = vec3.create();\n  vec3.subtract(diagonal, pos1, pos2);\n\n  const diagonalLength = vec3.length(diagonal);\n\n  // When the two points are very close to each other return width as 0\n  // to avoid NaN the cosTheta formula calculation\n  if (diagonalLength < 0.0001) {\n    return { worldWidth: 0, worldHeight: 0 };\n  }\n\n  const cosTheta =\n    vec3.dot(diagonal, viewRight) / (diagonalLength * vec3.length(viewRight));\n\n  const sinTheta = Math.sqrt(1 - cosTheta * cosTheta);\n\n  const worldWidth = sinTheta * diagonalLength;\n  const worldHeight = cosTheta * diagonalLength;\n\n  return { worldWidth, worldHeight };\n}\n","import { AnnotationTool } from '../base';\n\nimport {\n  getEnabledElement,\n  VolumeViewport,\n  eventTarget,\n  triggerEvent,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport {\n  getCalibratedAreaUnits,\n  getCalibratedScale,\n} from '../../utilities/getCalibratedUnits';\nimport roundNumber from '../../utilities/roundNumber';\nimport throttle from '../../utilities/throttle';\nimport {\n  addAnnotation,\n  getAnnotations,\n  removeAnnotation,\n} from '../../stateManagement/annotation/annotationState';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport {\n  drawCircle as drawCircleSvg,\n  drawEllipse as drawEllipseSvg,\n  drawHandles as drawHandlesSvg,\n  drawLinkedTextBox as drawLinkedTextBoxSvg,\n} from '../../drawingSvg';\nimport { state } from '../../store';\nimport { Events } from '../../enums';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport getWorldWidthAndHeightFromTwoPoints from '../../utilities/planar/getWorldWidthAndHeightFromTwoPoints';\nimport {\n  pointInEllipse,\n  getCanvasEllipseCorners,\n} from '../../utilities/math/ellipse';\nimport {\n  resetElementCursor,\n  hideElementCursor,\n} from '../../cursors/elementCursor';\nimport {\n  EventTypes,\n  ToolHandle,\n  TextBoxHandle,\n  PublicToolProps,\n  ToolProps,\n  InteractionTypes,\n  SVGDrawingHelper,\n} from '../../types';\nimport { EllipticalROIAnnotation } from '../../types/ToolSpecificAnnotationTypes';\n\nimport {\n  AnnotationCompletedEventDetail,\n  AnnotationModifiedEventDetail,\n  MouseDragEventType,\n  MouseMoveEventType,\n} from '../../types/EventTypes';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { pointInShapeCallback } from '../../utilities/';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\nimport {\n  ModalityUnitOptions,\n  getModalityUnit,\n} from '../../utilities/getModalityUnit';\nimport { isViewportPreScaled } from '../../utilities/viewport/isViewportPreScaled';\n\nconst { transformWorldToIndex } = csUtils;\n\n/**\n * EllipticalROITool let you draw annotations that measures the statistics\n * such as area, max, mean and stdDev of an elliptical region of interest.\n * You can use EllipticalROITool in all perpendicular views (axial, sagittal, coronal).\n * Note: annotation tools in cornerstone3DTools exists in the exact location\n * in the physical 3d space, as a result, by default, all annotations that are\n * drawing in the same frameOfReference will get shared between viewports that\n * are in the same frameOfReference. Elliptical tool's text box lines are dynamically\n * generated based on the viewport's underlying Modality. For instance, if\n * the viewport is displaying CT, the text box will shown the statistics in Hounsfield units,\n * and if the viewport is displaying PET, the text box will show the statistics in\n * SUV units.\n *\n * The resulting annotation's data (statistics) and metadata (the\n * state of the viewport while drawing was happening) will get added to the\n * ToolState manager and can be accessed from the ToolState by calling getAnnotations\n * or similar methods.\n *\n * Changing tool configuration (see below) you can make the tool to draw the center\n * point circle with a given radius.\n *\n * ```js\n * cornerstoneTools.addTool(EllipticalROITool)\n *\n * const toolGroup = ToolGroupManager.createToolGroup('toolGroupId')\n *\n * toolGroup.addTool(EllipticalROITool.toolName)\n *\n * toolGroup.addViewport('viewportId', 'renderingEngineId')\n *\n * toolGroup.setToolActive(EllipticalROITool.toolName, {\n *   bindings: [\n *    {\n *       mouseButton: MouseBindings.Primary, // Left Click\n *     },\n *   ],\n * })\n *\n * // draw a circle at the center point with 4px radius.\n * toolGroup.setToolConfiguration(EllipticalROITool.toolName, {\n *   centerPointRadius: 4,\n * });\n * ```\n *\n * Read more in the Docs section of the website.\n */\nclass EllipticalROITool extends AnnotationTool {\n  static toolName;\n  touchDragCallback: any;\n  mouseDragCallback: any;\n  _throttledCalculateCachedStats: any;\n  editData: {\n    annotation: any;\n    viewportIdsToRender: Array<string>;\n    handleIndex?: number;\n    movingTextBox?: boolean;\n    centerCanvas?: Array<number>;\n    canvasWidth?: number;\n    canvasHeight?: number;\n    originalHandleCanvas?: Array<number>;\n    newAnnotation?: boolean;\n    hasMoved?: boolean;\n  } | null;\n  isDrawing: boolean;\n  isHandleOutsideImage = false;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        shadow: true,\n        preventHandleOutsideImage: false,\n        // Radius of the circle to draw  at the center point of the ellipse.\n        // Set this zero(0) in order not to draw the circle.\n        centerPointRadius: 0,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n\n    this._throttledCalculateCachedStats = throttle(\n      this._calculateCachedStats,\n      100,\n      { trailing: true }\n    );\n  }\n\n  /**\n   * Based on the current position of the mouse and the current imageId to create\n   * a EllipticalROI Annotation and stores it in the annotationManager\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  addNewAnnotation = (\n    evt: EventTypes.InteractionEventType\n  ): EllipticalROIAnnotation => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n    const canvasPos = currentPoints.canvas;\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    const referencedImageId = this.getReferencedImageId(\n      viewport,\n      worldPos,\n      viewPlaneNormal,\n      viewUp\n    );\n\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n    const annotation = {\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        toolName: this.getToolName(),\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId,\n      },\n      data: {\n        label: '',\n        handles: {\n          textBox: {\n            hasMoved: false,\n            worldPosition: <Types.Point3>[0, 0, 0],\n            worldBoundingBox: {\n              topLeft: <Types.Point3>[0, 0, 0],\n              topRight: <Types.Point3>[0, 0, 0],\n              bottomLeft: <Types.Point3>[0, 0, 0],\n              bottomRight: <Types.Point3>[0, 0, 0],\n            },\n          },\n          points: [\n            [...worldPos],\n            [...worldPos],\n            [...worldPos],\n            [...worldPos],\n          ] as [Types.Point3, Types.Point3, Types.Point3, Types.Point3],\n          activeHandleIndex: null,\n        },\n        cachedStats: {},\n        initialRotation: viewport.getRotation(),\n      },\n    };\n\n    addAnnotation(annotation, element);\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      centerCanvas: canvasPos,\n      newAnnotation: true,\n      hasMoved: false,\n    };\n    this._activateDraw(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  };\n\n  /**\n   * It returns if the canvas point is near the provided annotation in the provided\n   * element or not. A proximity is passed to the function to determine the\n   * proximity of the point to the annotation in number of pixels.\n   *\n   * @param element - HTML Element\n   * @param annotation - Annotation\n   * @param canvasCoords - Canvas coordinates\n   * @param proximity - Proximity to tool to consider\n   * @returns Boolean, whether the canvas point is near tool\n   */\n  isPointNearTool = (\n    element: HTMLDivElement,\n    annotation: EllipticalROIAnnotation,\n    canvasCoords: Types.Point2,\n    proximity: number\n  ): boolean => {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    const { data } = annotation;\n    const { points } = data.handles;\n\n    // For some reason Typescript doesn't understand this, so we need to be\n    // more specific about the type\n    const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p)) as [\n      Types.Point2,\n      Types.Point2,\n      Types.Point2,\n      Types.Point2\n    ];\n    const canvasCorners = getCanvasEllipseCorners(canvasCoordinates);\n\n    const [canvasPoint1, canvasPoint2] = canvasCorners;\n\n    const minorEllipse = {\n      left: Math.min(canvasPoint1[0], canvasPoint2[0]) + proximity / 2,\n      top: Math.min(canvasPoint1[1], canvasPoint2[1]) + proximity / 2,\n      width: Math.abs(canvasPoint1[0] - canvasPoint2[0]) - proximity,\n      height: Math.abs(canvasPoint1[1] - canvasPoint2[1]) - proximity,\n    };\n\n    const majorEllipse = {\n      left: Math.min(canvasPoint1[0], canvasPoint2[0]) - proximity / 2,\n      top: Math.min(canvasPoint1[1], canvasPoint2[1]) - proximity / 2,\n      width: Math.abs(canvasPoint1[0] - canvasPoint2[0]) + proximity,\n      height: Math.abs(canvasPoint1[1] - canvasPoint2[1]) + proximity,\n    };\n\n    const pointInMinorEllipse = this._pointInEllipseCanvas(\n      minorEllipse,\n      canvasCoords\n    );\n    const pointInMajorEllipse = this._pointInEllipseCanvas(\n      majorEllipse,\n      canvasCoords\n    );\n\n    if (pointInMajorEllipse && !pointInMinorEllipse) {\n      return true;\n    }\n\n    return false;\n  };\n\n  toolSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: EllipticalROIAnnotation\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    annotation.highlighted = true;\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      movingTextBox: false,\n    };\n\n    hideElementCursor(element);\n\n    this._activateModify(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    evt.preventDefault();\n  };\n\n  handleSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: EllipticalROIAnnotation,\n    handle: ToolHandle\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const { data } = annotation;\n\n    annotation.highlighted = true;\n\n    let movingTextBox = false;\n    let handleIndex;\n\n    let centerCanvas;\n    let canvasWidth;\n    let canvasHeight;\n    let originalHandleCanvas;\n\n    if ((handle as TextBoxHandle).worldPosition) {\n      movingTextBox = true;\n    } else {\n      const { points } = data.handles;\n      const enabledElement = getEnabledElement(element);\n      const { worldToCanvas } = enabledElement.viewport;\n\n      handleIndex = points.findIndex((p) => p === handle);\n\n      const pointsCanvas = points.map(worldToCanvas);\n\n      originalHandleCanvas = pointsCanvas[handleIndex];\n\n      canvasWidth = Math.abs(pointsCanvas[2][0] - pointsCanvas[3][0]);\n      canvasHeight = Math.abs(pointsCanvas[0][1] - pointsCanvas[1][1]);\n\n      centerCanvas = [\n        (pointsCanvas[2][0] + pointsCanvas[3][0]) / 2,\n        (pointsCanvas[0][1] + pointsCanvas[1][1]) / 2,\n      ];\n    }\n\n    // Find viewports to render on drag.\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex,\n      canvasWidth,\n      canvasHeight,\n      centerCanvas,\n      originalHandleCanvas,\n      movingTextBox,\n    };\n    this._activateModify(element);\n\n    hideElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    evt.preventDefault();\n  };\n\n  _endCallback = (evt: EventTypes.InteractionEventType): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, newAnnotation, hasMoved } =\n      this.editData;\n    const { data } = annotation;\n\n    if (newAnnotation && !hasMoved) {\n      return;\n    }\n\n    // Elliptical ROI tool should reset its highlight to false on mouse up (as opposed\n    // to other tools that keep it highlighted until the user moves. The reason\n    // is that we use top-left and bottom-right handles to define the ellipse,\n    // and they are by definition not in the ellipse on mouse up.\n    annotation.highlighted = false;\n    data.handles.activeHandleIndex = null;\n\n    this._deactivateModify(element);\n    this._deactivateDraw(element);\n\n    resetElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    this.editData = null;\n    this.isDrawing = false;\n\n    if (\n      this.isHandleOutsideImage &&\n      this.configuration.preventHandleOutsideImage\n    ) {\n      removeAnnotation(annotation.annotationUID);\n    }\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    if (newAnnotation) {\n      const eventType = Events.ANNOTATION_COMPLETED;\n\n      const eventDetail: AnnotationCompletedEventDetail = {\n        annotation,\n      };\n\n      triggerEvent(eventTarget, eventType, eventDetail);\n    }\n  };\n\n  _dragDrawCallback = (evt: EventTypes.InteractionEventType): void => {\n    this.isDrawing = true;\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const { currentPoints } = eventDetail;\n    const currentCanvasPoints = currentPoints.canvas;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine, viewport } = enabledElement;\n    const { canvasToWorld } = viewport;\n\n    //////\n    const { annotation, viewportIdsToRender, centerCanvas } = this.editData;\n    const { data } = annotation;\n\n    const dX = Math.abs(currentCanvasPoints[0] - centerCanvas[0]);\n    const dY = Math.abs(currentCanvasPoints[1] - centerCanvas[1]);\n\n    // Todo: why bottom is -dY, it should be +dY\n    const bottomCanvas = <Types.Point2>[centerCanvas[0], centerCanvas[1] - dY];\n    const topCanvas = <Types.Point2>[centerCanvas[0], centerCanvas[1] + dY];\n    const leftCanvas = <Types.Point2>[centerCanvas[0] - dX, centerCanvas[1]];\n    const rightCanvas = <Types.Point2>[centerCanvas[0] + dX, centerCanvas[1]];\n\n    data.handles.points = [\n      canvasToWorld(bottomCanvas),\n      canvasToWorld(topCanvas),\n      canvasToWorld(leftCanvas),\n      canvasToWorld(rightCanvas),\n    ];\n\n    annotation.invalidated = true;\n\n    this.editData.hasMoved = true;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  };\n\n  _dragModifyCallback = (evt: EventTypes.InteractionEventType): void => {\n    this.isDrawing = true;\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, handleIndex, movingTextBox } =\n      this.editData;\n    const { data } = annotation;\n\n    if (movingTextBox) {\n      const { deltaPoints } = eventDetail;\n      const worldPosDelta = deltaPoints.world;\n\n      const { textBox } = data.handles;\n      const { worldPosition } = textBox;\n\n      worldPosition[0] += worldPosDelta[0];\n      worldPosition[1] += worldPosDelta[1];\n      worldPosition[2] += worldPosDelta[2];\n\n      textBox.hasMoved = true;\n    } else if (handleIndex === undefined) {\n      // Moving tool\n      const { deltaPoints } = eventDetail;\n      const worldPosDelta = deltaPoints.world;\n\n      const points = data.handles.points;\n\n      points.forEach((point) => {\n        point[0] += worldPosDelta[0];\n        point[1] += worldPosDelta[1];\n        point[2] += worldPosDelta[2];\n      });\n      annotation.invalidated = true;\n    } else {\n      this._dragHandle(evt);\n      annotation.invalidated = true;\n    }\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  };\n\n  _dragHandle = (evt: EventTypes.InteractionEventType): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { canvasToWorld } = enabledElement.viewport;\n\n    const {\n      annotation,\n      canvasWidth,\n      canvasHeight,\n      handleIndex,\n      centerCanvas,\n      originalHandleCanvas,\n    } = this.editData;\n    const { data } = annotation;\n    const { points } = data.handles;\n\n    // Move current point in that direction.\n    // Move other points in opposite direction.\n\n    const { currentPoints } = eventDetail;\n    const currentCanvasPoints = currentPoints.canvas;\n\n    if (handleIndex === 0 || handleIndex === 1) {\n      // Dragging top or bottom point\n      const dYCanvas = Math.abs(currentCanvasPoints[1] - centerCanvas[1]);\n      const canvasBottom = <Types.Point2>[\n        centerCanvas[0],\n        centerCanvas[1] - dYCanvas,\n      ];\n      const canvasTop = <Types.Point2>[\n        centerCanvas[0],\n        centerCanvas[1] + dYCanvas,\n      ];\n\n      points[0] = canvasToWorld(canvasBottom);\n      points[1] = canvasToWorld(canvasTop);\n\n      const dXCanvas = currentCanvasPoints[0] - originalHandleCanvas[0];\n      const newHalfCanvasWidth = canvasWidth / 2 + dXCanvas;\n      const canvasLeft = <Types.Point2>[\n        centerCanvas[0] - newHalfCanvasWidth,\n        centerCanvas[1],\n      ];\n      const canvasRight = <Types.Point2>[\n        centerCanvas[0] + newHalfCanvasWidth,\n        centerCanvas[1],\n      ];\n\n      points[2] = canvasToWorld(canvasLeft);\n      points[3] = canvasToWorld(canvasRight);\n    } else {\n      // Dragging left or right point\n      const dXCanvas = Math.abs(currentCanvasPoints[0] - centerCanvas[0]);\n      const canvasLeft = <Types.Point2>[\n        centerCanvas[0] - dXCanvas,\n        centerCanvas[1],\n      ];\n      const canvasRight = <Types.Point2>[\n        centerCanvas[0] + dXCanvas,\n        centerCanvas[1],\n      ];\n\n      points[2] = canvasToWorld(canvasLeft);\n      points[3] = canvasToWorld(canvasRight);\n\n      const dYCanvas = currentCanvasPoints[1] - originalHandleCanvas[1];\n      const newHalfCanvasHeight = canvasHeight / 2 + dYCanvas;\n      const canvasBottom = <Types.Point2>[\n        centerCanvas[0],\n        centerCanvas[1] - newHalfCanvasHeight,\n      ];\n      const canvasTop = <Types.Point2>[\n        centerCanvas[0],\n        centerCanvas[1] + newHalfCanvasHeight,\n      ];\n\n      points[0] = canvasToWorld(canvasBottom);\n      points[1] = canvasToWorld(canvasTop);\n    }\n  };\n\n  cancel = (element: HTMLDivElement) => {\n    // If it is mid-draw or mid-modify\n    if (this.isDrawing) {\n      this.isDrawing = false;\n      this._deactivateDraw(element);\n      this._deactivateModify(element);\n      resetElementCursor(element);\n\n      const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n      const { data } = annotation;\n\n      annotation.highlighted = false;\n      data.handles.activeHandleIndex = null;\n\n      const enabledElement = getEnabledElement(element);\n      const { renderingEngine } = enabledElement;\n\n      triggerAnnotationRenderForViewportIds(\n        renderingEngine,\n        viewportIdsToRender\n      );\n\n      if (newAnnotation) {\n        const eventType = Events.ANNOTATION_COMPLETED;\n\n        const eventDetail: AnnotationCompletedEventDetail = {\n          annotation,\n        };\n\n        triggerEvent(eventTarget, eventType, eventDetail);\n      }\n\n      this.editData = null;\n      return annotation.annotationUID;\n    }\n  };\n\n  _activateModify = (element) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(Events.MOUSE_UP, this._endCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this._dragModifyCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.addEventListener(Events.TOUCH_END, this._endCallback);\n    element.addEventListener(Events.TOUCH_DRAG, this._dragModifyCallback);\n    element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n  };\n\n  _deactivateModify = (element) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n    element.removeEventListener(Events.MOUSE_DRAG, this._dragModifyCallback);\n    element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.removeEventListener(Events.TOUCH_END, this._endCallback);\n    element.removeEventListener(Events.TOUCH_DRAG, this._dragModifyCallback);\n    element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n  };\n\n  _activateDraw = (element) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(Events.MOUSE_UP, this._endCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this._dragDrawCallback);\n    element.addEventListener(Events.MOUSE_MOVE, this._dragDrawCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.addEventListener(Events.TOUCH_END, this._endCallback);\n    element.addEventListener(Events.TOUCH_DRAG, this._dragDrawCallback);\n    element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n  };\n\n  _deactivateDraw = (element) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n    element.removeEventListener(Events.MOUSE_DRAG, this._dragDrawCallback);\n    element.removeEventListener(Events.MOUSE_MOVE, this._dragDrawCallback);\n    element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.removeEventListener(Events.TOUCH_END, this._endCallback);\n    element.removeEventListener(Events.TOUCH_DRAG, this._dragDrawCallback);\n    element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n  };\n\n  /**\n   * it is used to draw the ellipticalROI annotation in each\n   * request animation frame. It calculates the updated cached statistics if\n   * data is invalidated and cache it.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n    const { viewport } = enabledElement;\n    const { element } = viewport;\n\n    let annotations = getAnnotations(this.getToolName(), element);\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    annotations = this.filterInteractableAnnotationsForElement(\n      element,\n      annotations\n    );\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    const targetId = this.getTargetId(viewport);\n\n    const renderingEngine = viewport.getRenderingEngine();\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    for (let i = 0; i < annotations.length; i++) {\n      const annotation = annotations[i] as EllipticalROIAnnotation;\n      const { annotationUID, data } = annotation;\n      const { handles } = data;\n      const { points, activeHandleIndex } = handles;\n\n      styleSpecifier.annotationUID = annotationUID;\n\n      const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n      const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n      const color = this.getStyle('color', styleSpecifier, annotation);\n\n      const canvasCoordinates = points.map((p) =>\n        viewport.worldToCanvas(p)\n      ) as [Types.Point2, Types.Point2, Types.Point2, Types.Point2];\n\n      const rotation = Math.abs(\n        viewport.getRotation() - (data.initialRotation || 0)\n      );\n      let canvasCorners;\n\n      if (rotation == 90 || rotation == 270) {\n        canvasCorners = <Array<Types.Point2>>getCanvasEllipseCorners([\n          canvasCoordinates[2], // bottom\n          canvasCoordinates[3], // top\n          canvasCoordinates[0], // left\n          canvasCoordinates[1], // right\n        ]);\n      } else {\n        canvasCorners = <Array<Types.Point2>>(\n          getCanvasEllipseCorners(canvasCoordinates) // bottom, top, left, right, keep as is\n        );\n      }\n\n      const { centerPointRadius } = this.configuration;\n\n      const modalityUnitOptions = {\n        isPreScaled: isViewportPreScaled(viewport, targetId),\n\n        isSuvScaled: this.isSuvScaled(\n          viewport,\n          targetId,\n          annotation.metadata.referencedImageId\n        ),\n      };\n\n      // If cachedStats does not exist, or the unit is missing (as part of import/hydration etc.),\n      // force to recalculate the stats from the points\n      if (\n        !data.cachedStats[targetId] ||\n        data.cachedStats[targetId].areaUnit === undefined\n      ) {\n        data.cachedStats[targetId] = {\n          Modality: null,\n          area: null,\n          max: null,\n          mean: null,\n          stdDev: null,\n          areaUnit: null,\n        };\n\n        this._calculateCachedStats(\n          annotation,\n          viewport,\n          renderingEngine,\n          enabledElement,\n          modalityUnitOptions\n        );\n      } else if (annotation.invalidated) {\n        this._throttledCalculateCachedStats(\n          annotation,\n          viewport,\n          renderingEngine,\n          enabledElement,\n          modalityUnitOptions\n        );\n        // If the invalidated data is as a result of volumeViewport manipulation\n        // of the tools, we need to invalidate the related viewports data, so that\n        // when scrolling to the related slice in which the tool were manipulated\n        // we re-render the correct tool position. This is due to stackViewport\n        // which doesn't have the full volume at each time, and we are only working\n        // on one slice at a time.\n        if (viewport instanceof VolumeViewport) {\n          const { referencedImageId } = annotation.metadata;\n\n          // invalidate all the relevant stackViewports if they are not\n          // at the referencedImageId\n          for (const targetId in data.cachedStats) {\n            if (targetId.startsWith('imageId')) {\n              const viewports = renderingEngine.getStackViewports();\n\n              const invalidatedStack = viewports.find((vp) => {\n                // The stack viewport that contains the imageId but is not\n                // showing it currently\n                const referencedImageURI =\n                  csUtils.imageIdToURI(referencedImageId);\n                const hasImageURI = vp.hasImageURI(referencedImageURI);\n                const currentImageURI = csUtils.imageIdToURI(\n                  vp.getCurrentImageId()\n                );\n                return hasImageURI && currentImageURI !== referencedImageURI;\n              });\n\n              if (invalidatedStack) {\n                delete data.cachedStats[targetId];\n              }\n            }\n          }\n        }\n      }\n\n      // If rendering engine has been destroyed while rendering\n      if (!viewport.getRenderingEngine()) {\n        console.warn('Rendering Engine has been destroyed');\n        return renderStatus;\n      }\n\n      let activeHandleCanvasCoords;\n\n      if (!isAnnotationVisible(annotationUID)) {\n        continue;\n      }\n\n      if (\n        !isAnnotationLocked(annotation) &&\n        !this.editData &&\n        activeHandleIndex !== null\n      ) {\n        // Not locked or creating and hovering over handle, so render handle.\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n      }\n\n      if (activeHandleCanvasCoords) {\n        const handleGroupUID = '0';\n        drawHandlesSvg(\n          svgDrawingHelper,\n          annotationUID,\n          handleGroupUID,\n          activeHandleCanvasCoords,\n          {\n            color,\n          }\n        );\n      }\n\n      const dataId = `${annotationUID}-ellipse`;\n      const ellipseUID = '0';\n      drawEllipseSvg(\n        svgDrawingHelper,\n        annotationUID,\n        ellipseUID,\n        canvasCorners[0],\n        canvasCorners[1],\n        {\n          color,\n          lineDash,\n          lineWidth,\n        },\n        dataId\n      );\n\n      // draw center point, if \"centerPointRadius\" configuration is valid.\n      if (centerPointRadius > 0) {\n        const minRadius = Math.min(\n          Math.abs(canvasCorners[0][0] - canvasCorners[1][0]) / 2, // horizontal radius\n          Math.abs(canvasCorners[0][1] - canvasCorners[1][1]) / 2 // vertical radius\n        );\n        if (minRadius > 3 * centerPointRadius) {\n          const centerPoint = this._getCanvasEllipseCenter(canvasCoordinates);\n          drawCircleSvg(\n            svgDrawingHelper,\n            annotationUID,\n            `${ellipseUID}-center`,\n            centerPoint,\n            centerPointRadius,\n            {\n              color,\n              lineDash,\n              lineWidth,\n            }\n          );\n        }\n      }\n\n      renderStatus = true;\n\n      const textLines = this._getTextLines(data, targetId);\n      if (!textLines || textLines.length === 0) {\n        continue;\n      }\n\n      // Poor man's cached?\n      let canvasTextBoxCoords;\n\n      if (!data.handles.textBox.hasMoved) {\n        canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCorners);\n\n        data.handles.textBox.worldPosition =\n          viewport.canvasToWorld(canvasTextBoxCoords);\n      }\n\n      const textBoxPosition = viewport.worldToCanvas(\n        data.handles.textBox.worldPosition\n      );\n\n      const textBoxUID = '1';\n      const boundingBox = drawLinkedTextBoxSvg(\n        svgDrawingHelper,\n        annotationUID,\n        textBoxUID,\n        textLines,\n        textBoxPosition,\n        canvasCoordinates,\n        {},\n        this.getLinkedTextBoxStyle(styleSpecifier, annotation)\n      );\n\n      const { x: left, y: top, width, height } = boundingBox;\n\n      data.handles.textBox.worldBoundingBox = {\n        topLeft: viewport.canvasToWorld([left, top]),\n        topRight: viewport.canvasToWorld([left + width, top]),\n        bottomLeft: viewport.canvasToWorld([left, top + height]),\n        bottomRight: viewport.canvasToWorld([left + width, top + height]),\n      };\n    }\n\n    return renderStatus;\n  };\n\n  _getTextLines = (data, targetId: string): string[] => {\n    const cachedVolumeStats = data.cachedStats[targetId];\n    const { area, mean, stdDev, max, isEmptyArea, areaUnit, modalityUnit } =\n      cachedVolumeStats;\n\n    const textLines: string[] = [];\n\n    if (area) {\n      const areaLine = isEmptyArea\n        ? `Area: Oblique not supported`\n        : `Area: ${roundNumber(area)} ${areaUnit}`;\n      textLines.push(areaLine);\n    }\n\n    if (mean) {\n      textLines.push(`Mean: ${roundNumber(mean)} ${modalityUnit}`);\n    }\n\n    if (max) {\n      textLines.push(`Max: ${roundNumber(max)} ${modalityUnit}`);\n    }\n\n    if (stdDev) {\n      textLines.push(`Std Dev: ${roundNumber(stdDev)} ${modalityUnit}`);\n    }\n\n    return textLines;\n  };\n\n  _calculateCachedStats = (\n    annotation,\n    viewport,\n    renderingEngine,\n    enabledElement,\n    modalityUnitOptions: ModalityUnitOptions\n  ) => {\n    const data = annotation.data;\n    const { viewportId, renderingEngineId } = enabledElement;\n\n    const { points } = data.handles;\n\n    const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n    const { viewPlaneNormal, viewUp } = viewport.getCamera();\n\n    const [topLeftCanvas, bottomRightCanvas] = <Array<Types.Point2>>(\n      getCanvasEllipseCorners(canvasCoordinates)\n    );\n\n    const topLeftWorld = viewport.canvasToWorld(topLeftCanvas);\n    const bottomRightWorld = viewport.canvasToWorld(bottomRightCanvas);\n    const { cachedStats } = data;\n\n    const targetIds = Object.keys(cachedStats);\n    const worldPos1 = topLeftWorld;\n    const worldPos2 = bottomRightWorld;\n\n    for (let i = 0; i < targetIds.length; i++) {\n      const targetId = targetIds[i];\n\n      const image = this.getTargetIdImage(targetId, renderingEngine);\n\n      // If image does not exists for the targetId, skip. This can be due\n      // to various reasons such as if the target was a volumeViewport, and\n      // the volumeViewport has been decached in the meantime.\n      if (!image) {\n        continue;\n      }\n\n      const { dimensions, imageData, metadata, hasPixelSpacing } = image;\n\n      const worldPos1Index = transformWorldToIndex(imageData, worldPos1);\n\n      worldPos1Index[0] = Math.floor(worldPos1Index[0]);\n      worldPos1Index[1] = Math.floor(worldPos1Index[1]);\n      worldPos1Index[2] = Math.floor(worldPos1Index[2]);\n\n      const worldPos2Index = transformWorldToIndex(imageData, worldPos2);\n\n      worldPos2Index[0] = Math.floor(worldPos2Index[0]);\n      worldPos2Index[1] = Math.floor(worldPos2Index[1]);\n      worldPos2Index[2] = Math.floor(worldPos2Index[2]);\n\n      // Check if one of the indexes are inside the volume, this then gives us\n      // Some area to do stats over.\n\n      if (this._isInsideVolume(worldPos1Index, worldPos2Index, dimensions)) {\n        const iMin = Math.min(worldPos1Index[0], worldPos2Index[0]);\n        const iMax = Math.max(worldPos1Index[0], worldPos2Index[0]);\n\n        const jMin = Math.min(worldPos1Index[1], worldPos2Index[1]);\n        const jMax = Math.max(worldPos1Index[1], worldPos2Index[1]);\n\n        const kMin = Math.min(worldPos1Index[2], worldPos2Index[2]);\n        const kMax = Math.max(worldPos1Index[2], worldPos2Index[2]);\n\n        const boundsIJK = [\n          [iMin, iMax],\n          [jMin, jMax],\n          [kMin, kMax],\n        ] as [Types.Point2, Types.Point2, Types.Point2];\n\n        const center = [\n          (topLeftWorld[0] + bottomRightWorld[0]) / 2,\n          (topLeftWorld[1] + bottomRightWorld[1]) / 2,\n          (topLeftWorld[2] + bottomRightWorld[2]) / 2,\n        ] as Types.Point3;\n\n        const ellipseObj = {\n          center,\n          xRadius: Math.abs(topLeftWorld[0] - bottomRightWorld[0]) / 2,\n          yRadius: Math.abs(topLeftWorld[1] - bottomRightWorld[1]) / 2,\n          zRadius: Math.abs(topLeftWorld[2] - bottomRightWorld[2]) / 2,\n        };\n\n        const { worldWidth, worldHeight } = getWorldWidthAndHeightFromTwoPoints(\n          viewPlaneNormal,\n          viewUp,\n          worldPos1,\n          worldPos2\n        );\n        const isEmptyArea = worldWidth === 0 && worldHeight === 0;\n        const scale = getCalibratedScale(image);\n        const area =\n          Math.abs(Math.PI * (worldWidth / 2) * (worldHeight / 2)) /\n          scale /\n          scale;\n\n        let count = 0;\n        let mean = 0;\n        let stdDev = 0;\n        let max = -Infinity;\n\n        const meanMaxCalculator = ({ value: newValue }) => {\n          if (newValue > max) {\n            max = newValue;\n          }\n\n          mean += newValue;\n          count += 1;\n        };\n\n        pointInShapeCallback(\n          imageData,\n          (pointLPS, pointIJK) => pointInEllipse(ellipseObj, pointLPS),\n          meanMaxCalculator,\n          boundsIJK\n        );\n\n        mean /= count;\n\n        const stdCalculator = ({ value }) => {\n          const valueMinusMean = value - mean;\n\n          stdDev += valueMinusMean * valueMinusMean;\n        };\n\n        pointInShapeCallback(\n          imageData,\n          (pointLPS, pointIJK) => pointInEllipse(ellipseObj, pointLPS),\n          stdCalculator,\n          boundsIJK\n        );\n\n        stdDev /= count;\n        stdDev = Math.sqrt(stdDev);\n\n        const modalityUnit = getModalityUnit(\n          metadata.Modality,\n          annotation.metadata.referencedImageId,\n          modalityUnitOptions\n        );\n\n        cachedStats[targetId] = {\n          Modality: metadata.Modality,\n          area,\n          mean,\n          max,\n          stdDev,\n          isEmptyArea,\n          areaUnit: getCalibratedAreaUnits(null, image),\n          modalityUnit,\n        };\n      } else {\n        this.isHandleOutsideImage = true;\n\n        cachedStats[targetId] = {\n          Modality: metadata.Modality,\n        };\n      }\n    }\n\n    annotation.invalidated = false;\n\n    // Dispatching annotation modified\n    const eventType = Events.ANNOTATION_MODIFIED;\n\n    const eventDetail: AnnotationModifiedEventDetail = {\n      annotation,\n      viewportId,\n      renderingEngineId,\n    };\n\n    triggerEvent(eventTarget, eventType, eventDetail);\n\n    return cachedStats;\n  };\n\n  _isInsideVolume = (index1, index2, dimensions) => {\n    return (\n      csUtils.indexWithinDimensions(index1, dimensions) &&\n      csUtils.indexWithinDimensions(index2, dimensions)\n    );\n  };\n\n  /**\n   * This is a temporary function to use the old ellipse's canvas-based\n   * calculation for isPointNearTool, we should move the the world-based\n   * calculation to the tool's isPointNearTool function.\n   *\n   * @param ellipse - The ellipse object\n   * @param location - The location to check\n   * @returns True if the point is inside the ellipse\n   */\n  _pointInEllipseCanvas(ellipse, location: Types.Point2): boolean {\n    const xRadius = ellipse.width / 2;\n    const yRadius = ellipse.height / 2;\n\n    if (xRadius <= 0.0 || yRadius <= 0.0) {\n      return false;\n    }\n\n    const center = [ellipse.left + xRadius, ellipse.top + yRadius];\n    const normalized = [location[0] - center[0], location[1] - center[1]];\n\n    const inEllipse =\n      (normalized[0] * normalized[0]) / (xRadius * xRadius) +\n        (normalized[1] * normalized[1]) / (yRadius * yRadius) <=\n      1.0;\n\n    return inEllipse;\n  }\n\n  /**\n   * It takes the canvas coordinates of the ellipse corners and returns the center point of it\n   *\n   * @param ellipseCanvasPoints - The coordinates of the ellipse in the canvas.\n   * @returns center point.\n   */\n  _getCanvasEllipseCenter(ellipseCanvasPoints: Types.Point2[]): Types.Point2 {\n    const [bottom, top, left, right] = ellipseCanvasPoints;\n    const topLeft = [left[0], top[1]];\n    const bottomRight = [right[0], bottom[1]];\n    return [\n      (topLeft[0] + bottomRight[0]) / 2,\n      (topLeft[1] + bottomRight[1]) / 2,\n    ] as Types.Point2;\n  }\n}\n\nEllipticalROITool.toolName = 'EllipticalROI';\nexport default EllipticalROITool;\n","import { distanceToPoint } from '../point';\nimport { canvasCoordinates } from './_types';\n\n/**\n * It takes the canvas coordinates of the circle corners and returns the top left and bottom right\n * corners of it\n *\n * @param circleCanvasPoints - The coordinates of the circle in the canvas.\n * @returns An array of two points.\n */\nexport default function getCanvasCircleRadius(\n  circleCanvasPoints: canvasCoordinates\n): number {\n  const [center, end] = circleCanvasPoints;\n  return distanceToPoint(center, end);\n}\n","import type { Types } from '@cornerstonejs/core';\nimport { distanceToPoint } from '../point';\nimport { canvasCoordinates } from './_types';\n\n/**\n * It takes the canvas coordinates of the circle corners (wrapping square rectangle)\n * and returns the top left and bottom right\n * corners of it\n *\n * @param circleCanvasPoints - The coordinates of the circle in the canvas.\n * @returns An array of two points.\n */\nexport default function getCanvasCircleCorners(\n  circleCanvasPoints: canvasCoordinates\n): Array<Types.Point2> {\n  const [center, end] = circleCanvasPoints;\n  const radius = distanceToPoint(center, end);\n\n  const topLeft = <Types.Point2>[center[0] - radius, center[1] - radius];\n  const bottomRight = <Types.Point2>[center[0] + radius, center[1] + radius];\n\n  return [topLeft, bottomRight];\n}\n","import { AnnotationTool } from '../base';\n\nimport {\n  getEnabledElement,\n  VolumeViewport,\n  eventTarget,\n  triggerEvent,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport {\n  getCalibratedLengthUnits,\n  getCalibratedAreaUnits,\n  getCalibratedScale,\n  getCalibratedAspect,\n} from '../../utilities/getCalibratedUnits';\nimport roundNumber from '../../utilities/roundNumber';\nimport throttle from '../../utilities/throttle';\nimport {\n  addAnnotation,\n  getAnnotations,\n  removeAnnotation,\n} from '../../stateManagement/annotation/annotationState';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport {\n  drawCircle as drawCircleSvg,\n  drawHandles as drawHandlesSvg,\n  drawLinkedTextBox as drawLinkedTextBoxSvg,\n} from '../../drawingSvg';\nimport { state } from '../../store';\nimport { Events } from '../../enums';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport getWorldWidthAndHeightFromTwoPoints from '../../utilities/planar/getWorldWidthAndHeightFromTwoPoints';\nimport {\n  resetElementCursor,\n  hideElementCursor,\n} from '../../cursors/elementCursor';\nimport {\n  EventTypes,\n  ToolHandle,\n  TextBoxHandle,\n  PublicToolProps,\n  ToolProps,\n  InteractionTypes,\n  SVGDrawingHelper,\n} from '../../types';\nimport { CircleROIAnnotation } from '../../types/ToolSpecificAnnotationTypes';\n\nimport {\n  AnnotationCompletedEventDetail,\n  AnnotationModifiedEventDetail,\n  MouseDragEventType,\n  MouseMoveEventType,\n} from '../../types/EventTypes';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { pointInShapeCallback } from '../../utilities';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\nimport {\n  ModalityUnitOptions,\n  getModalityUnit,\n} from '../../utilities/getModalityUnit';\nimport { isViewportPreScaled } from '../../utilities/viewport/isViewportPreScaled';\nimport {\n  getCanvasCircleCorners,\n  getCanvasCircleRadius,\n} from '../../utilities/math/circle';\nimport { pointInEllipse } from '../../utilities/math/ellipse';\n\nconst { transformWorldToIndex } = csUtils;\n\n/**\n * CircleROITool let you draw annotations that measures the statistics\n * such as area, max, mean and stdDev of an elliptical region of interest.\n * You can use CircleROITool in all perpendicular views (axial, sagittal, coronal).\n * Note: annotation tools in cornerstone3DTools exists in the exact location\n * in the physical 3d space, as a result, by default, all annotations that are\n * drawing in the same frameOfReference will get shared between viewports that\n * are in the same frameOfReference. Circle tool's text box lines are dynamically\n * generated based on the viewport's underlying Modality. For instance, if\n * the viewport is displaying CT, the text box will shown the statistics in Hounsfield units,\n * and if the viewport is displaying PET, the text box will show the statistics in\n * SUV units.\n *\n * The resulting annotation's data (statistics) and metadata (the\n * state of the viewport while drawing was happening) will get added to the\n * ToolState manager and can be accessed from the ToolState by calling getAnnotations\n * or similar methods.\n *\n * Changing tool configuration (see below) you can make the tool to draw the center\n * point circle with a given radius.\n *\n * ```js\n * cornerstoneTools.addTool(CircleROITool)\n *\n * const toolGroup = ToolGroupManager.createToolGroup('toolGroupId')\n *\n * toolGroup.addTool(CircleROITool.toolName)\n *\n * toolGroup.addViewport('viewportId', 'renderingEngineId')\n *\n * toolGroup.setToolActive(CircleROITool.toolName, {\n *   bindings: [\n *    {\n *       mouseButton: MouseBindings.Primary, // Left Click\n *     },\n *   ],\n * })\n *\n * // draw a circle at the center point with 4px radius.\n * toolGroup.setToolConfiguration(CircleROITool.toolName, {\n *   centerPointRadius: 4,\n * });\n * ```\n *\n * Read more in the Docs section of the website.\n */\nclass CircleROITool extends AnnotationTool {\n  static toolName;\n  touchDragCallback: any;\n  mouseDragCallback: any;\n  _throttledCalculateCachedStats: any;\n  editData: {\n    annotation: any;\n    viewportIdsToRender: Array<string>;\n    handleIndex?: number;\n    movingTextBox?: boolean;\n    newAnnotation?: boolean;\n    hasMoved?: boolean;\n  } | null;\n  isDrawing: boolean;\n  isHandleOutsideImage = false;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        shadow: true,\n        preventHandleOutsideImage: false,\n        // Radius of the circle to draw  at the center point of the circle.\n        // Set this zero(0) in order not to draw the circle.\n        centerPointRadius: 0,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n\n    this._throttledCalculateCachedStats = throttle(\n      this._calculateCachedStats,\n      100,\n      { trailing: true }\n    );\n  }\n\n  /**\n   * Based on the current position of the mouse and the current imageId to create\n   * a CircleROI Annotation and stores it in the annotationManager\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  addNewAnnotation = (\n    evt: EventTypes.InteractionEventType\n  ): CircleROIAnnotation => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n    const canvasPos = currentPoints.canvas;\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    const referencedImageId = this.getReferencedImageId(\n      viewport,\n      worldPos,\n      viewPlaneNormal,\n      viewUp\n    );\n\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n    const annotation = {\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        toolName: this.getToolName(),\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId,\n      },\n      data: {\n        label: '',\n        handles: {\n          textBox: {\n            hasMoved: false,\n            worldPosition: <Types.Point3>[0, 0, 0],\n            worldBoundingBox: {\n              topLeft: <Types.Point3>[0, 0, 0],\n              topRight: <Types.Point3>[0, 0, 0],\n              bottomLeft: <Types.Point3>[0, 0, 0],\n              bottomRight: <Types.Point3>[0, 0, 0],\n            },\n          },\n          points: [[...worldPos], [...worldPos]] as [\n            Types.Point3, // center\n            Types.Point3 // end\n          ],\n          activeHandleIndex: null,\n        },\n        cachedStats: {},\n      },\n    };\n\n    addAnnotation(annotation, element);\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      newAnnotation: true,\n      hasMoved: false,\n    };\n    this._activateDraw(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  };\n\n  /**\n   * It returns if the canvas point is near the provided annotation in the provided\n   * element or not. A proximity is passed to the function to determine the\n   * proximity of the point to the annotation in number of pixels.\n   *\n   * @param element - HTML Element\n   * @param annotation - Annotation\n   * @param canvasCoords - Canvas coordinates\n   * @param proximity - Proximity to tool to consider\n   * @returns Boolean, whether the canvas point is near tool\n   */\n  isPointNearTool = (\n    element: HTMLDivElement,\n    annotation: CircleROIAnnotation,\n    canvasCoords: Types.Point2,\n    proximity: number\n  ): boolean => {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    const { data } = annotation;\n    const { points } = data.handles;\n\n    // For some reason Typescript doesn't understand this, so we need to be\n    // more specific about the type\n    const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p)) as [\n      Types.Point2,\n      Types.Point2\n    ];\n\n    const radius = getCanvasCircleRadius(canvasCoordinates);\n    const radiusPoint = getCanvasCircleRadius([\n      canvasCoordinates[0],\n      canvasCoords,\n    ]);\n\n    if (Math.abs(radiusPoint - radius) < proximity / 2) return true;\n\n    return false;\n  };\n\n  toolSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: CircleROIAnnotation\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    annotation.highlighted = true;\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      movingTextBox: false,\n    };\n\n    hideElementCursor(element);\n\n    this._activateModify(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    evt.preventDefault();\n  };\n\n  handleSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: CircleROIAnnotation,\n    handle: ToolHandle\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const { data } = annotation;\n\n    annotation.highlighted = true;\n\n    let movingTextBox = false;\n    let handleIndex;\n\n    if ((handle as TextBoxHandle).worldPosition) {\n      movingTextBox = true;\n    } else {\n      const { points } = data.handles;\n\n      handleIndex = points.findIndex((p) => p === handle);\n    }\n\n    // Find viewports to render on drag.\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex,\n      movingTextBox,\n    };\n    this._activateModify(element);\n\n    hideElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    evt.preventDefault();\n  };\n\n  _endCallback = (evt: EventTypes.InteractionEventType): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, newAnnotation, hasMoved } =\n      this.editData;\n    const { data } = annotation;\n\n    if (newAnnotation && !hasMoved) {\n      return;\n    }\n\n    // Circle ROI tool should reset its highlight to false on mouse up (as opposed\n    // to other tools that keep it highlighted until the user moves. The reason\n    // is that we use top-left and bottom-right handles to define the circle,\n    // and they are by definition not in the circle on mouse up.\n    annotation.highlighted = false;\n    data.handles.activeHandleIndex = null;\n\n    this._deactivateModify(element);\n    this._deactivateDraw(element);\n\n    resetElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    this.editData = null;\n    this.isDrawing = false;\n\n    if (\n      this.isHandleOutsideImage &&\n      this.configuration.preventHandleOutsideImage\n    ) {\n      removeAnnotation(annotation.annotationUID);\n    }\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    if (newAnnotation) {\n      const eventType = Events.ANNOTATION_COMPLETED;\n\n      const eventDetail: AnnotationCompletedEventDetail = {\n        annotation,\n      };\n\n      triggerEvent(eventTarget, eventType, eventDetail);\n    }\n  };\n\n  _dragDrawCallback = (evt: EventTypes.InteractionEventType): void => {\n    this.isDrawing = true;\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const { currentPoints } = eventDetail;\n    const currentCanvasPoints = currentPoints.canvas;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine, viewport } = enabledElement;\n    const { canvasToWorld } = viewport;\n\n    //////\n    const { annotation, viewportIdsToRender } = this.editData;\n    const { data } = annotation;\n\n    data.handles.points = [\n      data.handles.points[0], // center stays\n      canvasToWorld(currentCanvasPoints), // end point moves (changing radius)\n    ];\n\n    annotation.invalidated = true;\n\n    this.editData.hasMoved = true;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  };\n\n  _dragModifyCallback = (evt: EventTypes.InteractionEventType): void => {\n    this.isDrawing = true;\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, handleIndex, movingTextBox } =\n      this.editData;\n    const { data } = annotation;\n\n    if (movingTextBox) {\n      const { deltaPoints } = eventDetail;\n      const worldPosDelta = deltaPoints.world;\n\n      const { textBox } = data.handles;\n      const { worldPosition } = textBox;\n\n      worldPosition[0] += worldPosDelta[0];\n      worldPosition[1] += worldPosDelta[1];\n      worldPosition[2] += worldPosDelta[2];\n\n      textBox.hasMoved = true;\n    } else if (handleIndex === undefined) {\n      // Moving tool\n      const { deltaPoints } = eventDetail;\n      const worldPosDelta = deltaPoints.world;\n\n      const points = data.handles.points;\n\n      points.forEach((point) => {\n        point[0] += worldPosDelta[0];\n        point[1] += worldPosDelta[1];\n        point[2] += worldPosDelta[2];\n      });\n      annotation.invalidated = true;\n    } else {\n      this._dragHandle(evt);\n      annotation.invalidated = true;\n    }\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  };\n\n  _dragHandle = (evt: EventTypes.InteractionEventType): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { canvasToWorld, worldToCanvas } = enabledElement.viewport;\n\n    const { annotation, handleIndex } = this.editData;\n    const { data } = annotation;\n    const { points } = data.handles;\n\n    const canvasCoordinates = points.map((p) => worldToCanvas(p));\n\n    // Move current point in that direction.\n    // Move other points in opposite direction.\n\n    const { currentPoints } = eventDetail;\n    const currentCanvasPoints = currentPoints.canvas;\n\n    if (handleIndex === 0) {\n      // Dragging center, move the circle ROI\n      const dXCanvas = currentCanvasPoints[0] - canvasCoordinates[0][0];\n      const dYCanvas = currentCanvasPoints[1] - canvasCoordinates[0][1];\n\n      const canvasCenter = currentCanvasPoints as Types.Point2;\n      const canvasEnd = <Types.Point2>[\n        canvasCoordinates[1][0] + dXCanvas,\n        canvasCoordinates[1][1] + dYCanvas,\n      ];\n\n      points[0] = canvasToWorld(canvasCenter);\n      points[1] = canvasToWorld(canvasEnd);\n    } else {\n      // Dragging end point, center stays\n      points[1] = canvasToWorld(currentCanvasPoints);\n    }\n  };\n\n  cancel = (element: HTMLDivElement) => {\n    // If it is mid-draw or mid-modify\n    if (this.isDrawing) {\n      this.isDrawing = false;\n      this._deactivateDraw(element);\n      this._deactivateModify(element);\n      resetElementCursor(element);\n\n      const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n      const { data } = annotation;\n\n      annotation.highlighted = false;\n      data.handles.activeHandleIndex = null;\n\n      const enabledElement = getEnabledElement(element);\n      const { renderingEngine } = enabledElement;\n\n      triggerAnnotationRenderForViewportIds(\n        renderingEngine,\n        viewportIdsToRender\n      );\n\n      if (newAnnotation) {\n        const eventType = Events.ANNOTATION_COMPLETED;\n\n        const eventDetail: AnnotationCompletedEventDetail = {\n          annotation,\n        };\n\n        triggerEvent(eventTarget, eventType, eventDetail);\n      }\n\n      this.editData = null;\n      return annotation.annotationUID;\n    }\n  };\n\n  _activateModify = (element) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(Events.MOUSE_UP, this._endCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this._dragModifyCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.addEventListener(Events.TOUCH_END, this._endCallback);\n    element.addEventListener(Events.TOUCH_DRAG, this._dragModifyCallback);\n    element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n  };\n\n  _deactivateModify = (element) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n    element.removeEventListener(Events.MOUSE_DRAG, this._dragModifyCallback);\n    element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.removeEventListener(Events.TOUCH_END, this._endCallback);\n    element.removeEventListener(Events.TOUCH_DRAG, this._dragModifyCallback);\n    element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n  };\n\n  _activateDraw = (element) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(Events.MOUSE_UP, this._endCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this._dragDrawCallback);\n    element.addEventListener(Events.MOUSE_MOVE, this._dragDrawCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.addEventListener(Events.TOUCH_END, this._endCallback);\n    element.addEventListener(Events.TOUCH_DRAG, this._dragDrawCallback);\n    element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n  };\n\n  _deactivateDraw = (element) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n    element.removeEventListener(Events.MOUSE_DRAG, this._dragDrawCallback);\n    element.removeEventListener(Events.MOUSE_MOVE, this._dragDrawCallback);\n    element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.removeEventListener(Events.TOUCH_END, this._endCallback);\n    element.removeEventListener(Events.TOUCH_DRAG, this._dragDrawCallback);\n    element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n  };\n\n  /**\n   * it is used to draw the circleROI annotation in each\n   * request animation frame. It calculates the updated cached statistics if\n   * data is invalidated and cache it.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n    const { viewport } = enabledElement;\n    const { element } = viewport;\n\n    let annotations = getAnnotations(this.getToolName(), element);\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    annotations = this.filterInteractableAnnotationsForElement(\n      element,\n      annotations\n    );\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    const targetId = this.getTargetId(viewport);\n\n    const renderingEngine = viewport.getRenderingEngine();\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    for (let i = 0; i < annotations.length; i++) {\n      const annotation = annotations[i] as CircleROIAnnotation;\n      const { annotationUID, data } = annotation;\n      const { handles } = data;\n      const { points, activeHandleIndex } = handles;\n\n      styleSpecifier.annotationUID = annotationUID;\n\n      const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n      const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n      const color = this.getStyle('color', styleSpecifier, annotation);\n\n      const canvasCoordinates = points.map((p) =>\n        viewport.worldToCanvas(p)\n      ) as [Types.Point2, Types.Point2];\n      const center = canvasCoordinates[0];\n      const radius = getCanvasCircleRadius(canvasCoordinates);\n      const canvasCorners = getCanvasCircleCorners(canvasCoordinates);\n\n      const { centerPointRadius } = this.configuration;\n\n      const modalityUnitOptions = {\n        isPreScaled: isViewportPreScaled(viewport, targetId),\n\n        isSuvScaled: this.isSuvScaled(\n          viewport,\n          targetId,\n          annotation.metadata.referencedImageId\n        ),\n      };\n\n      // If cachedStats does not exist, or the unit is missing (as part of import/hydration etc.),\n      // force to recalculate the stats from the points\n      if (\n        !data.cachedStats[targetId] ||\n        data.cachedStats[targetId].areaUnit === undefined\n      ) {\n        data.cachedStats[targetId] = {\n          Modality: null,\n          area: null,\n          max: null,\n          mean: null,\n          stdDev: null,\n          areaUnit: null,\n          radius: null,\n          radiusUnit: null,\n          perimeter: null,\n        };\n\n        this._calculateCachedStats(\n          annotation,\n          viewport,\n          renderingEngine,\n          enabledElement,\n          modalityUnitOptions\n        );\n      } else if (annotation.invalidated) {\n        this._throttledCalculateCachedStats(\n          annotation,\n          viewport,\n          renderingEngine,\n          enabledElement,\n          modalityUnitOptions\n        );\n        // If the invalidated data is as a result of volumeViewport manipulation\n        // of the tools, we need to invalidate the related viewports data, so that\n        // when scrolling to the related slice in which the tool were manipulated\n        // we re-render the correct tool position. This is due to stackViewport\n        // which doesn't have the full volume at each time, and we are only working\n        // on one slice at a time.\n        if (viewport instanceof VolumeViewport) {\n          const { referencedImageId } = annotation.metadata;\n\n          // invalidate all the relevant stackViewports if they are not\n          // at the referencedImageId\n          for (const targetId in data.cachedStats) {\n            if (targetId.startsWith('imageId')) {\n              const viewports = renderingEngine.getStackViewports();\n\n              const invalidatedStack = viewports.find((vp) => {\n                // The stack viewport that contains the imageId but is not\n                // showing it currently\n                const referencedImageURI =\n                  csUtils.imageIdToURI(referencedImageId);\n                const hasImageURI = vp.hasImageURI(referencedImageURI);\n                const currentImageURI = csUtils.imageIdToURI(\n                  vp.getCurrentImageId()\n                );\n                return hasImageURI && currentImageURI !== referencedImageURI;\n              });\n\n              if (invalidatedStack) {\n                delete data.cachedStats[targetId];\n              }\n            }\n          }\n        }\n      }\n\n      // If rendering engine has been destroyed while rendering\n      if (!viewport.getRenderingEngine()) {\n        console.warn('Rendering Engine has been destroyed');\n        return renderStatus;\n      }\n\n      let activeHandleCanvasCoords;\n\n      if (!isAnnotationVisible(annotationUID)) {\n        continue;\n      }\n\n      if (\n        !isAnnotationLocked(annotation) &&\n        !this.editData &&\n        activeHandleIndex !== null\n      ) {\n        // Not locked or creating and hovering over handle, so render handle.\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n      }\n\n      if (activeHandleCanvasCoords) {\n        const handleGroupUID = '0';\n        drawHandlesSvg(\n          svgDrawingHelper,\n          annotationUID,\n          handleGroupUID,\n          activeHandleCanvasCoords,\n          {\n            color,\n          }\n        );\n      }\n\n      const dataId = `${annotationUID}-circle`;\n      const circleUID = '0';\n      drawCircleSvg(\n        svgDrawingHelper,\n        annotationUID,\n        circleUID,\n        center,\n        radius,\n        {\n          color,\n          lineDash,\n          lineWidth,\n        },\n        dataId\n      );\n\n      // draw center point, if \"centerPointRadius\" configuration is valid.\n      if (centerPointRadius > 0) {\n        if (radius > 3 * centerPointRadius) {\n          drawCircleSvg(\n            svgDrawingHelper,\n            annotationUID,\n            `${circleUID}-center`,\n            center,\n            centerPointRadius,\n            {\n              color,\n              lineDash,\n              lineWidth,\n            }\n          );\n        }\n      }\n\n      renderStatus = true;\n\n      const textLines = this._getTextLines(data, targetId);\n      if (!textLines || textLines.length === 0) {\n        continue;\n      }\n\n      // Poor man's cached?\n      let canvasTextBoxCoords;\n\n      if (!data.handles.textBox.hasMoved) {\n        canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCorners);\n\n        data.handles.textBox.worldPosition =\n          viewport.canvasToWorld(canvasTextBoxCoords);\n      }\n\n      const textBoxPosition = viewport.worldToCanvas(\n        data.handles.textBox.worldPosition\n      );\n\n      const textBoxUID = '1';\n      const boundingBox = drawLinkedTextBoxSvg(\n        svgDrawingHelper,\n        annotationUID,\n        textBoxUID,\n        textLines,\n        textBoxPosition,\n        canvasCoordinates,\n        {},\n        this.getLinkedTextBoxStyle(styleSpecifier, annotation)\n      );\n\n      const { x: left, y: top, width, height } = boundingBox;\n\n      data.handles.textBox.worldBoundingBox = {\n        topLeft: viewport.canvasToWorld([left, top]),\n        topRight: viewport.canvasToWorld([left + width, top]),\n        bottomLeft: viewport.canvasToWorld([left, top + height]),\n        bottomRight: viewport.canvasToWorld([left + width, top + height]),\n      };\n    }\n\n    return renderStatus;\n  };\n\n  _getTextLines = (data, targetId: string): string[] => {\n    const cachedVolumeStats = data.cachedStats[targetId];\n    const {\n      radius,\n      radiusUnit,\n      area,\n      mean,\n      stdDev,\n      max,\n      isEmptyArea,\n      Modality,\n      areaUnit,\n      modalityUnit,\n    } = cachedVolumeStats;\n\n    const textLines: string[] = [];\n\n    if (radius) {\n      const radiusLine = isEmptyArea\n        ? `Radius: Oblique not supported`\n        : `Radius: ${roundNumber(radius)} ${radiusUnit}`;\n      textLines.push(radiusLine);\n    }\n\n    if (area) {\n      const areaLine = isEmptyArea\n        ? `Area: Oblique not supported`\n        : `Area: ${roundNumber(area)} ${areaUnit}`;\n      textLines.push(areaLine);\n    }\n\n    if (mean) {\n      textLines.push(`Mean: ${roundNumber(mean)} ${modalityUnit}`);\n    }\n\n    if (max) {\n      textLines.push(`Max: ${roundNumber(max)} ${modalityUnit}`);\n    }\n\n    if (stdDev) {\n      textLines.push(`Std Dev: ${roundNumber(stdDev)} ${modalityUnit}`);\n    }\n\n    return textLines;\n  };\n\n  _calculateCachedStats = (\n    annotation,\n    viewport,\n    renderingEngine,\n    enabledElement,\n    modalityUnitOptions: ModalityUnitOptions\n  ) => {\n    const data = annotation.data;\n    const { viewportId, renderingEngineId } = enabledElement;\n\n    const { points } = data.handles;\n\n    const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n    const { viewPlaneNormal, viewUp } = viewport.getCamera();\n\n    const [topLeftCanvas, bottomRightCanvas] = <Array<Types.Point2>>(\n      getCanvasCircleCorners(canvasCoordinates)\n    );\n\n    const topLeftWorld = viewport.canvasToWorld(topLeftCanvas);\n    const bottomRightWorld = viewport.canvasToWorld(bottomRightCanvas);\n    const { cachedStats } = data;\n\n    const targetIds = Object.keys(cachedStats);\n    const worldPos1 = topLeftWorld;\n    const worldPos2 = bottomRightWorld;\n\n    for (let i = 0; i < targetIds.length; i++) {\n      const targetId = targetIds[i];\n\n      const image = this.getTargetIdImage(targetId, renderingEngine);\n\n      // If image does not exists for the targetId, skip. This can be due\n      // to various reasons such as if the target was a volumeViewport, and\n      // the volumeViewport has been decached in the meantime.\n      if (!image) {\n        continue;\n      }\n\n      const { dimensions, imageData, metadata, hasPixelSpacing } = image;\n\n      const worldPos1Index = transformWorldToIndex(imageData, worldPos1);\n\n      worldPos1Index[0] = Math.floor(worldPos1Index[0]);\n      worldPos1Index[1] = Math.floor(worldPos1Index[1]);\n      worldPos1Index[2] = Math.floor(worldPos1Index[2]);\n\n      const worldPos2Index = transformWorldToIndex(imageData, worldPos2);\n\n      worldPos2Index[0] = Math.floor(worldPos2Index[0]);\n      worldPos2Index[1] = Math.floor(worldPos2Index[1]);\n      worldPos2Index[2] = Math.floor(worldPos2Index[2]);\n\n      // Check if one of the indexes are inside the volume, this then gives us\n      // Some area to do stats over.\n\n      if (this._isInsideVolume(worldPos1Index, worldPos2Index, dimensions)) {\n        const iMin = Math.min(worldPos1Index[0], worldPos2Index[0]);\n        const iMax = Math.max(worldPos1Index[0], worldPos2Index[0]);\n\n        const jMin = Math.min(worldPos1Index[1], worldPos2Index[1]);\n        const jMax = Math.max(worldPos1Index[1], worldPos2Index[1]);\n\n        const kMin = Math.min(worldPos1Index[2], worldPos2Index[2]);\n        const kMax = Math.max(worldPos1Index[2], worldPos2Index[2]);\n\n        const boundsIJK = [\n          [iMin, iMax],\n          [jMin, jMax],\n          [kMin, kMax],\n        ] as [Types.Point2, Types.Point2, Types.Point2];\n\n        const center = [\n          (topLeftWorld[0] + bottomRightWorld[0]) / 2,\n          (topLeftWorld[1] + bottomRightWorld[1]) / 2,\n          (topLeftWorld[2] + bottomRightWorld[2]) / 2,\n        ] as Types.Point3;\n\n        const ellipseObj = {\n          center,\n          xRadius: Math.abs(topLeftWorld[0] - bottomRightWorld[0]) / 2,\n          yRadius: Math.abs(topLeftWorld[1] - bottomRightWorld[1]) / 2,\n          zRadius: Math.abs(topLeftWorld[2] - bottomRightWorld[2]) / 2,\n        };\n\n        const { worldWidth, worldHeight } = getWorldWidthAndHeightFromTwoPoints(\n          viewPlaneNormal,\n          viewUp,\n          worldPos1,\n          worldPos2\n        );\n        const isEmptyArea = worldWidth === 0 && worldHeight === 0;\n        const scale = getCalibratedScale(image);\n        const aspect = getCalibratedAspect(image);\n        const area = Math.abs(\n          Math.PI *\n            (worldWidth / scale / 2) *\n            (worldHeight / aspect / scale / 2)\n        );\n\n        let count = 0;\n        let mean = 0;\n        let stdDev = 0;\n        let max = -Infinity;\n\n        const meanMaxCalculator = ({ value: newValue }) => {\n          if (newValue > max) {\n            max = newValue;\n          }\n\n          mean += newValue;\n          count += 1;\n        };\n\n        pointInShapeCallback(\n          imageData,\n          (pointLPS, pointIJK) => pointInEllipse(ellipseObj, pointLPS),\n          meanMaxCalculator,\n          boundsIJK\n        );\n\n        mean /= count;\n\n        const stdCalculator = ({ value }) => {\n          const valueMinusMean = value - mean;\n\n          stdDev += valueMinusMean * valueMinusMean;\n        };\n\n        pointInShapeCallback(\n          imageData,\n          (pointLPS, pointIJK) => pointInEllipse(ellipseObj, pointLPS),\n          stdCalculator,\n          boundsIJK\n        );\n\n        stdDev /= count;\n        stdDev = Math.sqrt(stdDev);\n\n        const modalityUnit = getModalityUnit(\n          metadata.Modality,\n          annotation.metadata.referencedImageId,\n          modalityUnitOptions\n        );\n\n        cachedStats[targetId] = {\n          Modality: metadata.Modality,\n          area,\n          mean,\n          max,\n          stdDev,\n          isEmptyArea,\n          areaUnit: getCalibratedAreaUnits(null, image),\n          radius: worldWidth / 2 / scale,\n          radiusUnit: getCalibratedLengthUnits(null, image),\n          perimeter: (2 * Math.PI * (worldWidth / 2)) / scale,\n          modalityUnit,\n        };\n      } else {\n        this.isHandleOutsideImage = true;\n\n        cachedStats[targetId] = {\n          Modality: metadata.Modality,\n        };\n      }\n    }\n\n    annotation.invalidated = false;\n\n    // Dispatching annotation modified\n    const eventType = Events.ANNOTATION_MODIFIED;\n\n    const eventDetail: AnnotationModifiedEventDetail = {\n      annotation,\n      viewportId,\n      renderingEngineId,\n    };\n\n    triggerEvent(eventTarget, eventType, eventDetail);\n\n    return cachedStats;\n  };\n\n  _isInsideVolume = (index1, index2, dimensions) => {\n    return (\n      csUtils.indexWithinDimensions(index1, dimensions) &&\n      csUtils.indexWithinDimensions(index2, dimensions)\n    );\n  };\n}\n\nCircleROITool.toolName = 'CircleROI';\nexport default CircleROITool;\n","import { vec2, vec3 } from 'gl-matrix';\nimport {\n  getEnabledElement,\n  triggerEvent,\n  eventTarget,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport {\n  getCalibratedLengthUnits,\n  getCalibratedScale,\n} from '../../utilities/getCalibratedUnits';\nimport roundNumber from '../../utilities/roundNumber';\nimport { AnnotationTool } from '../base';\nimport throttle from '../../utilities/throttle';\nimport {\n  addAnnotation,\n  getAnnotations,\n  removeAnnotation,\n} from '../../stateManagement/annotation/annotationState';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport {\n  drawLine as drawLineSvg,\n  drawHandles as drawHandlesSvg,\n  drawLinkedTextBox as drawLinkedTextBoxSvg,\n} from '../../drawingSvg';\nimport { state } from '../../store';\nimport { Events } from '../../enums';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport * as lineSegment from '../../utilities/math/line';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport {\n  resetElementCursor,\n  hideElementCursor,\n} from '../../cursors/elementCursor';\nimport {\n  EventTypes,\n  ToolHandle,\n  TextBoxHandle,\n  PublicToolProps,\n  ToolProps,\n  InteractionTypes,\n  SVGDrawingHelper,\n} from '../../types';\nimport { BidirectionalAnnotation } from '../../types/ToolSpecificAnnotationTypes';\n\nimport {\n  AnnotationCompletedEventDetail,\n  AnnotationModifiedEventDetail,\n  MouseDragEventType,\n  MouseMoveEventType,\n} from '../../types/EventTypes';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\n\nconst { transformWorldToIndex } = csUtils;\n\n/**\n * BidirectionalTool let you draw annotations that measures the length and\n * width at the same time in `mm` unit. It is consisted of two perpendicular lines and\n * a text box. You can use the BidirectionalTool in all planes even in oblique\n * reconstructed planes. Note: annotation tools in cornerstone3DTools exists in the exact location\n * in the physical 3d space, as a result, by default, all annotations that are\n * drawing in the same frameOfReference will get shared between viewports that\n * are in the same frameOfReference.\n *\n * The resulting annotation's data (statistics) and metadata (the\n * state of the viewport while drawing was happening) will get added to the\n * ToolState manager and can be accessed from the ToolState by calling getAnnotations\n * or similar methods.\n *\n * ```js\n * cornerstoneTools.addTool(BidirectionalTool)\n *\n * const toolGroup = ToolGroupManager.createToolGroup('toolGroupId')\n *\n * toolGroup.addTool(BidirectionalTool.toolName)\n *\n * toolGroup.addViewport('viewportId', 'renderingEngineId')\n *\n * toolGroup.setToolActive(BidirectionalTool.toolName, {\n *   bindings: [\n *    {\n *       mouseButton: MouseBindings.Primary, // Left Click\n *     },\n *   ],\n * })\n * ```\n *\n * Read more in the Docs section of the website.\n */\nclass BidirectionalTool extends AnnotationTool {\n  static toolName;\n\n  touchDragCallback: any;\n  mouseDragCallback: any;\n  _throttledCalculateCachedStats: any;\n  editData: {\n    annotation: any;\n    viewportIdsToRender: string[];\n    handleIndex?: number;\n    movingTextBox: boolean;\n    newAnnotation?: boolean;\n    hasMoved?: boolean;\n  } | null;\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n  preventHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        preventHandleOutsideImage: false,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n\n    this._throttledCalculateCachedStats = throttle(\n      this._calculateCachedStats,\n      100,\n      { trailing: true }\n    );\n  }\n\n  /**\n   * Based on the current position of the mouse and the current imageId to create\n   * a Bidirectional Annotation and stores it in the annotationManager\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  addNewAnnotation(\n    evt: EventTypes.InteractionEventType\n  ): BidirectionalAnnotation {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    const referencedImageId = this.getReferencedImageId(\n      viewport,\n      worldPos,\n      viewPlaneNormal,\n      viewUp\n    );\n\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n    const annotation: BidirectionalAnnotation = {\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        toolName: this.getToolName(),\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId,\n      },\n      data: {\n        handles: {\n          points: [\n            // long\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            // short\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n          ],\n          textBox: {\n            hasMoved: false,\n            worldPosition: <Types.Point3>[0, 0, 0],\n            worldBoundingBox: {\n              topLeft: <Types.Point3>[0, 0, 0],\n              topRight: <Types.Point3>[0, 0, 0],\n              bottomLeft: <Types.Point3>[0, 0, 0],\n              bottomRight: <Types.Point3>[0, 0, 0],\n            },\n          },\n          activeHandleIndex: null,\n        },\n        label: '',\n        cachedStats: {},\n      },\n    };\n\n    addAnnotation(annotation, element);\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex: 1,\n      movingTextBox: false,\n      newAnnotation: true,\n      hasMoved: false,\n    };\n    this._activateDraw(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  }\n\n  /**\n   * It returns if the canvas point is near the provided annotation in the provided\n   * element or not. A proximity is passed to the function to determine the\n   * proximity of the point to the annotation in number of pixels.\n   *\n   * @param element - HTML Element\n   * @param annotation - Annotation\n   * @param canvasCoords - Canvas coordinates\n   * @param proximity - Proximity to tool to consider\n   * @returns Boolean, whether the canvas point is near tool\n   */\n  isPointNearTool = (\n    element: HTMLDivElement,\n    annotation: BidirectionalAnnotation,\n    canvasCoords: Types.Point2,\n    proximity: number\n  ): boolean => {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const { data } = annotation;\n    const { points } = data.handles;\n\n    // Check long axis\n    let canvasPoint1 = viewport.worldToCanvas(points[0]);\n    let canvasPoint2 = viewport.worldToCanvas(points[1]);\n\n    let line = {\n      start: {\n        x: canvasPoint1[0],\n        y: canvasPoint1[1],\n      },\n      end: {\n        x: canvasPoint2[0],\n        y: canvasPoint2[1],\n      },\n    };\n\n    let distanceToPoint = lineSegment.distanceToPoint(\n      [line.start.x, line.start.y],\n      [line.end.x, line.end.y],\n      [canvasCoords[0], canvasCoords[1]]\n    );\n\n    if (distanceToPoint <= proximity) {\n      return true;\n    }\n\n    // Check short axis\n    canvasPoint1 = viewport.worldToCanvas(points[2]);\n    canvasPoint2 = viewport.worldToCanvas(points[3]);\n\n    line = {\n      start: {\n        x: canvasPoint1[0],\n        y: canvasPoint1[1],\n      },\n      end: {\n        x: canvasPoint2[0],\n        y: canvasPoint2[1],\n      },\n    };\n\n    distanceToPoint = lineSegment.distanceToPoint(\n      [line.start.x, line.start.y],\n      [line.end.x, line.end.y],\n      [canvasCoords[0], canvasCoords[1]]\n    );\n\n    if (distanceToPoint <= proximity) {\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * Handles the toolSelected callback for bidirectional tool\n   * @param evt - EventTypes.MouseDownEventType\n   * @param annotation - Bidirectional annotation\n   * @param interactionType - interaction type (mouse, touch)\n   */\n  toolSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: BidirectionalAnnotation\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    annotation.highlighted = true;\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      movingTextBox: false,\n    };\n\n    this._activateModify(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n  };\n\n  /**\n   * Executes the callback for when mouse has selected a handle (anchor point) of\n   * the bidirectional tool or when the text box has been selected.\n   *\n   * @param evt - EventTypes.MouseDownEventType\n   * @param annotation - Bidirectional annotation\n   * @param handle - Handle index or selected textBox information\n   * @param interactionType - interaction type (mouse, touch)\n   */\n  handleSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: BidirectionalAnnotation,\n    handle: ToolHandle\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const data = annotation.data;\n\n    annotation.highlighted = true;\n\n    let movingTextBox = false;\n    let handleIndex;\n\n    if ((handle as TextBoxHandle).worldPosition) {\n      movingTextBox = true;\n    } else {\n      handleIndex = data.handles.points.findIndex((p) => p === handle);\n    }\n\n    // Find viewports to render on drag.\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    hideElementCursor(element);\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex,\n      movingTextBox,\n    };\n    this._activateModify(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    evt.preventDefault();\n  };\n\n  /**\n   * Handles the mouse up action for the bidirectional tool. It can be at the end\n   * of the annotation drawing (MouseUpEventType) or when the user clicks and release\n   * the mouse button instantly which let to the annotation to draw without holding\n   * the mouse button (MouseClickEventType).\n   *\n   * @param evt - mouse up or mouse click event types\n   */\n  _endCallback = (evt: EventTypes.InteractionEventType): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, newAnnotation, hasMoved } =\n      this.editData;\n    const { data } = annotation;\n\n    if (newAnnotation && !hasMoved) {\n      return;\n    }\n\n    data.handles.activeHandleIndex = null;\n\n    this._deactivateModify(element);\n    this._deactivateDraw(element);\n\n    resetElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    if (this.editData.handleIndex !== undefined) {\n      const { points } = data.handles;\n      const firstLineSegmentLength = vec3.distance(points[0], points[1]);\n      const secondLineSegmentLength = vec3.distance(points[2], points[3]);\n\n      if (secondLineSegmentLength > firstLineSegmentLength) {\n        // Switch points so [0,1] is the long axis and [2,3] is the short axis.\n\n        const longAxis = [[...points[2]], [...points[3]]];\n\n        const shortAxisPoint0 = [...points[0]];\n        const shortAxisPoint1 = [...points[1]];\n\n        // shortAxis[0->1] should be perpendicular (counter-clockwise) to longAxis[0->1]\n        const longAxisVector = vec2.create();\n\n        vec2.set(\n          longAxisVector,\n          longAxis[1][0] - longAxis[0][0],\n          longAxis[1][1] - longAxis[1][0]\n        );\n\n        const counterClockWisePerpendicularToLongAxis = vec2.create();\n\n        vec2.set(\n          counterClockWisePerpendicularToLongAxis,\n          -longAxisVector[1],\n          longAxisVector[0]\n        );\n\n        const currentShortAxisVector = vec2.create();\n\n        vec2.set(\n          currentShortAxisVector,\n          shortAxisPoint1[0] - shortAxisPoint0[0],\n          shortAxisPoint1[1] - shortAxisPoint0[0]\n        );\n\n        let shortAxis;\n\n        if (\n          vec2.dot(\n            currentShortAxisVector,\n            counterClockWisePerpendicularToLongAxis\n          ) > 0\n        ) {\n          shortAxis = [shortAxisPoint0, shortAxisPoint1];\n        } else {\n          shortAxis = [shortAxisPoint1, shortAxisPoint0];\n        }\n\n        data.handles.points = [\n          longAxis[0],\n          longAxis[1],\n          shortAxis[0],\n          shortAxis[1],\n        ];\n      }\n    }\n\n    if (\n      this.isHandleOutsideImage &&\n      this.configuration.preventHandleOutsideImage\n    ) {\n      removeAnnotation(annotation.annotationUID);\n    }\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    if (newAnnotation) {\n      const eventType = Events.ANNOTATION_COMPLETED;\n\n      const eventDetail: AnnotationCompletedEventDetail = {\n        annotation,\n      };\n\n      triggerEvent(eventTarget, eventType, eventDetail);\n    }\n\n    this.editData = null;\n    this.isDrawing = false;\n  };\n\n  /**\n   * @param evt - mouse move event type or mouse drag\n   */\n  _dragDrawCallback = (evt: EventTypes.InteractionEventType): void => {\n    this.isDrawing = true;\n\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine, viewport } = enabledElement;\n    const { worldToCanvas } = viewport;\n    const { annotation, viewportIdsToRender, handleIndex } = this.editData;\n    const { data } = annotation;\n\n    const worldPos = currentPoints.world;\n\n    // Update first move handle\n    data.handles.points[handleIndex] = [...worldPos];\n\n    const canvasCoordPoints = data.handles.points.map(worldToCanvas);\n\n    const canvasCoords = {\n      longLineSegment: {\n        start: {\n          x: canvasCoordPoints[0][0],\n          y: canvasCoordPoints[0][1],\n        },\n        end: {\n          x: canvasCoordPoints[1][0],\n          y: canvasCoordPoints[1][1],\n        },\n      },\n      shortLineSegment: {\n        start: {\n          x: canvasCoordPoints[2][0],\n          y: canvasCoordPoints[2][1],\n        },\n        end: {\n          x: canvasCoordPoints[3][0],\n          y: canvasCoordPoints[3][1],\n        },\n      },\n    };\n\n    // ~~ calculate worldPos of our short axis handles\n    // short axis is perpendicular to long axis, and we set its length to be 2/3 of long axis\n    // (meaning each)\n    const dist = vec2.distance(canvasCoordPoints[0], canvasCoordPoints[1]);\n\n    const shortAxisDistFromCenter = dist / 3;\n    // Calculate long line's incline\n    const dx =\n      canvasCoords.longLineSegment.start.x - canvasCoords.longLineSegment.end.x;\n    const dy =\n      canvasCoords.longLineSegment.start.y - canvasCoords.longLineSegment.end.y;\n    const length = Math.sqrt(dx * dx + dy * dy);\n    const vectorX = dx / length;\n    const vectorY = dy / length;\n    // middle point between long line segment's points\n    const xMid =\n      (canvasCoords.longLineSegment.start.x +\n        canvasCoords.longLineSegment.end.x) /\n      2;\n    const yMid =\n      (canvasCoords.longLineSegment.start.y +\n        canvasCoords.longLineSegment.end.y) /\n      2;\n    // short points 1/3 distance from center of long points\n    const startX = xMid + shortAxisDistFromCenter * vectorY;\n    const startY = yMid - shortAxisDistFromCenter * vectorX;\n    const endX = xMid - shortAxisDistFromCenter * vectorY;\n    const endY = yMid + shortAxisDistFromCenter * vectorX;\n\n    // Update perpendicular line segment's points\n    data.handles.points[2] = viewport.canvasToWorld([startX, startY]);\n    data.handles.points[3] = viewport.canvasToWorld([endX, endY]);\n\n    annotation.invalidated = true;\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    this.editData.hasMoved = true;\n  };\n\n  /**\n   * Mouse drag to edit annotation callback\n   * @param evt - mouse drag event\n   */\n  _dragModifyCallback = (evt: EventTypes.InteractionEventType): void => {\n    this.isDrawing = true;\n\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n    const { annotation, viewportIdsToRender, handleIndex, movingTextBox } =\n      this.editData;\n    const { data } = annotation;\n    if (movingTextBox) {\n      const { deltaPoints } = eventDetail;\n      const worldPosDelta = deltaPoints.world;\n\n      const { textBox } = data.handles;\n      const { worldPosition } = textBox;\n\n      worldPosition[0] += worldPosDelta[0];\n      worldPosition[1] += worldPosDelta[1];\n      worldPosition[2] += worldPosDelta[2];\n\n      textBox.hasMoved = true;\n    } else if (handleIndex === undefined) {\n      // Moving tool\n      const { deltaPoints } = eventDetail;\n      const worldPosDelta = deltaPoints.world;\n      const points = data.handles.points;\n\n      points.forEach((point) => {\n        point[0] += worldPosDelta[0];\n        point[1] += worldPosDelta[1];\n        point[2] += worldPosDelta[2];\n      });\n      annotation.invalidated = true;\n    } else {\n      this._dragModifyHandle(evt);\n      annotation.invalidated = true;\n    }\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  };\n\n  /**\n   * Mouse dragging a handle callback\n   * @param evt - mouse drag event\n   */\n  _dragModifyHandle = (evt: EventTypes.InteractionEventType): void => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const { annotation, handleIndex: movingHandleIndex } = this.editData;\n    const { data } = annotation;\n\n    // Moving handle\n    const worldPos = currentPoints.world;\n    const canvasCoordHandlesCurrent = [\n      viewport.worldToCanvas(data.handles.points[0]),\n      viewport.worldToCanvas(data.handles.points[1]),\n      viewport.worldToCanvas(data.handles.points[2]),\n      viewport.worldToCanvas(data.handles.points[3]),\n    ];\n\n    const firstLineSegment = {\n      start: {\n        x: canvasCoordHandlesCurrent[0][0],\n        y: canvasCoordHandlesCurrent[0][1],\n      },\n      end: {\n        x: canvasCoordHandlesCurrent[1][0],\n        y: canvasCoordHandlesCurrent[1][1],\n      },\n    };\n    const secondLineSegment = {\n      start: {\n        x: canvasCoordHandlesCurrent[2][0],\n        y: canvasCoordHandlesCurrent[2][1],\n      },\n      end: {\n        x: canvasCoordHandlesCurrent[3][0],\n        y: canvasCoordHandlesCurrent[3][1],\n      },\n    };\n\n    // Handle we've selected's proposed point\n    const proposedPoint = <Types.Point3>[...worldPos];\n    const proposedCanvasCoord = viewport.worldToCanvas(proposedPoint);\n\n    if (movingHandleIndex === 0 || movingHandleIndex === 1) {\n      const fixedHandleIndex = movingHandleIndex === 0 ? 1 : 0;\n\n      const fixedHandleCanvasCoord =\n        canvasCoordHandlesCurrent[fixedHandleIndex];\n\n      const fixedHandleToProposedCoordVec = vec2.set(\n        vec2.create(),\n        proposedCanvasCoord[0] - fixedHandleCanvasCoord[0],\n        proposedCanvasCoord[1] - fixedHandleCanvasCoord[1]\n      );\n\n      const fixedHandleToOldCoordVec = vec2.set(\n        vec2.create(),\n        canvasCoordHandlesCurrent[movingHandleIndex][0] -\n          fixedHandleCanvasCoord[0],\n        canvasCoordHandlesCurrent[movingHandleIndex][1] -\n          fixedHandleCanvasCoord[1]\n      );\n\n      // normalize vector\n      vec2.normalize(\n        fixedHandleToProposedCoordVec,\n        fixedHandleToProposedCoordVec\n      );\n      vec2.normalize(fixedHandleToOldCoordVec, fixedHandleToOldCoordVec);\n\n      // Check whether this\n      const proposedFirstLineSegment = {\n        start: {\n          x: fixedHandleCanvasCoord[0],\n          y: fixedHandleCanvasCoord[1],\n        },\n        end: {\n          x: proposedCanvasCoord[0],\n          y: proposedCanvasCoord[1],\n        },\n      };\n\n      // Note: this is the case when we are modifying the long axis line segment\n      // and we make it shorter and shorter until its second half size becomes zero\n      // which basically means that any more modification would make the long axis\n      // second half disappear. In this case, we just bail out and do not update\n      // since we don't want to disrupt the bidirectional shape.\n      if (\n        this._movingLongAxisWouldPutItThroughShortAxis(\n          proposedFirstLineSegment,\n          secondLineSegment\n        )\n      ) {\n        return;\n      }\n\n      const centerOfRotation = fixedHandleCanvasCoord;\n\n      const angle = this._getSignedAngle(\n        fixedHandleToOldCoordVec,\n        fixedHandleToProposedCoordVec\n      );\n\n      // rotate handles around the center of rotation, first translate to origin,\n      // then rotate, then translate back\n      let firstPointX = canvasCoordHandlesCurrent[2][0];\n      let firstPointY = canvasCoordHandlesCurrent[2][1];\n\n      let secondPointX = canvasCoordHandlesCurrent[3][0];\n      let secondPointY = canvasCoordHandlesCurrent[3][1];\n\n      // translate to origin\n      firstPointX -= centerOfRotation[0];\n      firstPointY -= centerOfRotation[1];\n\n      secondPointX -= centerOfRotation[0];\n      secondPointY -= centerOfRotation[1];\n\n      // rotate\n      const rotatedFirstPoint =\n        firstPointX * Math.cos(angle) - firstPointY * Math.sin(angle);\n      const rotatedFirstPointY =\n        firstPointX * Math.sin(angle) + firstPointY * Math.cos(angle);\n\n      const rotatedSecondPoint =\n        secondPointX * Math.cos(angle) - secondPointY * Math.sin(angle);\n      const rotatedSecondPointY =\n        secondPointX * Math.sin(angle) + secondPointY * Math.cos(angle);\n\n      // translate back\n      firstPointX = rotatedFirstPoint + centerOfRotation[0];\n      firstPointY = rotatedFirstPointY + centerOfRotation[1];\n\n      secondPointX = rotatedSecondPoint + centerOfRotation[0];\n      secondPointY = rotatedSecondPointY + centerOfRotation[1];\n\n      // update handles\n      const newFirstPoint = viewport.canvasToWorld([firstPointX, firstPointY]);\n      const newSecondPoint = viewport.canvasToWorld([\n        secondPointX,\n        secondPointY,\n      ]);\n\n      // the fixed handle is the one that is not being moved so we\n      // don't need to update it\n      data.handles.points[movingHandleIndex] = proposedPoint;\n      data.handles.points[2] = newFirstPoint;\n      data.handles.points[3] = newSecondPoint;\n    } else {\n      // Translation manipulator\n      const translateHandleIndex = movingHandleIndex === 2 ? 3 : 2;\n\n      const canvasCoordsCurrent = {\n        longLineSegment: {\n          start: firstLineSegment.start,\n          end: firstLineSegment.end,\n        },\n        shortLineSegment: {\n          start: secondLineSegment.start,\n          end: secondLineSegment.end,\n        },\n      };\n\n      const longLineSegmentVec = vec2.subtract(\n        vec2.create(),\n        [\n          canvasCoordsCurrent.longLineSegment.end.x,\n          canvasCoordsCurrent.longLineSegment.end.y,\n        ],\n        [\n          canvasCoordsCurrent.longLineSegment.start.x,\n          canvasCoordsCurrent.longLineSegment.start.y,\n        ]\n      );\n\n      const longLineSegmentVecNormalized = vec2.normalize(\n        vec2.create(),\n        longLineSegmentVec\n      );\n\n      const proposedToCurrentVec = vec2.subtract(\n        vec2.create(),\n        [proposedCanvasCoord[0], proposedCanvasCoord[1]],\n        [\n          canvasCoordHandlesCurrent[movingHandleIndex][0],\n          canvasCoordHandlesCurrent[movingHandleIndex][1],\n        ]\n      );\n\n      const movementLength = vec2.length(proposedToCurrentVec);\n\n      const angle = this._getSignedAngle(\n        longLineSegmentVecNormalized,\n        proposedToCurrentVec\n      );\n\n      const movementAlongLineSegmentLength = Math.cos(angle) * movementLength;\n\n      const newTranslatedPoint = vec2.scaleAndAdd(\n        vec2.create(),\n        [\n          canvasCoordHandlesCurrent[translateHandleIndex][0],\n          canvasCoordHandlesCurrent[translateHandleIndex][1],\n        ],\n        longLineSegmentVecNormalized,\n        movementAlongLineSegmentLength\n      );\n\n      // don't update if it passes through the other line segment\n      if (\n        this._movingLongAxisWouldPutItThroughShortAxis(\n          {\n            start: {\n              x: proposedCanvasCoord[0],\n              y: proposedCanvasCoord[1],\n            },\n            end: {\n              x: newTranslatedPoint[0],\n              y: newTranslatedPoint[1],\n            },\n          },\n          {\n            start: {\n              x: canvasCoordsCurrent.longLineSegment.start.x,\n              y: canvasCoordsCurrent.longLineSegment.start.y,\n            },\n            end: {\n              x: canvasCoordsCurrent.longLineSegment.end.x,\n              y: canvasCoordsCurrent.longLineSegment.end.y,\n            },\n          }\n        )\n      ) {\n        return;\n      }\n\n      const intersectionPoint = lineSegment.intersectLine(\n        [proposedCanvasCoord[0], proposedCanvasCoord[1]],\n        [newTranslatedPoint[0], newTranslatedPoint[1]],\n        [firstLineSegment.start.x, firstLineSegment.start.y],\n        [firstLineSegment.end.x, firstLineSegment.end.y]\n      );\n\n      // don't update if it doesn't intersect\n      if (!intersectionPoint) {\n        return;\n      }\n\n      data.handles.points[translateHandleIndex] = viewport.canvasToWorld(\n        newTranslatedPoint as Types.Point2\n      );\n      data.handles.points[movingHandleIndex] = proposedPoint;\n    }\n  };\n\n  /**\n   * Cancels an ongoing drawing of a bidirectional annotation\n   * @param element - HTML Element\n   */\n  cancel = (element: HTMLDivElement) => {\n    // If it is mid-draw or mid-modify\n    if (this.isDrawing) {\n      this.isDrawing = false;\n      this._deactivateDraw(element);\n      this._deactivateModify(element);\n      resetElementCursor(element);\n\n      const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n      const { data } = annotation;\n\n      annotation.highlighted = false;\n      data.handles.activeHandleIndex = null;\n\n      const enabledElement = getEnabledElement(element);\n      const { renderingEngine } = enabledElement;\n\n      triggerAnnotationRenderForViewportIds(\n        renderingEngine,\n        viewportIdsToRender\n      );\n\n      if (newAnnotation) {\n        const eventType = Events.ANNOTATION_COMPLETED;\n\n        const eventDetail: AnnotationCompletedEventDetail = {\n          annotation,\n        };\n\n        triggerEvent(eventTarget, eventType, eventDetail);\n      }\n\n      this.editData = null;\n      return annotation.annotationUID;\n    }\n  };\n\n  _activateDraw = (element) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(Events.MOUSE_UP, this._endCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this._dragDrawCallback);\n    element.addEventListener(Events.MOUSE_MOVE, this._dragDrawCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.addEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_DRAG,\n      this._dragDrawCallback as EventListener\n    );\n  };\n\n  _deactivateDraw = (element) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n    element.removeEventListener(Events.MOUSE_DRAG, this._dragDrawCallback);\n    element.removeEventListener(Events.MOUSE_MOVE, this._dragDrawCallback);\n    element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.removeEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_DRAG,\n      this._dragDrawCallback as EventListener\n    );\n  };\n\n  _activateModify = (element) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(Events.MOUSE_UP, this._endCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this._dragModifyCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.addEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_DRAG,\n      this._dragModifyCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n  };\n\n  _deactivateModify = (element) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n    element.removeEventListener(Events.MOUSE_DRAG, this._dragModifyCallback);\n    element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.removeEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_DRAG,\n      this._dragModifyCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n  };\n\n  /**\n   * it is used to draw the bidirectional annotation in each\n   * request animation frame. It calculates the updated cached statistics if\n   * data is invalidated and cache it.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = true;\n    const { viewport } = enabledElement;\n    const { element } = viewport;\n    let annotations = getAnnotations(this.getToolName(), element);\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    annotations = this.filterInteractableAnnotationsForElement(\n      element,\n      annotations\n    );\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    const targetId = this.getTargetId(viewport);\n\n    const renderingEngine = viewport.getRenderingEngine();\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    for (let i = 0; i < annotations.length; i++) {\n      const annotation = annotations[i] as BidirectionalAnnotation;\n      const { annotationUID, data } = annotation;\n      const { points, activeHandleIndex } = data.handles;\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n\n      styleSpecifier.annotationUID = annotationUID;\n\n      const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n      const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n      const color = this.getStyle('color', styleSpecifier, annotation);\n      const shadow = this.getStyle('shadow', styleSpecifier, annotation);\n\n      // If cachedStats does not exist, or the unit is missing (as part of import/hydration etc.),\n      // force to recalculate the stats from the points\n      if (\n        !data.cachedStats[targetId] ||\n        data.cachedStats[targetId].unit === undefined\n      ) {\n        data.cachedStats[targetId] = {\n          length: null,\n          width: null,\n          unit: null,\n        };\n\n        this._calculateCachedStats(annotation, renderingEngine, enabledElement);\n      } else if (annotation.invalidated) {\n        this._throttledCalculateCachedStats(\n          annotation,\n          renderingEngine,\n          enabledElement\n        );\n      }\n\n      // If rendering engine has been destroyed while rendering\n      if (!viewport.getRenderingEngine()) {\n        console.warn('Rendering Engine has been destroyed');\n        return renderStatus;\n      }\n\n      let activeHandleCanvasCoords;\n\n      if (!isAnnotationVisible(annotationUID)) {\n        continue;\n      }\n\n      if (\n        !isAnnotationLocked(annotation) &&\n        !this.editData &&\n        activeHandleIndex !== null\n      ) {\n        // Not locked or creating and hovering over handle, so render handle.\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n      }\n\n      if (activeHandleCanvasCoords) {\n        const handleGroupUID = '0';\n\n        drawHandlesSvg(\n          svgDrawingHelper,\n          annotationUID,\n          handleGroupUID,\n          activeHandleCanvasCoords,\n          {\n            color,\n          }\n        );\n      }\n\n      const dataId1 = `${annotationUID}-line-1`;\n      const dataId2 = `${annotationUID}-line-2`;\n\n      const lineUID = '0';\n      drawLineSvg(\n        svgDrawingHelper,\n        annotationUID,\n        lineUID,\n        canvasCoordinates[0],\n        canvasCoordinates[1],\n        {\n          color,\n          lineDash,\n          lineWidth,\n          shadow,\n        },\n        dataId1\n      );\n\n      const secondLineUID = '1';\n      drawLineSvg(\n        svgDrawingHelper,\n        annotationUID,\n        secondLineUID,\n        canvasCoordinates[2],\n        canvasCoordinates[3],\n        {\n          color,\n          lineDash,\n          lineWidth,\n          shadow,\n        },\n        dataId2\n      );\n\n      renderStatus = true;\n\n      const textLines = this._getTextLines(data, targetId);\n\n      if (!textLines || textLines.length === 0) {\n        continue;\n      }\n      let canvasTextBoxCoords;\n\n      if (!data.handles.textBox.hasMoved) {\n        canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCoordinates);\n\n        data.handles.textBox.worldPosition =\n          viewport.canvasToWorld(canvasTextBoxCoords);\n      }\n\n      const textBoxPosition = viewport.worldToCanvas(\n        data.handles.textBox.worldPosition\n      );\n\n      const textBoxUID = '1';\n      const boundingBox = drawLinkedTextBoxSvg(\n        svgDrawingHelper,\n        annotationUID,\n        textBoxUID,\n        textLines,\n        textBoxPosition,\n        canvasCoordinates,\n        {},\n        this.getLinkedTextBoxStyle(styleSpecifier, annotation)\n      );\n\n      const { x: left, y: top, width, height } = boundingBox;\n\n      data.handles.textBox.worldBoundingBox = {\n        topLeft: viewport.canvasToWorld([left, top]),\n        topRight: viewport.canvasToWorld([left + width, top]),\n        bottomLeft: viewport.canvasToWorld([left, top + height]),\n        bottomRight: viewport.canvasToWorld([left + width, top + height]),\n      };\n    }\n\n    return renderStatus;\n  };\n\n  _movingLongAxisWouldPutItThroughShortAxis = (\n    firstLineSegment,\n    secondLineSegment\n  ) => {\n    const vectorInSecondLineDirection = vec2.create();\n\n    vec2.set(\n      vectorInSecondLineDirection,\n      secondLineSegment.end.x - secondLineSegment.start.x,\n      secondLineSegment.end.y - secondLineSegment.start.y\n    );\n\n    vec2.normalize(vectorInSecondLineDirection, vectorInSecondLineDirection);\n\n    const extendedSecondLineSegment = {\n      start: {\n        x: secondLineSegment.start.x - vectorInSecondLineDirection[0] * 10,\n        y: secondLineSegment.start.y - vectorInSecondLineDirection[1] * 10,\n      },\n      end: {\n        x: secondLineSegment.end.x + vectorInSecondLineDirection[0] * 10,\n        y: secondLineSegment.end.y + vectorInSecondLineDirection[1] * 10,\n      },\n    };\n\n    // Add some buffer in the secondLineSegment when finding the proposedIntersectionPoint\n    // Of points to stop us getting stack when rotating quickly.\n\n    const proposedIntersectionPoint = lineSegment.intersectLine(\n      [extendedSecondLineSegment.start.x, extendedSecondLineSegment.start.y],\n      [extendedSecondLineSegment.end.x, extendedSecondLineSegment.end.y],\n      [firstLineSegment.start.x, firstLineSegment.start.y],\n      [firstLineSegment.end.x, firstLineSegment.end.y]\n    );\n\n    const wouldPutThroughShortAxis = !proposedIntersectionPoint;\n\n    return wouldPutThroughShortAxis;\n  };\n\n  /**\n   * get text box content\n   */\n  _getTextLines = (data, targetId) => {\n    const { cachedStats } = data;\n    const { length, width, unit } = cachedStats[targetId];\n\n    if (length === undefined) {\n      return;\n    }\n\n    // spaceBetweenSlices & pixelSpacing &\n    // magnitude in each direction? Otherwise, this is \"px\"?\n    const textLines = [\n      `L: ${roundNumber(length)} ${unit}`,\n      `W: ${roundNumber(width)} ${unit}`,\n    ];\n\n    return textLines;\n  };\n\n  _calculateLength(pos1, pos2) {\n    const dx = pos1[0] - pos2[0];\n    const dy = pos1[1] - pos2[1];\n    const dz = pos1[2] - pos2[2];\n\n    return Math.sqrt(dx * dx + dy * dy + dz * dz);\n  }\n\n  _calculateCachedStats = (annotation, renderingEngine, enabledElement) => {\n    const { data } = annotation;\n    const { viewportId, renderingEngineId } = enabledElement;\n\n    const worldPos1 = data.handles.points[0];\n    const worldPos2 = data.handles.points[1];\n    const worldPos3 = data.handles.points[2];\n    const worldPos4 = data.handles.points[3];\n\n    const { cachedStats } = data;\n    const targetIds = Object.keys(cachedStats);\n\n    for (let i = 0; i < targetIds.length; i++) {\n      const targetId = targetIds[i];\n\n      const image = this.getTargetIdImage(targetId, renderingEngine);\n\n      // If image does not exists for the targetId, skip. This can be due\n      // to various reasons such as if the target was a volumeViewport, and\n      // the volumeViewport has been decached in the meantime.\n      if (!image) {\n        continue;\n      }\n\n      const { imageData, dimensions } = image;\n      const scale = getCalibratedScale(image);\n      const dist1 = this._calculateLength(worldPos1, worldPos2) / scale;\n      const dist2 = this._calculateLength(worldPos3, worldPos4) / scale;\n      const length = dist1 > dist2 ? dist1 : dist2;\n      const width = dist1 > dist2 ? dist2 : dist1;\n\n      const index1 = transformWorldToIndex(imageData, worldPos1);\n      const index2 = transformWorldToIndex(imageData, worldPos2);\n      const index3 = transformWorldToIndex(imageData, worldPos3);\n      const index4 = transformWorldToIndex(imageData, worldPos4);\n\n      this._isInsideVolume(index1, index2, index3, index4, dimensions)\n        ? (this.isHandleOutsideImage = false)\n        : (this.isHandleOutsideImage = true);\n\n      cachedStats[targetId] = {\n        length,\n        width,\n        unit: getCalibratedLengthUnits(null, image),\n      };\n    }\n\n    annotation.invalidated = false;\n\n    // Dispatching annotation modified\n    const eventType = Events.ANNOTATION_MODIFIED;\n\n    const eventDetail: AnnotationModifiedEventDetail = {\n      annotation,\n      viewportId,\n      renderingEngineId,\n    };\n    triggerEvent(eventTarget, eventType, eventDetail);\n\n    return cachedStats;\n  };\n\n  _isInsideVolume = (index1, index2, index3, index4, dimensions): boolean => {\n    return (\n      csUtils.indexWithinDimensions(index1, dimensions) &&\n      csUtils.indexWithinDimensions(index2, dimensions) &&\n      csUtils.indexWithinDimensions(index3, dimensions) &&\n      csUtils.indexWithinDimensions(index4, dimensions)\n    );\n  };\n\n  _getSignedAngle = (vector1, vector2) => {\n    return Math.atan2(\n      vector1[0] * vector2[1] - vector1[1] * vector2[0],\n      vector1[0] * vector2[0] + vector1[1] * vector2[1]\n    );\n  };\n}\n\nBidirectionalTool.toolName = 'Bidirectional';\nexport default BidirectionalTool;\n","import { Events } from '../../enums';\nimport {\n  getEnabledElement,\n  triggerEvent,\n  eventTarget,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { AnnotationTool } from '../base';\nimport {\n  addAnnotation,\n  getAnnotations,\n  removeAnnotation,\n} from '../../stateManagement/annotation/annotationState';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport * as lineSegment from '../../utilities/math/line';\n\nimport {\n  drawHandles as drawHandlesSvg,\n  drawArrow as drawArrowSvg,\n  drawLinkedTextBox as drawLinkedTextBoxSvg,\n} from '../../drawingSvg';\nimport { state } from '../../store';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport {\n  AnnotationCompletedEventDetail,\n  AnnotationModifiedEventDetail,\n} from '../../types/EventTypes';\n\nimport {\n  resetElementCursor,\n  hideElementCursor,\n} from '../../cursors/elementCursor';\n\nimport {\n  EventTypes,\n  ToolHandle,\n  TextBoxHandle,\n  PublicToolProps,\n  ToolProps,\n  InteractionTypes,\n  SVGDrawingHelper,\n} from '../../types';\nimport { ArrowAnnotation } from '../../types/ToolSpecificAnnotationTypes';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\n\nclass ArrowAnnotateTool extends AnnotationTool {\n  static toolName;\n\n  public touchDragCallback: any;\n  public mouseDragCallback: any;\n  _throttledCalculateCachedStats: any;\n  editData: {\n    annotation: any;\n    viewportIdsToRender: string[];\n    handleIndex?: number;\n    movingTextBox?: boolean;\n    newAnnotation?: boolean;\n    hasMoved?: boolean;\n  } | null;\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        shadow: true,\n        getTextCallback,\n        changeTextCallback,\n        preventHandleOutsideImage: false,\n        arrowFirst: true,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n  }\n\n  /**\n   * Based on the current position of the mouse and the current imageId to create\n   * a Length Annotation and stores it in the annotationManager\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  addNewAnnotation = (\n    evt: EventTypes.InteractionEventType\n  ): ArrowAnnotation => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    hideElementCursor(element);\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    const referencedImageId = this.getReferencedImageId(\n      viewport,\n      worldPos,\n      viewPlaneNormal,\n      viewUp\n    );\n\n    const { arrowFirst } = this.configuration;\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n    const annotation = {\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        toolName: this.getToolName(),\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId,\n      },\n      data: {\n        text: '',\n        handles: {\n          points: [<Types.Point3>[...worldPos], <Types.Point3>[...worldPos]],\n          activeHandleIndex: null,\n          arrowFirst,\n          textBox: {\n            hasMoved: false,\n            worldPosition: <Types.Point3>[0, 0, 0],\n            worldBoundingBox: {\n              topLeft: <Types.Point3>[0, 0, 0],\n              topRight: <Types.Point3>[0, 0, 0],\n              bottomLeft: <Types.Point3>[0, 0, 0],\n              bottomRight: <Types.Point3>[0, 0, 0],\n            },\n          },\n        },\n        label: '',\n      },\n    };\n\n    addAnnotation(annotation, element);\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex: 1,\n      movingTextBox: false,\n      newAnnotation: true,\n      hasMoved: false,\n    };\n    this._activateDraw(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  };\n\n  /**\n   * It returns if the canvas point is near the provided length annotation in the provided\n   * element or not. A proximity is passed to the function to determine the\n   * proximity of the point to the annotation in number of pixels.\n   *\n   * @param element - HTML Element\n   * @param annotation - Annotation\n   * @param canvasCoords - Canvas coordinates\n   * @param proximity - Proximity to tool to consider\n   * @returns Boolean, whether the canvas point is near tool\n   */\n  isPointNearTool = (\n    element: HTMLDivElement,\n    annotation: ArrowAnnotation,\n    canvasCoords: Types.Point2,\n    proximity: number\n  ): boolean => {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const { data } = annotation;\n    const [point1, point2] = data.handles.points;\n    const canvasPoint1 = viewport.worldToCanvas(point1);\n    const canvasPoint2 = viewport.worldToCanvas(point2);\n\n    const line = {\n      start: {\n        x: canvasPoint1[0],\n        y: canvasPoint1[1],\n      },\n      end: {\n        x: canvasPoint2[0],\n        y: canvasPoint2[1],\n      },\n    };\n\n    const distanceToPoint = lineSegment.distanceToPoint(\n      [line.start.x, line.start.y],\n      [line.end.x, line.end.y],\n      [canvasCoords[0], canvasCoords[1]]\n    );\n\n    if (distanceToPoint <= proximity) {\n      return true;\n    }\n\n    return false;\n  };\n\n  toolSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: ArrowAnnotation\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    annotation.highlighted = true;\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      movingTextBox: false,\n    };\n\n    this._activateModify(element);\n\n    hideElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    evt.preventDefault();\n  };\n\n  handleSelectedCallback(\n    evt: EventTypes.InteractionEventType,\n    annotation: ArrowAnnotation,\n    handle: ToolHandle\n  ): void {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const { data } = annotation;\n\n    annotation.highlighted = true;\n\n    let movingTextBox = false;\n    let handleIndex;\n\n    if ((handle as TextBoxHandle).worldPosition) {\n      movingTextBox = true;\n    } else {\n      handleIndex = data.handles.points.findIndex((p) => p === handle);\n    }\n\n    // Find viewports to render on drag.\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex,\n      movingTextBox,\n    };\n    this._activateModify(element);\n\n    hideElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    evt.preventDefault();\n  }\n\n  _endCallback = (evt: EventTypes.InteractionEventType): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, newAnnotation, hasMoved } =\n      this.editData;\n    const { data } = annotation;\n\n    if (newAnnotation && !hasMoved) {\n      // when user starts the drawing by click, and moving the mouse, instead\n      // of click and drag\n      return;\n    }\n\n    data.handles.activeHandleIndex = null;\n\n    this._deactivateModify(element);\n    this._deactivateDraw(element);\n    resetElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { viewportId, renderingEngineId, renderingEngine } = enabledElement;\n\n    if (\n      this.isHandleOutsideImage &&\n      this.configuration.preventHandleOutsideImage\n    ) {\n      removeAnnotation(annotation.annotationUID);\n    }\n\n    if (newAnnotation) {\n      this.configuration.getTextCallback((text) => {\n        if (!text) {\n          removeAnnotation(annotation.annotationUID);\n          triggerAnnotationRenderForViewportIds(\n            renderingEngine,\n            viewportIdsToRender\n          );\n          this.editData = null;\n          this.isDrawing = false;\n          return;\n        }\n        annotation.data.text = text;\n\n        const eventType = Events.ANNOTATION_COMPLETED;\n\n        const eventDetail: AnnotationCompletedEventDetail = {\n          annotation,\n        };\n\n        triggerEvent(eventTarget, eventType, eventDetail);\n\n        triggerAnnotationRenderForViewportIds(\n          renderingEngine,\n          viewportIdsToRender\n        );\n      });\n    } else {\n      const eventType = Events.ANNOTATION_MODIFIED;\n\n      const eventDetail: AnnotationModifiedEventDetail = {\n        annotation,\n        viewportId,\n        renderingEngineId,\n      };\n\n      triggerEvent(eventTarget, eventType, eventDetail);\n    }\n\n    this.editData = null;\n    this.isDrawing = false;\n  };\n\n  _dragCallback = (evt: EventTypes.InteractionEventType): void => {\n    this.isDrawing = true;\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, handleIndex, movingTextBox } =\n      this.editData;\n    const { data } = annotation;\n\n    if (movingTextBox) {\n      // Drag mode - moving text box\n      const { deltaPoints } = eventDetail as EventTypes.MouseDragEventDetail;\n      const worldPosDelta = deltaPoints.world;\n\n      const { textBox } = data.handles;\n      const { worldPosition } = textBox;\n\n      worldPosition[0] += worldPosDelta[0];\n      worldPosition[1] += worldPosDelta[1];\n      worldPosition[2] += worldPosDelta[2];\n\n      textBox.hasMoved = true;\n    } else if (handleIndex === undefined) {\n      // Drag mode - moving handle\n      const { deltaPoints } = eventDetail as EventTypes.MouseDragEventDetail;\n      const worldPosDelta = deltaPoints.world;\n\n      const points = data.handles.points;\n\n      points.forEach((point) => {\n        point[0] += worldPosDelta[0];\n        point[1] += worldPosDelta[1];\n        point[2] += worldPosDelta[2];\n      });\n      annotation.invalidated = true;\n    } else {\n      // Move mode - after double click, and mouse move to draw\n      const { currentPoints } = eventDetail;\n      const worldPos = currentPoints.world;\n\n      data.handles.points[handleIndex] = [...worldPos];\n      annotation.invalidated = true;\n    }\n\n    this.editData.hasMoved = true;\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  };\n\n  touchTapCallback = (evt: EventTypes.TouchTapEventType) => {\n    if (evt.detail.taps == 2) {\n      this.doubleClickCallback(evt);\n    }\n  };\n\n  doubleClickCallback = (evt: EventTypes.TouchTapEventType): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    let annotations = getAnnotations(this.getToolName(), element);\n\n    annotations = this.filterInteractableAnnotationsForElement(\n      element,\n      annotations\n    );\n\n    if (!annotations?.length) {\n      return;\n    }\n\n    const clickedAnnotation = annotations.find((annotation) =>\n      this.isPointNearTool(\n        element,\n        annotation as ArrowAnnotation,\n        eventDetail.currentPoints.canvas,\n        6 // Todo: get from configuration\n      )\n    );\n\n    if (!clickedAnnotation) {\n      return;\n    }\n\n    const annotation = clickedAnnotation as ArrowAnnotation;\n\n    this.configuration.changeTextCallback(\n      clickedAnnotation,\n      evt.detail,\n      this._doneChangingTextCallback.bind(this, element, annotation)\n    );\n\n    this.editData = null;\n    this.isDrawing = false;\n\n    // This double click was handled and the dialogue was displayed.\n    // No need for any other listener to handle it too - stopImmediatePropagation\n    // helps ensure this primarily so that no other listeners on the target element\n    // get called.\n    evt.stopImmediatePropagation();\n    evt.preventDefault();\n  };\n\n  _doneChangingTextCallback(element, annotation, updatedText): void {\n    annotation.data.text = updatedText;\n\n    const { renderingEngine, viewportId, renderingEngineId } =\n      getEnabledElement(element);\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    // Dispatching annotation modified\n    const eventType = Events.ANNOTATION_MODIFIED;\n\n    triggerEvent(eventTarget, eventType, {\n      annotation,\n      viewportId,\n      renderingEngineId,\n    });\n  }\n\n  cancel = (element: HTMLDivElement) => {\n    // If it is mid-draw or mid-modify\n    if (this.isDrawing) {\n      this.isDrawing = false;\n      this._deactivateDraw(element);\n      this._deactivateModify(element);\n      resetElementCursor(element);\n\n      const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n      const { data } = annotation;\n\n      annotation.highlighted = false;\n      data.handles.activeHandleIndex = null;\n\n      const enabledElement = getEnabledElement(element);\n      const { renderingEngine } = enabledElement;\n\n      triggerAnnotationRenderForViewportIds(\n        renderingEngine,\n        viewportIdsToRender\n      );\n\n      if (newAnnotation) {\n        const eventType = Events.ANNOTATION_COMPLETED;\n\n        const eventDetail: AnnotationCompletedEventDetail = {\n          annotation,\n        };\n\n        triggerEvent(eventTarget, eventType, eventDetail);\n      }\n\n      this.editData = null;\n      return annotation.annotationUID;\n    }\n  };\n\n  _activateModify = (element: HTMLDivElement) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(\n      Events.MOUSE_UP,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_DRAG,\n      this._dragCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_CLICK,\n      this._endCallback as EventListener\n    );\n\n    element.addEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_DRAG,\n      this._dragCallback as EventListener\n    );\n  };\n\n  _deactivateModify = (element: HTMLDivElement) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(\n      Events.MOUSE_UP,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_DRAG,\n      this._dragCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_CLICK,\n      this._endCallback as EventListener\n    );\n\n    element.removeEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_DRAG,\n      this._dragCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n  };\n\n  _activateDraw = (element: HTMLDivElement) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(\n      Events.MOUSE_UP,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_DRAG,\n      this._dragCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_MOVE,\n      this._dragCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_CLICK,\n      this._endCallback as EventListener\n    );\n\n    element.addEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_DRAG,\n      this._dragCallback as EventListener\n    );\n  };\n\n  _deactivateDraw = (element: HTMLDivElement) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(\n      Events.MOUSE_UP,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_DRAG,\n      this._dragCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_MOVE,\n      this._dragCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_CLICK,\n      this._endCallback as EventListener\n    );\n\n    element.removeEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_DRAG,\n      this._dragCallback as EventListener\n    );\n  };\n\n  /**\n   * it is used to draw the length annotation in each\n   * request animation frame. It calculates the updated cached statistics if\n   * data is invalidated and cache it.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n    const { viewport } = enabledElement;\n    const { element } = viewport;\n\n    let annotations = getAnnotations(this.getToolName(), element);\n\n    // Todo: We don't need this anymore, filtering happens in triggerAnnotationRender\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    annotations = this.filterInteractableAnnotationsForElement(\n      element,\n      annotations\n    );\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    // Draw SVG\n    for (let i = 0; i < annotations.length; i++) {\n      const annotation = annotations[i] as ArrowAnnotation;\n      const { annotationUID, data } = annotation;\n      const { handles, text } = data;\n      const { points, activeHandleIndex } = handles;\n\n      styleSpecifier.annotationUID = annotationUID;\n\n      const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n      const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n      const color = this.getStyle('color', styleSpecifier, annotation);\n\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n\n      let activeHandleCanvasCoords;\n\n      if (\n        !isAnnotationLocked(annotation) &&\n        !this.editData &&\n        activeHandleIndex !== null\n      ) {\n        // Not locked or creating and hovering over handle, so render handle.\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n      }\n\n      if (activeHandleCanvasCoords) {\n        const handleGroupUID = '0';\n\n        drawHandlesSvg(\n          svgDrawingHelper,\n          annotationUID,\n          handleGroupUID,\n          canvasCoordinates,\n          {\n            color,\n            lineWidth,\n          }\n        );\n      }\n\n      const arrowUID = '1';\n      if (this.configuration.arrowFirst) {\n        drawArrowSvg(\n          svgDrawingHelper,\n          annotationUID,\n          arrowUID,\n          canvasCoordinates[1],\n          canvasCoordinates[0],\n          {\n            color,\n            width: lineWidth,\n            lineDash: lineDash,\n          }\n        );\n      } else {\n        drawArrowSvg(\n          svgDrawingHelper,\n          annotationUID,\n          arrowUID,\n          canvasCoordinates[0],\n          canvasCoordinates[1],\n          {\n            color,\n            width: lineWidth,\n            lineDash: lineDash,\n          }\n        );\n      }\n\n      renderStatus = true;\n\n      // If rendering engine has been destroyed while rendering\n      if (!viewport.getRenderingEngine()) {\n        console.warn('Rendering Engine has been destroyed');\n        return renderStatus;\n      }\n\n      if (!text) {\n        continue;\n      }\n\n      // Need to update to sync w/ annotation while unlinked/not moved\n      if (!data.handles.textBox.hasMoved) {\n        // linked to the point that doesn't have the arrowhead by default\n        const canvasTextBoxCoords = canvasCoordinates[1];\n\n        data.handles.textBox.worldPosition =\n          viewport.canvasToWorld(canvasTextBoxCoords);\n      }\n\n      const textBoxPosition = viewport.worldToCanvas(\n        data.handles.textBox.worldPosition\n      );\n\n      const textBoxUID = '1';\n      const boundingBox = drawLinkedTextBoxSvg(\n        svgDrawingHelper,\n        annotationUID,\n        textBoxUID,\n        [text],\n        textBoxPosition,\n        canvasCoordinates,\n        {},\n        this.getLinkedTextBoxStyle(styleSpecifier, annotation)\n      );\n\n      const { x: left, y: top, width, height } = boundingBox;\n\n      data.handles.textBox.worldBoundingBox = {\n        topLeft: viewport.canvasToWorld([left, top]),\n        topRight: viewport.canvasToWorld([left + width, top]),\n        bottomLeft: viewport.canvasToWorld([left, top + height]),\n        bottomRight: viewport.canvasToWorld([left + width, top + height]),\n      };\n    }\n\n    return renderStatus;\n  };\n\n  _isInsideVolume(index1, index2, dimensions) {\n    return (\n      csUtils.indexWithinDimensions(index1, dimensions) &&\n      csUtils.indexWithinDimensions(index2, dimensions)\n    );\n  }\n}\n\nfunction getTextCallback(doneChangingTextCallback) {\n  return doneChangingTextCallback(prompt('Enter your annotation:'));\n}\n\nfunction changeTextCallback(data, eventData, doneChangingTextCallback) {\n  return doneChangingTextCallback(prompt('Enter your annotation:'));\n}\n\nArrowAnnotateTool.toolName = 'ArrowAnnotate';\nexport default ArrowAnnotateTool;\n","import { Events } from '../../enums';\nimport {\n  getEnabledElement,\n  triggerEvent,\n  eventTarget,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { AnnotationTool } from '../base';\nimport throttle from '../../utilities/throttle';\nimport {\n  addAnnotation,\n  getAnnotations,\n  removeAnnotation,\n} from '../../stateManagement/annotation/annotationState';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport * as lineSegment from '../../utilities/math/line';\nimport angleBetweenLines from '../../utilities/math/angle/angleBetweenLines';\nimport roundNumber from '../../utilities/roundNumber';\n\nimport {\n  drawHandles as drawHandlesSvg,\n  drawLine as drawLineSvg,\n  drawLinkedTextBox as drawLinkedTextBoxSvg,\n} from '../../drawingSvg';\nimport { state } from '../../store';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport {\n  AnnotationCompletedEventDetail,\n  AnnotationModifiedEventDetail,\n} from '../../types/EventTypes';\n\nimport {\n  resetElementCursor,\n  hideElementCursor,\n} from '../../cursors/elementCursor';\n\nimport {\n  EventTypes,\n  ToolHandle,\n  TextBoxHandle,\n  PublicToolProps,\n  ToolProps,\n  InteractionTypes,\n  SVGDrawingHelper,\n} from '../../types';\nimport { AngleAnnotation } from '../../types/ToolSpecificAnnotationTypes';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\n\nclass AngleTool extends AnnotationTool {\n  static toolName;\n\n  public touchDragCallback: any;\n  public mouseDragCallback: any;\n  angleStartedNotYetCompleted: boolean;\n  _throttledCalculateCachedStats: any;\n  editData: {\n    annotation: any;\n    viewportIdsToRender: string[];\n    handleIndex?: number;\n    movingTextBox?: boolean;\n    newAnnotation?: boolean;\n    hasMoved?: boolean;\n  } | null;\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        shadow: true,\n        preventHandleOutsideImage: false,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n\n    this._throttledCalculateCachedStats = throttle(\n      this._calculateCachedStats,\n      100,\n      { trailing: true }\n    );\n  }\n\n  /**\n   * Based on the current position of the mouse and the current imageId to create\n   * a Length Annotation and stores it in the annotationManager\n   *\n   * @param evt -  EventTypes.InteractionEventType\n   * @returns The annotation object.\n   *\n   */\n  addNewAnnotation = (\n    evt: EventTypes.InteractionEventType\n  ): AngleAnnotation => {\n    if (this.angleStartedNotYetCompleted) {\n      return;\n    }\n\n    this.angleStartedNotYetCompleted = true;\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n\n    const worldPos = currentPoints.world;\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    hideElementCursor(element);\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    const referencedImageId = this.getReferencedImageId(\n      viewport,\n      worldPos,\n      viewPlaneNormal,\n      viewUp\n    );\n\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n    const annotation = {\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        toolName: this.getToolName(),\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId,\n      },\n      data: {\n        handles: {\n          points: [<Types.Point3>[...worldPos], <Types.Point3>[...worldPos]],\n          activeHandleIndex: null,\n          textBox: {\n            hasMoved: false,\n            worldPosition: <Types.Point3>[0, 0, 0],\n            worldBoundingBox: {\n              topLeft: <Types.Point3>[0, 0, 0],\n              topRight: <Types.Point3>[0, 0, 0],\n              bottomLeft: <Types.Point3>[0, 0, 0],\n              bottomRight: <Types.Point3>[0, 0, 0],\n            },\n          },\n        },\n        label: '',\n        cachedStats: {},\n      },\n    };\n\n    addAnnotation(annotation, element);\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex: 1,\n      movingTextBox: false,\n      newAnnotation: true,\n      hasMoved: false,\n    };\n    this._activateDraw(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  };\n\n  /**\n   * It returns if the canvas point is near the provided length annotation in the provided\n   * element or not. A proximity is passed to the function to determine the\n   * proximity of the point to the annotation in number of pixels.\n   *\n   * @param element - HTML Element\n   * @param annotation - Annotation\n   * @param canvasCoords - Canvas coordinates\n   * @param proximity - Proximity to tool to consider\n   * @returns Boolean, whether the canvas point is near tool\n   */\n  isPointNearTool = (\n    element: HTMLDivElement,\n    annotation: AngleAnnotation,\n    canvasCoords: Types.Point2,\n    proximity: number\n  ): boolean => {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const { data } = annotation;\n    const [point1, point2, point3] = data.handles.points;\n    const canvasPoint1 = viewport.worldToCanvas(point1);\n    const canvasPoint2 = viewport.worldToCanvas(point2);\n\n    const line1 = {\n      start: {\n        x: canvasPoint1[0],\n        y: canvasPoint1[1],\n      },\n      end: {\n        x: canvasPoint2[0],\n        y: canvasPoint2[1],\n      },\n    };\n\n    const distanceToPoint = lineSegment.distanceToPoint(\n      [line1.start.x, line1.start.y],\n      [line1.end.x, line1.end.y],\n      [canvasCoords[0], canvasCoords[1]]\n    );\n\n    if (distanceToPoint <= proximity) return true;\n    if (!point3) return false;\n\n    const canvasPoint3 = viewport.worldToCanvas(point3);\n\n    const line2 = {\n      start: {\n        x: canvasPoint2[0],\n        y: canvasPoint2[1],\n      },\n      end: {\n        x: canvasPoint3[0],\n        y: canvasPoint3[1],\n      },\n    };\n\n    const distanceToPoint2 = lineSegment.distanceToPoint(\n      [line2.start.x, line2.start.y],\n      [line2.end.x, line2.end.y],\n      [canvasCoords[0], canvasCoords[1]]\n    );\n\n    if (distanceToPoint2 <= proximity) {\n      return true;\n    }\n\n    return false;\n  };\n\n  toolSelectedCallback = (\n    evt: EventTypes.InteractionEventType,\n    annotation: AngleAnnotation\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    annotation.highlighted = true;\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      movingTextBox: false,\n    };\n\n    this._activateModify(element);\n\n    hideElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    evt.preventDefault();\n  };\n\n  handleSelectedCallback(\n    evt: EventTypes.InteractionEventType,\n    annotation: AngleAnnotation,\n    handle: ToolHandle\n  ): void {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const { data } = annotation;\n\n    annotation.highlighted = true;\n\n    let movingTextBox = false;\n    let handleIndex;\n\n    if ((handle as TextBoxHandle).worldPosition) {\n      movingTextBox = true;\n    } else {\n      handleIndex = data.handles.points.findIndex((p) => p === handle);\n    }\n\n    // Find viewports to render on drag.\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex,\n      movingTextBox,\n    };\n    this._activateModify(element);\n\n    hideElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    evt.preventDefault();\n  }\n\n  _endCallback = (evt: EventTypes.InteractionEventType): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, newAnnotation, hasMoved } =\n      this.editData;\n\n    const { data } = annotation;\n    if (newAnnotation && !hasMoved) {\n      // when user starts the drawing by click, and moving the mouse, instead\n      // of click and drag\n      return;\n    }\n\n    // If preventing new measurement means we are in the middle of an existing measurement\n    // we shouldn't deactivate modify or draw\n    if (this.angleStartedNotYetCompleted && data.handles.points.length === 2) {\n      // adds the last point to the measurement\n      this.editData.handleIndex = 2;\n      return;\n    }\n\n    this.angleStartedNotYetCompleted = false;\n    data.handles.activeHandleIndex = null;\n\n    this._deactivateModify(element);\n    this._deactivateDraw(element);\n    resetElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    if (\n      this.isHandleOutsideImage &&\n      this.configuration.preventHandleOutsideImage\n    ) {\n      removeAnnotation(annotation.annotationUID);\n    }\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    if (newAnnotation) {\n      const eventType = Events.ANNOTATION_COMPLETED;\n\n      const eventDetail: AnnotationCompletedEventDetail = {\n        annotation,\n      };\n\n      triggerEvent(eventTarget, eventType, eventDetail);\n    }\n\n    this.editData = null;\n    this.isDrawing = false;\n  };\n\n  _dragCallback = (evt: EventTypes.InteractionEventType): void => {\n    this.isDrawing = true;\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, handleIndex, movingTextBox } =\n      this.editData;\n    const { data } = annotation;\n\n    if (movingTextBox) {\n      // Drag mode - moving text box\n      const { deltaPoints } = eventDetail as EventTypes.MouseDragEventDetail;\n      const worldPosDelta = deltaPoints.world;\n\n      const { textBox } = data.handles;\n      const { worldPosition } = textBox;\n\n      worldPosition[0] += worldPosDelta[0];\n      worldPosition[1] += worldPosDelta[1];\n      worldPosition[2] += worldPosDelta[2];\n\n      textBox.hasMoved = true;\n    } else if (handleIndex === undefined) {\n      // Drag mode - moving handle\n      const { deltaPoints } = eventDetail as EventTypes.MouseDragEventDetail;\n      const worldPosDelta = deltaPoints.world;\n\n      const points = data.handles.points;\n\n      points.forEach((point) => {\n        point[0] += worldPosDelta[0];\n        point[1] += worldPosDelta[1];\n        point[2] += worldPosDelta[2];\n      });\n      annotation.invalidated = true;\n    } else {\n      // Move mode - after double click, and mouse move to draw\n      const { currentPoints } = eventDetail;\n      const worldPos = currentPoints.world;\n\n      data.handles.points[handleIndex] = [...worldPos];\n      annotation.invalidated = true;\n    }\n\n    this.editData.hasMoved = true;\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  };\n\n  cancel = (element: HTMLDivElement) => {\n    // If it is mid-draw or mid-modify\n    if (this.isDrawing) {\n      this.isDrawing = false;\n      this._deactivateDraw(element);\n      this._deactivateModify(element);\n      resetElementCursor(element);\n\n      const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n      const { data } = annotation;\n\n      annotation.highlighted = false;\n      data.handles.activeHandleIndex = null;\n\n      const enabledElement = getEnabledElement(element);\n      const { renderingEngine } = enabledElement;\n\n      triggerAnnotationRenderForViewportIds(\n        renderingEngine,\n        viewportIdsToRender\n      );\n\n      if (newAnnotation) {\n        const eventType = Events.ANNOTATION_COMPLETED;\n\n        const eventDetail: AnnotationCompletedEventDetail = {\n          annotation,\n        };\n\n        triggerEvent(eventTarget, eventType, eventDetail);\n      }\n\n      this.editData = null;\n      this.angleStartedNotYetCompleted = false;\n      return annotation.annotationUID;\n    }\n  };\n\n  _activateModify = (element: HTMLDivElement) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(\n      Events.MOUSE_UP,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_DRAG,\n      this._dragCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_CLICK,\n      this._endCallback as EventListener\n    );\n\n    element.addEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_DRAG,\n      this._dragCallback as EventListener\n    );\n  };\n\n  _deactivateModify = (element: HTMLDivElement) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(\n      Events.MOUSE_UP,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_DRAG,\n      this._dragCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_CLICK,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_DRAG,\n      this._dragCallback as EventListener\n    );\n  };\n\n  _activateDraw = (element: HTMLDivElement) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(\n      Events.MOUSE_UP,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_DRAG,\n      this._dragCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_MOVE,\n      this._dragCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_CLICK,\n      this._endCallback as EventListener\n    );\n\n    element.addEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_DRAG,\n      this._dragCallback as EventListener\n    );\n  };\n\n  _deactivateDraw = (element: HTMLDivElement) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(\n      Events.MOUSE_UP,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_DRAG,\n      this._dragCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_MOVE,\n      this._dragCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_CLICK,\n      this._endCallback as EventListener\n    );\n\n    element.removeEventListener(\n      Events.TOUCH_TAP,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_END,\n      this._endCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_DRAG,\n      this._dragCallback as EventListener\n    );\n  };\n\n  /**\n   * it is used to draw the length annotation in each\n   * request animation frame. It calculates the updated cached statistics if\n   * data is invalidated and cache it.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n\n    const { viewport } = enabledElement;\n    const { element } = viewport;\n\n    let annotations = getAnnotations(this.getToolName(), element);\n\n    // Todo: We don't need this anymore, filtering happens in triggerAnnotationRender\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    annotations = this.filterInteractableAnnotationsForElement(\n      element,\n      annotations\n    );\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    const targetId = this.getTargetId(viewport);\n    const renderingEngine = viewport.getRenderingEngine();\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    // Draw SVG\n    for (let i = 0; i < annotations.length; i++) {\n      const annotation = annotations[i] as AngleAnnotation;\n      const { annotationUID, data } = annotation;\n      const { points, activeHandleIndex } = data.handles;\n\n      styleSpecifier.annotationUID = annotationUID;\n\n      const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n      const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n      const color = this.getStyle('color', styleSpecifier, annotation);\n\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n\n      // WE HAVE TO CACHE STATS BEFORE FETCHING TEXT\n      if (!data.cachedStats[targetId]) {\n        data.cachedStats[targetId] = {\n          angle: null,\n        };\n\n        this._calculateCachedStats(annotation, renderingEngine, enabledElement);\n      } else if (annotation.invalidated) {\n        this._throttledCalculateCachedStats(\n          annotation,\n          renderingEngine,\n          enabledElement\n        );\n      }\n\n      let activeHandleCanvasCoords;\n\n      if (\n        !isAnnotationLocked(annotation) &&\n        !this.editData &&\n        activeHandleIndex !== null\n      ) {\n        // Not locked or creating and hovering over handle, so render handle.\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n      }\n\n      // If rendering engine has been destroyed while rendering\n      if (!viewport.getRenderingEngine()) {\n        console.warn('Rendering Engine has been destroyed');\n        return renderStatus;\n      }\n\n      if (activeHandleCanvasCoords) {\n        const handleGroupUID = '0';\n\n        drawHandlesSvg(\n          svgDrawingHelper,\n          annotationUID,\n          handleGroupUID,\n          canvasCoordinates,\n          {\n            color,\n            lineDash,\n            lineWidth,\n          }\n        );\n      }\n\n      let lineUID = '1';\n      drawLineSvg(\n        svgDrawingHelper,\n        annotationUID,\n        lineUID,\n        canvasCoordinates[0],\n        canvasCoordinates[1],\n        {\n          color,\n          width: lineWidth,\n          lineDash,\n        }\n      );\n\n      renderStatus = true;\n\n      // Don't add textBox until annotation has 3 anchor points (actually 4 because of the center point)\n      if (canvasCoordinates.length !== 3) {\n        return renderStatus;\n      }\n\n      lineUID = '2';\n\n      drawLineSvg(\n        svgDrawingHelper,\n        annotationUID,\n        lineUID,\n        canvasCoordinates[1],\n        canvasCoordinates[2],\n        {\n          color,\n          width: lineWidth,\n          lineDash,\n        }\n      );\n\n      if (!data.cachedStats[targetId]?.angle) {\n        continue;\n      }\n\n      const textLines = this._getTextLines(data, targetId);\n\n      if (!data.handles.textBox.hasMoved) {\n        // linked to the vertex by default\n        const canvasTextBoxCoords = canvasCoordinates[1];\n\n        data.handles.textBox.worldPosition =\n          viewport.canvasToWorld(canvasTextBoxCoords);\n      }\n\n      const textBoxPosition = viewport.worldToCanvas(\n        data.handles.textBox.worldPosition\n      );\n\n      const textBoxUID = '1';\n      const boundingBox = drawLinkedTextBoxSvg(\n        svgDrawingHelper,\n        annotationUID,\n        textBoxUID,\n        textLines,\n        textBoxPosition,\n        canvasCoordinates,\n        {},\n        this.getLinkedTextBoxStyle(styleSpecifier, annotation)\n      );\n\n      const { x: left, y: top, width, height } = boundingBox;\n\n      data.handles.textBox.worldBoundingBox = {\n        topLeft: viewport.canvasToWorld([left, top]),\n        topRight: viewport.canvasToWorld([left + width, top]),\n        bottomLeft: viewport.canvasToWorld([left, top + height]),\n        bottomRight: viewport.canvasToWorld([left + width, top + height]),\n      };\n    }\n\n    return renderStatus;\n  };\n\n  // text line for the current active angle annotation\n  _getTextLines(data, targetId) {\n    const cachedVolumeStats = data.cachedStats[targetId];\n    const { angle } = cachedVolumeStats;\n\n    if (angle === undefined) {\n      return;\n    }\n\n    const textLines = [`${roundNumber(angle)} ${String.fromCharCode(176)}`];\n\n    return textLines;\n  }\n\n  _calculateCachedStats(annotation, renderingEngine, enabledElement) {\n    const data = annotation.data;\n    const { viewportId, renderingEngineId } = enabledElement;\n\n    // Until we have all three anchors bail out\n    if (data.handles.points.length !== 3) {\n      return;\n    }\n\n    const worldPos1 = data.handles.points[0];\n    const worldPos2 = data.handles.points[1];\n    const worldPos3 = data.handles.points[2];\n\n    const { cachedStats } = data;\n    const targetIds = Object.keys(cachedStats);\n\n    for (let i = 0; i < targetIds.length; i++) {\n      const targetId = targetIds[i];\n      const angle = angleBetweenLines(\n        [worldPos1, worldPos2],\n        [worldPos2, worldPos3]\n      );\n\n      cachedStats[targetId] = {\n        angle,\n      };\n    }\n\n    annotation.invalidated = false;\n\n    // Dispatching annotation modified\n    const eventType = Events.ANNOTATION_MODIFIED;\n\n    const eventDetail: AnnotationModifiedEventDetail = {\n      annotation,\n      viewportId,\n      renderingEngineId,\n    };\n    triggerEvent(eventTarget, eventType, eventDetail);\n\n    return cachedStats;\n  }\n}\n\nAngleTool.toolName = 'Angle';\nexport default AngleTool;\n","import { Types } from '@cornerstonejs/core';\n\n/**\n * Return the midpoint (think average) of all the provided points.\n */\nconst midPoint = (\n  ...args: (Types.Point2 | Types.Point3)[]\n): Types.Point2 | Types.Point3 => {\n  const ret =\n    args[0].length === 2 ? <Types.Point2>[0, 0] : <Types.Point3>[0, 0, 0];\n  const len = args.length;\n  for (const arg of args) {\n    ret[0] += arg[0] / len;\n    ret[1] += arg[1] / len;\n    if (ret.length === 3) ret[2] += arg[2] / len;\n  }\n  return ret;\n};\n\nconst midPoint2 = midPoint as (...args: Types.Point2[]) => Types.Point2;\n\nexport default midPoint;\n\nexport { midPoint2 };\n","import { vec3 } from 'gl-matrix';\nimport { Events } from '../../enums';\nimport {\n  getEnabledElement,\n  triggerEvent,\n  eventTarget,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { AnnotationTool } from '../base';\nimport throttle from '../../utilities/throttle';\nimport {\n  addAnnotation,\n  getAnnotations,\n  removeAnnotation,\n} from '../../stateManagement/annotation/annotationState';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport * as lineSegment from '../../utilities/math/line';\nimport angleBetweenLines from '../../utilities/math/angle/angleBetweenLines';\nimport { midPoint2 } from '../../utilities/math/midPoint';\n\nimport {\n  drawHandles as drawHandlesSvg,\n  drawLine as drawLineSvg,\n  drawLinkedTextBox as drawLinkedTextBoxSvg,\n} from '../../drawingSvg';\nimport { state } from '../../store';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport {\n  AnnotationCompletedEventDetail,\n  AnnotationModifiedEventDetail,\n} from '../../types/EventTypes';\n\nimport {\n  resetElementCursor,\n  hideElementCursor,\n} from '../../cursors/elementCursor';\n\nimport {\n  EventTypes,\n  ToolHandle,\n  TextBoxHandle,\n  PublicToolProps,\n  ToolProps,\n  InteractionTypes,\n  SVGDrawingHelper,\n} from '../../types';\nimport { AngleAnnotation } from '../../types/ToolSpecificAnnotationTypes';\nimport { StyleSpecifier } from '../../types/AnnotationStyle';\n\nclass CobbAngleTool extends AnnotationTool {\n  static toolName;\n\n  public touchDragCallback: any;\n  public mouseDragCallback: any;\n  angleStartedNotYetCompleted: boolean;\n  _throttledCalculateCachedStats: any;\n  editData: {\n    annotation: any;\n    viewportIdsToRender: string[];\n    handleIndex?: number;\n    movingTextBox?: boolean;\n    newAnnotation?: boolean;\n    hasMoved?: boolean;\n  } | null;\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        shadow: true,\n        preventHandleOutsideImage: false,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n\n    this._throttledCalculateCachedStats = throttle(\n      this._calculateCachedStats,\n      100,\n      { trailing: true }\n    );\n  }\n\n  /**\n   * Based on the current position of the mouse and the current imageId to create\n   * a Length Annotation and stores it in the annotationManager\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  addNewAnnotation = (\n    evt: EventTypes.MouseDownActivateEventType\n  ): AngleAnnotation => {\n    if (this.angleStartedNotYetCompleted) {\n      return;\n    }\n\n    this.angleStartedNotYetCompleted = true;\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    hideElementCursor(element);\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n\n    const referencedImageId = this.getReferencedImageId(\n      viewport,\n      worldPos,\n      viewPlaneNormal,\n      viewUp\n    );\n\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n    const annotation = {\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        toolName: this.getToolName(),\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId,\n      },\n      data: {\n        handles: {\n          points: [<Types.Point3>[...worldPos], <Types.Point3>[...worldPos]],\n          activeHandleIndex: null,\n          textBox: {\n            hasMoved: false,\n            worldPosition: <Types.Point3>[0, 0, 0],\n            worldBoundingBox: {\n              topLeft: <Types.Point3>[0, 0, 0],\n              topRight: <Types.Point3>[0, 0, 0],\n              bottomLeft: <Types.Point3>[0, 0, 0],\n              bottomRight: <Types.Point3>[0, 0, 0],\n            },\n          },\n        },\n        label: '',\n        cachedStats: {},\n      },\n    };\n\n    addAnnotation(annotation, element);\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex: 1,\n      movingTextBox: false,\n      newAnnotation: true,\n      hasMoved: false,\n    };\n    this._activateDraw(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return annotation;\n  };\n\n  /**\n   * It returns if the canvas point is near the provided length annotation in the provided\n   * element or not. A proximity is passed to the function to determine the\n   * proximity of the point to the annotation in number of pixels.\n   *\n   * @param element - HTML Element\n   * @param annotation - Annotation\n   * @param canvasCoords - Canvas coordinates\n   * @param proximity - Proximity to tool to consider\n   * @returns Boolean, whether the canvas point is near tool\n   */\n  isPointNearTool = (\n    element: HTMLDivElement,\n    annotation: AngleAnnotation,\n    canvasCoords: Types.Point2,\n    proximity: number\n  ): boolean => {\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n    const { data } = annotation;\n    const [point1, point2, point3, point4] = data.handles.points;\n    const canvasPoint1 = viewport.worldToCanvas(point1);\n    const canvasPoint2 = viewport.worldToCanvas(point2);\n    const canvasPoint3 = viewport.worldToCanvas(point3);\n    const canvasPoint4 = viewport.worldToCanvas(point4);\n\n    const line1 = {\n      start: {\n        x: canvasPoint1[0],\n        y: canvasPoint1[1],\n      },\n      end: {\n        x: canvasPoint2[0],\n        y: canvasPoint2[1],\n      },\n    };\n\n    const line2 = {\n      start: {\n        x: canvasPoint3[0],\n        y: canvasPoint3[1],\n      },\n      end: {\n        x: canvasPoint4[0],\n        y: canvasPoint4[1],\n      },\n    };\n\n    const distanceToPoint = lineSegment.distanceToPoint(\n      [line1.start.x, line1.start.y],\n      [line1.end.x, line1.end.y],\n      [canvasCoords[0], canvasCoords[1]]\n    );\n\n    const distanceToPoint2 = lineSegment.distanceToPoint(\n      [line2.start.x, line2.start.y],\n      [line2.end.x, line2.end.y],\n      [canvasCoords[0], canvasCoords[1]]\n    );\n\n    if (distanceToPoint <= proximity || distanceToPoint2 <= proximity) {\n      return true;\n    }\n\n    return false;\n  };\n\n  toolSelectedCallback = (\n    evt: EventTypes.MouseDownEventType,\n    annotation: AngleAnnotation,\n    interactionType: InteractionTypes\n  ): void => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    annotation.highlighted = true;\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      movingTextBox: false,\n    };\n\n    this._activateModify(element);\n\n    hideElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    evt.preventDefault();\n  };\n\n  handleSelectedCallback(\n    evt: EventTypes.MouseDownEventType,\n    annotation: AngleAnnotation,\n    handle: ToolHandle,\n    interactionType = 'mouse'\n  ): void {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const { data } = annotation;\n\n    annotation.highlighted = true;\n\n    let movingTextBox = false;\n    let handleIndex;\n\n    if ((handle as TextBoxHandle).worldPosition) {\n      movingTextBox = true;\n    } else {\n      handleIndex = data.handles.points.findIndex((p) => p === handle);\n    }\n\n    // Find viewports to render on drag.\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      handleIndex,\n      movingTextBox,\n    };\n    this._activateModify(element);\n\n    hideElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    evt.preventDefault();\n  }\n\n  _mouseUpCallback = (\n    evt: EventTypes.MouseUpEventType | EventTypes.MouseClickEventType\n  ) => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, newAnnotation, hasMoved } =\n      this.editData;\n\n    const { data } = annotation;\n    if (newAnnotation && !hasMoved) {\n      // when user starts the drawing by click, and moving the mouse, instead\n      // of click and drag\n      return;\n    }\n\n    // If preventing new measurement means we are in the middle of an existing measurement\n    // we shouldn't deactivate modify or draw\n    if (this.angleStartedNotYetCompleted && data.handles.points.length < 4) {\n      resetElementCursor(element);\n\n      // adds the first point of the second line\n      this.editData.handleIndex = data.handles.points.length;\n      return;\n    }\n\n    this.angleStartedNotYetCompleted = false;\n    data.handles.activeHandleIndex = null;\n\n    this._deactivateModify(element);\n    this._deactivateDraw(element);\n    resetElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    if (\n      this.isHandleOutsideImage &&\n      this.configuration.preventHandleOutsideImage\n    ) {\n      removeAnnotation(annotation.annotationUID);\n    }\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    if (newAnnotation) {\n      const eventType = Events.ANNOTATION_COMPLETED;\n\n      const eventDetail: AnnotationCompletedEventDetail = {\n        annotation,\n      };\n\n      triggerEvent(eventTarget, eventType, eventDetail);\n    }\n\n    this.editData = null;\n    this.isDrawing = false;\n  };\n\n  /**\n   * Handles the mouse down for all points that follow the very first mouse down.\n   * The very first mouse down is handled by addAnnotation.\n   * This method ensures that the state of the tool is correct for the drawing of the second line segment.\n   * In particular it ensures that the second segment can be created via a mouse down and drag.\n   */\n  _mouseDownCallback = (\n    evt: EventTypes.MouseUpEventType | EventTypes.MouseClickEventType\n  ) => {\n    const { annotation, handleIndex } = this.editData;\n    const eventDetail = evt.detail;\n    const { element, currentPoints } = eventDetail;\n    const worldPos = currentPoints.world;\n    const { data } = annotation;\n\n    if (handleIndex === 1) {\n      // This is the mouse down for the second point of the first segment.\n      // The mouse up takes care of adding the first point of the second segment.\n      data.handles.points[1] = worldPos;\n      this.editData.hasMoved =\n        data.handles.points[1][0] !== data.handles.points[0][0] ||\n        data.handles.points[1][1] !== data.handles.points[0][0];\n      return;\n    }\n\n    if (handleIndex === 3) {\n      // This is the mouse down for the second point of the second segment (i.e. the last point)\n      data.handles.points[3] = worldPos;\n      this.editData.hasMoved =\n        data.handles.points[3][0] !== data.handles.points[2][0] ||\n        data.handles.points[3][1] !== data.handles.points[2][0];\n\n      this.angleStartedNotYetCompleted = false;\n      return;\n    }\n\n    // This is the first mouse down of the first point of the second line segment.\n    // It is as if we have not moved yet because Cobb Angle has two, disjoint sections, each with its own move.\n    this.editData.hasMoved = false;\n    hideElementCursor(element);\n\n    // Add the last segment points for the subsequent drag/mouse move.\n    data.handles.points[2] = data.handles.points[3] = worldPos;\n    this.editData.handleIndex = data.handles.points.length - 1;\n  };\n\n  _mouseDragCallback = (\n    evt: EventTypes.MouseDragEventType | EventTypes.MouseMoveEventType\n  ) => {\n    this.isDrawing = true;\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, handleIndex, movingTextBox } =\n      this.editData;\n    const { data } = annotation;\n\n    if (movingTextBox) {\n      // Drag mode - moving text box\n      const { deltaPoints } = eventDetail as EventTypes.MouseDragEventDetail;\n      const worldPosDelta = deltaPoints.world;\n\n      const { textBox } = data.handles;\n      const { worldPosition } = textBox;\n\n      worldPosition[0] += worldPosDelta[0];\n      worldPosition[1] += worldPosDelta[1];\n      worldPosition[2] += worldPosDelta[2];\n\n      textBox.hasMoved = true;\n    } else if (handleIndex === undefined) {\n      // Drag mode - moving handle\n      const { deltaPoints } = eventDetail as EventTypes.MouseDragEventDetail;\n      const worldPosDelta = deltaPoints.world;\n\n      const points = data.handles.points;\n\n      points.forEach((point) => {\n        point[0] += worldPosDelta[0];\n        point[1] += worldPosDelta[1];\n        point[2] += worldPosDelta[2];\n      });\n      annotation.invalidated = true;\n    } else {\n      // Move mode - after double click, and mouse move to draw\n      const { currentPoints } = eventDetail;\n      const worldPos = currentPoints.world;\n\n      data.handles.points[handleIndex] = [...worldPos];\n      annotation.invalidated = true;\n    }\n\n    this.editData.hasMoved = true;\n\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  };\n\n  cancel = (element: HTMLDivElement) => {\n    // If it is mid-draw or mid-modify\n    if (this.isDrawing) {\n      this.isDrawing = false;\n      this._deactivateDraw(element);\n      this._deactivateModify(element);\n      resetElementCursor(element);\n\n      const { annotation, viewportIdsToRender, newAnnotation } = this.editData;\n      const { data } = annotation;\n\n      annotation.highlighted = false;\n      data.handles.activeHandleIndex = null;\n\n      const enabledElement = getEnabledElement(element);\n      const { renderingEngine } = enabledElement;\n\n      triggerAnnotationRenderForViewportIds(\n        renderingEngine,\n        viewportIdsToRender\n      );\n\n      if (newAnnotation) {\n        const eventType = Events.ANNOTATION_COMPLETED;\n\n        const eventDetail: AnnotationCompletedEventDetail = {\n          annotation,\n        };\n\n        triggerEvent(eventTarget, eventType, eventDetail);\n      }\n\n      this.editData = null;\n      this.angleStartedNotYetCompleted = false;\n      return annotation.annotationUID;\n    }\n  };\n\n  _activateModify = (element: HTMLDivElement) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(\n      Events.MOUSE_UP,\n      this._mouseUpCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_DRAG,\n      this._mouseDragCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_CLICK,\n      this._mouseUpCallback as EventListener\n    );\n\n    // element.addEventListener(Events.TOUCH_END, this._mouseUpCallback)\n    // element.addEventListener(Events.TOUCH_DRAG, this._mouseDragCallback)\n  };\n\n  _deactivateModify = (element: HTMLDivElement) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(\n      Events.MOUSE_UP,\n      this._mouseUpCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_DRAG,\n      this._mouseDragCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_CLICK,\n      this._mouseUpCallback as EventListener\n    );\n\n    // element.removeEventListener(Events.TOUCH_END, this._mouseUpCallback)\n    // element.removeEventListener(Events.TOUCH_DRAG, this._mouseDragCallback)\n  };\n\n  _activateDraw = (element: HTMLDivElement) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(\n      Events.MOUSE_UP,\n      this._mouseUpCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_DRAG,\n      this._mouseDragCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_MOVE,\n      this._mouseDragCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_CLICK,\n      this._mouseUpCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_DOWN,\n      this._mouseDownCallback as EventListener\n    );\n\n    // element.addEventListener(Events.TOUCH_END, this._mouseUpCallback)\n    // element.addEventListener(Events.TOUCH_DRAG, this._mouseDragCallback)\n  };\n\n  _deactivateDraw = (element: HTMLDivElement) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(\n      Events.MOUSE_UP,\n      this._mouseUpCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_DRAG,\n      this._mouseDragCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_MOVE,\n      this._mouseDragCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_CLICK,\n      this._mouseUpCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_DOWN,\n      this._mouseDownCallback as EventListener\n    );\n\n    // element.removeEventListener(Events.TOUCH_END, this._mouseUpCallback)\n    // element.removeEventListener(Events.TOUCH_DRAG, this._mouseDragCallback)\n  };\n\n  /**\n   * it is used to draw the length annotation in each\n   * request animation frame. It calculates the updated cached statistics if\n   * data is invalidated and cache it.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n\n    const { viewport } = enabledElement;\n    const { element } = viewport;\n\n    let annotations = getAnnotations(this.getToolName(), element);\n\n    // Todo: We don't need this anymore, filtering happens in triggerAnnotationRender\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    annotations = this.filterInteractableAnnotationsForElement(\n      element,\n      annotations\n    );\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    const targetId = this.getTargetId(viewport);\n    const renderingEngine = viewport.getRenderingEngine();\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    // Draw SVG\n    for (let i = 0; i < annotations.length; i++) {\n      const annotation = annotations[i] as AngleAnnotation;\n      const { annotationUID, data } = annotation;\n      const { points, activeHandleIndex } = data.handles;\n\n      styleSpecifier.annotationUID = annotationUID;\n\n      const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n      const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n      const color = this.getStyle('color', styleSpecifier, annotation);\n\n      const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n\n      // WE HAVE TO CACHE STATS BEFORE FETCHING TEXT\n      if (!data.cachedStats[targetId]) {\n        data.cachedStats[targetId] = {\n          angle: null,\n        };\n\n        this._calculateCachedStats(annotation, renderingEngine, enabledElement);\n      } else if (annotation.invalidated) {\n        this._throttledCalculateCachedStats(\n          annotation,\n          renderingEngine,\n          enabledElement\n        );\n      }\n\n      let activeHandleCanvasCoords;\n\n      if (\n        !isAnnotationLocked(annotation) &&\n        !this.editData &&\n        activeHandleIndex !== null\n      ) {\n        // Not locked or creating and hovering over handle, so render handle.\n        activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n      }\n\n      // If rendering engine has been destroyed while rendering\n      if (!viewport.getRenderingEngine()) {\n        console.warn('Rendering Engine has been destroyed');\n        return renderStatus;\n      }\n\n      if (activeHandleCanvasCoords) {\n        const handleGroupUID = '0';\n\n        drawHandlesSvg(\n          svgDrawingHelper,\n          annotationUID,\n          handleGroupUID,\n          canvasCoordinates,\n          {\n            color,\n            lineDash,\n            lineWidth,\n          }\n        );\n      }\n\n      let lineUID = '1';\n      drawLineSvg(\n        svgDrawingHelper,\n        annotationUID,\n        lineUID,\n        canvasCoordinates[0],\n        canvasCoordinates[1],\n        {\n          color,\n          width: lineWidth,\n          lineDash,\n        }\n      );\n\n      renderStatus = true;\n\n      // Don't add textBox until annotation has 4 anchor points\n      if (canvasCoordinates.length < 4) {\n        return renderStatus;\n      }\n\n      lineUID = '2';\n\n      drawLineSvg(\n        svgDrawingHelper,\n        annotationUID,\n        lineUID,\n        canvasCoordinates[2],\n        canvasCoordinates[3],\n        {\n          color,\n          width: lineWidth,\n          lineDash,\n        }\n      );\n\n      lineUID = '3';\n      const mid1 = midPoint2(canvasCoordinates[0], canvasCoordinates[1]);\n      const mid2 = midPoint2(canvasCoordinates[2], canvasCoordinates[3]);\n      drawLineSvg(svgDrawingHelper, annotationUID, lineUID, mid1, mid2, {\n        color,\n        lineWidth: '1',\n        lineDash: '1,4',\n      });\n\n      if (!data.cachedStats[targetId]?.angle) {\n        continue;\n      }\n\n      const textLines = this._getTextLines(data, targetId);\n\n      if (!data.handles.textBox.hasMoved) {\n        const canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCoordinates);\n\n        data.handles.textBox.worldPosition =\n          viewport.canvasToWorld(canvasTextBoxCoords);\n      }\n\n      const textBoxPosition = viewport.worldToCanvas(\n        data.handles.textBox.worldPosition\n      );\n\n      const textBoxUID = '1';\n      const boundingBox = drawLinkedTextBoxSvg(\n        svgDrawingHelper,\n        annotationUID,\n        textBoxUID,\n        textLines,\n        textBoxPosition,\n        canvasCoordinates,\n        {},\n        this.getLinkedTextBoxStyle(styleSpecifier, annotation)\n      );\n\n      const { x: left, y: top, width, height } = boundingBox;\n\n      data.handles.textBox.worldBoundingBox = {\n        topLeft: viewport.canvasToWorld([left, top]),\n        topRight: viewport.canvasToWorld([left + width, top]),\n        bottomLeft: viewport.canvasToWorld([left, top + height]),\n        bottomRight: viewport.canvasToWorld([left + width, top + height]),\n      };\n    }\n\n    return renderStatus;\n  };\n\n  // text line for the current active angle annotation\n  _getTextLines(data, targetId) {\n    const cachedVolumeStats = data.cachedStats[targetId];\n    const { angle } = cachedVolumeStats;\n\n    if (angle === undefined) {\n      return;\n    }\n\n    const textLines = [`${angle.toFixed(2)} ${String.fromCharCode(176)}`];\n\n    return textLines;\n  }\n\n  _calculateCachedStats(annotation, renderingEngine, enabledElement) {\n    const data = annotation.data;\n    const { viewportId, renderingEngineId } = enabledElement;\n\n    // Until we have all four anchors bail out\n    if (data.handles.points.length !== 4) {\n      return;\n    }\n\n    const seg1: [Types.Point3, Types.Point3] = [null, null];\n    const seg2: [Types.Point3, Types.Point3] = [null, null];\n    let minDist = Number.MAX_VALUE;\n\n    // Order the endpoints of each line segment such that seg1[1] and seg2[0]\n    // are the closest (Euclidean distance-wise) to each other. Thus\n    // the angle formed between the vectors seg1[1]->seg1[0] and seg2[0]->seg[1]\n    // is calculated.\n    // The assumption here is that the Cobb angle line segments are drawn\n    // such that the segments intersect nearest the segment endpoints\n    // that are closest AND those closest endpoints are the tails of the\n    // vectors used to calculate the angle between the vectors/line segments.\n    for (let i = 0; i < 2; i += 1) {\n      for (let j = 2; j < 4; j += 1) {\n        const dist = vec3.distance(\n          data.handles.points[i],\n          data.handles.points[j]\n        );\n        if (dist < minDist) {\n          minDist = dist;\n          seg1[1] = data.handles.points[i];\n          seg1[0] = data.handles.points[(i + 1) % 2];\n          seg2[0] = data.handles.points[j];\n          seg2[1] = data.handles.points[2 + ((j - 1) % 2)];\n        }\n      }\n    }\n\n    const { cachedStats } = data;\n    const targetIds = Object.keys(cachedStats);\n\n    for (let i = 0; i < targetIds.length; i++) {\n      const targetId = targetIds[i];\n      const angle = angleBetweenLines(seg1, seg2);\n\n      cachedStats[targetId] = {\n        angle,\n      };\n    }\n\n    annotation.invalidated = false;\n\n    // Dispatching annotation modified\n    const eventType = Events.ANNOTATION_MODIFIED;\n\n    const eventDetail: AnnotationModifiedEventDetail = {\n      annotation,\n      viewportId,\n      renderingEngineId,\n    };\n    triggerEvent(eventTarget, eventType, eventDetail);\n\n    return cachedStats;\n  }\n}\n\nCobbAngleTool.toolName = 'CobbAngle';\nexport default CobbAngleTool;\n","import { BaseTool } from './base';\nimport { Events } from '../enums';\n\nimport { getEnabledElement, StackViewport } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport { EventTypes, PublicToolProps, ToolProps } from '../types';\nimport { getViewportIdsWithToolToRender } from '../utilities/viewportFilters';\nimport triggerAnnotationRenderForViewportIds from '../utilities/triggerAnnotationRenderForViewportIds';\nimport { state } from '../store';\nimport { Enums } from '@cornerstonejs/core';\n\nimport {\n  hideElementCursor,\n  resetElementCursor,\n} from '../cursors/elementCursor';\nimport { IPoints } from '../types';\n\nconst MAGNIFY_VIEWPORT_ID = 'magnify-viewport';\n\nclass MagnifyTool extends BaseTool {\n  static toolName;\n  _bounds: any;\n  editData: {\n    referencedImageId: string;\n    viewportIdsToRender: string[];\n    enabledElement: Types.IEnabledElement;\n    renderingEngine: Types.IRenderingEngine;\n    currentPoints: IPoints;\n  } | null;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        magnifySize: 10, // parallel scale , higher more zoom\n        magnifyWidth: 250, //px\n        magnifyHeight: 250, //px\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n  }\n\n  _getReferencedImageId(\n    viewport: Types.IStackViewport | Types.IVolumeViewport\n  ): string {\n    const targetId = this.getTargetId(viewport);\n\n    let referencedImageId;\n\n    if (viewport instanceof StackViewport) {\n      referencedImageId = targetId.split('imageId:')[1];\n    }\n\n    return referencedImageId;\n  }\n\n  preMouseDownCallback = (evt: EventTypes.InteractionEventType) => {\n    const eventDetail = evt.detail;\n    const { element, currentPoints } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    if (!(viewport instanceof StackViewport)) {\n      throw new Error('MagnifyTool only works on StackViewports');\n    }\n\n    const referencedImageId = this._getReferencedImageId(viewport);\n\n    if (!referencedImageId) {\n      throw new Error(\n        'MagnifyTool: No referenced image id found, reconstructed planes not supported yet'\n      );\n    }\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      referencedImageId,\n      viewportIdsToRender,\n      enabledElement,\n      renderingEngine,\n      currentPoints,\n    };\n\n    this._createMagnificationViewport();\n    this._activateDraw(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return true;\n  };\n\n  preTouchStartCallback = (evt: EventTypes.InteractionEventType) => {\n    this.preMouseDownCallback(evt);\n  };\n\n  _createMagnificationViewport = () => {\n    const {\n      enabledElement,\n      referencedImageId,\n      viewportIdsToRender,\n      renderingEngine,\n      currentPoints,\n    } = this.editData;\n    const { viewport } = enabledElement;\n    const { element } = viewport;\n    const { voiRange } = viewport.getProperties();\n\n    const { canvas: canvasPos, world: worldPos } = currentPoints;\n\n    let magnifyToolElement: HTMLDivElement;\n\n    magnifyToolElement = element.querySelector('.magnifyTool');\n    if (magnifyToolElement === null) {\n      const magnifyElement = document.createElement('div');\n\n      magnifyElement.classList.add('magnifyTool');\n\n      magnifyElement.style.display = 'block';\n      magnifyElement.style.width = `${this.configuration.magnifyWidth}px`;\n      magnifyElement.style.height = `${this.configuration.magnifyHeight}px`;\n      magnifyElement.style.position = 'absolute';\n\n      magnifyToolElement = magnifyElement;\n\n      const viewportElement = element.querySelector('.viewport-element');\n      viewportElement.appendChild(magnifyElement);\n\n      const viewportInput = {\n        viewportId: MAGNIFY_VIEWPORT_ID,\n        type: Enums.ViewportType.STACK,\n        element: magnifyToolElement as HTMLDivElement,\n      };\n\n      renderingEngine.enableElement(viewportInput);\n    }\n\n    // Todo: use CSS transform instead of setting top and left for better performance\n    magnifyToolElement.style.top = `${\n      canvasPos[1] - this.configuration.magnifyHeight / 2\n    }px`;\n    magnifyToolElement.style.left = `${\n      canvasPos[0] - this.configuration.magnifyWidth / 2\n    }px`;\n\n    const magnifyViewport = renderingEngine.getViewport(\n      MAGNIFY_VIEWPORT_ID\n    ) as Types.IStackViewport;\n\n    magnifyViewport.setStack([referencedImageId]).then(() => {\n      // match the original viewport voi range\n      magnifyViewport.setProperties({ voiRange });\n\n      // Use the original viewport for the base for parallelScale\n      const { parallelScale } = viewport.getCamera();\n\n      const { focalPoint, position, viewPlaneNormal } =\n        magnifyViewport.getCamera();\n\n      const distance = Math.sqrt(\n        Math.pow(focalPoint[0] - position[0], 2) +\n          Math.pow(focalPoint[1] - position[1], 2) +\n          Math.pow(focalPoint[2] - position[2], 2)\n      );\n\n      const updatedFocalPoint = <Types.Point3>[\n        worldPos[0],\n        worldPos[1],\n        worldPos[2],\n      ];\n\n      const updatedPosition = <Types.Point3>[\n        updatedFocalPoint[0] + distance * viewPlaneNormal[0],\n        updatedFocalPoint[1] + distance * viewPlaneNormal[1],\n        updatedFocalPoint[2] + distance * viewPlaneNormal[2],\n      ];\n\n      magnifyViewport.setCamera({\n        parallelScale: parallelScale * (1 / this.configuration.magnifySize),\n        focalPoint: updatedFocalPoint,\n        position: updatedPosition,\n      });\n      magnifyViewport.render();\n    });\n\n    magnifyToolElement.style.display = 'block';\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  };\n\n  _dragCallback = (evt: EventTypes.InteractionEventType) => {\n    const eventDetail = evt.detail;\n\n    const { deltaPoints, element, currentPoints } = eventDetail;\n    const deltaPointsWorld = deltaPoints.world;\n    const canvasPos = currentPoints.canvas;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    const magnifyViewport = renderingEngine.getViewport(MAGNIFY_VIEWPORT_ID);\n\n    const magnifyElement = element.querySelector(\n      '.magnifyTool'\n    ) as HTMLDivElement;\n\n    if (!magnifyElement) {\n      return;\n    }\n\n    magnifyElement.style.top = `${\n      canvasPos[1] - this.configuration.magnifyHeight / 2\n    }px`;\n    magnifyElement.style.left = `${\n      canvasPos[0] - this.configuration.magnifyWidth / 2\n    }px`;\n\n    const { focalPoint, position } = magnifyViewport.getCamera();\n\n    const updatedPosition = <Types.Point3>[\n      position[0] + deltaPointsWorld[0],\n      position[1] + deltaPointsWorld[1],\n      position[2] + deltaPointsWorld[2],\n    ];\n\n    const updatedFocalPoint = <Types.Point3>[\n      focalPoint[0] + deltaPointsWorld[0],\n      focalPoint[1] + deltaPointsWorld[1],\n      focalPoint[2] + deltaPointsWorld[2],\n    ];\n\n    magnifyViewport.setCamera({\n      focalPoint: updatedFocalPoint,\n      position: updatedPosition,\n    });\n\n    magnifyViewport.render();\n  };\n\n  _dragEndCallback = (evt: EventTypes.InteractionEventType) => {\n    const { element } = evt.detail;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine } = enabledElement;\n\n    renderingEngine.disableElement(MAGNIFY_VIEWPORT_ID);\n\n    const viewportElement = element.querySelector('.viewport-element');\n\n    const magnifyToolElement = viewportElement.querySelector(\n      '.magnifyTool'\n    ) as HTMLDivElement;\n\n    viewportElement.removeChild(magnifyToolElement);\n\n    this._deactivateDraw(element);\n    resetElementCursor(element);\n  };\n\n  _activateDraw = (element: HTMLDivElement) => {\n    state.isInteractingWithTool = true;\n\n    element.addEventListener(\n      Events.MOUSE_UP,\n      this._dragEndCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_DRAG,\n      this._dragCallback as EventListener\n    );\n    element.addEventListener(\n      Events.MOUSE_CLICK,\n      this._dragEndCallback as EventListener\n    );\n\n    element.addEventListener(\n      Events.TOUCH_END,\n      this._dragEndCallback as EventListener\n    );\n    element.addEventListener(\n      Events.TOUCH_DRAG,\n      this._dragCallback as EventListener\n    );\n  };\n\n  _deactivateDraw = (element: HTMLDivElement) => {\n    state.isInteractingWithTool = false;\n\n    element.removeEventListener(\n      Events.MOUSE_UP,\n      this._dragEndCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_DRAG,\n      this._dragCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.MOUSE_CLICK,\n      this._dragEndCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_END,\n      this._dragEndCallback as EventListener\n    );\n    element.removeEventListener(\n      Events.TOUCH_DRAG,\n      this._dragCallback as EventListener\n    );\n  };\n}\n\nMagnifyTool.toolName = 'Magnify';\nexport default MagnifyTool;\n","import {\n  getEnabledElement,\n  StackViewport,\n  VolumeViewport,\n  utilities,\n  getEnabledElementByIds,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport {\n  addAnnotation,\n  getAnnotations,\n} from '../stateManagement/annotation/annotationState';\nimport { isAnnotationVisible } from '../stateManagement/annotation/annotationVisibility';\nimport { drawLine } from '../drawingSvg';\nimport { getViewportIdsWithToolToRender } from '../utilities/viewportFilters';\nimport {\n  EventTypes,\n  PublicToolProps,\n  ToolProps,\n  SVGDrawingHelper,\n  Annotation,\n  Annotations,\n} from '../types';\nimport { ReferenceCursor } from '../types/ToolSpecificAnnotationTypes';\n\nimport triggerAnnotationRenderForViewportIds from '../utilities/triggerAnnotationRenderForViewportIds';\nimport { StyleSpecifier } from '../types/AnnotationStyle';\nimport { vec3 } from 'gl-matrix';\nimport AnnotationDisplayTool from './base/AnnotationDisplayTool';\nimport vtkMath from '@kitware/vtk.js/Common/Core/Math';\nimport {\n  hideElementCursor,\n  resetElementCursor,\n} from '../cursors/elementCursor';\nimport { getToolGroup } from '../store/ToolGroupManager';\n\n/**\n * ReferenceCursors is a tool that will show your cursors position in all other elements in the toolGroup if they have a matching FrameOfReference relative to its position in world space.\n * Also when positionSync is enabled, it will try to sync viewports so that the cursor can be displayed in the correct position in all viewports.\n *\n * Configuration:\n * - positionSync: boolean, if true, it will try to sync viewports so that the cursor can be displayed in the correct position in all viewports.\n * - disableCursor: boolean, if true, it will hide the cursor in all viewports. You need to disable and reactivate the tool for this to apply.\n * - displayThreshold: number, if the distance of the cursor in a viewport is bigger than this threshold the cursor will not be displayed.\n *\n * Only uses Active and Disabled state\n */\nclass ReferenceCursors extends AnnotationDisplayTool {\n  static toolName;\n  touchDragCallback: any;\n  mouseDragCallback: any;\n  _throttledCalculateCachedStats: any;\n  isDrawing = false;\n  isHandleOutsideImage = false;\n  _elementWithCursor: null | HTMLDivElement = null;\n  _currentCursorWorldPosition: null | Types.Point3 = null;\n  _currentCanvasPosition: null | Types.Point2 = null;\n  //need to keep track if this was enabled when tool was enabled because we need to know if we should reset cursors\n  _disableCursorEnabled = false;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        shadow: true,\n        preventHandleOutsideImage: false,\n        displayThreshold: 5,\n        positionSync: true,\n        disableCursor: false,\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n    this._disableCursorEnabled = this.configuration.disableCursor;\n  }\n\n  /**\n   * Overwritten mouseMoveCallback since we want to keep track of the current mouse position and redraw on mouseMove\n   * @virtual Event handler for Cornerstone MOUSE_MOVE event.\n   *\n   *\n   * @param evt - The normalized mouse event\n   * @param filteredAnnotations - The annotations to check for hover interactions\n   * @returns True if the annotation needs to be re-drawn by the annotationRenderingEngine.\n   */\n  mouseMoveCallback = (evt: EventTypes.InteractionEventType): boolean => {\n    const { detail } = evt;\n    const { element, currentPoints } = detail;\n\n    //save current positions and current element the curser is hovering over\n    this._currentCursorWorldPosition = currentPoints.world;\n    this._currentCanvasPosition = currentPoints.canvas;\n    this._elementWithCursor = element;\n\n    const annotation = this.getActiveAnnotation(element);\n    if (annotation === null) {\n      this.createInitialAnnotation(currentPoints.world, element);\n      return false;\n    }\n    this.updateAnnotationPosition(element, annotation);\n    return false;\n  };\n\n  onSetToolActive(): void {\n    this._disableCursorEnabled = this.configuration.disableCursor;\n    if (!this._disableCursorEnabled) return;\n    const viewportIds = getToolGroup(this.toolGroupId).viewportsInfo;\n    if (!viewportIds) return;\n    const enabledElements = viewportIds.map((e) =>\n      getEnabledElementByIds(e.viewportId, e.renderingEngineId)\n    );\n\n    enabledElements.forEach((element) => {\n      if (element) hideElementCursor(element.viewport.element);\n    });\n  }\n  onSetToolDisabled(): void {\n    if (!this._disableCursorEnabled) return;\n    const viewportIds = getToolGroup(this.toolGroupId).viewportsInfo;\n    if (!viewportIds) return;\n    const enabledElements = viewportIds.map((e) =>\n      getEnabledElementByIds(e.viewportId, e.renderingEngineId)\n    );\n    enabledElements.forEach((element) => {\n      if (element) resetElementCursor(element.viewport.element);\n    });\n  }\n\n  createInitialAnnotation = (\n    worldPos: Types.Point3,\n    element: HTMLDivElement\n  ): void => {\n    const enabledElement = getEnabledElement(element);\n    if (!enabledElement) throw new Error('No enabled element found');\n    const { viewport, renderingEngine } = enabledElement;\n\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n    if (!viewPlaneNormal || !viewUp) throw new Error('Camera not found');\n\n    const referencedImageId = this.getReferencedImageId(\n      viewport,\n      worldPos,\n      viewPlaneNormal,\n      viewUp\n    );\n\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n\n    const annotation = {\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        toolName: this.getToolName(),\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId,\n      },\n      data: {\n        label: '',\n        handles: {\n          points: [[...worldPos]] as [Types.Point3],\n          activeHandleIndex: null,\n          textBox: {\n            hasMoved: false,\n            worldPosition: <Types.Point3>[0, 0, 0],\n            worldBoundingBox: {\n              topLeft: <Types.Point3>[0, 0, 0],\n              topRight: <Types.Point3>[0, 0, 0],\n              bottomLeft: <Types.Point3>[0, 0, 0],\n              bottomRight: <Types.Point3>[0, 0, 0],\n            },\n          },\n        },\n      },\n    };\n\n    const annotations = getAnnotations(this.getToolName(), element);\n\n    if (annotations.length > 0) return null;\n    const annotationId = addAnnotation(annotation, element);\n\n    if (annotationId === null) return;\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName(),\n      false\n    );\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  };\n\n  getActiveAnnotation(element: HTMLDivElement): null | Annotation {\n    const annotations = getAnnotations(this.getToolName(), element);\n    if (!annotations.length) {\n      return null;\n    }\n    const targetAnnotation = annotations[0];\n    return targetAnnotation;\n  }\n\n  /**\n   * updates the position of the annotation to match the currently set world position\n   */\n  updateAnnotationPosition(\n    element: HTMLDivElement,\n    annotation: Annotation\n  ): void {\n    const worldPos = this._currentCursorWorldPosition;\n    if (!worldPos) return;\n    if (!annotation.data?.handles?.points) return;\n    annotation.data.handles.points = [[...worldPos]];\n    annotation.invalidated = true;\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName(),\n      false\n    );\n    const enabledElement = getEnabledElement(element);\n    if (!enabledElement) return;\n    const { renderingEngine } = enabledElement;\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  }\n\n  //checks if we need to update the annotation position due to camera changes\n  onCameraModified = (evt: any): void => {\n    const eventDetail = evt.detail;\n    const { element, previousCamera, camera } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const viewport = enabledElement.viewport as\n      | Types.IVolumeViewport\n      | Types.IStackViewport;\n\n    //only react to changes for element with cursor, otherwise would cause infinite loop\n    if (element !== this._elementWithCursor) return;\n    //check if camera moved along its normal\n    const oldFocalPoint = previousCamera.focalPoint;\n    const cameraNormal = camera.viewPlaneNormal;\n    const newFocalPoint = camera.focalPoint;\n\n    const deltaCameraFocalPoint: Types.Point3 = [0, 0, 0];\n    vtkMath.subtract(newFocalPoint, oldFocalPoint, deltaCameraFocalPoint);\n    //check if focal point changed\n    if (deltaCameraFocalPoint.reduce((a, b) => a + b, 0) === 0) return;\n    //if nomrmal is perpendicular to focal point change, then we are not moving along the normal\n    const dotProduct = vtkMath.dot(deltaCameraFocalPoint, cameraNormal);\n    //dot product is 0 -> perpendicular\n    if (Math.abs(dotProduct) < 1e-2) return;\n\n    //need to update the position of the annotation since camera changed\n    if (!this._currentCanvasPosition) return;\n\n    const newWorldPos = viewport.canvasToWorld(this._currentCanvasPosition);\n    this._currentCursorWorldPosition = newWorldPos;\n    this.updateAnnotationPosition(element, this.getActiveAnnotation(element));\n  };\n\n  //display annotation if current viewing plane has a max distance of \"displayThreshold\" from the annotation\n  filterInteractableAnnotationsForElement(\n    element: HTMLDivElement,\n    annotations: Annotations\n  ): Annotations {\n    //calculate distance of current viewport to annotation\n    if (!(annotations instanceof Array) || annotations.length === 0) return [];\n    const annotation = annotations[0];\n    const viewport = getEnabledElement(element)?.viewport;\n    if (!viewport) return [];\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, focalPoint } = camera;\n    if (!viewPlaneNormal || !focalPoint) return [];\n    const points = annotation.data?.handles?.points;\n    if (!(points instanceof Array) || points.length !== 1) return [];\n    const worldPos = points[0];\n    const plane = utilities.planar.planeEquation(viewPlaneNormal, focalPoint);\n    const distance = utilities.planar.planeDistanceToPoint(plane, worldPos);\n    return distance < this.configuration.displayThreshold ? [annotation] : [];\n  }\n\n  /**\n   * Draws the cursor representation on the enabledElement\n   * Checks if a stack change has happened and updates annotation in that case\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n    const { viewport, FrameOfReferenceUID } = enabledElement;\n\n    const isElementWithCursor = this._elementWithCursor === viewport.element;\n\n    //update stack position if position sync is enabled\n    if (this.configuration.positionSync && !isElementWithCursor) {\n      this.updateViewportImage(viewport);\n    }\n\n    const { element } = viewport;\n\n    let annotations = getAnnotations(this.getToolName(), element);\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    //the viewport change from updateStackPosition might not be applied yet, so sometimes the annotation might not be immediately visible\n    annotations = this.filterInteractableAnnotationsForElement(\n      element,\n      annotations\n    ) as Annotations;\n\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    for (let i = 0; i < annotations.length; i++) {\n      const annotation = annotations[i] as ReferenceCursor;\n      const { annotationUID, data } = annotation;\n      const { handles } = data;\n      const { points } = handles;\n\n      if (!annotationUID) return renderStatus;\n      styleSpecifier.annotationUID = annotationUID;\n\n      const lineWidthBase = parseFloat(\n        this.getStyle('lineWidth', styleSpecifier, annotation) as string\n      );\n\n      const lineWidth =\n        typeof lineWidthBase === 'number' && isElementWithCursor\n          ? lineWidthBase\n          : lineWidthBase;\n      const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n      const color = this.getStyle('color', styleSpecifier, annotation);\n\n      if (points[0].some((e) => isNaN(e))) return renderStatus;\n      const canvasCoordinates = points.map((p) =>\n        viewport.worldToCanvas(p)\n      ) as [Types.Point2];\n\n      // If rendering engine has been destroyed while rendering\n      if (!viewport.getRenderingEngine()) {\n        console.warn('Rendering Engine has been destroyed');\n        return renderStatus;\n      }\n\n      if (!isAnnotationVisible(annotationUID)) {\n        continue;\n      }\n\n      const crosshairUIDs = {\n        upper: 'upper',\n        right: 'right',\n        lower: 'lower',\n        left: 'left',\n      };\n      const [x, y] = canvasCoordinates[0];\n      const centerSpace = isElementWithCursor ? 20 : 7;\n      const lineLength = isElementWithCursor ? 5 : 7;\n      drawLine(\n        svgDrawingHelper,\n        annotationUID,\n        crosshairUIDs.upper,\n        [x, y - (centerSpace / 2 + lineLength)],\n        [x, y - centerSpace / 2],\n        { color, lineDash, lineWidth }\n      );\n      drawLine(\n        svgDrawingHelper,\n        annotationUID,\n        crosshairUIDs.lower,\n        [x, y + (centerSpace / 2 + lineLength)],\n        [x, y + centerSpace / 2],\n        { color, lineDash, lineWidth }\n      );\n      drawLine(\n        svgDrawingHelper,\n        annotationUID,\n        crosshairUIDs.right,\n        [x + (centerSpace / 2 + lineLength), y],\n        [x + centerSpace / 2, y],\n        { color, lineDash, lineWidth }\n      );\n      drawLine(\n        svgDrawingHelper,\n        annotationUID,\n        crosshairUIDs.left,\n        [x - (centerSpace / 2 + lineLength), y],\n        [x - centerSpace / 2, y],\n        { color, lineDash, lineWidth }\n      );\n      renderStatus = true;\n    }\n\n    return renderStatus;\n  };\n\n  updateViewportImage(\n    viewport: Types.IStackViewport | Types.IVolumeViewport\n  ): void {\n    const currentMousePosition = this._currentCursorWorldPosition;\n\n    if (!currentMousePosition || currentMousePosition.some((e) => isNaN(e)))\n      return;\n\n    if (viewport instanceof StackViewport) {\n      const closestIndex = utilities.getClosestStackImageIndexForPoint(\n        currentMousePosition,\n        viewport\n      );\n\n      if (closestIndex === null) return;\n      if (closestIndex !== viewport.getCurrentImageIdIndex())\n        viewport.setImageIdIndex(closestIndex);\n    } else if (viewport instanceof VolumeViewport) {\n      const { focalPoint, viewPlaneNormal } = viewport.getCamera();\n      if (!focalPoint || !viewPlaneNormal) return;\n      const plane = utilities.planar.planeEquation(viewPlaneNormal, focalPoint);\n      const currentDistance = utilities.planar.planeDistanceToPoint(\n        plane,\n        currentMousePosition,\n        true\n      );\n\n      if (Math.abs(currentDistance) < 0.5) return;\n      const normalizedViewPlane = vec3.normalize(\n        vec3.create(),\n        vec3.fromValues(...viewPlaneNormal)\n      );\n      const scaledPlaneNormal = vec3.scale(\n        vec3.create(),\n        normalizedViewPlane,\n        currentDistance\n      );\n      const newFocalPoint = vec3.add(\n        vec3.create(),\n        vec3.fromValues(...focalPoint),\n        scaledPlaneNormal\n      ) as Types.Point3;\n      //TODO: make check if new focal point is within bounds of volume\n      const isInBounds = true;\n      if (isInBounds) {\n        viewport.setCamera({ focalPoint: newFocalPoint });\n        const renderingEngine = viewport.getRenderingEngine();\n        if (renderingEngine) renderingEngine.renderViewport(viewport.id);\n      }\n    }\n  }\n}\n\nReferenceCursors.toolName = 'ReferenceCursors';\nexport default ReferenceCursors;\n","import AnnotationDisplayTool from './base/AnnotationDisplayTool';\nimport { vec3 } from 'gl-matrix';\nimport {\n  getEnabledElementByIds,\n  getRenderingEngines,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport { ScaleOverlayAnnotation } from '../types/ToolSpecificAnnotationTypes';\nimport type { Types } from '@cornerstonejs/core';\nimport {\n  addAnnotation,\n  getAnnotations,\n} from '../stateManagement/annotation/annotationState';\nimport {\n  drawLine as drawLineSvg,\n  drawTextBox as drawTextBoxSvg,\n} from '../drawingSvg';\nimport {\n  EventTypes,\n  PublicToolProps,\n  ToolProps,\n  SVGDrawingHelper,\n} from '../types';\nimport { StyleSpecifier } from '../types/AnnotationStyle';\nimport { getToolGroup } from '../store/ToolGroupManager';\n\nconst SCALEOVERLAYTOOL_ID = 'scaleoverlay-viewport';\nconst viewportsWithAnnotations = [];\n\n/**\n * @public\n * @class ScaleOverlayTool\n * @memberof Tools\n *\n * @classdesc Tool for displaying a scale overlay on the image.\n * @extends Tools.Base.BaseTool\n */\nclass ScaleOverlayTool extends AnnotationDisplayTool {\n  static toolName;\n\n  public touchDragCallback: any;\n  public mouseDragCallback: any;\n  _throttledCalculateCachedStats: any;\n  editData: {\n    renderingEngine: any;\n    viewport: any;\n    annotation: ScaleOverlayAnnotation;\n  } | null = {} as any;\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      configuration: {\n        viewportId: '',\n        scaleLocation: 'bottom',\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n  }\n\n  _init = (): void => {\n    const renderingEngines = getRenderingEngines();\n    const renderingEngine = renderingEngines[0];\n\n    if (!renderingEngine) {\n      return;\n    }\n\n    // get viewports with tool enabled\n    const viewportIds = getToolGroup(this.toolGroupId).viewportsInfo;\n\n    if (!viewportIds) return;\n\n    // get enabled elements\n    const enabledElements = viewportIds.map((e) =>\n      getEnabledElementByIds(e.viewportId, e.renderingEngineId)\n    );\n\n    let { viewport } = enabledElements[0];\n    const { FrameOfReferenceUID } = enabledElements[0];\n\n    // onCameraModified, configuration.viewportId is set to the active\n    // viewport Id, here we are setting the viewport variable to the\n    // viewport with the matching Id\n    if (this.configuration.viewportId) {\n      enabledElements.forEach((element) => {\n        if (element.viewport.id == this.configuration.viewportId) {\n          viewport = element.viewport;\n        }\n      });\n    }\n\n    if (!viewport) {\n      return;\n    }\n\n    const { viewUp, viewPlaneNormal } = viewport.getCamera();\n\n    const viewportCanvasCornersInWorld =\n      csUtils.getViewportImageCornersInWorld(viewport);\n\n    let annotation = this.editData.annotation;\n\n    const annotations = getAnnotations(this.getToolName(), viewport.element);\n\n    // if annotations have been created, get the annotation for the\n    // current viewport Id\n    if (annotations.length) {\n      annotation = annotations.filter(\n        (thisAnnotation) => thisAnnotation.data.viewportId == viewport.id\n      )[0] as ScaleOverlayAnnotation;\n    }\n\n    // viewportsWithAnnotations stores which viewports have an annotation,\n    // if the viewport does not have an annotation, create a new one\n    if (!viewportsWithAnnotations.includes(viewport.id)) {\n      const newAnnotation: ScaleOverlayAnnotation = {\n        metadata: {\n          toolName: this.getToolName(),\n          viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n          viewUp: <Types.Point3>[...viewUp],\n          FrameOfReferenceUID,\n          referencedImageId: null,\n        },\n        data: {\n          handles: {\n            points: viewportCanvasCornersInWorld,\n          },\n          viewportId: viewport.id,\n        },\n      };\n\n      viewportsWithAnnotations.push(viewport.id);\n\n      addAnnotation(newAnnotation, viewport.element);\n      annotation = newAnnotation;\n    } else if (this.editData.annotation.data.viewportId == viewport.id) {\n      this.editData.annotation.data.handles.points =\n        viewportCanvasCornersInWorld;\n      this.editData.annotation.data.viewportId = viewport.id;\n    }\n\n    this.editData = {\n      viewport,\n      renderingEngine,\n      annotation,\n    };\n  };\n\n  onSetToolEnabled = (): void => {\n    this._init();\n  };\n\n  onCameraModified = (evt: Types.EventTypes.CameraModifiedEvent): void => {\n    // If the camera is modified, we need to update the viewport\n    // that the camera was modified on\n    this.configuration.viewportId = evt.detail.viewportId;\n    this._init();\n  };\n\n  /**\n   * Used to draw the scale annotation in each request animation\n   * frame.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   * @returns\n   */\n\n  renderAnnotation(\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ) {\n    if (!this.editData.viewport) {\n      return;\n    }\n    const location = this.configuration.scaleLocation;\n    const { viewport } = enabledElement;\n\n    const annotations = getAnnotations(this.getToolName(), viewport.element);\n    const annotation = annotations.filter(\n      (thisAnnotation) => thisAnnotation.data.viewportId == viewport.id\n    )[0];\n    const canvas = enabledElement.viewport.canvas;\n\n    const renderStatus = false;\n\n    if (!viewport) {\n      return renderStatus;\n    }\n\n    const styleSpecifier: StyleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id,\n    };\n\n    const canvasSize = {\n      width: canvas.width,\n      height: canvas.height,\n    };\n\n    const topLeft = annotation.data.handles.points[0];\n    const topRight = annotation.data.handles.points[1];\n    const bottomLeft = annotation.data.handles.points[2];\n    const bottomRight = annotation.data.handles.points[3];\n\n    const pointSet1 = [topLeft, bottomLeft, topRight, bottomRight];\n\n    const worldWidthViewport = vec3.distance(bottomLeft, bottomRight);\n    const worldHeightViewport = vec3.distance(topLeft, bottomLeft);\n\n    // hscaleBounds and vscaleBounds compute the max bound for scales on the image\n    const hscaleBounds = this.computeScaleBounds(\n      canvasSize,\n      0.05,\n      0.05,\n      location\n    );\n\n    const vscaleBounds = this.computeScaleBounds(\n      canvasSize,\n      0.05,\n      0.05,\n      location\n    );\n\n    // Computes which scale size to use, ex: 100mm, 50mm\n    const scaleSize = this.computeScaleSize(\n      worldWidthViewport,\n      worldHeightViewport,\n      location\n    );\n\n    // Applies the scale with the predetermined size to the image in\n    // world coordinates, then converts them to canvas coordinates\n    const canvasCoordinates = this.computeWorldScaleCoordinates(\n      scaleSize,\n      location,\n      pointSet1\n    ).map((world) => viewport.worldToCanvas(world));\n\n    // Uses the bounds and canvas size to center the scale\n    // based on the location\n    const scaleCanvasCoordinates = this.computeCanvasScaleCoordinates(\n      canvasSize,\n      canvasCoordinates,\n      vscaleBounds,\n      hscaleBounds,\n      location\n    );\n\n    // Computes the end scale ticks coordinates\n    const scaleTicks = this.computeEndScaleTicks(\n      scaleCanvasCoordinates,\n      location\n    );\n\n    const { annotationUID } = annotation;\n\n    styleSpecifier.annotationUID = annotationUID;\n    const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n    const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n    const color = this.getStyle('color', styleSpecifier, annotation);\n    const shadow = this.getStyle('shadow', styleSpecifier, annotation);\n\n    const scaleId = `${annotationUID}-scaleline`;\n    const scaleLineUID = '1';\n    drawLineSvg(\n      svgDrawingHelper,\n      annotationUID,\n      scaleLineUID,\n      scaleCanvasCoordinates[0],\n      scaleCanvasCoordinates[1],\n      {\n        color,\n        width: lineWidth,\n        lineDash,\n        shadow,\n      },\n      scaleId\n    );\n    const leftTickId = `${annotationUID}-left`;\n    const leftTickUID = '2';\n\n    drawLineSvg(\n      svgDrawingHelper,\n      annotationUID,\n      leftTickUID,\n      scaleTicks.endTick1[0] as Types.Point2,\n      scaleTicks.endTick1[1] as Types.Point2,\n      {\n        color,\n        width: lineWidth,\n        lineDash,\n        shadow,\n      },\n      leftTickId\n    );\n    const rightTickId = `${annotationUID}-right`;\n    const rightTickUID = '3';\n\n    drawLineSvg(\n      svgDrawingHelper,\n      annotationUID,\n      rightTickUID,\n      scaleTicks.endTick2[0] as Types.Point2,\n      scaleTicks.endTick2[1] as Types.Point2,\n      {\n        color,\n        width: lineWidth,\n        lineDash,\n        shadow,\n      },\n      rightTickId\n    );\n\n    const locationTextOffest = {\n      bottom: [-10, -42],\n      top: [-12, -35],\n      left: [-40, -20],\n      right: [-50, -20],\n    };\n\n    const textCanvasCoordinates = [\n      scaleCanvasCoordinates[0][0] + locationTextOffest[location][0],\n      scaleCanvasCoordinates[0][1] + locationTextOffest[location][1],\n    ];\n    const textBoxLines = this._getTextLines(scaleSize);\n\n    const { tickIds, tickUIDs, tickCoordinates } = this.computeInnerScaleTicks(\n      scaleSize,\n      location,\n      annotationUID,\n      scaleTicks.endTick1,\n      scaleTicks.endTick2\n    );\n\n    // draws inner ticks for scale\n    for (let i = 0; i < tickUIDs.length; i++) {\n      drawLineSvg(\n        svgDrawingHelper,\n        annotationUID,\n        tickUIDs[i],\n        tickCoordinates[i][0],\n        tickCoordinates[i][1],\n        {\n          color,\n          width: lineWidth,\n          lineDash,\n          shadow,\n        },\n        tickIds[i]\n      );\n    }\n\n    const textUID = 'text0';\n    drawTextBoxSvg(\n      svgDrawingHelper,\n      annotationUID,\n      textUID,\n      textBoxLines,\n      [textCanvasCoordinates[0], textCanvasCoordinates[1]],\n      {\n        fontFamily: 'Helvetica Neue, Helvetica, Arial, sans-serif',\n        fontSize: '14px',\n        lineDash: '2,3',\n        lineWidth: '1',\n        shadow: true,\n        color: color,\n      }\n    );\n\n    return renderStatus;\n  }\n\n  _getTextLines(scaleSize: number): string[] | undefined {\n    let scaleSizeDisplayValue;\n    let scaleSizeUnits;\n    if (scaleSize >= 50) {\n      scaleSizeDisplayValue = scaleSize / 10; //convert to cm\n      scaleSizeUnits = ' cm';\n    } else {\n      scaleSizeDisplayValue = scaleSize; //convert to cm\n      scaleSizeUnits = ' mm';\n    }\n\n    const textLines = [scaleSizeDisplayValue.toString().concat(scaleSizeUnits)];\n\n    return textLines;\n  }\n\n  /**\n   *\n   * @param worldWidthViewport\n   * @returns currentScaleSize\n   */\n  computeScaleSize = (\n    worldWidthViewport: number,\n    worldHeightViewport: number,\n    location: any\n  ) => {\n    const scaleSizes = [\n      16000, 8000, 4000, 2000, 1000, 500, 250, 100, 50, 25, 10, 5, 2,\n    ];\n    let currentScaleSize;\n    if (location == 'top' || location == 'bottom') {\n      currentScaleSize = scaleSizes.filter(\n        (scaleSize) =>\n          scaleSize < worldWidthViewport * 0.6 &&\n          scaleSize > worldWidthViewport * 0.2\n      );\n    } else {\n      currentScaleSize = scaleSizes.filter(\n        (scaleSize) =>\n          scaleSize < worldHeightViewport * 0.6 &&\n          scaleSize > worldHeightViewport * 0.2\n      );\n    }\n\n    return currentScaleSize[0];\n  };\n\n  /**\n   *  calculates scale ticks for ends of the scale\n   * @param canvasCoordinates\n   * @returns leftTick, rightTick\n   */\n  computeEndScaleTicks = (canvasCoordinates, location) => {\n    const locationTickOffset = {\n      bottom: [\n        [0, -10],\n        [0, -10],\n      ],\n      top: [\n        [0, 10],\n        [0, 10],\n      ],\n      left: [\n        [0, 0],\n        [10, 0],\n      ],\n      right: [\n        [0, 0],\n        [-10, 0],\n      ],\n    };\n\n    const endTick1 = [\n      [\n        canvasCoordinates[1][0] + locationTickOffset[location][0][0],\n        canvasCoordinates[1][1] + locationTickOffset[location][0][0],\n      ],\n      [\n        canvasCoordinates[1][0] + locationTickOffset[location][1][0],\n        canvasCoordinates[1][1] + locationTickOffset[location][1][1],\n      ],\n    ];\n    const endTick2 = [\n      [\n        canvasCoordinates[0][0] + locationTickOffset[location][0][0],\n        canvasCoordinates[0][1] + locationTickOffset[location][0][0],\n      ],\n      [\n        canvasCoordinates[0][0] + locationTickOffset[location][1][0],\n        canvasCoordinates[0][1] + locationTickOffset[location][1][1],\n      ],\n    ];\n\n    return {\n      endTick1: endTick1,\n      endTick2: endTick2,\n    };\n  };\n\n  computeInnerScaleTicks = (\n    scaleSize: number,\n    location: string,\n    annotationUID: string,\n    leftTick: any[][],\n    rightTick: any[][]\n  ) => {\n    let canvasScaleSize;\n    if (location == 'bottom' || location == 'top') {\n      canvasScaleSize = rightTick[0][0] - leftTick[0][0];\n    } else if (location == 'left' || location == 'right') {\n      canvasScaleSize = rightTick[0][1] - leftTick[0][1];\n    }\n    const tickIds = [];\n    const tickUIDs = [];\n    const tickCoordinates = [];\n    let numberSmallTicks = scaleSize;\n\n    if (scaleSize >= 50) {\n      numberSmallTicks = scaleSize / 10;\n    }\n\n    const tickSpacing = canvasScaleSize / numberSmallTicks;\n\n    for (let i = 0; i < numberSmallTicks - 1; i++) {\n      const locationOffset = {\n        bottom: [\n          [tickSpacing * (i + 1), 0],\n          [tickSpacing * (i + 1), 5],\n        ],\n        top: [\n          [tickSpacing * (i + 1), 0],\n          [tickSpacing * (i + 1), -5],\n        ],\n        left: [\n          [0, tickSpacing * (i + 1)],\n          [-5, tickSpacing * (i + 1)],\n        ],\n        right: [\n          [0, tickSpacing * (i + 1)],\n          [5, tickSpacing * (i + 1)],\n        ],\n      };\n      tickIds.push(`${annotationUID}-tick${i}`);\n      tickUIDs.push(`tick${i}`);\n      if ((i + 1) % 5 == 0) {\n        tickCoordinates.push([\n          [\n            leftTick[0][0] + locationOffset[location][0][0],\n            leftTick[0][1] + locationOffset[location][0][1],\n          ],\n          [\n            leftTick[1][0] + locationOffset[location][0][0],\n            leftTick[1][1] + locationOffset[location][0][1],\n          ],\n        ]);\n      } else {\n        tickCoordinates.push([\n          [\n            leftTick[0][0] + locationOffset[location][0][0],\n            leftTick[0][1] + locationOffset[location][0][1],\n          ],\n          [\n            leftTick[1][0] + locationOffset[location][1][0],\n            leftTick[1][1] + locationOffset[location][1][1],\n          ],\n        ]);\n      }\n    }\n\n    return { tickIds, tickUIDs, tickCoordinates };\n  };\n\n  computeWorldScaleCoordinates = (scaleSize, location, pointSet) => {\n    let worldCoordinates;\n    let topBottomVec = vec3.subtract(vec3.create(), pointSet[0], pointSet[1]);\n    topBottomVec = vec3.normalize(vec3.create(), topBottomVec) as Types.Point3;\n\n    let topRightVec = vec3.subtract(vec3.create(), pointSet[2], pointSet[0]);\n    topRightVec = vec3.normalize(vec3.create(), topRightVec);\n\n    const midpointLocation = {\n      bottom: [pointSet[1], pointSet[2]],\n      top: [pointSet[0], pointSet[3]],\n      right: [pointSet[2], pointSet[3]],\n      left: [pointSet[0], pointSet[1]],\n    };\n\n    const midpoint = vec3\n      .add(\n        vec3.create(),\n        midpointLocation[location][0],\n        midpointLocation[location][0]\n      )\n      .map((i) => i / 2) as Types.Point3;\n\n    const offset =\n      scaleSize /\n      2 /\n      Math.sqrt(\n        Math.pow(topBottomVec[0], 2) +\n          Math.pow(topBottomVec[1], 2) +\n          Math.pow(topBottomVec[2], 2)\n      );\n\n    if (location == 'top' || location == 'bottom') {\n      worldCoordinates = [\n        vec3.subtract(\n          vec3.create(),\n          midpoint,\n          topRightVec.map((i) => i * offset) as Types.Point3\n        ),\n        vec3.add(\n          vec3.create(),\n          midpoint,\n          topRightVec.map((i) => i * offset) as Types.Point3\n        ),\n      ];\n    } else if (location == 'left' || location == 'right') {\n      worldCoordinates = [\n        vec3.add(\n          vec3.create(),\n          midpoint,\n          topBottomVec.map((i) => i * offset) as Types.Point3\n        ),\n        vec3.subtract(\n          vec3.create(),\n          midpoint,\n          topBottomVec.map((i) => i * offset) as Types.Point3\n        ),\n      ];\n    }\n\n    return worldCoordinates;\n  };\n\n  /**\n   * Computes the centered canvas coordinates for scale\n   * @param canvasSize\n   * @param canvasCoordinates\n   * @param vscaleBounds\n   * @returns scaleCanvasCoordinates\n   */\n  computeCanvasScaleCoordinates = (\n    canvasSize,\n    canvasCoordinates,\n    vscaleBounds,\n    hscaleBounds,\n    location\n  ) => {\n    let scaleCanvasCoordinates;\n    if (location == 'top' || location == 'bottom') {\n      const worldDistanceOnCanvas =\n        canvasCoordinates[0][0] - canvasCoordinates[1][0];\n      scaleCanvasCoordinates = [\n        [canvasSize.width / 2 - worldDistanceOnCanvas / 2, vscaleBounds.height],\n        [canvasSize.width / 2 + worldDistanceOnCanvas / 2, vscaleBounds.height],\n      ];\n    } else if (location == 'left' || location == 'right') {\n      const worldDistanceOnCanvas =\n        canvasCoordinates[0][1] - canvasCoordinates[1][1];\n      scaleCanvasCoordinates = [\n        [hscaleBounds.width, canvasSize.height / 2 - worldDistanceOnCanvas / 2],\n        [hscaleBounds.width, canvasSize.height / 2 + worldDistanceOnCanvas / 2],\n      ];\n    }\n\n    return scaleCanvasCoordinates;\n  };\n\n  /**\n   * Computes the max bound for scales on the image\n   * @param  {{width: number, height: number}} canvasSize\n   * @param  {number} horizontalReduction\n   * @param  {number} verticalReduction\n   * @returns {Object.<string, { x:number, y:number }>}\n   */\n  computeScaleBounds = (\n    canvasSize,\n    horizontalReduction,\n    verticalReduction,\n    location\n  ) => {\n    const hReduction = horizontalReduction * Math.min(1000, canvasSize.width);\n    const vReduction = verticalReduction * Math.min(1000, canvasSize.height);\n    const locationBounds = {\n      bottom: [-vReduction, -hReduction],\n      top: [vReduction, hReduction],\n      left: [vReduction, hReduction],\n      right: [-vReduction, -hReduction],\n    };\n    const canvasBounds = {\n      bottom: [canvasSize.height, canvasSize.width],\n      top: [0, canvasSize.width],\n      left: [canvasSize.height, 0],\n      right: [canvasSize.height, canvasSize.width],\n    };\n\n    return {\n      height: canvasBounds[location][0] + locationBounds[location][0],\n      width: canvasBounds[location][1] + locationBounds[location][1],\n    };\n  };\n}\n\nScaleOverlayTool.toolName = 'ScaleOverlay';\nexport default ScaleOverlayTool;\n","import { ImageVolume, utilities as csUtils } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { getBoundingBoxAroundShape } from '../../../utilities/boundingBox';\nimport { pointInShapeCallback } from '../../../utilities';\nimport { triggerSegmentationDataModified } from '../../../stateManagement/segmentation/triggerSegmentationEvents';\n\nconst { transformWorldToIndex } = csUtils;\n\ntype OperationData = {\n  segmentationId: string;\n  points: [Types.Point3, Types.Point3, Types.Point3, Types.Point3];\n  volume: ImageVolume;\n  constraintFn: (x: [number, number, number]) => boolean;\n  segmentIndex: number;\n  segmentsLocked: number[];\n};\n\n/**\n * For each point in the bounding box around the rectangle, if the point is inside\n * the rectangle, set the scalar value to the segmentIndex\n * @param toolGroupId - string\n * @param operationData - OperationData\n * @param constraintFn - can be used to perform threshold segmentation\n * @param inside - boolean\n */\n// Todo: why we have another constraintFn? in addition to the one in the operationData?\nfunction fillRectangle(\n  enabledElement: Types.IEnabledElement,\n  operationData: OperationData,\n  inside = true\n): void {\n  const {\n    volume: segmentation,\n    points,\n    segmentsLocked,\n    segmentIndex,\n    segmentationId,\n    constraintFn,\n  } = operationData;\n  const { imageData, dimensions } = segmentation;\n  const scalarData = segmentation.getScalarData();\n\n  let rectangleCornersIJK = points.map((world) => {\n    return transformWorldToIndex(imageData, world);\n  });\n\n  // math round\n  rectangleCornersIJK = rectangleCornersIJK.map((point) => {\n    return point.map((coord) => {\n      return Math.round(coord);\n    });\n  });\n\n  const boundsIJK = getBoundingBoxAroundShape(rectangleCornersIJK, dimensions);\n\n  // Since always all points inside the boundsIJK is inside the rectangle...\n  const pointInRectangle = () => true;\n\n  const callback = ({ value, index, pointIJK }) => {\n    if (segmentsLocked.includes(value)) {\n      return;\n    }\n\n    if (!constraintFn) {\n      scalarData[index] = segmentIndex;\n      return;\n    }\n\n    if (constraintFn(pointIJK)) {\n      scalarData[index] = segmentIndex;\n    }\n  };\n\n  pointInShapeCallback(imageData, pointInRectangle, callback, boundsIJK);\n\n  triggerSegmentationDataModified(segmentationId);\n}\n\n/**\n * Fill the inside of a rectangle\n * @param toolGroupId - The unique identifier of the tool group.\n * @param operationData - The data that will be used to create the\n * new rectangle.\n * @param constraintFn - can be used to perform threshold segmentation\n */\nexport function fillInsideRectangle(\n  enabledElement: Types.IEnabledElement,\n  operationData: OperationData\n): void {\n  fillRectangle(enabledElement, operationData, true);\n}\n\n/**\n * Fill the area outside of a rectangle for the toolGroupId and segmentationRepresentationUID.\n * @param toolGroupId - The unique identifier of the tool group.\n * @param operationData - The data that will be used to create the\n * new rectangle.\n * @param constraintFn - can be used to perform threshold segmentation\n */\nexport function fillOutsideRectangle(\n  enabledElement: Types.IEnabledElement,\n  operationData: OperationData\n): void {\n  fillRectangle(enabledElement, operationData, false);\n}\n","import { ImageVolume, utilities as csUtils } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { getBoundingBoxAroundShape } from '../../../utilities/boundingBox';\nimport { triggerSegmentationDataModified } from '../../../stateManagement/segmentation/triggerSegmentationEvents';\nimport { pointInShapeCallback } from '../../../utilities';\n\nconst { transformWorldToIndex } = csUtils;\n\ntype EraseOperationData = {\n  segmentationId: string;\n  points: [Types.Point3, Types.Point3, Types.Point3, Types.Point3];\n  volume: ImageVolume;\n  constraintFn: (x: [number, number, number]) => boolean;\n  segmentsLocked: number[];\n};\n\nfunction eraseRectangle(\n  enabledElement: Types.IEnabledElement,\n  operationData: EraseOperationData,\n  inside = true\n): void {\n  const {\n    volume: segmentation,\n    points,\n    segmentsLocked,\n    segmentationId,\n  } = operationData;\n  const { imageData, dimensions } = segmentation;\n  const scalarData = segmentation.getScalarData();\n\n  const rectangleCornersIJK = points.map((world) => {\n    return transformWorldToIndex(imageData, world);\n  });\n\n  const boundsIJK = getBoundingBoxAroundShape(rectangleCornersIJK, dimensions);\n\n  // Since always all points inside the boundsIJK is inside the rectangle...\n  const pointInShape = () => true;\n\n  const callback = ({ value, index }) => {\n    if (segmentsLocked.includes(value)) {\n      return;\n    }\n    scalarData[index] = 0;\n  };\n\n  pointInShapeCallback(imageData, pointInShape, callback, boundsIJK);\n\n  triggerSegmentationDataModified(segmentationId);\n}\n\n/**\n * Erase the rectangle region segment inside the segmentation defined by the operationData.\n * It erases the segmentation pixels inside the defined rectangle.\n * @param enabledElement - The element for which the segment is being erased.\n * @param operationData - EraseOperationData\n */\nexport function eraseInsideRectangle(\n  enabledElement: Types.IEnabledElement,\n  operationData: EraseOperationData\n): void {\n  eraseRectangle(enabledElement, operationData, true);\n}\n\n/**\n * Erase the rectangle region segment inside the segmentation defined by the operationData.\n * It erases the segmentation pixels outside the defined rectangle.\n * @param enabledElement - The element for which the segment is being erased.\n * @param operationData - EraseOperationData\n */\nexport function eraseOutsideRectangle(\n  enabledElement: Types.IEnabledElement,\n  operationData: EraseOperationData\n): void {\n  eraseRectangle(enabledElement, operationData, false);\n}\n","import { cache, getEnabledElement, StackViewport } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { BaseTool } from '../base';\nimport {\n  PublicToolProps,\n  ToolProps,\n  EventTypes,\n  SVGDrawingHelper,\n} from '../../types';\nimport { fillInsideRectangle } from './strategies/fillRectangle';\nimport { eraseInsideRectangle } from './strategies/eraseRectangle';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\n\nimport { Events } from '../../enums';\nimport { drawRect as drawRectSvg } from '../../drawingSvg';\nimport {\n  resetElementCursor,\n  hideElementCursor,\n} from '../../cursors/elementCursor';\n\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport {\n  config as segmentationConfig,\n  segmentLocking,\n  segmentIndex as segmentIndexController,\n  activeSegmentation,\n} from '../../stateManagement/segmentation';\n\nimport { getSegmentation } from '../../stateManagement/segmentation/segmentationState';\nimport { LabelmapSegmentationData } from '../../types/LabelmapTypes';\n\n/**\n * Tool for manipulating segmentation data by drawing a rectangle. It acts on the\n * active Segmentation on the viewport (enabled element) and requires an active\n * segmentation to be already present. By default it will use the activeSegmentIndex\n * for the segmentation to modify. You can use SegmentationModule to set the active\n * segmentation and segmentIndex.\n */\nclass RectangleScissorsTool extends BaseTool {\n  static toolName;\n  _throttledCalculateCachedStats: any;\n  editData: {\n    annotation: any;\n    segmentationId: string;\n    segmentation: any;\n    segmentIndex: number;\n    segmentsLocked: number[];\n    segmentColor: [number, number, number, number];\n    viewportIdsToRender: string[];\n    handleIndex?: number;\n    movingTextBox: boolean;\n    newAnnotation?: boolean;\n    hasMoved?: boolean;\n  } | null;\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        strategies: {\n          FILL_INSIDE: fillInsideRectangle,\n          ERASE_INSIDE: eraseInsideRectangle,\n        },\n        defaultStrategy: 'FILL_INSIDE',\n        activeStrategy: 'FILL_INSIDE',\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n  }\n\n  /**\n   * Based on the current position of the mouse and the enabledElement, it\n   * finds the active segmentation info and use it for the current tool.\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  preMouseDownCallback = (evt: EventTypes.InteractionEventType): boolean => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n    const toolGroupId = this.toolGroupId;\n\n    const activeSegmentationRepresentation =\n      activeSegmentation.getActiveSegmentationRepresentation(toolGroupId);\n    if (!activeSegmentationRepresentation) {\n      throw new Error(\n        'No active segmentation detected, create one before using scissors tool'\n      );\n    }\n\n    const { segmentationRepresentationUID, segmentationId, type } =\n      activeSegmentationRepresentation;\n    const segmentIndex =\n      segmentIndexController.getActiveSegmentIndex(segmentationId);\n    const segmentsLocked = segmentLocking.getLockedSegments(segmentationId);\n\n    const segmentColor = segmentationConfig.color.getColorForSegmentIndex(\n      toolGroupId,\n      segmentationRepresentationUID,\n      segmentIndex\n    );\n\n    const { representationData } = getSegmentation(segmentationId);\n\n    // Todo: are we going to support contour editing with rectangle scissors?\n    const { volumeId } = representationData[type] as LabelmapSegmentationData;\n    const segmentation = cache.getVolume(volumeId);\n\n    // Todo: Used for drawing the svg only, we might not need it at all\n    const annotation = {\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID: viewport.getFrameOfReferenceUID(),\n        referencedImageId: '',\n        toolName: this.getToolName(),\n        segmentColor,\n      },\n      data: {\n        handles: {\n          points: [\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n            <Types.Point3>[...worldPos],\n          ],\n          activeHandleIndex: null,\n        },\n      },\n    };\n\n    const viewportIdsToRender = getViewportIdsWithToolToRender(\n      element,\n      this.getToolName()\n    );\n\n    this.editData = {\n      annotation,\n      segmentation,\n      segmentIndex,\n      segmentsLocked,\n      segmentColor,\n      segmentationId,\n      viewportIdsToRender,\n      handleIndex: 3,\n      movingTextBox: false,\n      newAnnotation: true,\n      hasMoved: false,\n    };\n\n    this._activateDraw(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return true;\n  };\n\n  _dragCallback = (evt: EventTypes.InteractionEventType) => {\n    this.isDrawing = true;\n\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const { annotation, viewportIdsToRender, handleIndex } = this.editData;\n    const { data } = annotation;\n\n    // Moving handle.\n    const { currentPoints } = eventDetail;\n    const enabledElement = getEnabledElement(element);\n    const { worldToCanvas, canvasToWorld } = enabledElement.viewport;\n    const worldPos = currentPoints.world;\n\n    const { points } = data.handles;\n\n    // Move this handle.\n    points[handleIndex] = [...worldPos];\n\n    let bottomLeftCanvas;\n    let bottomRightCanvas;\n    let topLeftCanvas;\n    let topRightCanvas;\n\n    let bottomLeftWorld;\n    let bottomRightWorld;\n    let topLeftWorld;\n    let topRightWorld;\n\n    switch (handleIndex) {\n      case 0:\n      case 3:\n        // Moving bottomLeft or topRight\n\n        bottomLeftCanvas = worldToCanvas(points[0]);\n        topRightCanvas = worldToCanvas(points[3]);\n\n        bottomRightCanvas = [topRightCanvas[0], bottomLeftCanvas[1]];\n        topLeftCanvas = [bottomLeftCanvas[0], topRightCanvas[1]];\n\n        bottomRightWorld = canvasToWorld(bottomRightCanvas);\n        topLeftWorld = canvasToWorld(topLeftCanvas);\n\n        points[1] = bottomRightWorld;\n        points[2] = topLeftWorld;\n\n        break;\n      case 1:\n      case 2:\n        // Moving bottomRight or topLeft\n        bottomRightCanvas = worldToCanvas(points[1]);\n        topLeftCanvas = worldToCanvas(points[2]);\n\n        bottomLeftCanvas = <Types.Point2>[\n          topLeftCanvas[0],\n          bottomRightCanvas[1],\n        ];\n        topRightCanvas = <Types.Point2>[bottomRightCanvas[0], topLeftCanvas[1]];\n\n        bottomLeftWorld = canvasToWorld(bottomLeftCanvas);\n        topRightWorld = canvasToWorld(topRightCanvas);\n\n        points[0] = bottomLeftWorld;\n        points[3] = topRightWorld;\n\n        break;\n    }\n    annotation.invalidated = true;\n\n    this.editData.hasMoved = true;\n\n    const { renderingEngine } = enabledElement;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  };\n\n  _endCallback = (evt: EventTypes.InteractionEventType) => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const {\n      annotation,\n      newAnnotation,\n      hasMoved,\n      segmentation,\n      segmentationId,\n      segmentIndex,\n      segmentsLocked,\n    } = this.editData;\n    const { data } = annotation;\n\n    if (newAnnotation && !hasMoved) {\n      return;\n    }\n\n    data.handles.activeHandleIndex = null;\n\n    this._deactivateDraw(element);\n\n    resetElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    this.editData = null;\n    this.isDrawing = false;\n\n    if (viewport instanceof StackViewport) {\n      throw new Error('Not implemented yet');\n    }\n\n    const operationData = {\n      points: data.handles.points,\n      volume: segmentation,\n      segmentationId,\n      segmentIndex,\n      segmentsLocked,\n    };\n\n    this.applyActiveStrategy(enabledElement, operationData);\n  };\n\n  /**\n   * Add event handlers for the modify event loop, and prevent default event propagation.\n   */\n  _activateDraw = (element) => {\n    element.addEventListener(Events.MOUSE_UP, this._endCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.addEventListener(Events.TOUCH_END, this._endCallback);\n    element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n    element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n  };\n\n  /**\n   * Add event handlers for the modify event loop, and prevent default event prapogation.\n   */\n  _deactivateDraw = (element) => {\n    element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n    element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n    element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n    element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n\n    element.removeEventListener(Events.TOUCH_END, this._endCallback);\n    element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n  };\n\n  /**\n   * it is used to draw the rectangleScissor annotation in each\n   * request animation frame. Note that the annotation are disappeared\n   * after the segmentation modification.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n    if (!this.editData) {\n      return renderStatus;\n    }\n\n    const { viewport } = enabledElement;\n    const { annotation } = this.editData;\n\n    // Todo: rectangle color based on segment index\n    const toolMetadata = annotation.metadata;\n    const annotationUID = annotation.annotationUID;\n\n    const data = annotation.data;\n    const { points } = data.handles;\n    const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n    const color = `rgb(${toolMetadata.segmentColor.slice(0, 3)})`;\n\n    // If rendering engine has been destroyed while rendering\n    if (!viewport.getRenderingEngine()) {\n      console.warn('Rendering Engine has been destroyed');\n      return renderStatus;\n    }\n\n    const rectangleUID = '0';\n    drawRectSvg(\n      svgDrawingHelper,\n      annotationUID,\n      rectangleUID,\n      canvasCoordinates[0],\n      canvasCoordinates[3],\n      {\n        color,\n      }\n    );\n\n    renderStatus = true;\n\n    return renderStatus;\n  };\n}\n\nRectangleScissorsTool.toolName = 'RectangleScissor';\nexport default RectangleScissorsTool;\n","import { cache, getEnabledElement, StackViewport } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { BaseTool } from '../base';\nimport {\n  PublicToolProps,\n  ToolProps,\n  EventTypes,\n  SVGDrawingHelper,\n} from '../../types';\n\nimport { fillInsideCircle } from './strategies/fillCircle';\nimport { Events } from '../../enums';\nimport { drawCircle as drawCircleSvg } from '../../drawingSvg';\nimport {\n  resetElementCursor,\n  hideElementCursor,\n} from '../../cursors/elementCursor';\n\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport {\n  segmentLocking,\n  activeSegmentation,\n  segmentIndex as segmentIndexController,\n  config as segmentationConfig,\n} from '../../stateManagement/segmentation';\nimport { getSegmentation } from '../../stateManagement/segmentation/segmentationState';\nimport { LabelmapSegmentationData } from '../../types/LabelmapTypes';\n\n/**\n * Tool for manipulating segmentation data by drawing a circle. It acts on the\n * active Segmentation on the viewport (enabled element) and requires an active\n * segmentation to be already present. By default it will use the activeSegmentIndex\n * for the segmentation to modify. You can use SegmentationModule to set the active\n * segmentation and segmentIndex.\n */\nclass CircleScissorsTool extends BaseTool {\n  static toolName;\n  editData: {\n    annotation: any;\n    segmentation: any;\n    segmentIndex: number;\n    segmentationId: string;\n    segmentsLocked: number[];\n    segmentColor: [number, number, number, number];\n    viewportIdsToRender: string[];\n    handleIndex?: number;\n    movingTextBox: boolean;\n    newAnnotation?: boolean;\n    hasMoved?: boolean;\n    centerCanvas?: Array<number>;\n  } | null;\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        strategies: {\n          FILL_INSIDE: fillInsideCircle,\n          // ERASE_INSIDE: eraseInsideCircle,\n        },\n        defaultStrategy: 'FILL_INSIDE',\n        activeStrategy: 'FILL_INSIDE',\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n  }\n\n  /**\n   * Based on the current position of the mouse and the enabledElement, it\n   * finds the active segmentation info and use it for the current tool.\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  preMouseDownCallback = (evt: EventTypes.InteractionEventType): boolean => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n    const canvasPos = currentPoints.canvas;\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n    const toolGroupId = this.toolGroupId;\n\n    const activeSegmentationRepresentation =\n      activeSegmentation.getActiveSegmentationRepresentation(toolGroupId);\n    if (!activeSegmentationRepresentation) {\n      throw new Error(\n        'No active segmentation detected, create one before using scissors tool'\n      );\n    }\n\n    const { segmentationRepresentationUID, segmentationId, type } =\n      activeSegmentationRepresentation;\n    const segmentIndex =\n      segmentIndexController.getActiveSegmentIndex(segmentationId);\n    const segmentsLocked = segmentLocking.getLockedSegments(segmentationId);\n\n    const segmentColor = segmentationConfig.color.getColorForSegmentIndex(\n      toolGroupId,\n      segmentationRepresentationUID,\n      segmentIndex\n    );\n\n    const { representationData } = getSegmentation(segmentationId);\n\n    // Todo: are we going to support contour editing with rectangle scissors?\n    const { volumeId } = representationData[type] as LabelmapSegmentationData;\n    const segmentation = cache.getVolume(volumeId);\n\n    // Todo: Used for drawing the svg only, we might not need it at all\n    const annotation = {\n      invalidated: true,\n      highlighted: true,\n      metadata: {\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID: viewport.getFrameOfReferenceUID(),\n        referencedImageId: '',\n        toolName: this.getToolName(),\n        segmentColor,\n      },\n      data: {\n        handles: {\n          points: [[...worldPos], [...worldPos], [...worldPos], [...worldPos]],\n          activeHandleIndex: null,\n        },\n        isDrawing: true,\n        cachedStats: {},\n      },\n    };\n\n    const viewportIdsToRender = [viewport.id];\n\n    this.editData = {\n      annotation,\n      segmentation,\n      centerCanvas: canvasPos,\n      segmentIndex,\n      segmentationId,\n      segmentsLocked,\n      segmentColor,\n      viewportIdsToRender,\n      handleIndex: 3,\n      movingTextBox: false,\n      newAnnotation: true,\n      hasMoved: false,\n    };\n\n    this._activateDraw(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return true;\n  };\n\n  _dragCallback = (evt: EventTypes.InteractionEventType) => {\n    this.isDrawing = true;\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const { currentPoints } = eventDetail;\n    const currentCanvasPoints = currentPoints.canvas;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine, viewport } = enabledElement;\n    const { canvasToWorld } = viewport;\n\n    //////\n    const { annotation, viewportIdsToRender, centerCanvas } = this.editData;\n    const { data } = annotation;\n\n    // Center of circle in canvas Coordinates\n\n    const dX = Math.abs(currentCanvasPoints[0] - centerCanvas[0]);\n    const dY = Math.abs(currentCanvasPoints[1] - centerCanvas[1]);\n    const radius = Math.sqrt(dX * dX + dY * dY);\n\n    const bottomCanvas: Types.Point2 = [\n      centerCanvas[0],\n      centerCanvas[1] + radius,\n    ];\n    const topCanvas: Types.Point2 = [centerCanvas[0], centerCanvas[1] - radius];\n    const leftCanvas: Types.Point2 = [\n      centerCanvas[0] - radius,\n      centerCanvas[1],\n    ];\n    const rightCanvas: Types.Point2 = [\n      centerCanvas[0] + radius,\n      centerCanvas[1],\n    ];\n\n    data.handles.points = [\n      canvasToWorld(bottomCanvas),\n      canvasToWorld(topCanvas),\n      canvasToWorld(leftCanvas),\n      canvasToWorld(rightCanvas),\n    ];\n\n    annotation.invalidated = true;\n\n    this.editData.hasMoved = true;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  };\n\n  _endCallback = (evt: EventTypes.InteractionEventType) => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const {\n      annotation,\n      newAnnotation,\n      hasMoved,\n      segmentation,\n      segmentIndex,\n      segmentsLocked,\n      segmentationId,\n    } = this.editData;\n    const { data } = annotation;\n    const { viewPlaneNormal, viewUp } = annotation.metadata;\n\n    if (newAnnotation && !hasMoved) {\n      return;\n    }\n\n    data.handles.activeHandleIndex = null;\n\n    this._deactivateDraw(element);\n\n    resetElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    this.editData = null;\n    this.isDrawing = false;\n\n    if (viewport instanceof StackViewport) {\n      throw new Error('Not implemented yet');\n    }\n\n    const operationData = {\n      points: data.handles.points,\n      volume: segmentation,\n      segmentIndex,\n      segmentsLocked,\n      viewPlaneNormal,\n      segmentationId,\n      viewUp,\n    };\n\n    this.applyActiveStrategy(enabledElement, operationData);\n  };\n\n  /**\n   * Add event handlers for the modify event loop, and prevent default event propagation.\n   */\n  _activateDraw = (element) => {\n    element.addEventListener(Events.MOUSE_UP, this._endCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n    element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n    element.addEventListener(Events.TOUCH_END, this._endCallback);\n  };\n\n  /**\n   * Add event handlers for the modify event loop, and prevent default event prapogation.\n   */\n  _deactivateDraw = (element) => {\n    element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n    element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n    element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.removeEventListener(Events.TOUCH_END, this._endCallback);\n    element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n    element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n  };\n\n  /**\n   * it is used to draw the circleScissor annotation in each\n   * request animation frame. Note that the annotation are disappeared\n   * after the segmentation modification.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n    if (!this.editData) {\n      return renderStatus;\n    }\n\n    const { viewport } = enabledElement;\n    const { viewportIdsToRender } = this.editData;\n\n    if (!viewportIdsToRender.includes(viewport.id)) {\n      return renderStatus;\n    }\n\n    const { annotation } = this.editData;\n\n    // Todo: rectangle color based on segment index\n    const toolMetadata = annotation.metadata;\n    const annotationUID = annotation.annotationUID;\n\n    const data = annotation.data;\n    const { points } = data.handles;\n    const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n\n    const bottom = canvasCoordinates[0];\n    const top = canvasCoordinates[1];\n\n    const center = [\n      Math.floor((bottom[0] + top[0]) / 2),\n      Math.floor((bottom[1] + top[1]) / 2),\n    ];\n\n    const radius = Math.abs(bottom[1] - Math.floor((bottom[1] + top[1]) / 2));\n\n    const color = `rgb(${toolMetadata.segmentColor.slice(0, 3)})`;\n\n    // If rendering engine has been destroyed while rendering\n    if (!viewport.getRenderingEngine()) {\n      console.warn('Rendering Engine has been destroyed');\n      return renderStatus;\n    }\n\n    const circleUID = '0';\n    drawCircleSvg(\n      svgDrawingHelper,\n      annotationUID,\n      circleUID,\n      center as Types.Point2,\n      radius,\n      {\n        color,\n      }\n    );\n\n    renderStatus = true;\n    return renderStatus;\n  };\n}\n\nCircleScissorsTool.toolName = 'CircleScissor';\nexport default CircleScissorsTool;\n","import { cache, getEnabledElement, StackViewport } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { BaseTool } from '../base';\nimport {\n  PublicToolProps,\n  ToolProps,\n  EventTypes,\n  SVGDrawingHelper,\n} from '../../types';\n\nimport { fillInsideSphere } from './strategies/fillSphere';\nimport { Events } from '../../enums';\nimport { drawCircle as drawCircleSvg } from '../../drawingSvg';\nimport {\n  resetElementCursor,\n  hideElementCursor,\n} from '../../cursors/elementCursor';\n\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport {\n  config as segmentationConfig,\n  segmentLocking,\n  segmentIndex as segmentIndexController,\n  activeSegmentation,\n} from '../../stateManagement/segmentation';\n\nimport { getSegmentation } from '../../stateManagement/segmentation/segmentationState';\nimport { LabelmapSegmentationData } from '../../types/LabelmapTypes';\n\n/**\n * Tool for manipulating segmentation data by drawing a sphere in 3d space. It acts on the\n * active Segmentation on the viewport (enabled element) and requires an active\n * segmentation to be already present. By default it will use the activeSegmentIndex\n * for the segmentation to modify. You can use SegmentationModule to set the active\n * segmentation and segmentIndex. Todo: sphere scissor has some memory problem which\n * lead to ui blocking behavior that needs to be fixed.\n */\nclass SphereScissorsTool extends BaseTool {\n  static toolName;\n  editData: {\n    annotation: any;\n    segmentation: any;\n    segmentIndex: number;\n    segmentsLocked: number[];\n    segmentationId: string;\n    toolGroupId: string;\n    segmentColor: [number, number, number, number];\n    viewportIdsToRender: string[];\n    handleIndex?: number;\n    movingTextBox: boolean;\n    newAnnotation?: boolean;\n    hasMoved?: boolean;\n    centerCanvas?: Array<number>;\n  } | null;\n  isDrawing: boolean;\n  isHandleOutsideImage: boolean;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n      configuration: {\n        strategies: {\n          FILL_INSIDE: fillInsideSphere,\n        },\n        defaultStrategy: 'FILL_INSIDE',\n        activeStrategy: 'FILL_INSIDE',\n      },\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n  }\n\n  /**\n   * Based on the current position of the mouse and the enabledElement, it\n   * finds the active segmentation info and use it for the current tool.\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  preMouseDownCallback = (evt: EventTypes.InteractionEventType): true => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n    const canvasPos = currentPoints.canvas;\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport, renderingEngine } = enabledElement;\n\n    this.isDrawing = true;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal, viewUp } = camera;\n    const toolGroupId = this.toolGroupId;\n\n    const activeSegmentationRepresentation =\n      activeSegmentation.getActiveSegmentationRepresentation(toolGroupId);\n    if (!activeSegmentationRepresentation) {\n      throw new Error(\n        'No active segmentation detected, create one before using scissors tool'\n      );\n    }\n\n    const { segmentationRepresentationUID, segmentationId, type } =\n      activeSegmentationRepresentation;\n    const segmentIndex =\n      segmentIndexController.getActiveSegmentIndex(segmentationId);\n    const segmentsLocked = segmentLocking.getLockedSegments(segmentationId);\n\n    const segmentColor = segmentationConfig.color.getColorForSegmentIndex(\n      toolGroupId,\n      segmentationRepresentationUID,\n      segmentIndex\n    );\n\n    const { representationData } = getSegmentation(segmentationId);\n\n    // Todo: are we going to support contour editing with rectangle scissors?\n    const { volumeId } = representationData[type] as LabelmapSegmentationData;\n    const segmentation = cache.getVolume(volumeId);\n\n    this.isDrawing = true;\n\n    // Used for drawing the svg only, we might not need it at all\n    const annotation = {\n      metadata: {\n        viewPlaneNormal: <Types.Point3>[...viewPlaneNormal],\n        viewUp: <Types.Point3>[...viewUp],\n        FrameOfReferenceUID: viewport.getFrameOfReferenceUID(),\n        referencedImageId: '',\n        toolName: this.getToolName(),\n        segmentColor,\n      },\n      data: {\n        invalidated: true,\n        handles: {\n          points: [[...worldPos], [...worldPos], [...worldPos], [...worldPos]],\n          activeHandleIndex: null,\n        },\n        cachedStats: {},\n        highlighted: true,\n      },\n    };\n\n    const viewportIdsToRender = [viewport.id];\n\n    this.editData = {\n      annotation,\n      segmentation,\n      centerCanvas: canvasPos,\n      segmentIndex,\n      segmentsLocked,\n      segmentColor,\n      segmentationId,\n      toolGroupId,\n      viewportIdsToRender,\n      handleIndex: 3,\n      movingTextBox: false,\n      newAnnotation: true,\n      hasMoved: false,\n    };\n\n    this._activateDraw(element);\n\n    hideElementCursor(element);\n\n    evt.preventDefault();\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n\n    return true;\n  };\n\n  _dragCallback = (evt: EventTypes.InteractionEventType) => {\n    this.isDrawing = true;\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n    const { currentPoints } = eventDetail;\n    const currentCanvasPoints = currentPoints.canvas;\n    const enabledElement = getEnabledElement(element);\n    const { renderingEngine, viewport } = enabledElement;\n    const { canvasToWorld } = viewport;\n\n    //////\n    const { annotation, viewportIdsToRender, centerCanvas } = this.editData;\n    const { data } = annotation;\n\n    const dX = Math.abs(currentCanvasPoints[0] - centerCanvas[0]);\n    const dY = Math.abs(currentCanvasPoints[1] - centerCanvas[1]);\n    const radius = Math.sqrt(dX * dX + dY * dY);\n\n    const bottomCanvas: Types.Point2 = [\n      centerCanvas[0],\n      centerCanvas[1] + radius,\n    ];\n    const topCanvas: Types.Point2 = [centerCanvas[0], centerCanvas[1] - radius];\n    const leftCanvas: Types.Point2 = [\n      centerCanvas[0] - radius,\n      centerCanvas[1],\n    ];\n    const rightCanvas: Types.Point2 = [\n      centerCanvas[0] + radius,\n      centerCanvas[1],\n    ];\n\n    data.handles.points = [\n      canvasToWorld(bottomCanvas),\n      canvasToWorld(topCanvas),\n      canvasToWorld(leftCanvas),\n      canvasToWorld(rightCanvas),\n    ];\n\n    annotation.invalidated = true;\n\n    this.editData.hasMoved = true;\n\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  };\n\n  _endCallback = (evt: EventTypes.InteractionEventType) => {\n    const eventDetail = evt.detail;\n    const { element } = eventDetail;\n\n    const {\n      annotation,\n      newAnnotation,\n      hasMoved,\n      segmentation,\n      segmentIndex,\n      segmentsLocked,\n      segmentationId,\n    } = this.editData;\n    const { data } = annotation;\n    const { viewPlaneNormal, viewUp } = annotation.metadata;\n\n    if (newAnnotation && !hasMoved) {\n      return;\n    }\n    annotation.highlighted = false;\n    data.handles.activeHandleIndex = null;\n\n    this._deactivateDraw(element);\n\n    resetElementCursor(element);\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    this.editData = null;\n    this.isDrawing = false;\n\n    if (viewport instanceof StackViewport) {\n      throw new Error('Not implemented yet');\n    }\n\n    const operationData = {\n      points: data.handles.points,\n      volume: segmentation,\n      segmentIndex,\n      segmentsLocked,\n      segmentationId,\n      viewPlaneNormal,\n      viewUp,\n    };\n\n    this.applyActiveStrategy(enabledElement, operationData);\n  };\n\n  /**\n   * Add event handlers for the modify event loop, and prevent default event propagation.\n   */\n  _activateDraw = (element) => {\n    element.addEventListener(Events.MOUSE_UP, this._endCallback);\n    element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n    element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.addEventListener(Events.TOUCH_END, this._endCallback);\n    element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n    element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n  };\n\n  /**\n   * Add event handlers for the modify event loop, and prevent default event prapogation.\n   */\n  _deactivateDraw = (element) => {\n    element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n    element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n    element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n\n    element.removeEventListener(Events.TOUCH_END, this._endCallback);\n    element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n    element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n  };\n\n  /**\n   * it is used to draw the sphereScissor annotation in each\n   * request animation frame. Note that the annotation are disappeared\n   * after the segmentation modification.\n   *\n   * @param enabledElement - The Cornerstone's enabledElement.\n   * @param svgDrawingHelper - The svgDrawingHelper providing the context for drawing.\n   */\n  renderAnnotation = (\n    enabledElement: Types.IEnabledElement,\n    svgDrawingHelper: SVGDrawingHelper\n  ): boolean => {\n    let renderStatus = false;\n    if (!this.editData) {\n      return renderStatus;\n    }\n\n    const { viewport } = enabledElement;\n    const { viewportIdsToRender } = this.editData;\n\n    if (!viewportIdsToRender.includes(viewport.id)) {\n      return renderStatus;\n    }\n\n    const { annotation } = this.editData;\n\n    // Todo: rectangle color based on segment index\n    const toolMetadata = annotation.metadata;\n    const annotationUID = annotation.annotationUID;\n\n    const data = annotation.data;\n    const { points } = data.handles;\n    const canvasCoordinates = points.map((p) => viewport.worldToCanvas(p));\n\n    const bottom = canvasCoordinates[0];\n    const top = canvasCoordinates[1];\n\n    const center = [\n      Math.floor((bottom[0] + top[0]) / 2),\n      Math.floor((bottom[1] + top[1]) / 2),\n    ];\n\n    const radius = Math.abs(bottom[1] - Math.floor((bottom[1] + top[1]) / 2));\n\n    const color = `rgb(${toolMetadata.segmentColor.slice(0, 3)})`;\n\n    // If rendering engine has been destroyed while rendering\n    if (!viewport.getRenderingEngine()) {\n      console.warn('Rendering Engine has been destroyed');\n      return renderStatus;\n    }\n\n    const circleUID = '0';\n    drawCircleSvg(\n      svgDrawingHelper,\n      annotationUID,\n      circleUID,\n      center as Types.Point2,\n      radius,\n      {\n        color,\n      }\n    );\n\n    renderStatus = true;\n\n    return renderStatus;\n  };\n}\n\nSphereScissorsTool.toolName = 'SphereScissor';\nexport default SphereScissorsTool;\n","import {\n  cache,\n  getEnabledElement,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\nimport { BaseTool } from '../base';\nimport { PublicToolProps, ToolProps, EventTypes } from '../../types';\n\nimport { triggerSegmentationDataModified } from '../../stateManagement/segmentation/triggerSegmentationEvents';\nimport {\n  segmentLocking,\n  activeSegmentation,\n  segmentIndex as segmentIndexController,\n} from '../../stateManagement/segmentation';\nimport floodFill from '../../utilities/segmentation/floodFill';\nimport { getSegmentation } from '../../stateManagement/segmentation/segmentationState';\nimport { FloodFillResult, FloodFillGetter } from '../../types';\nimport { LabelmapSegmentationData } from '../../types/LabelmapTypes';\n\nconst { transformWorldToIndex, isEqual } = csUtils;\n\ntype PaintFillToolHelpers = {\n  getScalarDataPositionFromPlane: (x: number, y: number) => number;\n  getLabelValue: (x: number, y: number, z: number) => number;\n  floodFillGetter: FloodFillGetter;\n  inPlaneSeedPoint: Types.Point2;\n  fixedDimensionValue: number;\n};\n\n/**\n * Tool for manipulating segmentation data by filling in regions. It acts on the\n * active Segmentation on the viewport (enabled element) and requires an active\n * segmentation to be already present. By default it will fill a given labelled\n * or empty region with the the activeSegmentIndex label. You can use the\n * SegmentationModule to set the active segmentation and segmentIndex.\n */\nclass PaintFillTool extends BaseTool {\n  static toolName;\n\n  constructor(\n    toolProps: PublicToolProps = {},\n    defaultToolProps: ToolProps = {\n      supportedInteractionTypes: ['Mouse', 'Touch'],\n    }\n  ) {\n    super(toolProps, defaultToolProps);\n  }\n\n  /**\n   * Based on the current position of the mouse and the enabledElement, it\n   * finds the active segmentation info and use it for the current tool.\n   *\n   * @param evt -  EventTypes.NormalizedMouseEventType\n   * @returns The annotation object.\n   *\n   */\n  preMouseDownCallback = (evt: EventTypes.InteractionEventType): boolean => {\n    const eventDetail = evt.detail;\n    const { currentPoints, element } = eventDetail;\n    const worldPos = currentPoints.world;\n\n    const enabledElement = getEnabledElement(element);\n    const { viewport } = enabledElement;\n\n    const camera = viewport.getCamera();\n    const { viewPlaneNormal } = camera;\n    const toolGroupId = this.toolGroupId;\n\n    const activeSegmentationRepresentation =\n      activeSegmentation.getActiveSegmentationRepresentation(toolGroupId);\n    if (!activeSegmentationRepresentation) {\n      throw new Error(\n        'No active segmentation detected, create one before using scissors tool'\n      );\n    }\n\n    const { segmentationId, type } = activeSegmentationRepresentation;\n    const segmentIndex =\n      segmentIndexController.getActiveSegmentIndex(segmentationId);\n    const segmentsLocked: number[] =\n      segmentLocking.getLockedSegments(segmentationId);\n    const { representationData } = getSegmentation(segmentationId);\n\n    const { volumeId } = representationData[type] as LabelmapSegmentationData;\n    const segmentation = cache.getVolume(volumeId);\n    const { dimensions, direction } = segmentation;\n    const scalarData = segmentation.getScalarData();\n\n    const index = transformWorldToIndex(segmentation.imageData, worldPos);\n\n    const fixedDimension = this.getFixedDimension(viewPlaneNormal, direction);\n\n    if (fixedDimension === undefined) {\n      console.warn('Oblique paint fill not yet supported');\n      return;\n    }\n\n    const {\n      floodFillGetter,\n      getLabelValue,\n      getScalarDataPositionFromPlane,\n      inPlaneSeedPoint,\n      fixedDimensionValue,\n    } = this.generateHelpers(scalarData, dimensions, index, fixedDimension);\n\n    // Check if within volume\n    if (\n      index[0] < 0 ||\n      index[0] >= dimensions[0] ||\n      index[1] < 0 ||\n      index[1] >= dimensions[1] ||\n      index[2] < 0 ||\n      index[2] >= dimensions[2]\n    ) {\n      // Clicked outside segmentation volume, no good way to fill.\n      return;\n    }\n    //@ts-ignore // todo type\n    const clickedLabelValue = getLabelValue(index[0], index[1], index[2]);\n\n    if (segmentsLocked.includes(clickedLabelValue)) {\n      // Label is locked, cannot fill.\n      return;\n    }\n\n    const floodFillResult = floodFill(floodFillGetter, inPlaneSeedPoint);\n\n    const { flooded } = floodFillResult;\n\n    flooded.forEach((index) => {\n      const scalarDataPosition = getScalarDataPositionFromPlane(\n        index[0],\n        index[1]\n      );\n\n      scalarData[scalarDataPosition] = segmentIndex;\n    });\n\n    const framesModified = this.getFramesModified(\n      fixedDimension,\n      fixedDimensionValue,\n      floodFillResult\n    );\n\n    triggerSegmentationDataModified(segmentationId, framesModified);\n\n    return true;\n  };\n\n  private getFramesModified = (\n    fixedDimension: number,\n    fixedDimensionValue: number,\n    floodFillResult: FloodFillResult\n  ): number[] => {\n    const { boundaries } = floodFillResult;\n\n    if (fixedDimension === 2) {\n      return [fixedDimensionValue];\n    }\n\n    // For both the fixedDimensions being 0 and 1, the Z (stack) direction is j,\n    // so we don't need to find min/max i.\n\n    let minJ = Infinity;\n    let maxJ = -Infinity;\n\n    for (let b = 0; b < boundaries.length; b++) {\n      const j = boundaries[b][1];\n\n      if (j < minJ) minJ = j;\n      if (j > maxJ) maxJ = j;\n    }\n\n    const framesModified = [];\n\n    for (let frame = minJ; frame <= maxJ; frame++) {\n      framesModified.push(frame);\n    }\n\n    return framesModified;\n  };\n\n  private generateHelpers = (\n    scalarData: Float32Array | Uint8Array | Uint16Array | Int16Array,\n    dimensions: Types.Point3,\n    seedIndex3D: Types.Point3,\n    fixedDimension = 2\n  ): PaintFillToolHelpers => {\n    let fixedDimensionValue: number;\n    let inPlaneSeedPoint: Types.Point2;\n\n    switch (fixedDimension) {\n      case 0:\n        fixedDimensionValue = seedIndex3D[0]; // X\n        inPlaneSeedPoint = [seedIndex3D[1], seedIndex3D[2]]; // Y,Z\n        break;\n      case 1:\n        fixedDimensionValue = seedIndex3D[1]; // Y\n        inPlaneSeedPoint = [seedIndex3D[0], seedIndex3D[2]]; // X,Z\n        break;\n      case 2:\n        fixedDimensionValue = seedIndex3D[2]; // Z\n        inPlaneSeedPoint = [seedIndex3D[0], seedIndex3D[1]]; // X, Y\n        break;\n      default:\n        throw new Error(`Invalid fixedDimension: ${fixedDimension}`);\n    }\n\n    const getScalarDataPosition = (x: number, y: number, z: number): number => {\n      return z * dimensions[1] * dimensions[0] + y * dimensions[0] + x;\n    };\n\n    const getLabelValue = (x: number, y: number, z: number): number => {\n      return scalarData[getScalarDataPosition(x, y, z)];\n    };\n\n    const floodFillGetter = this.generateFloodFillGetter(\n      dimensions,\n      fixedDimension,\n      fixedDimensionValue,\n      getLabelValue\n    );\n\n    const getScalarDataPositionFromPlane =\n      this.generateGetScalarDataPositionFromPlane(\n        getScalarDataPosition,\n        fixedDimension,\n        fixedDimensionValue\n      );\n\n    return {\n      getScalarDataPositionFromPlane,\n      getLabelValue,\n      floodFillGetter,\n      inPlaneSeedPoint,\n      fixedDimensionValue,\n    };\n  };\n\n  private getFixedDimension(\n    viewPlaneNormal: Types.Point3,\n    direction: number[]\n  ): number | undefined {\n    const xDirection = direction.slice(0, 3);\n    const yDirection = direction.slice(3, 6);\n    const zDirection = direction.slice(6, 9);\n\n    const absoluteOfViewPlaneNormal = [\n      Math.abs(viewPlaneNormal[0]),\n      Math.abs(viewPlaneNormal[1]),\n      Math.abs(viewPlaneNormal[2]),\n    ];\n\n    const absoluteOfXDirection = [\n      Math.abs(xDirection[0]),\n      Math.abs(xDirection[1]),\n      Math.abs(xDirection[2]),\n    ];\n\n    if (isEqual(absoluteOfViewPlaneNormal, absoluteOfXDirection)) {\n      return 0;\n    }\n\n    const absoluteOfYDirection = [\n      Math.abs(yDirection[0]),\n      Math.abs(yDirection[1]),\n      Math.abs(yDirection[2]),\n    ];\n\n    if (isEqual(absoluteOfViewPlaneNormal, absoluteOfYDirection)) {\n      return 1;\n    }\n\n    const absoluteOfZDirection = [\n      Math.abs(zDirection[0]),\n      Math.abs(zDirection[1]),\n      Math.abs(zDirection[2]),\n    ];\n\n    if (isEqual(absoluteOfViewPlaneNormal, absoluteOfZDirection)) {\n      return 2;\n    }\n  }\n\n  // Define a getter for the fill routine to access the working label map.\n  private generateFloodFillGetter = (\n    dimensions: Types.Point3,\n    fixedDimension: number,\n    fixedDimensionValue: number,\n    getLabelValue: PaintFillToolHelpers['getLabelValue']\n  ): FloodFillGetter => {\n    let floodFillGetter;\n\n    // In each helper we first check if out of bounds, as the flood filler\n    // doesn't know about the dimensions of the data structure that sits on top\n    // of the scalarData. E.g. if cols is 10, (0,1) and (10, 0) would point to\n    // the same position in these getters.\n\n    switch (fixedDimension) {\n      case 0:\n        floodFillGetter = (y, z) => {\n          if (y >= dimensions[1] || y < 0 || z >= dimensions[2] || z < 0) {\n            return;\n          }\n\n          return getLabelValue(fixedDimensionValue, y, z);\n        };\n        break;\n\n      case 1:\n        floodFillGetter = (x, z) => {\n          if (x >= dimensions[0] || x < 0 || z >= dimensions[2] || z < 0) {\n            return;\n          }\n\n          return getLabelValue(x, fixedDimensionValue, z);\n        };\n        break;\n\n      case 2:\n        floodFillGetter = (x, y) => {\n          if (x >= dimensions[0] || x < 0 || y >= dimensions[1] || y < 0) {\n            return;\n          }\n\n          return getLabelValue(x, y, fixedDimensionValue);\n        };\n        break;\n      default:\n        throw new Error(`Invalid fixedDimension: ${fixedDimension}`);\n    }\n\n    return floodFillGetter;\n  };\n\n  private generateGetScalarDataPositionFromPlane = (\n    getScalarDataPosition: (x: number, y: number, z: number) => number,\n    fixedDimension: number,\n    fixedDimensionValue: number\n  ): PaintFillToolHelpers['getScalarDataPositionFromPlane'] => {\n    let getScalarDataPositionFromPlane;\n\n    switch (fixedDimension) {\n      case 0:\n        getScalarDataPositionFromPlane = (y, z) => {\n          return getScalarDataPosition(fixedDimensionValue, y, z);\n        };\n        break;\n      case 1:\n        getScalarDataPositionFromPlane = (x, z) => {\n          return getScalarDataPosition(x, fixedDimensionValue, z);\n        };\n        break;\n      case 2:\n        getScalarDataPositionFromPlane = (x, y) => {\n          return getScalarDataPosition(x, y, fixedDimensionValue);\n        };\n        break;\n      default:\n        throw new Error(`Invalid fixedDimension: ${fixedDimension}`);\n    }\n\n    return getScalarDataPositionFromPlane;\n  };\n}\n\nPaintFillTool.toolName = 'PaintFill';\nexport default PaintFillTool;\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__953__","__WEBPACK_EXTERNAL_MODULE__441__","__WEBPACK_EXTERNAL_MODULE__795__","__WEBPACK_EXTERNAL_MODULE__396__","__WEBPACK_EXTERNAL_MODULE__348__","__WEBPACK_EXTERNAL_MODULE__70__","__WEBPACK_EXTERNAL_MODULE__785__","__WEBPACK_EXTERNAL_MODULE__127__","__WEBPACK_EXTERNAL_MODULE__474__","__WEBPACK_EXTERNAL_MODULE__610__","__WEBPACK_EXTERNAL_MODULE__976__","__WEBPACK_EXTERNAL_MODULE__807__","__WEBPACK_EXTERNAL_MODULE__847__","HASH_UNDEFINED","MAX_SAFE_INTEGER","argsTag","boolTag","dateTag","funcTag","genTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reFlags","reIsHostCtor","reIsUint","cloneableTags","freeGlobal","g","Object","freeSelf","Function","freeExports","nodeType","freeModule","moduleExports","addMapEntry","map","pair","set","addSetEntry","value","add","arrayReduce","array","iteratee","accumulator","initAccum","index","length","isHostObject","result","toString","e","mapToArray","Array","size","forEach","key","overArg","func","transform","arg","setToArray","uid","arrayProto","prototype","funcProto","objectProto","coreJsData","maskSrcKey","exec","keys","IE_PROTO","funcToString","hasOwnProperty","objectToString","reIsNative","RegExp","call","replace","Buffer","undefined","Symbol","Uint8Array","getPrototype","getPrototypeOf","objectCreate","create","propertyIsEnumerable","splice","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeKeys","DataView","getNative","Map","Promise","Set","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","Hash","entries","this","clear","entry","ListCache","MapCache","Stack","__data__","assignValue","object","objValue","eq","assocIndexOf","baseClone","isDeep","isFull","customizer","stack","isObject","isArr","isArray","constructor","input","initCloneArray","source","copyArray","tag","getTag","isFunc","buffer","slice","copy","cloneBuffer","isPrototype","proto","initCloneObject","copyObject","getSymbols","copySymbols","baseAssign","cloneFunc","symbol","Ctor","cloneArrayBuffer","dataView","byteOffset","byteLength","cloneDataView","typedArray","cloneTypedArray","cloneMap","regexp","lastIndex","cloneRegExp","cloneSet","initCloneByTag","stacked","get","props","keysFunc","symbolsFunc","values","offset","arrayPush","baseGetAllKeys","getAllKeys","arrayEach","subValue","arrayBuffer","newValue","getMapData","type","data","getValue","isFunction","test","baseIsNative","has","pop","push","cache","pairs","LARGE_ARRAY_SIZE","isIndex","other","ArrayBuffer","resolve","ctorString","isArrayLike","isLength","inherited","isObjectLike","isArrayLikeObject","isArguments","n","baseTimes","String","skipIndexes","arrayLikeKeys","baseKeys","INFINITY","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reEscapeChar","symbolToString","pattern","stringToPath","memoize","string","isSymbol","baseToString","match","number","quote","toKey","resolver","TypeError","memoized","args","arguments","apply","Cache","path","defaultValue","isKey","baseGet","_typeof","_regeneratorRuntime","__esModule","Op","hasOwn","defineProperty","obj","desc","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","enumerable","configurable","writable","err","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","fn","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","reject","record","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","info","resultName","next","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","val","reverse","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","getter","d","a","definition","o","window","prop","r","nmd","paths","children","Events","_toPropertyKey","hint","prim","toPrimitive","res","_defineProperties","target","descriptor","_createClass","Constructor","protoProps","staticProps","_classCallCheck","instance","_defineProperty","globalLockedAnnotationsSet","setAnnotationLocked","annotation","locked","detail","makeEventDetail","lockedAnnotationsSet","added","lock","unlock","publish","unlockAllAnnotations","clearLockedAnnotationsSet","getAnnotationsLocked","from","isAnnotationLocked","getAnnotationsLockedCount","checkAndDefineIsLockedProperty","isLocked","getOwnPropertyDescriptor","setIsLocked","getIsLocked","isExtensible","shouldDefineIsLockedProperty","freeze","removed","delete","item","triggerEvent","eventTarget","selectedAnnotationUIDs","setAnnotationSelected","annotationUID","deselectAnnotation","preserveSelected","clearSelectionSet","selectAnnotation","getAnnotationsSelected","getAnnotationsSelectedByToolName","toolName","filter","getAnnotation","metadata","isAnnotationSelected","getAnnotationsSelectedCount","selection","selectionSet","globalHiddenAnnotationUIDsSet","setAnnotationVisibility","visible","show","annotationUIDsSet","lastHidden","hide","showAllAnnotations","isAnnotationVisible","checkAndDefineIsVisibleProperty","_annotation$isVisible","isVisible","setIsVisible","getIsVisible","shouldDefineIsVisibleProperty","lastVisible","hidden","FrameOfReferenceSpecificAnnotationManager","_this","annotationGroupSelector","element","enabledElement","getEnabledElement","FrameOfReferenceUID","evt","frameOfReferenceSpecificAnnotations","annotations","invalidated","groupKey","frameOfReferenceUID","frameOfReferenceAnnotations","_step","_iterator","_createForOfIteratorHelper","s","f","getAnnotations","total","toolSpecificAnnotations","groupAnnotations","toolAnnotations","findIndex","cloneDeep","count","utilities","Enums","_imageVolumeModifiedHandler","defaultFrameOfReferenceSpecificAnnotationManager","svgNodeCache","defaultState","isInteractingWithTool","isMultiPartToolActive","tools","toolGroups","synchronizers","enabledElements","handleRadius","ToolModes","MODES","_ref","toolOptions","toolGroupToolNames","includes","mode","defaultManager","getAnnotationManager","setAnnotationManager","annotationManager","resetAnnotationManager","manager","getGroupKey","addAnnotation","csUtils","HTMLDivElement","renderingEngine","viewportId","eventType","eventDetail","renderingEngineId","triggerAnnotationAddedForElement","getToolGroupsWithToolName","viewportsToRender","toolGroup","viewportsInfo","viewportInfo","getEnabledElementByIds","triggerAnnotationAddedForFOR","getNumberOfAnnotations","removeAnnotation","annotationManagerUID","removeAllAnnotations","arr","len","arr2","minLen","_slicedToArray","_i","_s","_e","_x","_r","_arr","_n","_d","SegmentationRepresentations","defaultContourConfig","renderOutline","outlineWidthActive","outlineWidthInactive","outlineOpacity","outlineOpacityInactive","renderFill","fillAlpha","fillAlphaInactive","defaultLabelmapConfig","renderFillInactive","getDefaultLabelmapConfig","initialDefaultState","colorLUT","segmentations","globalConfig","renderInactiveSegmentations","representations","_representations","defaultSegmentationStateManager","SegmentationStateManager","lutIndex","segmentationId","find","segmentation","_initDefaultColorLUTIfNecessary","getSegmentation","concat","toolGroupId","toolGroupSegRepresentationsWithConfig","segmentationRepresentations","toolGroupSegReps","_ref2","segmentationRepresentation","config","_handleActiveSegmentation","segmentationRepresentationUID","getSegmentationRepresentations","representation","toolGroupSegmentationRepresentations","segData","console","warn","removedSegmentationRepresentation","toolGroupSegmentations","segmentationData","active","toolGroupStateWithConfig","getSegmentationRepresentationByUID","segmentationRepresentationSpecificConfig","segmentIndex","segmentSpecificConfig","_objectSpread","log","colorLUTIndex","recentlyAddedOrRemovedSegmentationRepresentation","addColorLUT","CORNERSTONE_COLOR_LUT","triggerSegmentationRemoved","triggerSegmentationRepresentationRemoved","triggerSegmentationRepresentationModified","triggerSegmentationModified","getSegmentations","triggerSegmentationDataModified","modifiedSlicesToUse","segmentationInput","cachedStats","segmentLabels","label","segmentsLocked","activeSegmentIndex","representationData","getDefaultSegmentationStateManager","getState","addSegmentation","suppressEvents","segmentationStateManager","normalizeSegmentationInput","getAllSegmentationRepresentations","getToolGroupIdsWithSegmentation","toolGroupIds","foundToolGroupIds","getToolGroupSpecificConfig","setToolGroupSpecificConfig","setSegmentationRepresentationConfig","setSegmentationRepresentationSpecificConfig","getSegmentationRepresentationSpecificConfig","getSegmentSpecificRepresentationConfig","getSegmentSpecificConfig","setSegmentSpecificRepresentationConfig","setSegmentSpecificConfig","addSegmentationRepresentation","getGlobalConfig","setGlobalConfig","removeSegmentation","removeSegmentationRepresentation","removeColorLUT","getColorLUT","getMouseEventPoints","elementToUse","currentTarget","viewport","clientPoint","clientX","clientY","_clientToPoint","pagePoint","pageX","pageY","_pageToPoint","canvasPoint","rect","getBoundingClientRect","left","pageXOffset","top","pageYOffset","_pagePointsToCanvasPoints","page","client","canvas","world","canvasToWorld","_getEnabledElement","startPoints","event","eventName","camera","lastPoints","currentPoints","deltaPoints","stopImmediatePropagation","preventDefault","MOUSE_DOWN","MOUSE_DOWN_ACTIVATE","MOUSE_CLICK","MOUSE_UP","MOUSE_DRAG","DOUBLE_CLICK_DRAG_TOLERANCE","mouseButton","isClickEvent","clickDelay","preventClickTimeout","doubleClickState","doubleClickTimeout","mouseDownEvent","mouseUpEvent","ignoreDoubleClick","_onMouseDrag","_updateMouseEventsLastPoints","_getDeltaPoints","_isDragPastDoubleClickTolerance","_doStateMouseDownAndUp","_copyPoints","_onMouseUp","clearTimeout","_cleanUp","addEventListener","_onMouseMove","document","removeEventListener","mouseMoveListener","delta","Math","abs","_preventClickHandler","_clearDoubleClickTimeoutAndEvents","_state$element","_state$element2","JSON","parse","stringify","points","_subtractPoints2D","point0","point1","mouseDoubleClickIgnoreListener","buttons","setTimeout","disable","mouseDoubleClickListener","mouseDownListener","capture","enable","deltaY","_normalizeWheel","spinX","spinY","pixelX","pixelY","wheelDelta","wheelDeltaY","wheelDeltaX","deltaX","deltaMode","normalizeWheel","direction","wheel","wheelListener","lastInteractionType","lastInteractionTime","passive","pointerType","mouse","touch","handleTap","now","Date","stopPropagation","handleTapMouse","bind","handleTapTouch","attachEvents","eventList","interactionType","tapHandler","removeEvents","mouseEvents","touchEvents","Swipe","getTouchEventPoints","touches","changedTouches","identifier","radiusX","radiusY","force","rotationAngle","getDeltaPoints","curr","getMeanPoints","last","getDeltaDistance","_getDistance2D","_getDistance3D","getDeltaRotation","getDeltaDistanceBetweenIPoints","currentDistance","_getMeanDistanceBetweenAllIPoints","lastDistance","copyPointsList","copyPoints","reduce","getMeanTouchPoints","pairedDistance","j","sqrt","pow","runtimeSettings","Settings","TOUCH_START","TOUCH_START_ACTIVATE","TOUCH_PRESS","TOUCH_DRAG","TOUCH_END","TOUCH_TAP","TOUCH_SWIPE","zeroIPoint","zeroIDistance","startPointsList","lastPointsList","isTouchStart","startTime","pressTimeout","pressDelay","pressMaxDistance","accumulatedDistance","swipeDistanceThreshold","swiped","swipeToleranceMs","defaultTapState","taps","tapTimeout","tapMaxDistance","tapToleranceMs","tapState","triggerEventCallback","ele","debug","_onTouchDrag","currentPointsList","_updateTouchEventsLastPoints","deltaDistance","totalDistance","currentTime","getTime","_deltaPoints$canvas","x","y","swipe","RIGHT","LEFT","DOWN","UP","_checkTouchSwipe","_onTouchEnd","_checkTouchTap","lp","_onTouchPress","_onTouchStart","preventGhostClick","touchStartListener","keyCode","keyListener","_onKeyUp","_cloneDeep","keyDownListener","getModifierKey","_toConsumableArray","getSvgNode","canvasHash","cacheKey","domRef","appendNode","svgLayerElement","svgNode","touched","appendChild","setNodeTouched","clearUntouched","cacheEntry","removeChild","svgDrawingHelper","viewportElement","querySelector","_getSvgLayer","svgNodeCacheForCanvas","getSvgDrawingHelper","toolGroupFilteredByIds","tg","some","vp","getToolsWithModesForElement","modesFilter","ToolGroupManager","enabledTools","toolInstance","getToolInstance","Active","Passive","Enabled","AnnotationRenderingEngine","_throwIfDestroyed","elements","_viewportElements","_needsRender","_triggerRender","_animationFrameSet","_animationFrameHandle","_reset","_setViewportsToBeRenderedNextFrame","hasBeenDestroyed","_this2","_renderFlaggedViewports","_this3","elementsEnabled","indexOf","_render","requestAnimationFrame","getRenderingEngine","drawSvg","anyRendered","tool","renderAnnotation","rendered","cancelAnimationFrame","_setAllViewportsToBeRenderedNextFrame","annotationRenderingEngine","renderViewport","onImageRendered","triggerAnnotationRender","getToolsWithModesForMouseEvent","evtButton","_evt$detail","correctBinding","bindings","binding","onCameraModified","onImageSpacingCalibrated","customCallbackHandler","handlerType","customFunction","activeTool","filterToolsWithMoveableHandles","ToolAndAnnotations","canvasCoords","proximity","toolsWithMoveableHandles","getHandleNearImagePoint","filterToolsWithAnnotationsForElement","_annotations","filterInteractableAnnotationsForElement","filterMoveableAnnotationTools","moveableAnnotationTools","isPointNearTool","MouseBindings","KeyboardBindings","shiftKey","ctrlKey","kb","altKey","metaKey","getActiveToolForMouseEvent","mouseEvent","modifierKey","getMouseModifier","keyEventListener","defaultMousePrimary","getDefaultMousePrimary","mouseDown","preMouseDownCallback","isPrimaryClick","activeToolsWithEventBinding","passiveToolsIfEventWasPrimaryMouseButton","applicableTools","annotationToolsWithAnnotations","annotationToolsWithMoveableHandles","isMultiSelect","getAnnotationForSelection","toggleAnnotationSelection","handleSelectedCallback","_getAnnotationForSele","toolSelectedCallback","postMouseDownCallback","toolsWithMovableHandles","mouseDownActivate","addNewAnnotation","mouseDrag","mouseDragCallback","mouseMove","activeAndPassiveTools","toolsWithAnnotations","toolsWithoutAnnotations","toolAndAnnotation","getToolName","annotationsNeedToBeRedrawn","_step$value","mouseMoveCallback","mouseClick","mouseDoubleClick","mouseUp","mouseWheel","getActiveToolForKeyboardEvent","keyDown","setViewportsCursorByToolName","keyUp","getActiveToolForTouchEvent","touchEvent","numTouchPoints","getToolsWithModesForTouchEvent","touchStart","preTouchStartCallback","passiveToolsIfEventWasPrimaryTouchButton","postTouchStartCallback","touchStartActivate","touchDrag","touchDragCallback","touchEnd","touchTap","touchPress","addEnabledElement","newNode","svgLayer","svgns","createElementNS","svgLayerId","classList","setAttribute","style","width","height","pointerEvents","position","defs","feOffset","feColorMatrix","feBlend","_createSvgAnnotationLayer","_element$dataset","dataset","viewportUid","renderingEngineUid","elementHash","_setSvgNodeCache","addViewportElement","mouseEventListeners","wheelEventListener","touchEventListeners","imageRenderedEventDispatcher","cameraModifiedEventDispatcher","imageSpacingCalibratedEventDispatcher","mouseToolEventDispatcher","keyboardToolEventDispatcher","touchToolEventDispatcher","synchronizersFilteredByIds","synchronizer","notDisabled","isDisabled","hasSourceViewport","hasTargetViewport","elementDisabledEvt","_elementDisabledEvt$d","_resetSvgNodeCache","internalViewportNode","_removeSvgNode","removeViewportElement","getSynchronizersForViewport","sync","remove","_removeViewportFromSynchronizers","getToolGroupForViewport","removeViewports","_removeViewportFromToolGroup","foundElementIndex","el","_removeEnabledElement","viewportIdsToRender","getViewport","triggerAnnotationRenderForViewportIds","getRenderingEngines","viewportIds","getViewports","_assertThisInitialized","ReferenceError","_setPrototypeOf","p","_inherits","subClass","superClass","_possibleConstructorReturn","_getPrototypeOf","SegmentationState","segmentationConfig","getGlobalRepresentationConfig","representationType","setGlobalRepresentationConfig","segmentationRepresentationConfig","setSegmentationVisibility","visibility","segmentsHidden","indices","scalarData","getScalarData","keySet","it","parseInt","_segmentation$represe","geometryIds","CONTOUR","geometryId","getSegmentIndex","getSegmentationIndices","getSegmentationVisibility","setSegmentsVisibility","segmentIndices","segRepresentation","setSegmentVisibility","BaseTool","toolProps","defaultToolProps","initialProps","_initialProps$configu","configuration","supportedInteractionTypes","strategies","defaultStrategy","activeStrategy","strategyOptions","assign","operationData","_this$configuration","newConfiguration","strategyName","setConfiguration","_actorEntries$find","volumeId","actorEntries","getActors","actorEntry","actor","getClassName","targetId","startsWith","imageId","split","imageURI","viewports","getCurrentImageId","getImageData","StackViewport","BaseVolumeViewport","getTargetVolumeId","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","contourRepresentation","segmentId","_contourRepresentatio","_contourRepresentatio2","configCachePerSegmentationRepresentationUID","getConfigCache","setConfigCache","addContourSetsToElement","contourRepresentationConfig","contourActorUID","appendPolyData","vtkAppendPolyData","scalarToColorMap","segmentSpecificMap","geometry","validateGeometry","contourSet","polyData","pointArray","vtkPoints","lines","vtkCellArray","pointIndex","getContours","contour","pointList","getPoints","flatPoints","getFlatPointsArray","getType","pointIndexes","_","pointListIndex","linePoints","Float32Array","insertNextCell","setData","polygon","vtkPolyData","setPoints","setLines","getPolyData","color","getColor","getNumberOfPoints","scalars","vtkDataArray","numberOfComponents","dataType","setTuple","getPointData","setScalars","setInputData","addInputData","polyDataOutput","getOutputData","mapper","vtkMapper","vtkActor","setMapper","getProperty","setLineWidth","setForceOpaque","addActor","resetCamera","render","updateContourSets","newContourConfig","cachedConfig","contourSetsActor","getActor","newOutlineWithActive","getMapper","lut","getLookupTable","segmentsToSetToInvisible","segmentsToSetToVisible","_step2","_iterator2","mergedInvisibleSegments","_geometryIds$reduce","acc","contourSets","segmentSpecificConfigs","affectedSegments","hasCustomSegmentSpecificConfig","polyDataModified","getInputData","appendScalarsData","getScalars","getData","_segmentSpecificConfi","getTotalNumberOfPoints","segmentConfig","modified","setLookupTable","addOrUpdateContourSets","actorUID","actorUIDsToRemove","Boolean","removeActors","_addSegmentationRepresentation","_callee","representationInput","toolGroupSpecificConfig","toolGroupSpecificRepresentation","currentToolGroupConfig","mergedConfig","_context","Representations","SegmentationConfig","_callee2","representationConfig","toolGroupConfig","contourData","_context2","_x4","_x5","_x6","_x2","_x3","renderImmediate","getToolGroup","removeContourFromElement","_removeContourFromToolGroupViewports","deleteConfigCache","getViewportsInfo","_addLabelmapToElement","volumeInputs","blendMode","addVolumesToViewports","removeVolumeActors","MAX_NUMBER_COLORS","labelMapConfigCache","cfun","ofun","vtkColorTransferFunction","vtkPiecewiseFunction","addPoint","isSameFrameOfReference","referencedVolumeId","defaultActor","getDefaultActor","defaultActorUID","volume","referencedVolume","renderingConfig","labelmapData","labelmapUID","_segmentation","_ref3","_addLabelmapToViewport","_setLabelmapColorAndOpacity","toolGroupLabelmapConfig","isActiveLabelmap","segmentationRepresentationLabelmapConfig","numColors","min","volumeActor","_getLabelmapConfig2","_getLabelmapConfig","outlineWidth","segmentColor","_getLabelmapConfig3","_needsTransferFunctio","_needsTransferFunctionUpdate","forceOpacityUpdate","forceColorUpdate","addRGBPoint","segmentOpacity","removePoint","addPointLong","setRGBTransferFunction","setClamping","setScalarOpacity","setInterpolationTypeToNearest","setUseLabelOutline","setLabelOutlineOpacity","setLabelOutlineThickness","setVisibility","segmentsLabelmapConfig","segmentLabelmapConfig","configToUse","cacheUID","oldConfig","oldFillAlpha","oldRenderFill","oldRenderOutline","oldOutlineWidth","oldSegmentColor","oldSegmentsHidden","_x7","_x8","_x9","_addLabelmapToViewport2","_callee3","_context3","addLabelmapToElement","removeLabelmapFromElement","_removeLabelmapFromToolGroupViewports","SegmentationDisplayTool","_BaseTool","_super","toolGroupViewports","segmentationRenderList","_getMergedRepresentationsConfig","viewportsRenderList","labelmapDisplay","contourDisplay","allSettled","SegmentationRenderingEngine","_toolGroupIds","_setToolGroupSegmentationToBeRenderedNextFrame","_renderFlaggedToolGroups","segmentationDisplayToolInstance","onSegmentationRender","renderSegmentation","csToolsEvents","segmentationRenderingEngine","triggerSegmentationRender","renderToolGroupSegmentations","_SegmentationState$ge","segmentationVolume","slicesToUpdate","imageData","vtkOpenGLTexture","numSlices","getDimensions","setUpdatedFrame","segmentationRepresentationUIDs","immediate","toolGroupSegRepresentations","toolGroupSegRepresentationUIDs","segRepresentationUIDsToRemove","invalidSegRepresentationUIDs","segRepresentationUID","segmentationDataUID","_removeSegmentation","toolGroupIndex","removeToolGroup","removeSegmentationsFromToolGroup","csToolsState","destroyToolGroup","csToolsInitialized","init","_removeCornerstoneEventListeners","elementEnabledEvent","elementDisabledEvent","removeEnabledElement","_addCornerstoneEventListeners","_removeCornerstoneToolsEventListeners","TOOLS_EVENTS","annotationModifiedListener","annotationSelectionListener","segmentationModifiedListener","segmentationDataModifiedEventListener","segmentationRepresentationModifiedEventListener","segmentationRepresentationRemovedEventListener","destroy","restoreAnnotations","resetState","addTool","ToolClass","toolAlreadyAdded","toolClass","removeTool","cancelActiveManipulations","cancel","Synchronizer","synchronizerId","eventHandler","options","_ignoreFiredEvents","_targetViewports","_sourceViewports","fireEvent","_enabled","_eventName","_eventHandler","_options","_hasSourceElements","_viewportOptions","addTarget","addSource","_containsViewport","_onEvent","_updateDisableHandlers","removeSource","t","removeTarget","_getViewportIndex","_getViewportElement","sourceViewport","sourceEvent","targetViewport","ex","vp1","vp2","unique","vps","_loop","u","_getUniqueViewports","_remove","disableHandler","vUid","ar","synchronizerIndex","DEFINED_CURSORS","STANDARD_CURSORS","MouseCursor","fallback","getStyleProperty","addFallbackStyleProperty","definedCursors","getDefinedCursors","mouseCursor","cursor","standardCursorNames","_get","Reflect","property","receiver","base","AnnotationStyleStates","ImageMouseCursor","_MouseCursor","url","getUniqueInstanceName","Number","prefix","BASE","iconContent","iconSize","viewBox","mousePoint","mousePointerGroupString","SEGMENTATION_CURSOR_BOUNDARIES","MINUS_RECT","PLUS_RECT","SCISSOR_ICON","RECTANGLE_ICON","CIRCLE_ICON","CursorSVG","Angle","extend","ArrowAnnotate","Bidirectional","CobbAngle","CircleROI","EllipticalROI","FreehandROI","FreehandROISculptor","Length","Probe","RectangleROI","TextMarker","Crosshairs","Eraser","Magnify","Pan","Rotate","StackScroll","WindowLevelRegion","WindowLevel","Zoom","SegmentationFreeHandEraseInside","SegmentationFreeHandFillInside","SegmentationFreeHandEraseOutside","SegmentationFreeHandFillOutside","SegmentationRectangleEraseInside","RectangleScissor","CircleScissor","registerCursor","svgCursorNames","ToolStyle","_initializeConfig","colorHighlighted","colorSelected","colorLocked","lineWidth","lineDash","shadow","textBoxFontFamily","textBoxFontSize","textBoxColor","textBoxColorHighlighted","textBoxColorSelected","textBoxColorLocked","textBoxBackground","textBoxLinkLineWidth","textBoxLinkLineDash","textBoxShadow","default","styles","annotationSpecificStyles","viewportSpecificStyles","toolGroupSpecificStyles","toolStyle","specifications","_getToolStyle","getAnnotationToolStyles","getViewportToolStyles","global","getToolGroupToolStyles","globalStyles","getDefaultToolStyles","toolStyles","styleSpecifier","alternatives","list","getHierarchalPropertyStyles","STATE","MODE","SVGMouseCursor","_ImageMouseCursor","pointer","urn","getCursorURN","getDefinedSVGCursorDescriptor","createSVGMouseCursor","format","template","dictionary","dict","defined","_descriptor$mousePoin","URL","createObjectURL","svgString","createSVGIconWithPointer","createSVGIcon","Blob","createSVGIconBlob","createSVGIconUrl","scale","max","svgSize","ELEMENT_CURSORS_MAP","initElementCursor","_getElementCursors","_setElementCursor","cursors","getDefinedCursor","resetElementCursor","hideElementCursor","Disabled","ToolGroup","toolInstanceName","_toolInstances","toolDefinition","hasToolName","localToolInstance","instantiatedTool","parentClassName","_state$tools$toolName","ToolClassToUse","ToolInstance","_ParentClass","renderingEngines","renderingEngineUIDToUse","getActivePrimaryMouseButtonTool","vpInfo","setActiveStrategy","setToolDisabled","setToolEnabled","setToolPassive","setToolActive","toolBindingsOptions","prevBindings","newBindings","TouchBinding","MouseBinding","binding2","binding1","useCursor","_hasMousePrimaryButtonBinding","_setCursorForViewports","onSetToolActive","_renderViewports","prevToolOptions","getToolOptions","onSetToolPassive","onSetToolEnabled","onSetToolDisabled","toolOptionsForTool","_getCursor","cursorName","overwrite","_configuration","Primary","configurationPath","_toolOptions$bindings","_ref4","cameraSyncCallback","synchronizerInstance","cameraModifiedEvent","tViewport","setCamera","CAMERA_MODIFIED","createCameraPositionSynchronizer","synchronizerName","createSynchronizer","voiSyncCallback","voiModifiedEvent","range","invertStateChanged","invert","tProperties","voiRange","syncInvertState","setProperties","createVOISynchronizer","zoomPanSyncCallback","getOptions","sViewport","syncZoom","srcZoom","getZoom","setZoom","syncPan","srcPan","getPan","setPan","createZoomPanSynchronizer","low","high","scroll","getImageIds","viewportType","debounceLoading","loop","VolumeViewport","_csUtils$getVolumeVie","numScrollSteps","currentStepIndex","sliceRangeInfo","sliceRange","spacingInNormalDirection","focalPoint","viewPlaneNormal","_csUtils$snapFocalPoi","newFocalPoint","newPosition","desiredStepIndex","VolumeScrollEventDetail","currentImageId","EVENTS","scrollVolume","_jumpToSlice","imageIndex","_getImageSliceData2","currentImageIndex","numberOfSlices","imageIndexToJump","_args","_getImageSliceData","_getImageIndexToJump","getTargetImageIdIndex","getCurrentImageIdIndex","clip","stackImageSyncCallback","_stackImageSyncCallback","frameOfReferenceUID1","frameOfReferenceUID2","imageId1","imagePlaneModule1","sourceImagePositionPatient","targetImageIds","closestImageIdIndex","registrationMatrixMat4","targetImagePositionPatientWithRegistrationMatrix","closestImageIdIndex2","getFrameOfReferenceUID","metaData","imagePositionPatient","viewport2","viewPlaneNormal1","viewPlaneNormal2","dotProducts","getCamera","vec3","_getClosestImageIdIndex","jumpToSlice","targetPoint","imageIds","distance","Infinity","STACK_NEW_IMAGE","createStackImageSynchronizer","drawingElementType","nodeUID","attributes","currentValue","getAttribute","removeAttribute","circleUID","center","radius","dataId","_Object$assign","fill","strokeWidth","svgNodeHash","_getHash","existingCircleElement","cx","cy","stroke","_setAttributesIfNecessary","newCircleElement","_setNewAttributesIfValid","ellipseUID","corner1","corner2","existingEllipse","w","h","rx","ry","svgEllipseElement","handleGroupUID","handlePoints","opacity","side","parseFloat","existingHandleElement","newHandleElement","drawLine","lineUID","start","end","existingLine","dropShadowStyle","x1","y1","x2","y2","newLine","drawPolyline","polylineUID","connectLastToFirst","existingPolyLine","pointsAttribute","point","firstPoint","newPolyLine","_createTextSpan","text","textSpanElement","textContent","_drawTextBackground","group","getBBox","insertBefore","firstChild","bBox","textUID","textLines","textGroupBoundingBox","padding","fontFamily","fontSize","background","existingTextGroup","textElement","textSpans","textSpan","textAttributes","textGroupAttributes","textGroup","combinedStyle","_createTextElement","_drawTextGroup","centerX","centerY","findClosestPoint","sourcePoints","minPoint","minDistance","sourcePoint","p2","_p","_p2","textBoxUID","textBoxPosition","annotationAnchorPoints","textBox","mergedOptions","centering","canvasBoundingBox","drawTextBox","linkUID","refPoint","boundingBox","halfWidth","halfHeight","_boundingBoxPoints","drawLink","drawRect","rectangleUID","_width","existingRect","tlhc","svgRectElement","drawArrow","arrowUID","angle","atan2","firstLine","cos","PI","sin","secondLine","getAnnotationNearPoint","getAnnotationNearPointOnEnabledElement","found","findAnnotationNearPointByTool","_viewport$getCurrentI","currentId","_annotation$metadata","referencedImageId","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","useRAF","invokeFunc","time","thisArg","startTimer","pendingFunc","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","timeSinceLastInvoke","timeWaiting","remainingWait","debounced","isInvoking","_len","_key","leadingEdge","cancelTimer","flush","pending","debounce","calibratedPixelSpacingMetadataProvider","calibrateImageSpacing","calibrationOrScale","getStackViewports","calibrateSpacing","pointInShapeCallback","pointInShapeFn","callback","boundsIJK","iMin","iMax","jMin","jMax","kMin","kMax","dimensions","_boundsIJK","_boundsIJK$","_boundsIJK$2","_boundsIJK$3","getDirection","rowCosines","columnCosines","scanAxisNormal","_spacing","getSpacing","rowSpacing","columnSpacing","scanAxisSpacing","worldPosStart","indexToWorld","rowStep","columnStep","scanAxisStep","yMultiple","zMultiple","k","pointIJK","dI","dJ","dK","startWorld","pointLPS","xMin","xMax","yMin","yMax","zMin","zMax","floor","_dimensions","depth","transformWorldToIndex","pointInSurroundingSphereCallback","circlePoints","_getBounds2","_circlePoints","bottom","centerWorld","radiusWorld","centerIJK","spacings","minSpacing","maxRadiusIJK","ceil","_circlePoints2","viewUp","viewRight","topLeftWorld","bottomRightWorld","sphereCornersIJK","getBoundingBoxAroundShape","_computeBoundsIJKWithCamera","_getBounds","sphereObj","sphere","pointInSphere","precision","fixedPrecision","toFixed","fillInsideSphere","scalarIndex","minSlice","maxSlice","v","fillSphere","eraseInsideSphere","getCanvasEllipseCorners","ellipseCanvasPoints","_ellipseCanvasPoints","right","pointInEllipse","ellipse","circleCenterWorld","xRadius","yRadius","zRadius","_pointLPS","z","_circleCenterWorld","x0","y0","z0","inside","fillCircle","threshold","imageVolume","strategySpecificConfiguration","_getCanvasEllipseCorn2","worldToCanvas","topLeftCanvas","bottomRightCanvas","ellipsoidCornersIJK","ellipseObj","THRESHOLD_INSIDE_CIRCLE","voxelValue","isWithinThreshold","fillInsideCircle","thresholdInsideCircle","eraseInsideCircle","getActiveSegmentationRepresentation","setActiveSegmentationRepresentation","isSegmentIndexLocked","setSegmentIndexLocked","getLockedSegments","setActiveSegmentIndex","getActiveSegmentIndex","unshift","setColorLUT","getColorForSegmentIndex","setColorForSegmentIndex","colorReference","BrushTool","FILL_INSIDE_CIRCLE","ERASE_INSIDE_CIRCLE","FILL_INSIDE_SPHERE","ERASE_INSIDE_SPHERE","brushSize","disableCursor","activeSegmentationRepresentation","activeSegmentation","segmentLocking","segmentationState","firstVolumeActorUID","_editData","_activateDraw","triggerAnnotationRenderForViewportUIDs","updateCursor","_this$_editData","_this$_hoverData","_hoverData","brushCursor","_brushCursor$metadata","handles","applyActiveStrategy","_this$_editData2","_this$_hoverData2","_brushCursor$metadata2","_deactivateDraw","_endCallback","_dragCallback","eventData","centerCanvas","segmentIndexController","_calculateCursor","bottomCanvas","topCanvas","leftCanvas","rightCanvas","toolMetadata","brushCursorUID","canvasCoordinates","drawCircleSvg","getBrushToolInstances","toolInstances","getVoxelOverlap","voxelSpacing","voxelCenter","voxelCornersWorld","voxelCornersIJK","processVolumes","thresholdVolumeInformation","segmentationSpacing","spacing","volumeInfoList","baseVolumeIdx","_thresholdVolumeInfor","volumeSize","b","referenceValues","lower","upper","segmentationImageData","overlapType","overlaps","_processVolumes","testOverlapRange","volumeInfo","overlapBounds","overlapTest","testRange","computeOffsetIndex","insert","filterViewportsWithFrameOfReferenceUID","numViewports","viewportsWithFrameOfReferenceUID","filterViewportsWithToolEnabled","viewportsWithToolEnabled","_toolGroupHasActiveEnabledOrPassiveTool","toolMode","EPS","vpCamera","getViewportIdsWithToolToRender","requireParallelNormals","filterViewportsWithParallelNormals","PARALLEL_THRESHOLD","CONSTANTS","filterAnnotationsWithinSlice","annotationsWithParallelNormals","td","annotationViewPlaneNormal","imageOrientationPatient","rowCosineVec","colCosineVec","isParallel","halfSpacingInNormalDirection","annotationsWithinSlice","dir","dot","filterAnnotationsForDisplay","colonIndex","substring","highlighted","AnnotationDisplayTool","getFramesOfReference","frameOfReference","worldPos","getTargetId","AnnotationTool","_AnnotationDisplayToo","filteredAnnotations","activateHandleIndex","activeHandleIndex","near","_imagePointNearToolOrHandle","nearToolAndNotMarkedActive","notNearToolAndMarkedActive","_data$handles","worldBoundingBox","topLeft","topRight","bottomLeft","bottomRight","annotationCanvasCoordinate","vec2","getStyle","_volume$scaling","scaling","PT","scalingModule","suvbw","CalibrationTypes","PIXEL_UNITS","getCalibratedLengthUnits","image","calibration","units","hasPixelSpacing","UNCALIBRATED","SequenceOfUltrasoundRegions","getCalibratedAreaUnits","getCalibratedScale","_image$calibration","dist2","p1","distanceToPointSquared","lineStart","lineEnd","d2","distanceToPoint","_rect","lineSegments","rectToLineSegments","segment","_lineSegments$segment","lineSegment","getTextBoxCoordsCanvas","annotationCanvasPoints","canvasPoints","handlesLeftToRight","handlesTopToBottom","corners","sort","getWorldWidthAndHeightFromCorners","pos1","pos2","diagonal","diagonalLength","worldWidth","worldHeight","cosTheta","getModalityUnit","modality","isPreScaled","isSuvScaled","petSeriesModule","_handlePTModality","isViewportPreScaled","preScale","scaled","RectangleROITool","_AnnotationTool","preventHandleOutsideImage","isDrawing","getReferencedImageId","hasMoved","worldPosition","editData","handleIndex","movingTextBox","newAnnotation","canvasPoint1","canvasPoint2","_getRectangleImageCoordinates","rectangle","_activateModify","_this$editData","_deactivateModify","isHandleOutsideImage","_this$editData2","worldPosDelta","bottomLeftCanvas","topRightCanvas","bottomLeftWorld","topRightWorld","_enabledElement$viewp","_this$editData3","_annotations2","renderStatus","activeHandleCanvasCoords","_viewport$getCamera","modalityUnitOptions","areaUnit","_throttledCalculateCachedStats","referencedImageURI","hasImageURI","currentImageURI","Modality","area","mean","stdDev","_calculateCachedStats","drawHandlesSvg","drawRectSvg","_getTextLines","canvasTextBoxCoords","drawLinkedTextBoxSvg","getLinkedTextBoxStyle","_ret","_points2","cachedVolumeStats","modalityUnit","roundNumber","worldPos1","worldPos2","targetIds","getTargetIdImage","worldPos1Index","worldPos2Index","_isInsideVolume","_getWorldWidthAndHeig","valueMinusMean","index1","index2","throttle","RectangleROIThresholdTool","_RectangleROITool","RectangleROIStartEndThresholdTool","numSlicesToPropagate","startIndex","spacingInNormal","endIndex","_getEndSliceIndex","startSlice","endSlice","projectionPoints","projectionPointsImageIds","_computeProjectionPoints","sliceIndex","firstOrLastSlice","lineDashToUse","_calculateCachedStatsTool","startIJK","endIJK","indexToWorldVec3","endWorld","newProjectionPoints","dist","newPoint","_newProjectionPoints","RectanglePoints","endPos","imageIdIndex","numSlicesToProject","sliceNormalIndex","referenceVolume","AllBoundsIJK","_data$cachedStats","_data$cachedStats2","pointsToUse","rectangleCornersIJK","extend2DBoundingBoxInViewAxis","annotationUIDs","validToolNames","_validateAnnotations","getBoundsIJKFromRectangleAnnotations","thresholdVolumeByRange","labelmaps","origin","labelmap","outputData","arrayType","volumeLoader","isValidRepresentationConfig","SegmentationRepresentation","isValidLabelmapConfig","getDefaultRepresentationConfig","createLabelmapVolumeForViewport","_createLabelmapVolumeForViewport","_viewport$getDefaultA","_options$volumeId","properties","_viewport$getDefaultA2","defaultEquals","lpad","character","join","seed","job","getArgs","prevArgs","onFlood","onBoundary","equals","diagonals","startNode","permutations","perms","permutation","c","permute","perm","countNonZeroes","flooded","visits","bounds","currentArgs","previousArgs","node","safely","member","markAsFlooded","nextArgs","pushAdjacent","markAsBoundary","boundaries","setBrushSizeForToolGroup","invalidateBrushCursor","viewportsInfoArray","getViewportIds","getBrushSizeForToolGroup","brushToolInstance","setBrushThresholdForToolGroup","getBrushThresholdForToolGroup","segmentationIndex","_handleSameSizeVolume","getPoint","_handleDifferentSizeVolume","EPSILON","INSIDE","OUTSIDE","clipT","num","denom","_c","tE","tL","box","da","db","_a","_b","dx","dy","sign","NaN","intersectLine","line1Start","line1End","line2Start","line2End","_line1Start","_line1End","_line2Start","x3","y3","_line2End","x4","y4","a1","b1","c1","r3","r4","a2","b2","c2","r1","r2","getFirstIntersectionWithPolyline","q1","initialI","doesIntersect","getClosestIntersectionWithPolyline","intersections","q2","distances","intersection","intersectionPoints","midpoint","orient","orientation","onSegment","q","orientationValue","getIntersection","denominator","numerator1","numerator2","subPixelResolution","xDir","yDir","volumeSpacing","iVector","jVector","kVector","xSpacing","absViewRightDotI","absViewRightDotJ","absViewRightDotK","ySpacing","absViewUpDotI","absViewUpDotJ","absViewUpDotK","closeContourProximity","newCanvasPoint","commonData","lastWorldPos","newWorldPos","worldPosDiff","xDist","yDist","numPointsToAdd","lastCanvasPoint","canvasDist","canvasDir","distPerPoint","p1p","p1p2","p1p2Mag","projectionVectorMag","p1p2UnitVector","projectionVector","projectionPoint","calculateAreaOfPoints","getPointInLineOfSightWithCriteria","targetVolumeId","criteriaFunction","pickedPoint","stepSize","cameraPosition","step","getBounds","vector","vtkMath","pointT","_inBounds","pointToPick","getIntensityFromWorld","_bounds","getOrientationStringLPS","orientationX","orientationY","orientationZ","MIN","invertOrientationStringLPS","orientationString","inverted","toUpperCase","addToolState","getToolState","dynamicVolumesPlayingMap","playClip","playClipOptions","_playClipOptions$dyna","playClipTimeouts","playClipIsTimeVarying","dynamicCineEnabled","_playClipOptions$fram","_playClipOptions$fram2","_playClipOptions$reve","_playClipOptions$loop","_getVolumeFromViewport","playClipContext","frameTimeVectorEnabled","_createStackViewportCinePlayContext","isDynamicVolume","numTimePoints","timePointIndex","_createDynamicVolumeViewportCinePlayContext","cachedScrollInfo","scrollInfo","getScrollInfo","volumeViewPlaneNormal","glMatrix","_createVolumeViewportCinePlayContext","_createCinePlayContext","playClipData","isDynamicCinePlaying","_stopDynamicVolumeCine","_stopClip","intervalId","framesPerSecond","lastFrameTimeStamp","ignoreFrameTimeVector","usingFrameTimeVector","frameTimeVector","speed","frameTimeVectorSpeedMultiplier","_getPlayClipTimeouts2","sample","delay","sum","limit","timeouts","isTimeVarying","_getPlayClipTimeouts","playClipAction","newStepIndex","CINE_EVENTS","playClipTimeoutHandler","setInterval","stopClip","stopDynamicCine","cineToolData","clearInterval","dynamicCineElement","volumes","_getVolumesFromViewport","dynamicVolume","v1","v2","v0","v3","t1","t2","t3","basis","interpolator","samples","zip","matrix","m","valueof","transpose","row","interpolateSegmentPoints","iniIndex","knotsRatioPercentage","_Math$floor","_Math$floor2","segmentSize","amountOfKnots","minKnotDistance","interpolationIniIndex","interpolationEndIndex","segmentPointsUnchangedBeg","segmentPointsUnchangedEnd","interpolatedPoints","originalPoints","knotsIndexes","xInterpolator","d3InterpolateBasis","yInterpolator","zInterpolator","d3Zip","d3Quantize","interpolatePoints","minDistributionDistance","closedInterval","_closedInterval","intervalIni","intervalEnd","intervalSize","intensity","continuosDistributionValue","round","getContinuousUniformDistributionValues","shouldInterpolate","_configuration$interp","_configuration$interp2","interpolation","interpolateOnAdd","interpolateOnEdit","followingIndex","circularFindNextIndexBy","listParams","otherListParams","criteria","_listParams","indexDelimiter","_otherListParams","otherIndexDelimiter","otherPoints","pointsLength","otherPointsLength","otherStartIndex","getInterpolatedPoints","pointsOfReference","knotsRatioPercentageOnAdd","knotsRatioPercentageOnEdit","_interpolation$interp","_interpolation$interp2","previousPoints","findMatchIndexes","firstMatchIndex","previousFirstMatchIndex","toBeNotEqualCriteria","pointA","pointB","isEqualByProximity","_circularFindNextInde2","lowDiffIndex","lowOtherDiffIndex","findChangedSegment","changedIniIndex","changedEndIndex","findOpenUShapedContourVectorToPeak","first","firstToLastUnitVector","normalVector1","normalVector2","centerOfFirstToLast","furthest","addCanvasPointsToArray","polyline","pointsAreWithinCloseContourProximity","getSubPixelSpacingAndXYDirections","activateDraw","canvasPos","_getSubPixelSpacingAn","drawData","polylineIndex","mouseUpDrawCallback","mouseDragDrawCallback","deactivateDraw","_this$commonData","_this$drawData","lastWorldPoint","crossingIndex","findCrossingIndexDuringCreate","applyCreateOnCross","numPointsAdded","allowOpenContours","lastPoint","completeDrawOpenContour","completeDrawClosedContour","removeCrossedLinesOnCompleteDraw","haltDrawing","_this$commonData2","worldPoints","isOpenContour","triggerAnnotationCompleted","numPoints","endToStart","canvasPointsMinusEnds","indexToRemoveUpTo","_this$commonData3","isOpenUShapeContour","openUShapeContourVectorToPeak","pointsLessLastOne","_this$commonData4","shift","activateClosedContourEdit","cancelDrawing","minPoints","shouldHaltDrawing","_this$commonData5","checkForFirstCrossing","isClosedContour","editCanvasPoints","prevCanvasPoints","crossedLineSegment","startCrossingIndex","removePointsUpUntilFirstCrossing","checkCanvasEditFallbackProximity","firstEditCanvasPoint","distanceIndexPairs","prevCanvasPoint","twoClosestDistanceIndexPairs","lowestIndex","extendedPoint","crossedLineSegmentFromExtendedPoint","pointsToPrepend","editIndex","numPointsToRemove","checkForSecondCrossing","removePointsAfterSecondCrossing","lastLine","didCrossLine","findSnapIndex","_this$editData4","lastEditCanvasPoint","editCanvasPointsLessLastOne","snapCanvasPosition","checkAndRemoveCrossesOnEditLine","editIndexCrossed","isEditingClosed","mouseUpClosedContourEditCallback","mouseDragClosedContourEditCallback","deactivateClosedContourEdit","currentEditIndex","snapIndex","fusedCanvasPoints","fuseEditPointsWithClosedContour","finishEditAndStartNewEdit","triggerAnnotationModified","lowIndex","highIndex","augmentedEditCanvasPoints","distanceBetweenLowAndFirstPoint","distanceBetweenLowAndLastPoint","distanceBetweenHighAndFirstPoint","distanceBetweenHighAndLastPoint","pointSet1","inPlaceDistance","reverseDistance","pointSet2","completeClosedContourEdit","cancelClosedContourEdit","activateOpenContourEdit","isEditingOpen","mouseUpOpenContourEditCallback","mouseDragOpenContourEditCallback","deactivateOpenContourEdit","fuseEditPointsWithOpenContour","finishEditOpenOnSecondCrossing","checkIfShouldOverwriteAnEnd","openContourEditOverwriteEnd","fuseEditPointsForOpenContourEndEdit","activateOpenContourEndEdit","lastCanvasPos","p3","aDotb","magA","magB","acos","newCanvasPoints","pointsToRender","_this$editData5","completeOpenContourEdit","_this$editData6","cancelOpenContourEdit","_getRenderingOptions","renderContour","findOpenUShapedContourVectorToPeakOnRender","calculateUShapeContourVectorToPeakIfNotPresent","renderOpenUShapedContour","renderOpenContour","renderClosedContour","drawPolylineSvg","_this$configuration$a","alwaysRenderOpenContourHandles","enabled","handlePoint","_annotation$data","firstCanvasPoint","openUShapeContourVectorToPeakCanvas","renderContourBeingDrawn","renderClosedContourBeingEdited","renderOpenContourBeingEdited","pointCanProjectOnLine","PlanarFreehandROITool","calculateStats","previousPoint","pStart","pEnd","activeAnnotationUID","_renderStats","worldPosIndex","iDelta","jDelta","kDelta","worldPosEnd","canvasPosEnd","sumSquares","curRow","intersectionCounter","polylineIndexes","getAllIntersectionsWithPolyline","getIntersectionCoordinatesWithPolyline","_annotation$annotatio","drawLinkedTextBox","isEmptyArea","areaLine","registerDrawLoop","registerEditLoopCommon","registerClosedContourEditLoop","registerOpenContourEditLoop","registerOpenContourEndEditLoop","registerRenderMethods","annotationsToDisplay","interpolateAnnotation","shouldPreventInterpolation","interpolatedCanvasPoints","resetPrefetchTimeout","requestType","priority","maxImagesToPrefetch","preserveExistingPool","resetPrefetchDelay","lowEnd","highEnd","getStackData","currentImageIdIndex","prefetch","stackPrefetchData","stackPrefetch","indicesToRequest","removeFromList","imageLoadPoolManager","nextImageIdIndex","nearest","idx","lowerIndex","higherIndex","imageIdsToPrefetch","currentIndex","shouldLoadLower","shouldLoadHigher","requestFn","imageLoader","useNorm16Texture","getCoreConfiguration","rendering","targetBuffer","getPromiseRemovedHandler","stackData","onImageUpdated","indexOfCurrentImage","promiseRemovedHandler","getConfiguration","jumpToWorld","jumpWorld","normal","dotProd","projectedDelta","_applyShift","frames","frameNumbers","maskVolumeId","imageCoordinate","dataInTime","indexArray","allScalarData","getScalarDataArrays","indexValues","frame","activeScalarData","_getTimePointDataMask","coordinate","worldToIndex","_getTimePointDataCoordinate","operation","numFrames","typedArrays","arrayLength","finalArray","currentArray","setElementCursor","CursorNames","segmentationInputArray","validateLabelmap","validateSegmentationInput","segInput","addSegmentationToState","_addSegmentationRepresentations","representationInputArray","toolGroupSpecificRepresentationConfig","promises","all","_addSegmentationRepresentation2","PanTool","deltaPointsWorld","updatedPosition","updatedFocalPoint","TrackballRotateTool","rotateIncrementDegrees","axis","vtkCamera","getVtkActiveCamera","getViewUp","getFocalPoint","getPosition","newViewUp","mat4","currentPointsCanvas","lastPointsCanvas","clientWidth","clientHeight","normalizedPosition","normalizedPreviousPosition","radsq","op","oe","opsq","oesq","lop","loe","nop","noe","angleX","upVec","atV","rightV","forwardV","rotateCamera","angleY","ProbeTool","eventDispatchDetail","textCanvasCoordinates","drawTextBoxSvg","DragProbeTool","_ProbeTool","WindowLevelTool","bytesPerVoxel","TypedArrayConstructor","middleSliceIndex","frameLength","Uint16Array","Int16Array","_this$_getMinMax","_getMinMax","newRange","viewportsContainingVolumeUID","_properties$voiRange","getProperties","_preScale$scalingPara","_properties$voiRange2","scalingParameters","getPTScaledNewRange","deltaPointsCanvas","getNewRange","multiplier","_getMultiplierFromDynamicRange","wwDelta","wcDelta","_utilities$windowLeve","windowWidth","windowCenter","imageDynamicRange","_imageVolume$metadata","calculatedDynamicRange","_getImageDynamicRangeFromMiddleSlice","BitsStored","metadataDynamicRange","_getImageDynamicRangeFromViewport","ratio","getRange","_this$_getMinMax2","voxel","ZoomTool","zoomToCenter","minZoomScale","maxZoomScale","pinchToZoom","pan","initialMousePosWorld","dirVec","pinch","parallelScale","parallelScaleToSet","focalPointToSet","positionToSet","distanceToCanvasCenter","cappedParallelScale","thresholdExceeded","_evt$detail2","zoomScale","directionOfProjection","tmp","_pinchCallback","_evt$detail3","parallelProjection","_dragParallelProjection","_dragPerspectiveProjection","_panCallback","_evt$detail4","StackScrollTool","debounceIfNotLoaded","deltaPointY","pixelsPerImage","_getPixelPerImage","imageIdIndexOffset","_getNumberOfSlices","offsetHeight","angleBetweenLines","line1","line2","_line","_line2","p4","PlanarRotateTool","currentPointWorld","startPointWorld","cross","rotAngle","rotMat","rotatedViewUp","rotation","StackScrollMouseWheelTool","DIRECTIONS","X","Y","Z","CUSTOM","VolumeRotateMouseWheelTool","_focalPoint","cz","_direction","ax","ay","az","MIPJumpToClickTool","targetViewportIds","maxIntensity","brightestPoint","foundToolGroup","LengthTool","_data$handles$points","point2","line","unit","drawLineSvg","dz","_calculateLength","RENDERING_DEFAULTS","defaultReferenceLineColor","defaultReferenceLineControllable","defaultReferenceLineDraggableRotatable","defaultReferenceLineSlabThicknessControlsOn","CrosshairsTool","_toolProps$configurat","_toolProps$configurat2","_toolProps$configurat3","_toolProps$configurat4","viewportIndicators","autoPan","panSize","referenceLinesCenterGapRadius","filterActorUIDsToSetSlabThickness","slabThicknessBlendMode","mobile","_getAnnotations","cameraFocalPoint","rotationPoints","slabThicknessPoints","toolCenter","activeOperation","activeViewportIds","_viewportsInfo","firstViewport","secondViewport","thirdViewport","_this$initializeViewp","initializeViewport","normal1","_this$initializeViewp2","normal2","normal3","point3","_this$initializeViewp3","firstPlane","secondPlane","thirdPlane","_jump","viewportIdArray","otherViewport","viewportControllable","_getReferenceLineControllable","viewportDraggableRotatable","_getReferenceLineDraggableRotatable","_pointNearTool","viewportAnnotation","currentCamera","oldCameraPosition","deltaCameraPosition","oldCameraFocalPoint","deltaCameraFocalPoint","isRotation","cameraModifiedInPlane","_autoPanViewportIfNecessary","filteredToolAnnotations","imageNeedsUpdate","previousActiveOperation","previousActiveViewportIds","_areViewportIdArraysEqual","_viewport$canvas","canvasDiagonalLength","canvasMinDimensionLength","crosshairCenterCanvas","otherViewportAnnotations","_filterAnnotationsByUniqueViewportOrientations","referenceLines","canvasBox","otherCamera","otherViewportControllable","otherViewportDraggableRotatable","otherViewportSlabThicknessControlsOn","_getReferenceLineSlabThicknessControlsOn","_otherViewport$canvas","otherCanvasDiagonalLength","otherCanvasCenter","otherViewportCenterWorld","pointWorld0","pointWorld1","pointCanvas0","otherViewportCenterCanvas","canvasUnitVectorFromCenter","canvasVectorFromCenterLong","canvasVectorFromCenterMid","canvasVectorFromCenterShort","canvasVectorFromCenterStart","centerGap","refLinePointOne","refLinePointTwo","refLinePointThree","refLinePointFour","refLinesCenter","liangBarksyClip","rotHandleOne","rotHandleTwo","stHandlesCenterCanvas","stHandlesCenterWorld","worldUnitVectorFromCenter","vtkMatrixBuilder","rotate","worldUnitOrthoVectorFromCenter","slabThicknessValue","getSlabThickness","worldOrthoVectorFromCenter","worldVerticalRefPoint","canvasVerticalRefPoint","canvasOrthoVectorFromCenter","stLinePointOne","stLinePointTwo","stLinePointThree","stLinePointFour","stHandleOne","stHandleTwo","stHandleThree","stHandleFour","newRtpoints","newStpoints","viewportColor","_getReferenceLineColor","lineIndex","_this$configuration$m","_this$configuration$m2","viewportSlabThicknessControlsOn","selectedViewportId","lineActive","_this$configuration$m3","rotHandlesActive","rotationHandles","rotHandleWorldOne","rotHandleWorldTwo","slabThicknessHandlesActive","slabThicknessHandles","slabThicknessHandleWorldOne","slabThicknessHandleWorldTwo","slabThicknessHandleWorldThree","slabThicknessHandleWorldFour","_this$configuration$m4","_this$configuration$m5","_this$configuration$m6","_this$configuration$m7","_this$configuration$m8","_this$configuration$m9","_this$configuration$m10","_this$configuration$m11","handleUID","_this$configuration$m12","_this$configuration$m13","_this$configuration$m14","_this$configuration$m15","_this$configuration$m16","_this$configuration$m17","_this$configuration$m18","_this$configuration$m19","_getViewportsInfo","computeToolCenter","viewportIdArrayOne","viewportIdArrayTwo","itemFound","viewportsWithDifferentCameras","cameraOfTarget","referenceAnnotation","linkedViewportAnnotations","otherViewPlaneNormal","otherLinkedViewportAnnotationsFromSameScene","otherViewportsAnnotationsWithUniqueCameras","cameraFound","jj","cameraOfStocked","otherNonLinkedViewportAnnotationsFromSameScene","_getAnnotationsForViewportsWithDifferentCameras","actors","otherViewportActors","sameScene","viewportsAnnotationsToUpdate","_checkIfViewportsRenderingSameScene","_applyDeltaShiftToSelectedViewportCameras","_this$configuration$m20","dir1","dir2","finalPointCanvas","originalPointCanvas","_isClockWise","rotationAxis","translate","otherViewportsIds","renderViewports","referenceAnnotations","_filterViewportWithSameOrientation","viewportsIds","mod","currentPoint","currentCenter","otherViewportRotationPoints","dotProdDirection","projectedDirection","normalizedProjectedDirection","normalizedProjectedDelta","MINIMUM_SLAB_THICKNESS","_pointNearReferenceLine","setSlabThickness","lineViewport","lineSegment1","distanceToPoint1","lineSegment2","distanceToPoint2","getReferenceLineColor","getReferenceLineControllable","getReferenceLineDraggableRotatable","getReferenceLineSlabThicknessControlsOn","_unsubscribeToViewportNewVolumeSet","_subscribeToViewportNewVolumeSet","_getRotationHandleNearImagePoint","_getSlabThicknessHandleNearImagePoint","_ref5","_onNewVolume","_this4","_ref6","_viewport$canvas2","toolCenterCanvas","visiblePointCanvas","visiblePointWorld","slabThickness","actorUIDs","blendModeToUse","setBlendMode","_this5","_applyDeltaShiftToViewportCamera","_this6","_viewport$canvas3","_loop2","_i4","_i3","stPointLineCanvas1","stPointLineCanvas2","stPointLineCanvas1Start","stPointLineCanvas2Start","ReferenceLines","sourceViewportId","_sourceViewport$getCa","sourceViewportCanvasCornersInWorld","_init","_annotation$data$hand","_targetViewport$getCa","sourceViewPlaneNormal","targetViewportPlane","pointSetToUse","topBottomVec","topRightVec","newNormal","isPerpendicular","lineStartWorld","lineEndWorld","vec1","getWorldWidthAndHeightFromTwoPoints","EllipticalROITool","centerPointRadius","initialRotation","getRotation","_canvasCorners","minorEllipse","majorEllipse","pointInMinorEllipse","_pointInEllipseCanvas","canvasWidth","canvasHeight","originalHandleCanvas","pointsCanvas","currentCanvasPoints","dX","dY","_dragHandle","dYCanvas","canvasBottom","canvasTop","newHalfCanvasWidth","canvasLeft","canvasRight","dXCanvas","newHalfCanvasHeight","_dragModifyCallback","_dragDrawCallback","canvasCorners","drawEllipseSvg","centerPoint","_getCanvasEllipseCenter","location","normalized","getCanvasCircleRadius","circleCanvasPoints","_circleCanvasPoints","getCanvasCircleCorners","CircleROITool","radiusPoint","canvasCenter","canvasEnd","radiusUnit","perimeter","radiusLine","aspect","_image$calibration2","getCalibratedAspect","BidirectionalTool","firstLineSegmentLength","longAxis","shortAxisPoint0","shortAxisPoint1","longAxisVector","counterClockWisePerpendicularToLongAxis","shortAxis","currentShortAxisVector","canvasCoordPoints","shortAxisDistFromCenter","vectorX","vectorY","xMid","yMid","startX","startY","endX","endY","_dragModifyHandle","movingHandleIndex","canvasCoordHandlesCurrent","firstLineSegment","secondLineSegment","proposedPoint","proposedCanvasCoord","fixedHandleCanvasCoord","fixedHandleToProposedCoordVec","fixedHandleToOldCoordVec","proposedFirstLineSegment","_movingLongAxisWouldPutItThroughShortAxis","centerOfRotation","_getSignedAngle","firstPointX","firstPointY","secondPointX","secondPointY","rotatedFirstPoint","rotatedFirstPointY","rotatedSecondPoint","rotatedSecondPointY","newFirstPoint","newSecondPoint","translateHandleIndex","canvasCoordsCurrent","longLineSegment","shortLineSegment","longLineSegmentVec","longLineSegmentVecNormalized","proposedToCurrentVec","movementLength","movementAlongLineSegmentLength","newTranslatedPoint","dataId1","dataId2","vectorInSecondLineDirection","extendedSecondLineSegment","_cachedStats$targetId","worldPos3","worldPos4","dist1","index3","index4","vector1","vector2","ArrowAnnotateTool","getTextCallback","changeTextCallback","arrowFirst","doubleClickCallback","clickedAnnotation","_doneChangingTextCallback","_annotations3","drawArrowSvg","updatedText","doneChangingTextCallback","prompt","AngleTool","angleStartedNotYetCompleted","canvasPoint3","_data$cachedStats$tar","fromCharCode","midPoint2","ret","CobbAngleTool","point4","canvasPoint4","_mouseUpCallback","_mouseDragCallback","_mouseDownCallback","seg1","seg2","minDist","MAX_VALUE","MAGNIFY_VIEWPORT_ID","MagnifyTool","magnifySize","magnifyWidth","magnifyHeight","_getReferencedImageId","_createMagnificationViewport","magnifyToolElement","magnifyElement","createElement","display","viewportInput","enableElement","magnifyViewport","setStack","_magnifyViewport$getC","_magnifyViewport$getC2","disableElement","_dragEndCallback","ReferenceCursors","displayThreshold","positionSync","_currentCursorWorldPosition","_currentCanvasPosition","_elementWithCursor","getActiveAnnotation","createInitialAnnotation","updateAnnotationPosition","previousCamera","oldFocalPoint","cameraNormal","dotProduct","isElementWithCursor","updateViewportImage","crosshairUIDs","_canvasCoordinates$","centerSpace","lineLength","_disableCursorEnabled","_annotation$data2","_annotation$data2$han","plane","currentMousePosition","closestIndex","setImageIdIndex","normalizedViewPlane","scaledPlaneNormal","viewportsWithAnnotations","ScaleOverlayTool","scaleLocation","viewportCanvasCornersInWorld","thisAnnotation","worldWidthViewport","worldHeightViewport","scaleSizes","scaleSize","locationTickOffset","endTick1","endTick2","leftTick","rightTick","canvasScaleSize","tickIds","tickUIDs","tickCoordinates","numberSmallTicks","tickSpacing","locationOffset","pointSet","worldCoordinates","midpointLocation","canvasSize","vscaleBounds","hscaleBounds","scaleCanvasCoordinates","worldDistanceOnCanvas","horizontalReduction","verticalReduction","hReduction","vReduction","locationBounds","canvasBounds","computeScaleBounds","computeScaleSize","computeWorldScaleCoordinates","computeCanvasScaleCoordinates","scaleTicks","computeEndScaleTicks","scaleId","leftTickId","rightTickId","locationTextOffest","textBoxLines","_this$computeInnerSca","computeInnerScaleTicks","scaleSizeDisplayValue","scaleSizeUnits","fillInsideRectangle","constraintFn","coord","fillRectangle","eraseInsideRectangle","eraseRectangle","RectangleScissorsTool","FILL_INSIDE","ERASE_INSIDE","CircleScissorsTool","SphereScissorsTool","isEqual","PaintFillTool","fixedDimension","getFixedDimension","_this$generateHelpers","generateHelpers","floodFillGetter","getLabelValue","getScalarDataPositionFromPlane","inPlaneSeedPoint","fixedDimensionValue","clickedLabelValue","floodFillResult","floodFill","scalarDataPosition","getFramesModified","minJ","maxJ","framesModified","seedIndex3D","getScalarDataPosition","generateFloodFillGetter","generateGetScalarDataPositionFromPlane","xDirection","yDirection","zDirection","absoluteOfViewPlaneNormal","absoluteOfXDirection","absoluteOfYDirection","absoluteOfZDirection"],"sourceRoot":""}